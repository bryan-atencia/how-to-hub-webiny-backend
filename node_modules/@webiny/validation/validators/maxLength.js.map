{"version":3,"sources":["../../src/validators/maxLength.ts"],"names":["value","params","lengthOfValue","length","ValidationError"],"mappings":";;;;;;;;;;;;;;;;;AACA;;eAEe,CAACA,KAAD,EAAaC,MAAb,KAAuC;AAClD,MAAI,CAACD,KAAL,EAAY;AACR;AACH;;AAED,MAAIE,aAAa,GAAG,IAApB;;AACA,MAAI,mBAAMF,KAAN,EAAa,QAAb,CAAJ,EAA4B;AACxBE,IAAAA,aAAa,GAAGF,KAAK,CAACG,MAAtB;AACH,GAFD,MAEO,IAAI,wBAAWH,KAAX,CAAJ,EAAuB;AAC1BE,IAAAA,aAAa,GAAG,oBAAOF,KAAP,EAAcG,MAA9B;AACH;;AAED,MAAID,aAAa,KAAK,IAAlB,IAA0BA,aAAa,IAAID,MAAM,CAAC,CAAD,CAArD,EAA0D;AACtD;AACH;;AAED,MAAI,wBAAWD,KAAX,CAAJ,EAAuB;AACnB,UAAM,IAAII,wBAAJ,CAAoB,oBAAoBH,MAAM,CAAC,CAAD,CAA1B,GAAgC,sBAApD,CAAN;AACH;;AACD,QAAM,IAAIG,wBAAJ,CAAoB,oBAAoBH,MAAM,CAAC,CAAD,CAA1B,GAAgC,iBAApD,CAAN;AACH,C","sourcesContent":["import _ from \"lodash\";\nimport ValidationError from \"./../validationError\";\n\nexport default (value: any, params: Array<string>) => {\n    if (!value) {\n        return;\n    }\n\n    let lengthOfValue = null;\n    if (_.has(value, \"length\")) {\n        lengthOfValue = value.length;\n    } else if (_.isObject(value)) {\n        lengthOfValue = _.keys(value).length;\n    }\n\n    if (lengthOfValue === null || lengthOfValue <= params[0]) {\n        return;\n    }\n\n    if (_.isString(value)) {\n        throw new ValidationError(\"Value requires \" + params[0] + \" characters at most.\");\n    }\n    throw new ValidationError(\"Value requires \" + params[0] + \" items at most.\");\n};\n"],"file":"maxLength.js"}