{"version":3,"sources":["../../src/validators/url.ts"],"names":["regex","base","RegExp","ip","relative","value","params","startsWith","replace","test","includes","ValidationError"],"mappings":";;;;;;;;;AAAA;;AAEA,MAAMA,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,IAAIC,MAAJ,EACF;AACA,wJAFE,CADI;AAKVC,EAAAA,EAAE,EAAE,IAAID,MAAJ,EACA;AACA,iLAFA,CALM;AASVE,EAAAA,QAAQ,EAAE,IAAIF,MAAJ,EACN;AACA,UAFM;AATA,CAAd;;eAee,CAACG,KAAD,EAAaC,MAAb,KAAuC;AAClD,MAAI,CAACD,KAAL,EAAY;AACR;AACH;;AACDA,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;;AAEA,MAAIA,KAAK,CAACE,UAAN,CAAiB,kBAAjB,KAAwCF,KAAK,CAACE,UAAN,CAAiB,mBAAjB,CAA5C,EAAmF;AAC/EF,IAAAA,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAc,aAAd,EAA6B,iBAA7B,CAAR;AACH;;AAED,MAAIR,KAAK,CAACC,IAAN,CAAWQ,IAAX,CAAgBJ,KAAhB,CAAJ,EAA4B;AACxB,QAAI,CAACC,MAAM,CAACI,QAAP,CAAgB,MAAhB,CAAL,EAA8B;AAC1B;AACH;;AAED,QAAI,CAACV,KAAK,CAACG,EAAN,CAASM,IAAT,CAAcJ,KAAd,CAAL,EAA2B;AACvB;AACH;AACJ;;AAED,MAAIC,MAAM,CAACI,QAAP,CAAgB,eAAhB,CAAJ,EAAsC;AAClC,QAAIV,KAAK,CAACI,QAAN,CAAeK,IAAf,CAAoBJ,KAApB,CAAJ,EAAgC;AAC5B;AACH;AACJ;;AAED,QAAM,IAAIM,wBAAJ,CAAoB,4BAApB,CAAN;AACH,C","sourcesContent":["import ValidationError from \"./../validationError\";\n\nconst regex = {\n    base: new RegExp(\n        // eslint-disable-next-line\n        /^(https?:\\/\\/)((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i\n    ),\n    ip: new RegExp(\n        // eslint-disable-next-line\n        /^(https?:\\/\\/)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    ),\n    relative: new RegExp(\n        // eslint-disable-next-line\n        /^\\/.*$/\n    )\n};\n\nexport default (value: any, params: Array<string>) => {\n    if (!value) {\n        return;\n    }\n    value = value + \"\";\n\n    if (value.startsWith(\"http://localhost\") || value.startsWith(\"https://localhost\")) {\n        value = value.replace(\"//localhost\", \"//localhost.com\");\n    }\n\n    if (regex.base.test(value)) {\n        if (!params.includes(\"noIp\")) {\n            return;\n        }\n\n        if (!regex.ip.test(value)) {\n            return;\n        }\n    }\n\n    if (params.includes(\"allowRelative\")) {\n        if (regex.relative.test(value)) {\n            return;\n        }\n    }\n\n    throw new ValidationError(\"Value must be a valid URL.\");\n};\n"],"file":"url.js"}