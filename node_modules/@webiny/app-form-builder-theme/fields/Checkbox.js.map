{"version":3,"sources":["../../src/fields/Checkbox.tsx"],"names":["React","I18NValue","HelperMessage","change","option","value","onChange","newValues","Array","isArray","includes","splice","indexOf","push","checked","Checkbox","props","bind","validation","fieldId","field","label","options","map","isValid","message","helpText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAiC;AAAA,MAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5C,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,uBAA2BA,KAA3B,IAAoC,EAAtD;;AACA,MAAIE,SAAS,CAACG,QAAV,CAAmBN,MAAM,CAACC,KAA1B,CAAJ,EAAsC;AAClCE,IAAAA,SAAS,CAACI,MAAV,CAAiBJ,SAAS,CAACK,OAAV,CAAkBR,MAAM,CAACC,KAAzB,CAAjB,EAAkD,CAAlD;AACH,GAFD,MAEO;AACHE,IAAAA,SAAS,CAACM,IAAV,CAAeT,MAAM,CAACC,KAAtB;AACH;;AAEDC,EAAAA,QAAQ,CAACC,SAAD,CAAR;AACH,CATD;;AAWA,IAAMO,OAAO,GAAG,SAAVA,OAAU,QAAuB;AAAA,MAApBV,MAAoB,SAApBA,MAAoB;AAAA,MAAZC,KAAY,SAAZA,KAAY;AACnC,SAAOG,KAAK,CAACC,OAAN,CAAcJ,KAAd,KAAwBA,KAAK,CAACK,QAAN,CAAeN,MAAM,CAACC,KAAtB,CAA/B;AACH,CAFD;;AAIA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAkB;AAAA,oBACSA,KAAK,CAACC,IADf;AAAA,MACvBX,SADuB,eACvBA,QADuB;AAAA,MACbD,KADa,eACbA,KADa;AAAA,MACNa,UADM,eACNA,UADM;AAE/B,MAAMC,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAYD,OAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,kBACI;AAAO,IAAA,SAAS,EAAC;AAAjB,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAK,CAACI,KAAN,CAAYC;AAA9B,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC;AAAf,KACKL,KAAK,CAACI,KAAN,CAAYE,OAAZ,CAAoBC,GAApB,CAAwB,UAAAnB,MAAM;AAAA,wBAC3B;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAgD,MAAA,GAAG,EAAEA,MAAM,CAACC;AAA5D,oBACI;AACI,MAAA,IAAI,EAAEc,OADV;AAEI,MAAA,SAAS,EAAC,sCAFd;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,EAAE,EAAE,cAAcA,OAAd,GAAwBf,MAAM,CAACC,KAJvC;AAKI,MAAA,OAAO,EAAES,OAAO,CAAC;AAAEV,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,KAAK,EAALA;AAAV,OAAD,CALpB;AAMI,MAAA,QAAQ,EAAE;AAAA,eAAMF,MAAM,CAAC;AAAEC,UAAAA,MAAM,EAANA,MAAF;AAAUC,UAAAA,KAAK,EAALA,KAAV;AAAiBC,UAAAA,QAAQ,EAARA;AAAjB,SAAD,CAAZ;AAAA;AANd,MADJ,eASI;AACI,MAAA,OAAO,EAAE,cAAca,OAAd,GAAwBf,MAAM,CAACC,KAD5C;AAEI,MAAA,SAAS,EAAC;AAFd,oBAII,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,MAAM,CAACiB;AAAzB,MAJJ,CATJ,CAD2B;AAAA,GAA9B,CADL,CAJJ,eAwBI,oBAAC,aAAD;AACI,IAAA,OAAO,EAAEH,UAAU,CAACM,OADxB;AAEI,IAAA,YAAY,EAAEN,UAAU,CAACO,OAF7B;AAGI,IAAA,aAAa,eAAE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAET,KAAK,CAACI,KAAN,CAAYM;AAA9B;AAHnB,IAxBJ,CADJ;AAgCH,CApCD;;AAsCA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { FbFormModelField } from \"@webiny/app-form-builder/types\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport HelperMessage from \"../components/HelperMessage\";\nimport { BindComponentRenderProp } from \"@webiny/form\";\n\ntype Props = {\n    bind: BindComponentRenderProp;\n    field: FbFormModelField;\n};\n\nconst change = ({ option, value, onChange }) => {\n    const newValues = Array.isArray(value) ? [...value] : [];\n    if (newValues.includes(option.value)) {\n        newValues.splice(newValues.indexOf(option.value), 1);\n    } else {\n        newValues.push(option.value);\n    }\n\n    onChange(newValues);\n};\n\nconst checked = ({ option, value }) => {\n    return Array.isArray(value) && value.includes(option.value);\n};\n\nconst Checkbox = (props: Props) => {\n    const { onChange, value, validation } = props.bind;\n    const fieldId = props.field.fieldId;\n\n    return (\n        <div className=\"webiny-fb-form-field webiny-fb-form-field--checkbox\">\n            <label className=\"webiny-fb-form-field__label webiny-pb-typography-body\">\n                <I18NValue value={props.field.label} />\n            </label>\n            <div className=\"webiny-fb-form-field__checkbox-group\">\n                {props.field.options.map(option => (\n                    <div className=\"webiny-fb-form-field__checkbox\" key={option.value}>\n                        <input\n                            name={fieldId}\n                            className=\"webiny-fb-form-field__checkbox-input\"\n                            type=\"checkbox\"\n                            id={\"checkbox-\" + fieldId + option.value}\n                            checked={checked({ option, value })}\n                            onChange={() => change({ option, value, onChange })}\n                        />\n                        <label\n                            htmlFor={\"checkbox-\" + fieldId + option.value}\n                            className=\"webiny-fb-form-field__checkbox-label\"\n                        >\n                            <I18NValue value={option.label} />\n                        </label>\n                    </div>\n                ))}\n            </div>\n            <HelperMessage\n                isValid={validation.isValid}\n                errorMessage={validation.message}\n                helperMessage={<I18NValue value={props.field.helpText} />}\n            />\n        </div>\n    );\n};\n\nexport default Checkbox;\n"],"file":"Checkbox.js"}