import { FbFormModelFieldsLayout, FbFormModelField, FieldLayoutPositionType, FbBuilderFieldPlugin } from "@webiny/app-form-builder/types";
declare const _default: (FormEditorContext: any) => () => {
    apollo: any;
    data: any;
    state: any;
    getForm(id: string): Promise<any>;
    saveForm: (data: any) => Promise<any>;
    /**
     * Set form data by providing a callback, which receives a fresh copy of data on which you can work on.
     * Return new data once finished.
     * @param setter
     * @param saveForm
     */
    setData(setter: Function, saveForm?: boolean): void;
    /**
     * Returns fields list or complete layout with fields data in it (not just field IDs).
     * @param layout
     * @returns {*}
     */
    getFields(layout?: boolean): FbFormModelField[] | FbFormModelFieldsLayout;
    /**
     * Return field plugin.
     * @param query
     * @returns {void|?FbFormModelField}
     */
    getFieldPlugin(query: object): FbBuilderFieldPlugin;
    /**
     * Checks if field of given type already exists in the list of fields.
     * @param query
     * @returns {boolean}
     */
    getField(query: object): FbFormModelField;
    /**
     * Inserts a new field into the target position.
     * @param data
     * @param position
     */
    insertField(data: FbFormModelField, position: FieldLayoutPositionType): void;
    /**
     * Moves field to the given target position.
     * @param field
     * @param position
     * @param data
     */
    moveField({ field, position }: {
        field: string | FbFormModelField;
        position: FieldLayoutPositionType;
    }): void;
    /**
     * Moves row to a destination row.
     * @param source
     * @param destination
     */
    moveRow(source: number, destination: number): void;
    /**
     * Updates field.
     * @param fieldData
     */
    updateField(fieldData: any): void;
    /**
     * Deletes a field (both from the list of field and the layout).
     * @param field
     */
    deleteField(field: FbFormModelField): void;
    /**
     * Returns row / index position for given field.
     * @param field
     * @returns {{index: number, row: number}|{index: null, row: null}}
     */
    getFieldPosition(field: string | FbFormModelField): FieldLayoutPositionType;
};
export default _default;
