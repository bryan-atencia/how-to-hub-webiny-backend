{"version":3,"sources":["../../../../src/admin/components/FormEditor/Fields.tsx"],"names":["React","useFormEditor","getPlugins","styled","css","Icon","Accordion","AccordionItem","Draggable","FieldContainer","padding","marginBottom","display","width","backgroundColor","borderRadius","boxSizing","cursor","opacity","transition","FieldLabel","textTransform","lineHeight","color","FieldHandle","marginRight","FormAccordionContent","marginLeft","accordionItem","height","fontWeight","border","paddingTop","marginTop","Field","onFieldDragStart","fieldType","name","label","ui","drag","Fields","getField","getGroups","presetFieldPlugins","filter","pl","field","group","unique","map","fields","f","title","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormEditor } from \"@webiny/app-form-builder/admin/components/FormEditor/Context\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Accordion, AccordionItem } from \"@webiny/ui/Accordion\";\nimport { ReactComponent as HandleIcon } from \"./icons/round-drag_indicator-24px.svg\";\nimport Draggable from \"./Draggable\";\nimport { FbBuilderFieldPlugin, FbEditorFieldGroup } from \"@webiny/app-form-builder/types\";\n\nconst FieldContainer = styled(\"div\")({\n    padding: \"10px 15px\",\n    marginBottom: 20,\n    display: \"flex\",\n    width: \"100%\",\n    backgroundColor: \"var(--mdc-theme-on-background)\",\n    borderRadius: 15,\n    boxSizing: \"border-box\",\n    cursor: \"grab\",\n    opacity: 1,\n    transition: \"opacity 225ms\",\n    \"&:hover\": {\n        opacity: 0.8\n    },\n    \"&:last-child\": {\n        marginBottom: 0\n    }\n});\n\nconst FieldLabel = styled(\"div\")({\n    textTransform: \"uppercase\",\n    lineHeight: \"145%\",\n    color: \"var(--mdc-theme-on-surface)\"\n});\n\nconst FieldHandle = styled(\"div\")({\n    marginRight: 15,\n    color: \"var(--mdc-theme-on-surface)\"\n});\n\nconst FormAccordionContent = styled(\"div\")({\n    marginLeft: -40\n});\n\nconst accordionItem = css({\n    \"&.webiny-ui-accordion-item\": {\n        \".webiny-ui-accordion-item__list-item\": {\n            height: \"14px\",\n            borderRadius: \"15px !important\",\n            padding: \"15px 20px 14px 20px\",\n            textTransform: \"uppercase\",\n            backgroundColor: \"var(--mdc-theme-on-background)\",\n            marginBottom: 20,\n            \".webiny-ui-accordion-item__title\": {\n                \">div\": {\n                    fontWeight: 400\n                }\n            }\n        },\n        \".webiny-ui-accordion-item__content\": {\n            border: \"1px solid var(--mdc-theme-on-background)\",\n            borderRadius: 15,\n            paddingTop: 60,\n            marginTop: -65,\n            marginBottom: 20\n        }\n    }\n});\n\nconst Field = ({ onFieldDragStart, fieldType: { name, label } }) => {\n    return (\n        <Draggable beginDrag={{ ui: \"field\", name }}>\n            {({ drag }) => (\n                <div ref={drag} style={{ marginBottom: 10 }} onDragStart={onFieldDragStart}>\n                    <FieldContainer>\n                        <FieldHandle>\n                            <Icon icon={<HandleIcon />} />\n                        </FieldHandle>\n                        <FieldLabel>{label}</FieldLabel>\n                    </FieldContainer>\n                </div>\n            )}\n        </Draggable>\n    );\n};\n\nexport const Fields = ({ onFieldDragStart }) => {\n    const { getField } = useFormEditor();\n\n    function getGroups() {\n        const presetFieldPlugins = getPlugins<FbBuilderFieldPlugin>(\"form-editor-field-type\")\n            .filter(pl => pl.field.group)\n            .filter(pl => {\n                if (pl.field.unique) {\n                    return !getField({ name: pl.field.name });\n                }\n                return true;\n            });\n\n        return getPlugins<FbEditorFieldGroup>(\"form-editor-field-group\").map(pl => ({\n            ...pl.group,\n            name: pl.name,\n            fields: presetFieldPlugins.filter(f => f.field.group === pl.name).map(pl => pl.field)\n        }));\n    }\n\n    return (\n        <React.Fragment>\n            <Field\n                fieldType={{ name: \"custom\", label: \"Custom field\" }}\n                onFieldDragStart={onFieldDragStart}\n            />\n\n            <Accordion elevation={0}>\n                {getGroups().map(group => (\n                    <AccordionItem\n                        key={group.name}\n                        title={group.title}\n                        icon={null}\n                        className={accordionItem}\n                    >\n                        <FormAccordionContent>\n                            {!group.fields.length && (\n                                <span>No fields are available at the moment!</span>\n                            )}\n                            {group.fields.map(fieldType => {\n                                return (\n                                    <Field\n                                        key={fieldType.name}\n                                        fieldType={fieldType}\n                                        onFieldDragStart={onFieldDragStart}\n                                    />\n                                );\n                            })}\n                        </FormAccordionContent>\n                    </AccordionItem>\n                ))}\n            </Accordion>\n        </React.Fragment>\n    );\n};\n"],"file":"Fields.js"}