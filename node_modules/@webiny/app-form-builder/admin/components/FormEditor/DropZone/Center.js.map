{"version":3,"sources":["../../../../../src/admin/components/FormEditor/DropZone/Center.tsx"],"names":["React","styled","Droppable","Container","isOver","backgroundColor","boxSizing","height","minHeight","position","userSelect","width","border","opacity","Add","top","left","transform","margin","color","Center","onDrop","children","drop"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAGA;AACA,IAAMC,SAAS,gBAAGF,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAAA,MAAGG,MAAH,QAAGA,MAAH;AAAA,SAAsC;AAClEC,IAAAA,eAAe,EAAE,aADiD;AAElEC,IAAAA,SAAS,EAAE,YAFuD;AAGlEC,IAAAA,MAAM,EAAE,MAH0D;AAIlEC,IAAAA,SAAS,EAAE,GAJuD;AAKlEC,IAAAA,QAAQ,EAAE,UALwD;AAMlEC,IAAAA,UAAU,EAAE,MANsD;AAOlEC,IAAAA,KAAK,EAAE,MAP2D;AAQlEC,IAAAA,MAAM,EAAER,MAAM,GACR,qCADQ,GAER,uCAV4D;AAWlES,IAAAA,OAAO,EAAET,MAAM,GAAG,CAAH,GAAO;AAX4C,GAAtC;AAAA,CAAjB,CAAf,C,CAcA;;AACA,IAAMU,GAAG,gBAAGb,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAAA,MAAGG,MAAH,SAAGA,MAAH;AAAA,SAAsC;AAC5DK,IAAAA,QAAQ,EAAE,UADkD;AAE5DM,IAAAA,GAAG,EAAE,KAFuD;AAG5DC,IAAAA,IAAI,EAAE,KAHsD;AAI5DC,IAAAA,SAAS,EAAE,sBAJiD;AAK5DC,IAAAA,MAAM,EAAE,CALoD;AAM5DC,IAAAA,KAAK,EAAEf,MAAM,GAAG,0BAAH,GAAgC;AANe,GAAtC;AAAA,CAAjB,CAAT;AAiBA,eAAe,SAASgB,MAAT,QAA6C;AAAA,MAA3BC,MAA2B,SAA3BA,MAA2B;AAAA,MAAnBC,QAAmB,SAAnBA,QAAmB;AACxD,sBACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAED;AAAnB,KACK;AAAA,QAAGjB,MAAH,SAAGA,MAAH;AAAA,QAAWmB,IAAX,SAAWA,IAAX;AAAA,wBACG;AAAK,MAAA,GAAG,EAAEA,IAAV;AAAgB,MAAA,KAAK,EAAE;AAAEZ,QAAAA,KAAK,EAAE,MAAT;AAAiBJ,QAAAA,MAAM,EAAE;AAAzB;AAAvB,oBACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEH;AAAnB,oBACI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAEA;AAAb,OAAsBkB,QAAtB,CADJ,CADJ,CADH;AAAA,GADL,CADJ;AAWH","sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Droppable from \"./../Droppable\";\nimport { DragObjectWithType } from \"react-dnd\";\n\n// @ts-ignore\nconst Container = styled(\"div\")(({ isOver }: { isOver: boolean }) => ({\n    backgroundColor: \"transparent\",\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    minHeight: 100,\n    position: \"relative\",\n    userSelect: \"none\",\n    width: \"100%\",\n    border: isOver\n        ? \"2px dashed var(--mdc-theme-primary)\"\n        : \"2px dashed var(--mdc-theme-secondary)\",\n    opacity: isOver ? 1 : 0.6\n}));\n\n// @ts-ignore\nconst Add = styled(\"div\")(({ isOver }: { isOver: boolean }) => ({\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    margin: 0,\n    color: isOver ? \"var(--mdc-theme-primary)\" : \"var(--mdc-theme-secondary)\"\n}));\n\ntype Props = {\n    type?: string;\n    onDrop(item: DragObjectWithType): void;\n    children: React.ReactNode;\n    active?: boolean;\n    highlight?: boolean;\n};\n\nexport default function Center({ onDrop, children }: Props) {\n    return (\n        <Droppable onDrop={onDrop}>\n            {({ isOver, drop }) => (\n                <div ref={drop} style={{ width: \"100%\", height: \"100%\" }}>\n                    <Container isOver={isOver}>\n                        <Add isOver={isOver}>{children}</Add>\n                    </Container>\n                </div>\n            )}\n        </Droppable>\n    );\n}\n"],"file":"Center.js"}