import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _set from "lodash/set";
import _get from "lodash/get";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Form settings updated successfully."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Which actions should be taken after submission"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import styled from "@emotion/styled";
import { Accordion, AccordionItem } from "@webiny/ui/Accordion";
import { Typography } from "@webiny/ui/Typography";
import { Form } from "@webiny/form";
import { useFormEditor } from "@webiny/app-form-builder/admin/components/FormEditor/Context";
import { getPlugins } from "@webiny/plugins";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormsApp.Editor.TriggersTab");
var Container = /*#__PURE__*/styled("div", {
  target: "e18wqz170",
  label: "Container"
})({
  padding: "40px 60px",
  color: "var(--mdc-theme-on-surface)"
});
export var TriggersTab = function TriggersTab() {
  var _useFormEditor = useFormEditor(),
      setData = _useFormEditor.setData,
      formData = _useFormEditor.data;

  var plugins = getPlugins("form-editor-trigger");

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Typography, {
    use: "overline"
  }, t(_templateObject())), /*#__PURE__*/React.createElement(Accordion, null, plugins.map(function (_ref) {
    var trigger = _ref.trigger;
    return /*#__PURE__*/React.createElement(AccordionItem, {
      key: trigger.id,
      icon: trigger.icon,
      title: trigger.title,
      description: trigger.description
    }, /*#__PURE__*/React.createElement(Form, {
      data: _get(formData, "triggers.".concat(trigger.id), {}),
      onSubmit: function onSubmit(submitData) {
        setData(function (data) {
          return _set(data, "triggers.".concat(trigger.id), submitData);
        });
        showSnackbar(t(_templateObject2()));
      }
    }, function (_ref2) {
      var Bind = _ref2.Bind,
          submit = _ref2.submit;
      return trigger.renderSettings({
        Bind: Bind,
        submit: submit,
        form: formData
      });
    }));
  })));
};
//# sourceMappingURL=TriggersTab.js.map