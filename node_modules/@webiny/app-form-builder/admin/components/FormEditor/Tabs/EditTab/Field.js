import React from "react";
import styled from "@emotion/styled";
import { IconButton } from "@webiny/ui/Button";
import { Typography } from "@webiny/ui/Typography";
import { ReactComponent as EditIcon } from "@svgr/webpack!../../icons/edit.svg";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!../../icons/delete.svg";
import { useI18N } from "@webiny/app-i18n/hooks/useI18N";
import { useFormEditor } from "@webiny/app-form-builder/admin/components/FormEditor/Context";
var FieldContainer = /*#__PURE__*/styled("div", {
  target: "e1wegaq80",
  label: "FieldContainer"
})({
  display: "flex",
  flexDirection: "row",
  justifyContent: "space-between",
  alignItems: "center"
});
var Info = /*#__PURE__*/styled("div", {
  target: "e1wegaq81",
  label: "Info"
})({
  display: "flex",
  flexDirection: "column",
  "> *": {
    flex: "1 100%",
    lineHeight: "150%"
  }
});
var Actions = /*#__PURE__*/styled("div", {
  target: "e1wegaq82",
  label: "Actions"
})({
  display: "flex",
  flexDirection: "row",
  alignItems: "right",
  "> *": {
    flex: "1 100%"
  }
});

var Field = function Field(props) {
  var field = props.field,
      onEdit = props.onEdit,
      onDelete = props.onDelete;

  var _useI18N = useI18N(),
      getValue = _useI18N.getValue;

  var _useFormEditor = useFormEditor(),
      getFieldPlugin = _useFormEditor.getFieldPlugin;

  var fieldPlugin = getFieldPlugin({
    name: field.name
  });
  return /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(Info, null, /*#__PURE__*/React.createElement(Typography, {
    use: "subtitle1"
  }, getValue(field.label)), /*#__PURE__*/React.createElement(Typography, {
    use: "caption"
  }, fieldPlugin && fieldPlugin.field.label)), /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(IconButton, {
    icon: /*#__PURE__*/React.createElement(EditIcon, null),
    onClick: function onClick() {
      return onEdit(field);
    }
  }), /*#__PURE__*/React.createElement(IconButton, {
    icon: /*#__PURE__*/React.createElement(DeleteIcon, null),
    onClick: function onClick() {
      return onDelete(field);
    }
  })));
};

export default Field;
//# sourceMappingURL=Field.js.map