import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React from "react";
import { useFormEditor } from "@webiny/app-form-builder/admin/components/FormEditor/Context";
import { getPlugins } from "@webiny/plugins";
import styled from "@emotion/styled";
import { css } from "emotion";
import { Icon } from "@webiny/ui/Icon";
import { Accordion, AccordionItem } from "@webiny/ui/Accordion";
import { ReactComponent as HandleIcon } from "@svgr/webpack!./icons/round-drag_indicator-24px.svg";
import Draggable from "./Draggable";
var FieldContainer = /*#__PURE__*/styled("div", {
  target: "e3hzdr60",
  label: "FieldContainer"
})({
  padding: "10px 15px",
  marginBottom: 20,
  display: "flex",
  width: "100%",
  backgroundColor: "var(--mdc-theme-on-background)",
  borderRadius: 15,
  boxSizing: "border-box",
  cursor: "grab",
  opacity: 1,
  transition: "opacity 225ms",
  "&:hover": {
    opacity: 0.8
  },
  "&:last-child": {
    marginBottom: 0
  }
});
var FieldLabel = /*#__PURE__*/styled("div", {
  target: "e3hzdr61",
  label: "FieldLabel"
})({
  textTransform: "uppercase",
  lineHeight: "145%",
  color: "var(--mdc-theme-on-surface)"
});
var FieldHandle = /*#__PURE__*/styled("div", {
  target: "e3hzdr62",
  label: "FieldHandle"
})({
  marginRight: 15,
  color: "var(--mdc-theme-on-surface)"
});
var FormAccordionContent = /*#__PURE__*/styled("div", {
  target: "e3hzdr63",
  label: "FormAccordionContent"
})({
  marginLeft: -40
});
var accordionItem = /*#__PURE__*/css({
  "&.webiny-ui-accordion-item": {
    ".webiny-ui-accordion-item__list-item": {
      height: "14px",
      borderRadius: "15px !important",
      padding: "15px 20px 14px 20px",
      textTransform: "uppercase",
      backgroundColor: "var(--mdc-theme-on-background)",
      marginBottom: 20,
      ".webiny-ui-accordion-item__title": {
        ">div": {
          fontWeight: 400
        }
      }
    },
    ".webiny-ui-accordion-item__content": {
      border: "1px solid var(--mdc-theme-on-background)",
      borderRadius: 15,
      paddingTop: 60,
      marginTop: -65,
      marginBottom: 20
    }
  }
}, "label:accordionItem;");

var Field = function Field(_ref) {
  var onFieldDragStart = _ref.onFieldDragStart,
      _ref$fieldType = _ref.fieldType,
      name = _ref$fieldType.name,
      label = _ref$fieldType.label;
  return /*#__PURE__*/React.createElement(Draggable, {
    beginDrag: {
      ui: "field",
      name: name
    }
  }, function (_ref2) {
    var drag = _ref2.drag;
    return /*#__PURE__*/React.createElement("div", {
      ref: drag,
      style: {
        marginBottom: 10
      },
      onDragStart: onFieldDragStart
    }, /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(FieldHandle, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(HandleIcon, null)
    })), /*#__PURE__*/React.createElement(FieldLabel, null, label)));
  });
};

export var Fields = function Fields(_ref3) {
  var onFieldDragStart = _ref3.onFieldDragStart;

  var _useFormEditor = useFormEditor(),
      getField = _useFormEditor.getField;

  function getGroups() {
    var presetFieldPlugins = getPlugins("form-editor-field-type").filter(function (pl) {
      return pl.field.group;
    }).filter(function (pl) {
      if (pl.field.unique) {
        return !getField({
          name: pl.field.name
        });
      }

      return true;
    });
    return getPlugins("form-editor-field-group").map(function (pl) {
      return _objectSpread(_objectSpread({}, pl.group), {}, {
        name: pl.name,
        fields: presetFieldPlugins.filter(function (f) {
          return f.field.group === pl.name;
        }).map(function (pl) {
          return pl.field;
        })
      });
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Field, {
    fieldType: {
      name: "custom",
      label: "Custom field"
    },
    onFieldDragStart: onFieldDragStart
  }), /*#__PURE__*/React.createElement(Accordion, {
    elevation: 0
  }, getGroups().map(function (group) {
    return /*#__PURE__*/React.createElement(AccordionItem, {
      key: group.name,
      title: group.title,
      icon: null,
      className: accordionItem
    }, /*#__PURE__*/React.createElement(FormAccordionContent, null, !group.fields.length && /*#__PURE__*/React.createElement("span", null, "No fields are available at the moment!"), group.fields.map(function (fieldType) {
      return /*#__PURE__*/React.createElement(Field, {
        key: fieldType.name,
        fieldType: fieldType,
        onFieldDragStart: onFieldDragStart
      });
    })));
  })));
};
//# sourceMappingURL=Fields.js.map