import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _get from "lodash/get";

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    query GetForm($id: ID!) {\n        forms {\n            getForm(id: $id) {\n                data {\n                    ", "\n                }\n                error {\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import * as React from "react";
import { css } from "emotion";
import { Form } from "@webiny/app-form-builder/components/Form";
import { DATA_FIELDS } from "@webiny/app-form-builder/components/Form/graphql";
import { Query } from "react-apollo";
import gql from "graphql-tag";
var GET_FORM = gql(_templateObject(), DATA_FIELDS);
var pageInnerWrapper = /*#__PURE__*/css({
  overflowY: "scroll",
  overflowX: "hidden",
  maxHeight: "calc(100vh - 290px)",
  position: "relative",
  padding: 25,
  backgroundColor: "var(--webiny-theme-color-surface, #fff) !important"
}, "label:pageInnerWrapper;");

var FormPreview = function FormPreview(_ref) {
  var revision = _ref.revision;
  return /*#__PURE__*/React.createElement(Query, {
    query: GET_FORM,
    variables: {
      id: revision.id
    }
  }, function (data) {
    return /*#__PURE__*/React.createElement("div", {
      className: pageInnerWrapper
    }, revision && /*#__PURE__*/React.createElement(Form, {
      preview: true,
      data: _get(data, "data.forms.getForm.data")
    }));
  });
};

export default FormPreview;
//# sourceMappingURL=FormPreview.js.map