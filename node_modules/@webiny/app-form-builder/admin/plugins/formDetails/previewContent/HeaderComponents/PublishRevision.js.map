{"version":3,"sources":["../../../../../../src/admin/plugins/formDetails/previewContent/HeaderComponents/PublishRevision.tsx"],"names":["React","IconButton","Tooltip","PUBLISH_REVISION","UNPUBLISH_REVISION","ConfirmationDialog","useApolloClient","useSnackbar","PublishRevision","revision","showSnackbar","client","status","showConfirmation","mutate","mutation","variables","id","res","data","error","forms","publishRevision","message","version","unpublishRevision"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;;AAGA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,6CAArD;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,qCAA5B;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAwC;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,qBACnCF,WAAW,EADwB;AAAA,MACpDG,YADoD,gBACpDA,YADoD;;AAE5D,MAAMC,MAAM,GAAGL,eAAe,EAA9B;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP,QACKG,QAAQ,CAACG,MAAT,KAAoB,WAApB,gBACG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,SAAlB;AAA6B,IAAA,SAAS,EAAE;AAAxC,kBACI,oBAAC,kBAAD;AACI,IAAA,KAAK,EAAE,cADX;AAEI,IAAA,OAAO,EACH;AAHR,KAMK;AAAA,QAAGC,gBAAH,SAAGA,gBAAH;AAAA,wBACG,oBAAC,UAAD;AACI,MAAA,IAAI,eAAE,oBAAC,WAAD,OADV;AAEI,MAAA,OAAO,EAAE;AAAA,eACLA,gBAAgB,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACeF,MAAM,CAACG,MAAP,CAAc;AACtCC,oBAAAA,QAAQ,EAAEZ,gBAD4B;AAEtCa,oBAAAA,SAAS,EAAE;AAAEC,sBAAAA,EAAE,EAAER,QAAQ,CAACQ;AAAf;AAF2B,mBAAd,CADf;;AAAA;AAAA;AACCC,kBAAAA,GADD,wBACLC,IADK;AAMLC,kBAAAA,KANK,GAMKF,GAAG,CAACG,KAAJ,CAAUC,eANf,CAMLF,KANK;;AAAA,uBAOTA,KAPS;AAAA;AAAA;AAAA;;AAAA,mDAQFV,YAAY,CAACU,KAAK,CAACG,OAAP,CARV;;AAAA;AAWbb,kBAAAA,YAAY,eACR,qEACoC,GADpC,eAEI,yCAAUD,QAAQ,CAACe,OAAnB,CAFJ,MADQ,CAAZ;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,GADX;AAAA;AAFb,MADH;AAAA,GANL,CADJ,CADH,gBAoCG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,WAAlB;AAA+B,IAAA,SAAS,EAAE;AAA1C,kBACI,oBAAC,kBAAD;AACI,IAAA,KAAK,EAAE,iBADX;AAEI,IAAA,OAAO,EACH;AAHR,KAMK;AAAA,QAAGX,gBAAH,SAAGA,gBAAH;AAAA,wBACG,oBAAC,UAAD;AACI,MAAA,IAAI,eAAE,oBAAC,aAAD,OADV;AAEI,MAAA,OAAO,EAAE;AAAA,eACLA,gBAAgB,wEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACeF,MAAM,CAACG,MAAP,CAAc;AACtCC,oBAAAA,QAAQ,EAAEX,kBAD4B;AAEtCY,oBAAAA,SAAS,EAAE;AAAEC,sBAAAA,EAAE,EAAER,QAAQ,CAACQ;AAAf;AAF2B,mBAAd,CADf;;AAAA;AAAA;AACCC,kBAAAA,GADD,yBACLC,IADK;AAMLC,kBAAAA,KANK,GAMKF,GAAG,CAACG,KAAJ,CAAUI,iBANf,CAMLL,KANK;;AAAA,uBAOTA,KAPS;AAAA;AAAA;AAAA;;AAAA,oDAQFV,YAAY,CAACU,KAAK,CAACG,OAAP,CARV;;AAAA;AAWbb,kBAAAA,YAAY,eACR,uEACsC,GADtC,eAEI,yCAAUD,QAAQ,CAACe,OAAnB,CAFJ,MADQ,CAAZ;;AAXa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,GADX;AAAA;AAFb,MADH;AAAA,GANL,CADJ,CArCR,CADJ;AA2EH,CA/ED;;AAiFA,eAAehB,eAAf","sourcesContent":["import React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as PublishIcon } from \"@webiny/app-form-builder/admin/icons/publish.svg\";\nimport { ReactComponent as UnpublishIcon } from \"@webiny/app-form-builder/admin/icons/unpublish.svg\";\nimport { PUBLISH_REVISION, UNPUBLISH_REVISION } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { FbFormModel } from \"@webiny/app-form-builder/types\";\n\ntype PublishRevisionProps = {\n    revision: FbFormModel;\n};\n\nconst PublishRevision = ({ revision }: PublishRevisionProps) => {\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    return (\n        <React.Fragment>\n            {revision.status !== \"published\" ? (\n                <Tooltip content={\"Publish\"} placement={\"top\"}>\n                    <ConfirmationDialog\n                        title={\"Publish form\"}\n                        message={\n                            \"You are about to publish this form, are you sure want to continue?\"\n                        }\n                    >\n                        {({ showConfirmation }) => (\n                            <IconButton\n                                icon={<PublishIcon />}\n                                onClick={() =>\n                                    showConfirmation(async () => {\n                                        const { data: res } = await client.mutate({\n                                            mutation: PUBLISH_REVISION,\n                                            variables: { id: revision.id }\n                                        });\n\n                                        const { error } = res.forms.publishRevision;\n                                        if (error) {\n                                            return showSnackbar(error.message);\n                                        }\n\n                                        showSnackbar(\n                                            <span>\n                                                Successfully published revision{\" \"}\n                                                <strong>#{revision.version}</strong>!\n                                            </span>\n                                        );\n                                    })\n                                }\n                            />\n                        )}\n                    </ConfirmationDialog>\n                </Tooltip>\n            ) : (\n                <Tooltip content={\"Unpublish\"} placement={\"top\"}>\n                    <ConfirmationDialog\n                        title={\"Un-publish form\"}\n                        message={\n                            \"You are about to unpublish this form, are you sure want to continue?\"\n                        }\n                    >\n                        {({ showConfirmation }) => (\n                            <IconButton\n                                icon={<UnpublishIcon />}\n                                onClick={() =>\n                                    showConfirmation(async () => {\n                                        const { data: res } = await client.mutate({\n                                            mutation: UNPUBLISH_REVISION,\n                                            variables: { id: revision.id }\n                                        });\n\n                                        const { error } = res.forms.unpublishRevision;\n                                        if (error) {\n                                            return showSnackbar(error.message);\n                                        }\n\n                                        showSnackbar(\n                                            <span>\n                                                Successfully unpublished revision{\" \"}\n                                                <strong>#{revision.version}</strong>!\n                                            </span>\n                                        );\n                                    })\n                                }\n                            />\n                        )}\n                    </ConfirmationDialog>\n                </Tooltip>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default PublishRevision;\n"],"file":"PublishRevision.js"}