{"version":3,"sources":["../../../../../src/admin/plugins/formDetails/formRevisions/useRevision.tsx"],"names":["React","useRouter","useApolloClient","useHandlers","GET_FORM","CREATE_REVISION_FROM","DELETE_REVISION","PUBLISH_REVISION","UNPUBLISH_REVISION","useSnackbar","useRevision","revision","form","history","showSnackbar","client","createRevision","mutate","mutation","variables","id","refetchQueries","res","data","forms","error","message","push","editRevision","deleteRevision","update","cache","updated","parent","gqlParams","query","readQuery","indexOfDeleted","revisions","findIndex","item","splice","writeQuery","publishRevision","version","unpublishRevision"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useApolloClient } from \"react-apollo\";\nimport { cloneDeep, get } from \"lodash\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport {\n    GET_FORM,\n    CREATE_REVISION_FROM,\n    DELETE_REVISION,\n    PUBLISH_REVISION,\n    UNPUBLISH_REVISION\n} from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport {FbFormModel} from \"@webiny/app-form-builder/types\";\n\nexport type UseRevisionProps = {\n    revision: FbFormModel;\n    form: FbFormModel;\n}\n\nexport const useRevision = ({ revision, form }: UseRevisionProps) => {\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    const {\n        createRevision,\n        editRevision,\n        deleteRevision,\n        publishRevision,\n        unpublishRevision\n    } = useHandlers(null, {\n        createRevision: () => async () => {\n            const { data: res } = await client.mutate({\n                mutation: CREATE_REVISION_FROM,\n                variables: { revision: revision.id },\n                refetchQueries: [\"FormsListForms\"]\n            });\n            const { data, error } = res.forms.revision;\n\n            if (error) {\n                return showSnackbar(error.message);\n            }\n\n            history.push(`/forms/${data.id}`);\n        },\n        editRevision: () => () => {\n            history.push(`/forms/${revision.id}`);\n        },\n        deleteRevision: () => async () => {\n            await client.mutate({\n                mutation: DELETE_REVISION,\n                variables: { id: revision.id },\n                refetchQueries: [\"FormsListForms\"],\n                update: (cache, updated) => {\n                    const error = get(updated, \"data.forms.deleteRevision.error\");\n                    if (error) {\n                        return showSnackbar(error.message);\n                    }\n\n                    // Should we redirect to list (remove \"?id=XYZ\" from URL?):\n                    // If parent was deleted, that means all revisions were deleted, and we can redirect.\n                    if (revision.parent === revision.id) {\n                        return history.push(\"/forms\");\n                    }\n\n                    const gqlParams = { query: GET_FORM, variables: { id: form.id } };\n                    const data: any = cloneDeep(cache.readQuery(gqlParams));\n                    const indexOfDeleted = data.forms.form.data.revisions.findIndex(\n                        item => item.id === revision.id\n                    );\n\n                    data.forms.form.data.revisions.splice(indexOfDeleted, 1);\n                    cache.writeQuery({\n                        ...gqlParams,\n                        data\n                    });\n\n                    // If currently selected revision (from left list of forms) was deleted.\n                    if (revision.id === form.id) {\n                        return history.push(\"/forms\");\n                    }\n                }\n            });\n        },\n        publishRevision: () => async () => {\n            const { data: res } = await client.mutate({\n                mutation: PUBLISH_REVISION,\n                variables: { id: revision.id },\n                refetchQueries: [\"FormsListForms\"]\n            });\n\n            const { error } = res.forms.publishRevision;\n            if (error) {\n                return showSnackbar(error.message);\n            }\n\n            showSnackbar(\n                <span>\n                    Successfully published revision <strong>#{revision.version}</strong>!\n                </span>\n            );\n        },\n        unpublishRevision: () => async () => {\n            await client.mutate({\n                mutation: UNPUBLISH_REVISION,\n                variables: { id: revision.id },\n                refetchQueries: [\"FormsListForms\"]\n            });\n        }\n    });\n\n    return { createRevision, editRevision, deleteRevision, publishRevision, unpublishRevision };\n};\n"],"file":"useRevision.js"}