{"version":3,"sources":["../../../../../src/admin/plugins/formDetails/formRevisions/Revision.tsx"],"names":["React","css","TimeAgo","ListItem","ListItemText","ListItemTextPrimary","ListItemTextSecondary","ListItemGraphic","ListItemMeta","IconButton","Icon","MenuItem","Menu","MenuDivider","ConfirmationDialog","Tooltip","useRevision","primaryColor","color","revisionsMenu","width","right","left","getIcon","rev","status","icon","text","Revision","props","revision","form","tooltipText","publishRevision","createRevision","deleteRevision","editRevision","unpublishRevision","name","savedOn","version","showConfirmation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport TimeAgo from \"timeago-react\";\nimport {\n    ListItem,\n    ListItemText,\n    ListItemTextPrimary,\n    ListItemTextSecondary,\n    ListItemGraphic,\n    ListItemMeta\n} from \"@webiny/ui/List\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { MenuItem, Menu, MenuDivider } from \"@webiny/ui/Menu\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-form-builder/admin/icons/add.svg\";\nimport { ReactComponent as BeenHereIcon } from \"@webiny/app-form-builder/admin/icons/beenhere.svg\";\nimport { ReactComponent as DeleteIcon } from \"@webiny/app-form-builder/admin/icons/delete.svg\";\nimport { ReactComponent as EditIcon } from \"@webiny/app-form-builder/admin/icons/edit.svg\";\nimport { ReactComponent as GestureIcon } from \"@webiny/app-form-builder/admin/icons/gesture.svg\";\nimport { ReactComponent as LockIcon } from \"@webiny/app-form-builder/admin/icons/lock.svg\";\nimport { ReactComponent as MoreVerticalIcon } from \"@webiny/app-form-builder/admin/icons/more_vert.svg\";\nimport { ReactComponent as PublishIcon } from \"@webiny/app-form-builder/admin/icons/publish.svg\";\nimport { ReactComponent as UnpublishIcon } from \"@webiny/app-form-builder/admin/icons/unpublish.svg\";\nimport { useRevision } from \"./useRevision\";\nimport { FbFormModel } from \"@webiny/app-form-builder/types\";\n\nconst primaryColor = css({ color: \"var(--mdc-theme-primary)\" });\n\nconst revisionsMenu = css({\n    width: 250,\n    right: -105,\n    left: \"auto !important\"\n});\n\nconst getIcon = rev => {\n    switch (rev.status) {\n        case \"locked\":\n            return {\n                icon: <Icon icon={<LockIcon />} />,\n                text: \"This revision is locked (it has already been published)\"\n            };\n        case \"published\":\n            return {\n                icon: <Icon icon={<BeenHereIcon />} className={primaryColor} />,\n                text: \"This revision is currently published!\"\n            };\n        default:\n            return {\n                icon: <Icon icon={<GestureIcon />} />,\n                text: \"This is a draft\"\n            };\n    }\n};\n\ntype RevisionProps = {\n    form: FbFormModel;\n    revision: FbFormModel;\n};\n\nconst Revision = (props: RevisionProps) => {\n    const { revision: rev, form } = props;\n    const { icon, text: tooltipText } = getIcon(rev);\n    const {\n        publishRevision,\n        createRevision,\n        deleteRevision,\n        editRevision,\n        unpublishRevision\n    } = useRevision({ revision: rev, form });\n\n    return (\n        <ListItem>\n            <ListItemGraphic>\n                <Tooltip content={tooltipText} placement={\"bottom\"}>\n                    {icon}\n                </Tooltip>\n            </ListItemGraphic>\n            <ListItemText>\n                <ListItemTextPrimary>{rev.name}</ListItemTextPrimary>\n                <ListItemTextSecondary>\n                    Last modified <TimeAgo datetime={rev.savedOn} /> (#\n                    {rev.version})\n                </ListItemTextSecondary>\n            </ListItemText>\n            <ListItemMeta>\n                <Menu\n                    handle={<IconButton icon={<MoreVerticalIcon />} />}\n                    className={revisionsMenu}\n                >\n                    <MenuItem onClick={createRevision}>\n                        <ListItemGraphic>\n                            <Icon icon={<AddIcon />} />\n                        </ListItemGraphic>\n                        New from current\n                    </MenuItem>\n                    {rev.status === \"draft\" && (\n                        <MenuItem onClick={editRevision}>\n                            <ListItemGraphic>\n                                <Icon icon={<EditIcon />} />\n                            </ListItemGraphic>\n                            Edit\n                        </MenuItem>\n                    )}\n\n                    {rev.status !== \"published\" && (\n                        <MenuItem onClick={() => publishRevision(rev)}>\n                            <ListItemGraphic>\n                                <Icon icon={<PublishIcon />} />\n                            </ListItemGraphic>\n                            Publish\n                        </MenuItem>\n                    )}\n\n                    {rev.status === \"published\" && (\n                        <ConfirmationDialog\n                            title=\"Confirmation required!\"\n                            message={<span>Are you sure you want to unpublish this revision?</span>}\n                        >\n                            {({ showConfirmation }) => (\n                                <MenuItem\n                                    onClick={() => showConfirmation(() => unpublishRevision(rev))}\n                                >\n                                    <ListItemGraphic>\n                                        <Icon icon={<UnpublishIcon />} />\n                                    </ListItemGraphic>\n                                    Unpublish\n                                </MenuItem>\n                            )}\n                        </ConfirmationDialog>\n                    )}\n\n                    <MenuDivider />\n                    <ConfirmationDialog\n                        title=\"Confirmation required!\"\n                        message={<span>Are you sure you want to delete this revision?</span>}\n                    >\n                        {({ showConfirmation }) => (\n                            <MenuItem onClick={() => showConfirmation(deleteRevision)}>\n                                <ListItemGraphic>\n                                    <Icon icon={<DeleteIcon />} />\n                                </ListItemGraphic>\n                                Delete\n                            </MenuItem>\n                        )}\n                    </ConfirmationDialog>\n                </Menu>\n            </ListItemMeta>\n        </ListItem>\n    );\n};\n\nexport default Revision;\n"],"file":"Revision.js"}