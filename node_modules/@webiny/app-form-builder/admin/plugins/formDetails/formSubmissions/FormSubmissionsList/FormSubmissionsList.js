import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Submitted: {time}."]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Oldest to newest"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Newest to oldest"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Export all form submissions"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Export {submissionsCount|count:1:form submission:default:form submissions}."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useState } from "react";
import TimeAgo from "timeago-react";
import { css } from "emotion";
import { Typography } from "@webiny/ui/Typography";
import { Checkbox } from "@webiny/ui/Checkbox";
import Block from "../Block";
import { DataList, List, ListItem, ListItemText, ListTextOverline, ListItemMeta, ListSelectBox } from "@webiny/ui/List";
import FormSubmissionDialog from "./FormSubmissionDialog";
import { ReactComponent as ImportExport } from "@svgr/webpack!./icons/round-cloud_download-24px.svg";
import { IconButton } from "@webiny/ui/Button";
import { EXPORT_FORM_SUBMISSIONS } from "@webiny/app-form-builder/admin/viewsGraphql";
import { Mutation } from "react-apollo";
import { Tooltip } from "@webiny/ui/Tooltip";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormsApp.FormsDataList");
var rightAlign = /*#__PURE__*/css({
  alignItems: "flex-end !important"
}, "label:rightAlign;");

var FullName = function FullName(_ref) {
  var submission = _ref.submission;
  var _submission$data = submission.data,
      firstName = _submission$data.firstName,
      lastName = _submission$data.lastName,
      email = _submission$data.email;
  var output = [firstName, lastName, email && "<".concat(email, ">")].filter(Boolean).join(" ");
  return /*#__PURE__*/React.createElement("span", null, output || "N/A");
};

var FormVersion = function FormVersion(_ref2) {
  var submission = _ref2.submission;
  return /*#__PURE__*/React.createElement("span", null, "Form revision #$", submission.form.revision.version);
};

var renderExportFormSubmissionsTooltip = function renderExportFormSubmissionsTooltip(dataList) {
  var submissionsCount = dataList.getMultiSelected().length;

  if (submissionsCount > 0) {
    return t(_templateObject())({
      submissionsCount: submissionsCount
    });
  }

  return t(_templateObject2());
};

var FormSubmissionsList = function FormSubmissionsList(props) {
  var dataList = props.dataList,
      form = props.form;

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      selectedFormSubmission = _useState2[0],
      selectFormSubmission = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      exportInProgress = _useState4[0],
      setExportInProgress = _useState4[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  if (!dataList) {
    return;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Block, {
    title: "Submissions"
  }, /*#__PURE__*/React.createElement(DataList, Object.assign({}, dataList, {
    multiSelectAll: dataList.multiSelectAll,
    multiSelect: dataList.multiSelect,
    multiSelectActions: /*#__PURE__*/React.createElement(Mutation, {
      mutation: EXPORT_FORM_SUBMISSIONS
    }, function (update) {
      return /*#__PURE__*/React.createElement(Tooltip, {
        content: renderExportFormSubmissionsTooltip(dataList),
        placement: "bottom"
      }, /*#__PURE__*/React.createElement(IconButton, {
        disabled: exportInProgress,
        icon: /*#__PURE__*/React.createElement(ImportExport, null),
        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
          var args, _yield$update, data;

          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  setExportInProgress(true);
                  args = {
                    variables: {
                      parent: null,
                      ids: null
                    }
                  };

                  if (dataList.isNoneMultiSelected()) {
                    args.variables.parent = form.parent;
                  } else {
                    args.variables.ids = dataList.getMultiSelected().map(function (item) {
                      return item.id;
                    });
                  }

                  _context.next = 5;
                  return update(args);

                case 5:
                  _yield$update = _context.sent;
                  data = _yield$update.data;
                  setExportInProgress(false);

                  if (!data.forms.exportFormSubmissions.error) {
                    _context.next = 11;
                    break;
                  }

                  showSnackbar(data.forms.exportFormSubmissions.error.message);
                  return _context.abrupt("return");

                case 11:
                  window.open(data.forms.exportFormSubmissions.data.src, "_blank");

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }))
      }));
    }),
    sorters: [{
      label: t(_templateObject3()),
      sorters: {
        "meta.submittedOn": -1
      }
    }, {
      label: t(_templateObject4()),
      sorters: {
        "meta.submittedOn": 1
      }
    }]
  }), function (_ref4) {
    var _ref4$data = _ref4.data,
        data = _ref4$data === void 0 ? [] : _ref4$data;
    return /*#__PURE__*/React.createElement(List, null, data.map(function (submission) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: submission.id
      }, /*#__PURE__*/React.createElement(ListSelectBox, null, /*#__PURE__*/React.createElement(Checkbox, {
        onChange: function onChange() {
          return dataList.multiSelect(submission);
        },
        value: dataList.isMultiSelected(submission)
      })), /*#__PURE__*/React.createElement(ListItemText, {
        onClick: function onClick() {
          return selectFormSubmission(submission);
        }
      }, /*#__PURE__*/React.createElement(FullName, {
        submission: submission
      }), /*#__PURE__*/React.createElement(ListTextOverline, null, "Visitor IP: ", submission.meta.ip || "N/A")), /*#__PURE__*/React.createElement(ListItemMeta, {
        className: rightAlign
      }, /*#__PURE__*/React.createElement(Typography, {
        use: "subtitle2"
      }, t(_templateObject5())({
        time: /*#__PURE__*/React.createElement(TimeAgo, {
          datetime: submission.meta.submittedOn
        })
      }), /*#__PURE__*/React.createElement("br", null), /*#__PURE__*/React.createElement(FormVersion, {
        submission: submission
      }))));
    }));
  })), /*#__PURE__*/React.createElement(FormSubmissionDialog, {
    onClose: function onClose() {
      selectFormSubmission(null);
    },
    formSubmission: selectedFormSubmission
  }));
};

export default FormSubmissionsList;
//# sourceMappingURL=FormSubmissionsList.js.map