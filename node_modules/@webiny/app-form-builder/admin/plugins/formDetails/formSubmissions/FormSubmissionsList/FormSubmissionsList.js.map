{"version":3,"sources":["../../../../../../src/admin/plugins/formDetails/formSubmissions/FormSubmissionsList/FormSubmissionsList.tsx"],"names":["React","useState","TimeAgo","css","Typography","Checkbox","Block","DataList","List","ListItem","ListItemText","ListTextOverline","ListItemMeta","ListSelectBox","FormSubmissionDialog","IconButton","EXPORT_FORM_SUBMISSIONS","Mutation","Tooltip","useSnackbar","i18n","t","namespace","rightAlign","alignItems","FullName","submission","data","firstName","lastName","email","output","filter","Boolean","join","FormVersion","form","revision","version","renderExportFormSubmissionsTooltip","dataList","submissionsCount","getMultiSelected","length","FormSubmissionsList","props","selectedFormSubmission","selectFormSubmission","exportInProgress","setExportInProgress","showSnackbar","multiSelectAll","multiSelect","update","args","variables","parent","ids","isNoneMultiSelected","map","item","id","forms","exportFormSubmissions","error","message","window","open","src","label","sorters","isMultiSelected","meta","ip","time","submittedOn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { css } from \"emotion\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Checkbox } from \"@webiny/ui/Checkbox\";\nimport Block from \"../Block\";\nimport {\n    DataList,\n    List,\n    ListItem,\n    ListItemText,\n    ListTextOverline,\n    ListItemMeta,\n    ListSelectBox\n} from \"@webiny/ui/List\";\nimport FormSubmissionDialog from \"./FormSubmissionDialog\";\nimport { ReactComponent as ImportExport } from \"./icons/round-cloud_download-24px.svg\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { EXPORT_FORM_SUBMISSIONS } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { Mutation } from \"react-apollo\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"FormsApp.FormsDataList\");\n\nconst rightAlign = css({\n    alignItems: \"flex-end !important\"\n});\n\nconst FullName = ({ submission }) => {\n    const {\n        data: { firstName, lastName, email }\n    } = submission;\n\n    const output = [firstName, lastName, email && `<${email}>`].filter(Boolean).join(\" \");\n    return <span>{output || \"N/A\"}</span>;\n};\n\nconst FormVersion = ({ submission }) => {\n    return <span>Form revision #${submission.form.revision.version}</span>;\n};\n\nconst renderExportFormSubmissionsTooltip = dataList => {\n    const submissionsCount = dataList.getMultiSelected().length;\n    if (submissionsCount > 0) {\n        return t`Export {submissionsCount|count:1:form submission:default:form submissions}.`({\n            submissionsCount\n        });\n    }\n\n    return t`Export all form submissions`;\n};\n\nconst FormSubmissionsList = props => {\n    const { dataList, form } = props;\n    const [selectedFormSubmission, selectFormSubmission] = useState(null);\n    const [exportInProgress, setExportInProgress] = useState(false);\n    const { showSnackbar } = useSnackbar();\n\n    if (!dataList) {\n        return;\n    }\n\n    return (\n        <>\n            <Block title=\"Submissions\">\n                <DataList\n                    {...dataList}\n                    multiSelectAll={dataList.multiSelectAll}\n                    multiSelect={dataList.multiSelect}\n                    multiSelectActions={\n                        <Mutation mutation={EXPORT_FORM_SUBMISSIONS}>\n                            {update => (\n                                <Tooltip\n                                    content={renderExportFormSubmissionsTooltip(dataList)}\n                                    placement={\"bottom\"}\n                                >\n                                    <IconButton\n                                        disabled={exportInProgress}\n                                        icon={<ImportExport />}\n                                        onClick={async () => {\n                                            setExportInProgress(true);\n                                            const args = {\n                                                variables: {\n                                                    parent: null,\n                                                    ids: null\n                                                }\n                                            };\n                                            if (dataList.isNoneMultiSelected()) {\n                                                args.variables.parent = form.parent;\n                                            } else {\n                                                args.variables.ids = dataList\n                                                    .getMultiSelected()\n                                                    .map(item => item.id);\n                                            }\n\n                                            const { data } = await update(args);\n                                            setExportInProgress(false);\n                                            if (data.forms.exportFormSubmissions.error) {\n                                                showSnackbar(\n                                                    data.forms.exportFormSubmissions.error.message\n                                                );\n                                                return;\n                                            }\n\n                                            window.open(\n                                                data.forms.exportFormSubmissions.data.src,\n                                                \"_blank\"\n                                            );\n                                        }}\n                                    />\n                                </Tooltip>\n                            )}\n                        </Mutation>\n                    }\n                    sorters={[\n                        {\n                            label: t`Newest to oldest`,\n                            sorters: { \"meta.submittedOn\": -1 }\n                        },\n                        {\n                            label: t`Oldest to newest`,\n                            sorters: { \"meta.submittedOn\": 1 }\n                        }\n                    ]}\n                >\n                    {({ data = [] }) => (\n                        <List>\n                            {data.map(submission => (\n                                <ListItem key={submission.id}>\n                                    <ListSelectBox>\n                                        <Checkbox\n                                            onChange={() => dataList.multiSelect(submission)}\n                                            value={dataList.isMultiSelected(submission)}\n                                        />\n                                    </ListSelectBox>\n                                    <ListItemText onClick={() => selectFormSubmission(submission)}>\n                                        <FullName submission={submission} />\n                                        <ListTextOverline>\n                                            Visitor IP: {submission.meta.ip || \"N/A\"}\n                                        </ListTextOverline>\n                                    </ListItemText>\n                                    <ListItemMeta className={rightAlign}>\n                                        <Typography use={\"subtitle2\"}>\n                                            {t`Submitted: {time}.`({\n                                                time: (\n                                                    <TimeAgo\n                                                        datetime={submission.meta.submittedOn}\n                                                    />\n                                                )\n                                            })}\n                                            <br />\n                                            <FormVersion submission={submission} />\n                                        </Typography>\n                                    </ListItemMeta>\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </DataList>\n            </Block>\n            <FormSubmissionDialog\n                onClose={() => {\n                    selectFormSubmission(null);\n                }}\n                formSubmission={selectedFormSubmission}\n            />\n        </>\n    );\n};\n\nexport default FormSubmissionsList;\n"],"file":"FormSubmissionsList.js"}