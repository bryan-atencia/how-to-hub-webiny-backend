{"version":3,"sources":["../../../../../../src/admin/plugins/fields/components/OptionsListComponents/EditFieldOptionDialog.tsx"],"names":["React","css","Form","Grid","Cell","Input","I18NInput","i18n","Hotkeys","validation","Dialog","DialogTitle","DialogContent","DialogActions","DialogButton","t","namespace","narrowDialog","width","minWidth","EditFieldOptionDialog","props","onClose","options","open","onSubmit","option","optionIndex","esc","e","preventDefault","stopPropagation","Bind","submit","value","validateSync","Array","isArray","i","length","current","Error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { I18NInput } from \"@webiny/app-i18n/admin/components\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Hotkeys } from \"react-hotkeyz\";\nimport { validation } from \"@webiny/validation\";\n\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogButton } from \"@webiny/ui/Dialog\";\n\nconst t = i18n.namespace(\"Forms.FormEditor.EditFieldOptionDialog\");\nconst narrowDialog = css({\n    \".mdc-dialog__surface\": {\n        width: 600,\n        minWidth: 600\n    }\n});\n\ntype EditFieldOptionDialogProps = {\n    option: any;\n    optionIndex: number;\n    open: boolean;\n    onClose: () => void;\n    onSubmit: (data: any) => void;\n    options: any[];\n};\n\nconst EditFieldOptionDialog = (props: EditFieldOptionDialogProps) => {\n    const { onClose, options, open, onSubmit, option, optionIndex } = props;\n\n    return (\n        <Dialog open={open} onClose={onClose} className={narrowDialog}>\n            {option !== null && (\n                <Hotkeys\n                    zIndex={115}\n                    keys={{\n                        esc(e) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            onClose();\n                        }\n                    }}\n                >\n                    <Form data={option} onSubmit={onSubmit}>\n                        {({ Bind, submit }) => (\n                            <>\n                                <DialogTitle>{t`Edit option`}</DialogTitle>\n                                <DialogContent>\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Bind name={\"label\"}>\n                                                <I18NInput\n                                                    label={t`Label`}\n                                                    showTranslateIcon={false}\n                                                />\n                                            </Bind>\n                                        </Cell>\n                                        <Cell span={12}>\n                                            <Bind\n                                                name={\"value\"}\n                                                validators={value => {\n                                                    validation.validateSync(value, \"required\");\n                                                    if (!Array.isArray(options)) {\n                                                        return true;\n                                                    }\n\n                                                    for (let i = 0; i < options.length; i++) {\n                                                        const current = options[i];\n                                                        if (\n                                                            current.value === value &&\n                                                            i !== optionIndex\n                                                        ) {\n                                                            throw new Error(\n                                                                `Option with value \"${value}\" already exists.`\n                                                            );\n                                                        }\n                                                    }\n                                                }}\n                                            >\n                                                <Input label={t`Value`} />\n                                            </Bind>\n                                        </Cell>\n                                    </Grid>\n                                </DialogContent>\n                                <DialogActions>\n                                    <DialogButton onClick={submit}>{t`Save`}</DialogButton>\n                                </DialogActions>\n                            </>\n                        )}\n                    </Form>\n                </Hotkeys>\n            )}\n        </Dialog>\n    );\n};\n\nexport default EditFieldOptionDialog;\n"],"file":"EditFieldOptionDialog.js"}