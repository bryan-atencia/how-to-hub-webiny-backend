{"version":3,"sources":["../../../../../../src/admin/plugins/fields/components/OptionsListComponents/OptionsListItem.tsx"],"names":["React","I18NValue","I18NInput","Typography","Tooltip","css","IconButton","Switch","optionsListItemLeft","display","justifyContent","alignItems","flexDirection","marginLeft","color","span","lineHeight","optionsListItemRight","DefaultValueSwitch","multiple","option","currentDefaultValue","value","setDefaultValue","onChange","selected","Array","isArray","includes","splice","indexOf","push","newValue","OptionsListItem","props","dragHandle","Bind","deleteOption","editOption","setOptionTranslations","label","openDialog"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { I18NInput } from \"@webiny/app-i18n/admin/components\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { css } from \"emotion\";\nimport { IconButton } from \"@webiny/ui/Button\";\n\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { ReactComponent as EditIcon } from \"@webiny/app-form-builder/admin/icons/edit.svg\";\nimport { ReactComponent as DeleteIcon } from \"@webiny/app-form-builder/admin/icons/delete.svg\";\nimport { ReactComponent as TranslateIcon } from \"@webiny/app-form-builder/admin/icons/round-translate-24px.svg\";\nimport { BindComponent } from \"@webiny/form/Bind\";\n\nconst optionsListItemLeft = css({\n    display: \"flex\",\n    justifyContent: \"left\",\n    alignItems: \"center\",\n    \">div\": {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginLeft: 10,\n        color: \"var(--mdc-theme-on-surface)\",\n        span: {\n            lineHeight: \"125%\"\n        }\n    }\n});\n\nconst optionsListItemRight = css({\n    display: \"flex\",\n    justifyContent: \"right\",\n    alignItems: \"center\"\n});\n\ntype DefaultValueSwitchProps = {\n    multiple: boolean;\n    option: any;\n    value: any;\n    onChange: any;\n};\n\nconst DefaultValueSwitch = ({\n    multiple,\n    option,\n    value: currentDefaultValue,\n    onChange: setDefaultValue\n}: DefaultValueSwitchProps) => {\n    if (multiple) {\n        const selected =\n            Array.isArray(currentDefaultValue) && currentDefaultValue.includes(option.value);\n\n        return (\n            <Switch\n                value={selected}\n                onChange={() => {\n                    if (selected) {\n                        const value = Array.isArray(currentDefaultValue)\n                            ? [...currentDefaultValue]\n                            : [];\n\n                        value.splice(value.indexOf(option.value), 1);\n                        setDefaultValue(value);\n                    } else {\n                        const value = Array.isArray(currentDefaultValue)\n                            ? [...currentDefaultValue]\n                            : [];\n                        value.push(option.value);\n                        setDefaultValue(value);\n                    }\n                }}\n            />\n        );\n    }\n\n    const selected = currentDefaultValue === option.value;\n    return (\n        <Switch\n            value={selected}\n            onChange={() => {\n                const newValue = selected ? \"\" : option.value;\n                setDefaultValue(newValue);\n            }}\n        />\n    );\n};\n\ntype OptionsListItemProps = {\n    multiple: boolean;\n    dragHandle: React.ReactNode;\n    Bind: BindComponent;\n    option: { label: string; value: string };\n    deleteOption: () => void;\n    editOption: () => void;\n    setOptionTranslations: (label: string) => void;\n};\n\nexport default function OptionsListItem(props: OptionsListItemProps) {\n    const {\n        option,\n        multiple,\n        dragHandle,\n        Bind,\n        deleteOption,\n        editOption,\n        setOptionTranslations\n    } = props;\n\n    return (\n        <>\n            <div className={optionsListItemLeft}>\n                <Tooltip placement={\"bottom\"} content={<span>Drag to rearrange the order</span>}>\n                    <span>{dragHandle}</span>\n                </Tooltip>\n                <div>\n                    <Typography use={\"subtitle1\"}>\n                        <I18NValue value={option.label} />\n                    </Typography>\n                    <Typography use={\"caption\"}>{option.value}</Typography>\n                </div>\n            </div>\n            <div className={optionsListItemRight}>\n                <IconButton icon={<EditIcon />} onClick={editOption} />\n                <I18NInput value={option.label} onChange={setOptionTranslations}>\n                    {({ openDialog }) => {\n                        return <IconButton icon={<TranslateIcon />} onClick={openDialog} />;\n                    }}\n                </I18NInput>\n\n                <IconButton icon={<DeleteIcon />} onClick={deleteOption} />\n\n                <Bind name={\"settings.defaultValue\"}>\n                    {({ onChange, value }) => (\n                        <Tooltip placement={\"bottom\"} content={<span>Set as default value</span>}>\n                            <DefaultValueSwitch\n                                onChange={onChange}\n                                value={value}\n                                multiple={multiple}\n                                option={option}\n                            />\n                        </Tooltip>\n                    )}\n                </Bind>\n            </div>\n        </>\n    );\n}\n"],"file":"OptionsListItem.js"}