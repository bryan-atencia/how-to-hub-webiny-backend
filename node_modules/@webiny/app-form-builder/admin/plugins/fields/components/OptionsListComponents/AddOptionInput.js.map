{"version":3,"sources":["../../../../../../src/admin/plugins/fields/components/OptionsListComponents/AddOptionInput.tsx"],"names":["React","Input","Form","Hotkeys","AddOptionInput","options","onAdd","optionsValidation","validation","Bind","value","Array","isArray","find","item","Error","onChange","validate","inputValidation","message","enter","result"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAA4CC,IAA5C,QAAwD,cAAxD;AACA,SAASC,OAAT,QAAwB,eAAxB;AAQA,eAAe,SAASC,cAAT,OAIS;AAAA,MAHpBC,OAGoB,QAHpBA,OAGoB;AAAA,MAFpBC,KAEoB,QAFpBA,KAEoB;AAAA,MADRC,iBACQ,QADpBC,UACoB;AACpB,sBACI,oBAAC,IAAD,QACK;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,wBACG,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,WADV;AAEI,MAAA,UAAU,EAAE,oBAAAC,KAAK,EAAI;AACjB,YAAI,CAACC,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAL,EAA6B;AACzB,iBAAO,IAAP;AACH;;AAED,YAAIA,OAAO,CAACQ,IAAR,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACJ,KAAL,KAAeA,KAAnB;AAAA,SAAjB,CAAJ,EAAgD;AAC5C,gBAAM,IAAIK,KAAJ,+BAAgCL,KAAhC,wBAAN;AACH;AACJ;AAVL,OAYK,iBAAgE;AAAA,UAA7DA,KAA6D,SAA7DA,KAA6D;AAAA,UAAtDM,QAAsD,SAAtDA,QAAsD;AAAA,UAA5CC,QAA4C,SAA5CA,QAA4C;AAAA,UAAtBC,eAAsB,SAAlCV,UAAkC;AAC7D,UAAMA,UAAU,GACZU,eAAe,IAAIA,eAAe,CAACC,OAAnC,GACMD,eADN,GAEMX,iBAHV;AAIA,0BACI,oBAAC,OAAD;AACI,QAAA,MAAM,EAAE,GADZ;AAEI,QAAA,IAAI,EAAE;AACIa,UAAAA,KADJ,mBACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACNV,KADM;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAEeO,QAAQ,EAFvB;;AAAA;AAEAI,sBAAAA,MAFA;;AAGN,0BAAIA,MAAM,KAAK,KAAf,EAAsB;AAClBL,wBAAAA,QAAQ,CAAC,EAAD,CAAR;AACAV,wBAAAA,KAAK,CAAC,MAAKI,KAAL,CAAD,CAAL;AACH;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQb;AATC;AAFV,sBAcI,oBAAC,KAAD;AACI,QAAA,UAAU,EAAEF,UADhB;AAEI,QAAA,KAAK,EAAEE,KAFX;AAGI,QAAA,QAAQ,EAAEM,QAHd;AAII,QAAA,WAAW,EAAE;AAJjB,QAdJ,CADJ;AAuBH,KAxCL,CADH;AAAA,GADL,CADJ;AAgDH","sourcesContent":["import React from \"react\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { trim } from \"lodash\";\nimport { BindComponentRenderPropValidation, Form } from \"@webiny/form\";\nimport { Hotkeys } from \"react-hotkeyz\";\n\ntype AddOptionInputProps = {\n    onAdd: (value: string) => void;\n    options: any;\n    validation: BindComponentRenderPropValidation;\n};\n\nexport default function AddOptionInput({\n    options,\n    onAdd,\n    validation: optionsValidation\n}: AddOptionInputProps) {\n    return (\n        <Form>\n            {({ Bind }) => (\n                <Bind\n                    name={\"newOption\"}\n                    validators={value => {\n                        if (!Array.isArray(options)) {\n                            return true;\n                        }\n\n                        if (options.find(item => item.value === value)) {\n                            throw new Error(`Option with value \"${value}\" already exists.`);\n                        }\n                    }}\n                >\n                    {({ value, onChange, validate, validation: inputValidation }) => {\n                        const validation =\n                            inputValidation && inputValidation.message\n                                ? inputValidation\n                                : optionsValidation;\n                        return (\n                            <Hotkeys\n                                zIndex={110}\n                                keys={{\n                                    async enter() {\n                                        if (value) {\n                                            const result = await validate();\n                                            if (result !== false) {\n                                                onChange(\"\");\n                                                onAdd(trim(value));\n                                            }\n                                        }\n                                    }\n                                }}\n                            >\n                                <Input\n                                    validation={validation}\n                                    value={value}\n                                    onChange={onChange}\n                                    placeholder={\"Enter an option and press enter\"}\n                                />\n                            </Hotkeys>\n                        );\n                    }}\n                </Bind>\n            )}\n        </Form>\n    );\n}\n"],"file":"AddOptionInput.js"}