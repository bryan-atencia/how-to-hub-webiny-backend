{"version":3,"sources":["../../../../src/admin/plugins/validators/pattern.tsx"],"names":["React","Grid","Cell","Input","Select","getPlugins","validation","type","name","validator","label","description","defaultMessage","defaultSettings","preset","renderSettings","Bind","setValue","setMessage","data","inputsDisabled","settings","presetPlugins","selectOptions","map","item","pattern","create","value","selectedPatternPlugin","find","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { validation } from \"@webiny/validation\";\nimport {\n    FbFormFieldPatternValidatorPlugin,\n    FbBuilderFormFieldValidatorPlugin\n} from \"@webiny/app-form-builder/types\";\n\nexport default {\n    type: \"form-editor-field-validator\",\n    name: \"form-editor-field-validator-pattern\",\n    validator: {\n        name: \"pattern\",\n        label: \"Pattern\",\n        description: \"Entered value must match a specific pattern.\",\n        defaultMessage: \"Invalid value.\",\n        defaultSettings: {\n            preset: \"custom\"\n        },\n        renderSettings({ Bind, setValue, setMessage, data }) {\n            const inputsDisabled = data.settings.preset !== \"custom\";\n            const presetPlugins = getPlugins<FbFormFieldPatternValidatorPlugin>(\n                \"form-editor-field-validator-pattern\"\n            );\n\n            // TODO: @ts-adrian neda mi da dolje posaljem\n            const selectOptions: any = presetPlugins.map(item => (\n                <option key={item.pattern.name} value={item.pattern.name}>\n                    {item.pattern.label}\n                </option>\n            ));\n\n            return (\n                <Grid>\n                    <Cell span={3}>\n                        <Bind\n                            name={\"settings.preset\"}\n                            validators={validation.create(\"required\")}\n                            afterChange={value => {\n                                if (value === \"custom\") {\n                                    setMessage(\"Invalid value.\");\n                                    return;\n                                }\n\n                                setValue(\"settings.regex\", null);\n                                setValue(\"settings.flags\", null);\n\n                                const selectedPatternPlugin = presetPlugins.find(\n                                    item => item.pattern.name === value\n                                );\n\n                                setMessage(selectedPatternPlugin.pattern.message);\n                            }}\n                        >\n                            <Select label={\"Preset\"}>\n                                <option value={\"custom\"}>Custom</option>\n                                {selectOptions}\n                            </Select>\n                        </Bind>\n                    </Cell>\n                    <Cell span={7}>\n                        <Bind name={\"settings.regex\"} validators={validation.create(\"required\")}>\n                            <Input\n                                disabled={inputsDisabled}\n                                label={\"Regex\"}\n                                description={\"Regex to test the value\"}\n                            />\n                        </Bind>\n                    </Cell>\n                    <Cell span={2}>\n                        <Bind name={\"settings.flags\"} validators={validation.create(\"required\")}>\n                            <Input\n                                disabled={inputsDisabled}\n                                label={\"Flags\"}\n                                description={\"Regex flags\"}\n                            />\n                        </Bind>\n                    </Cell>\n                </Grid>\n            );\n        }\n    }\n} as FbBuilderFormFieldValidatorPlugin;\n"],"file":"pattern.js"}