import _get from "lodash/get";
import React from "react";
import { Query } from "react-apollo";
import { renderPlugins } from "@webiny/app/plugins";
import { useRouter } from "@webiny/react-router";
import styled from "@emotion/styled";
import { Elevation } from "@webiny/ui/Elevation";
import { GET_FORM } from "@webiny/app-form-builder/admin/viewsGraphql";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { Tabs } from "@webiny/ui/Tabs";
var EmptySelect = /*#__PURE__*/styled("div", {
  target: "e1edn85r0",
  label: "EmptySelect"
})({
  width: "100%",
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  color: "var(--mdc-theme-on-surface)",
  ".select-form": {
    maxWidth: 400,
    padding: "50px 100px",
    textAlign: "center",
    display: "block",
    borderRadius: 2,
    backgroundColor: "var(--mdc-theme-surface)"
  }
});
var DetailsContainer = /*#__PURE__*/styled("div", {
  target: "e1edn85r1",
  label: "DetailsContainer"
})({
  height: "calc(100% - 10px)",
  overflow: "hidden",
  position: "relative",
  nav: {
    backgroundColor: "var(--mdc-theme-surface)"
  }
});

var EmptyFormDetails = function EmptyFormDetails() {
  return /*#__PURE__*/React.createElement(EmptySelect, null, /*#__PURE__*/React.createElement(Elevation, {
    z: 2,
    className: "select-form"
  }, "Select a form on the left side, or click the green button to create a new one."));
};

var FormDetails = function FormDetails(_ref) {
  var refreshForms = _ref.refreshForms;

  var _useRouter = useRouter(),
      location = _useRouter.location,
      history = _useRouter.history;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var query = new URLSearchParams(location.search);
  var formId = query.get("id");

  if (!formId) {
    return /*#__PURE__*/React.createElement(EmptyFormDetails, null);
  }

  return /*#__PURE__*/React.createElement(Query, {
    query: GET_FORM,
    variables: {
      id: formId
    },
    onCompleted: function onCompleted(data) {
      var error = _get(data, "forms.form.error.message");

      if (error) {
        query.delete("id");
        history.push({
          search: query.toString()
        });
        showSnackbar(error);
      }
    }
  }, function (_ref2) {
    var data = _ref2.data,
        loading = _ref2.loading;
    var form = _get(data, "forms.form.data") || null;
    return /*#__PURE__*/React.createElement(DetailsContainer, null, form && /*#__PURE__*/React.createElement(Tabs, null, renderPlugins("forms-form-details-revision-content", {
      refreshForms: refreshForms,
      form: form,
      loading: loading
    }, {
      wrapper: false
    })));
  });
};

export default FormDetails;
//# sourceMappingURL=FormDetails.js.map