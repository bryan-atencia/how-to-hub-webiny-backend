import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Create"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["New form"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { css } from "emotion";
import { useRouter } from "@webiny/react-router";
import { Mutation } from "react-apollo";
import { Form } from "@webiny/form";
import { Input } from "@webiny/ui/Input";
import { CREATE_FORM } from "../../viewsGraphql";
import get from "lodash.get";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { CircularProgress } from "@webiny/ui/Progress";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("Forms.NewFormDialog");
import { Dialog, DialogTitle, DialogContent, DialogActions } from "@webiny/ui/Dialog";
import { ButtonDefault } from "@webiny/ui/Button";
var narrowDialog = /*#__PURE__*/css({
  ".mdc-dialog__surface": {
    width: 400,
    minWidth: 400
  }
}, "label:narrowDialog;");

var NewFormDialog = function NewFormDialog(_ref) {
  var open = _ref.open,
      onClose = _ref.onClose,
      formsDataList = _ref.formsDataList;

  var _React$useState = React.useState(false),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      loading = _React$useState2[0],
      setLoading = _React$useState2[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  return /*#__PURE__*/React.createElement(Dialog, {
    open: open,
    onClose: onClose,
    className: narrowDialog,
    "data-testid": "fb-new-form-modal"
  }, /*#__PURE__*/React.createElement(Mutation, {
    mutation: CREATE_FORM
  }, function (update) {
    return /*#__PURE__*/React.createElement(Form, {
      onSubmit: /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {
          var response;
          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  setLoading(true);
                  _context.t0 = get;
                  _context.next = 4;
                  return update({
                    variables: data,
                    refetchQueries: ["FormsListForms"],
                    awaitRefetchQueries: true
                  });

                case 4:
                  _context.t1 = _context.sent;
                  response = (0, _context.t0)(_context.t1, "data.forms.form");

                  if (!response.error) {
                    _context.next = 9;
                    break;
                  }

                  setLoading(false);
                  return _context.abrupt("return", showSnackbar(response.error.message));

                case 9:
                  _context.next = 11;
                  return formsDataList.refresh();

                case 11:
                  history.push("/forms/" + response.data.id);

                case 12:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function (_x) {
          return _ref2.apply(this, arguments);
        };
      }()
    }, function (_ref3) {
      var Bind = _ref3.Bind,
          submit = _ref3.submit;
      return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject())), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Bind, {
        name: "name"
      }, /*#__PURE__*/React.createElement(Input, {
        placeholder: "Enter a name for your new form"
      }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(ButtonDefault, {
        onClick: submit
      }, "+ ", t(_templateObject2()))));
    });
  }));
};

export default NewFormDialog;
//# sourceMappingURL=NewFormDialog.js.map