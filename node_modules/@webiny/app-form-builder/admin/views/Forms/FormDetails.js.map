{"version":3,"sources":["../../../../src/admin/views/Forms/FormDetails.tsx"],"names":["React","Query","renderPlugins","useRouter","styled","Elevation","GET_FORM","useSnackbar","Tabs","EmptySelect","width","height","display","alignItems","justifyContent","color","maxWidth","padding","textAlign","borderRadius","backgroundColor","DetailsContainer","overflow","position","nav","EmptyFormDetails","FormDetails","refreshForms","location","history","showSnackbar","query","URLSearchParams","search","formId","get","id","data","error","delete","push","toString","loading","form","wrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { renderPlugins } from \"@webiny/app/plugins\";\nimport { useRouter } from \"@webiny/react-router\";\nimport styled from \"@emotion/styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { GET_FORM } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { get } from \"lodash\";\nimport { Tabs } from \"@webiny/ui/Tabs\";\n\nconst EmptySelect = styled(\"div\")({\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"var(--mdc-theme-on-surface)\",\n    \".select-form\": {\n        maxWidth: 400,\n        padding: \"50px 100px\",\n        textAlign: \"center\",\n        display: \"block\",\n        borderRadius: 2,\n        backgroundColor: \"var(--mdc-theme-surface)\"\n    }\n});\n\nconst DetailsContainer = styled(\"div\")({\n    height: \"calc(100% - 10px)\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    nav: {\n        backgroundColor: \"var(--mdc-theme-surface)\"\n    }\n});\n\nconst EmptyFormDetails = () => {\n    return (\n        <EmptySelect>\n            <Elevation z={2} className={\"select-form\"}>\n                Select a form on the left side, or click the green button to create a new one.\n            </Elevation>\n        </EmptySelect>\n    );\n};\n\nexport type FormDetailsProps = {\n    refreshForms: () => void;\n};\n\nconst FormDetails = ({ refreshForms }: FormDetailsProps) => {\n    const { location, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const query = new URLSearchParams(location.search);\n    const formId = query.get(\"id\");\n\n    if (!formId) {\n        return <EmptyFormDetails />;\n    }\n\n    return (\n        <Query\n            query={GET_FORM}\n            variables={{ id: formId }}\n            onCompleted={data => {\n                const error = get(data, \"forms.form.error.message\");\n                if (error) {\n                    query.delete(\"id\");\n                    history.push({ search: query.toString() });\n                    showSnackbar(error);\n                }\n            }}\n        >\n            {({ data, loading }) => {\n                const form = get(data, \"forms.form.data\") || null;\n                return (\n                    <DetailsContainer>\n                        {form && (\n                            <Tabs>\n                                {renderPlugins(\n                                    \"forms-form-details-revision-content\",\n                                    { refreshForms, form, loading },\n                                    { wrapper: false }\n                                )}\n                            </Tabs>\n                        )}\n                    </DetailsContainer>\n                );\n            }}\n        </Query>\n    );\n};\n\nexport default FormDetails;\n"],"file":"FormDetails.js"}