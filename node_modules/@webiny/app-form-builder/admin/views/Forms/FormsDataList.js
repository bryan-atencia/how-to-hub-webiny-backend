import _regeneratorRuntime from "@babel/runtime/regenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _upperFirst from "lodash/upperFirst";
import _get from "lodash/get";

function _templateObject9() {
  var data = _taggedTemplateLiteral(["Last modified: {time}."]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["Created by: {user}."]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Name Z-A"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Name A-Z"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Oldest to newest"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Newest to oldest"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Forms"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Something unexpected happened."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Form {name} deleted."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useRef, useCallback } from "react";
import TimeAgo from "timeago-react";
import { useRouter } from "@webiny/react-router";
import { css } from "emotion";
import { Typography } from "@webiny/ui/Typography";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { DeleteIcon, EditIcon } from "@webiny/ui/List/DataList/icons";
import { DELETE_FORM, CREATE_REVISION_FROM } from "@webiny/app-form-builder/admin/viewsGraphql";
import { useApolloClient } from "react-apollo";
import { useHandler } from "@webiny/app/hooks/useHandler";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { DataList, List, ListItem, ListItemText, ListItemTextSecondary, ListItemMeta, ListActions } from "@webiny/ui/List";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormsApp.FormsDataList");
var rightAlign = /*#__PURE__*/css({
  alignItems: "flex-end !important"
}, "label:rightAlign;");
var listItemMinHeight = /*#__PURE__*/css({
  minHeight: "66px !important"
}, "label:listItemMinHeight;");

var FormsDataList = function FormsDataList(props) {
  var editHandlers = useRef({});
  var dataList = props.dataList;

  var _useRouter = useRouter(),
      location = _useRouter.location,
      history = _useRouter.history;

  var client = useApolloClient();

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var deleteRecord = useHandler(props, function (_ref) {
    var id = _ref.id;
    return /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {
        var res, _get2, data, error, _query;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return client.mutate({
                  mutation: DELETE_FORM,
                  variables: {
                    id: item.id
                  }
                });

              case 2:
                res = _context.sent;
                _get2 = _get(res, "data.forms.deleteForm"), data = _get2.data, error = _get2.error;

                if (data) {
                  showSnackbar(t(_templateObject())({
                    name: item.name
                  }));
                } else {
                  showSnackbar(error.message, {
                    title: t(_templateObject2())
                  });
                }

                if (item.id === id) {
                  _query = new URLSearchParams(location.search);

                  _query.delete("id");

                  history.push({
                    search: _query.toString()
                  });
                }

                dataList.refresh();

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();
  });
  var editRecord = useCallback(function (form) {
    if (!editHandlers.current[form.id]) {
      editHandlers.current[form.id] = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        var _yield$client$mutate, res, _res$forms$revision, data, error;

        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!form.published) {
                  _context2.next = 11;
                  break;
                }

                _context2.next = 3;
                return client.mutate({
                  mutation: CREATE_REVISION_FROM,
                  variables: {
                    revision: form.id
                  },
                  refetchQueries: ["FormsListForms"]
                });

              case 3:
                _yield$client$mutate = _context2.sent;
                res = _yield$client$mutate.data;
                _res$forms$revision = res.forms.revision, data = _res$forms$revision.data, error = _res$forms$revision.error;

                if (!error) {
                  _context2.next = 8;
                  break;
                }

                return _context2.abrupt("return", showSnackbar(error.message));

              case 8:
                history.push("/forms/".concat(data.id));
                _context2.next = 12;
                break;

              case 11:
                history.push("/forms/" + form.id);

              case 12:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
    }

    return editHandlers.current[form.id];
  }, []);
  var query = new URLSearchParams(location.search);
  return /*#__PURE__*/React.createElement(DataList, Object.assign({}, dataList, {
    title: t(_templateObject3()),
    sorters: [{
      label: t(_templateObject4()),
      sorters: {
        createdOn: -1
      }
    }, {
      label: t(_templateObject5()),
      sorters: {
        createdOn: 1
      }
    }, {
      label: t(_templateObject6()),
      sorters: {
        name: 1
      }
    }, {
      label: t(_templateObject7()),
      sorters: {
        name: -1
      }
    }]
  }), function (_ref4) {
    var _ref4$data = _ref4.data,
        data = _ref4$data === void 0 ? [] : _ref4$data;
    return /*#__PURE__*/React.createElement(List, {
      "data-testid": "default-data-list"
    }, data.map(function (form) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: form.id,
        className: listItemMinHeight
      }, /*#__PURE__*/React.createElement(ListItemText, {
        onClick: function onClick() {
          query.set("id", form.id);
          history.push({
            search: query.toString()
          });
        }
      }, form.name, form.createdBy && /*#__PURE__*/React.createElement(ListItemTextSecondary, null, form.createdBy.firstName && /*#__PURE__*/React.createElement(React.Fragment, null, t(_templateObject8())({
        user: form.createdBy.firstName
      }), " "), t(_templateObject9())({
        time: /*#__PURE__*/React.createElement(TimeAgo, {
          datetime: form.savedOn
        })
      }))), /*#__PURE__*/React.createElement(ListItemMeta, {
        className: rightAlign
      }, /*#__PURE__*/React.createElement(Typography, {
        use: "subtitle2"
      }, _upperFirst(form.status), " (v", form.version, ")"), /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(EditIcon, {
        onClick: editRecord(form)
      }), /*#__PURE__*/React.createElement(ConfirmationDialog, null, function (_ref5) {
        var showConfirmation = _ref5.showConfirmation;
        return /*#__PURE__*/React.createElement(DeleteIcon, {
          onClick: function onClick() {
            return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
              return _regeneratorRuntime.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      return _context3.abrupt("return", deleteRecord(form));

                    case 1:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3);
            })));
          }
        });
      }))));
    }));
  });
};

export default FormsDataList;
//# sourceMappingURL=FormsDataList.js.map