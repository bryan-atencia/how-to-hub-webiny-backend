{"version":3,"sources":["../../../../src/admin/views/Forms/FormsDataList.tsx"],"names":["React","useRef","useCallback","TimeAgo","useRouter","css","Typography","ConfirmationDialog","DeleteIcon","EditIcon","DELETE_FORM","CREATE_REVISION_FROM","useApolloClient","useHandler","useSnackbar","DataList","List","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","i18n","t","namespace","rightAlign","alignItems","listItemMinHeight","minHeight","FormsDataList","props","editHandlers","dataList","location","history","client","showSnackbar","deleteRecord","id","item","mutate","mutation","variables","res","data","error","name","message","title","query","URLSearchParams","search","delete","push","toString","refresh","editRecord","form","current","published","revision","refetchQueries","forms","label","sorters","createdOn","map","set","createdBy","firstName","user","time","savedOn","status","version","showConfirmation"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { css } from \"emotion\";\nimport { get, upperFirst } from \"lodash\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { DeleteIcon, EditIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { DELETE_FORM, CREATE_REVISION_FROM } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\n\nimport {\n    DataList,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions\n} from \"@webiny/ui/List\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"FormsApp.FormsDataList\");\n\nconst rightAlign = css({\n    alignItems: \"flex-end !important\"\n});\n\nconst listItemMinHeight = css({\n    minHeight: \"66px !important\"\n});\n\nexport type FormsDataListProps = {\n    dataList: any;\n};\n\nconst FormsDataList = (props: FormsDataListProps) => {\n    const editHandlers = useRef({});\n\n    const { dataList } = props;\n\n    const { location, history } = useRouter();\n    const client = useApolloClient();\n    const { showSnackbar } = useSnackbar();\n\n    const deleteRecord = useHandler(props, ({ id }) => async item => {\n        const res = await client.mutate({ mutation: DELETE_FORM, variables: { id: item.id } });\n        const { data, error } = get(res, \"data.forms.deleteForm\");\n\n        if (data) {\n            showSnackbar(t`Form {name} deleted.`({ name: item.name }));\n        } else {\n            showSnackbar(error.message, {\n                title: t`Something unexpected happened.`\n            });\n        }\n\n        if (item.id === id) {\n            const query = new URLSearchParams(location.search);\n            query.delete(\"id\");\n            history.push({ search: query.toString() });\n        }\n\n        dataList.refresh();\n    });\n\n    const editRecord = useCallback(form => {\n        if (!editHandlers.current[form.id]) {\n            editHandlers.current[form.id] = async () => {\n                if (form.published) {\n                    const { data: res } = await client.mutate({\n                        mutation: CREATE_REVISION_FROM,\n                        variables: { revision: form.id },\n                        refetchQueries: [\"FormsListForms\"]\n                    });\n                    const { data, error } = res.forms.revision;\n\n                    if (error) {\n                        return showSnackbar(error.message);\n                    }\n\n                    history.push(`/forms/${data.id}`);\n                } else {\n                    history.push(\"/forms/\" + form.id);\n                }\n            };\n        }\n\n        return editHandlers.current[form.id];\n    }, []);\n\n    const query = new URLSearchParams(location.search);\n\n    return (\n        <DataList\n            {...dataList}\n            title={t`Forms`}\n            sorters={[\n                {\n                    label: t`Newest to oldest`,\n                    sorters: { createdOn: -1 }\n                },\n                {\n                    label: t`Oldest to newest`,\n                    sorters: { createdOn: 1 }\n                },\n                {\n                    label: t`Name A-Z`,\n                    sorters: { name: 1 }\n                },\n                {\n                    label: t`Name Z-A`,\n                    sorters: { name: -1 }\n                }\n            ]}\n        >\n            {({ data = [] }) => (\n                <List data-testid=\"default-data-list\">\n                    {data.map(form => (\n                        <ListItem key={form.id} className={listItemMinHeight}>\n                            <ListItemText\n                                onClick={() => {\n                                    query.set(\"id\", form.id);\n                                    history.push({ search: query.toString() });\n                                }}\n                            >\n                                {form.name}\n                                {form.createdBy && (\n                                    <ListItemTextSecondary>\n                                        {form.createdBy.firstName && (\n                                            <>\n                                                {t`Created by: {user}.`({\n                                                    user: form.createdBy.firstName\n                                                })}{\" \"}\n                                            </>\n                                        )}\n\n                                        {t`Last modified: {time}.`({\n                                            time: <TimeAgo datetime={form.savedOn} />\n                                        })}\n                                    </ListItemTextSecondary>\n                                )}\n                            </ListItemText>\n                            <ListItemMeta className={rightAlign}>\n                                <Typography use={\"subtitle2\"}>\n                                    {upperFirst(form.status)} (v{form.version})\n                                </Typography>\n                                <ListActions>\n                                    <EditIcon onClick={editRecord(form)} />\n                                    <ConfirmationDialog>\n                                        {({ showConfirmation }) => (\n                                            <DeleteIcon\n                                                onClick={() =>\n                                                    showConfirmation(async () => deleteRecord(form))\n                                                }\n                                            />\n                                        )}\n                                    </ConfirmationDialog>\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </DataList>\n    );\n};\n\nexport default FormsDataList;\n"],"file":"FormsDataList.js"}