{"version":3,"sources":["../../../../src/admin/views/Forms/NewFormDialog.tsx"],"names":["React","css","useRouter","Mutation","Form","Input","CREATE_FORM","get","useSnackbar","CircularProgress","i18n","t","namespace","Dialog","DialogTitle","DialogContent","DialogActions","ButtonDefault","narrowDialog","width","minWidth","NewFormDialog","open","onClose","formsDataList","useState","loading","setLoading","showSnackbar","history","update","data","variables","refetchQueries","awaitRefetchQueries","response","error","message","refresh","push","id","Bind","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { CREATE_FORM } from \"../../viewsGraphql\";\nimport get from \"lodash.get\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"Forms.NewFormDialog\");\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogOnClose\n} from \"@webiny/ui/Dialog\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\n\nconst narrowDialog = css({\n    \".mdc-dialog__surface\": {\n        width: 400,\n        minWidth: 400\n    }\n});\n\nexport type NewFormDialogProps = {\n    open: boolean;\n    onClose: DialogOnClose;\n    formsDataList: any;\n};\n\nconst NewFormDialog: React.FC<NewFormDialogProps> = ({ open, onClose, formsDataList }) => {\n    const [loading, setLoading] = React.useState(false);\n    const { showSnackbar } = useSnackbar();\n    const { history } = useRouter();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            className={narrowDialog}\n            data-testid=\"fb-new-form-modal\"\n        >\n            <Mutation mutation={CREATE_FORM}>\n                {update => (\n                    <Form\n                        onSubmit={async data => {\n                            setLoading(true);\n                            const response = get(\n                                await update({\n                                    variables: data,\n                                    refetchQueries: [\"FormsListForms\"],\n                                    awaitRefetchQueries: true\n                                }),\n                                \"data.forms.form\"\n                            );\n\n                            if (response.error) {\n                                setLoading(false);\n                                return showSnackbar(response.error.message);\n                            }\n\n                            await formsDataList.refresh();\n                            history.push(\"/forms/\" + response.data.id);\n                        }}\n                    >\n                        {({ Bind, submit }) => (\n                            <>\n                                {loading && <CircularProgress />}\n                                <DialogTitle>{t`New form`}</DialogTitle>\n                                <DialogContent>\n                                    <Bind name={\"name\"}>\n                                        <Input placeholder={\"Enter a name for your new form\"} />\n                                    </Bind>\n                                </DialogContent>\n                                <DialogActions>\n                                    <ButtonDefault onClick={submit}>+ {t`Create`}</ButtonDefault>\n                                </DialogActions>\n                            </>\n                        )}\n                    </Form>\n                )}\n            </Mutation>\n        </Dialog>\n    );\n};\n\nexport default NewFormDialog;\n"],"file":"NewFormDialog.js"}