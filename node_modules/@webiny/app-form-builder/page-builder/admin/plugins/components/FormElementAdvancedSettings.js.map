{"version":3,"sources":["../../../../../src/page-builder/admin/plugins/components/FormElementAdvancedSettings.tsx"],"names":["React","Query","Grid","Cell","Alert","AutoComplete","styled","validation","LIST_FORMS","FormOptionsWrapper","minHeight","getOptions","gqlResponse","data","output","parents","options","value","publishedRevisions","selected","parent","revision","parentsList","map","name","id","find","item","version","length","unshift","FormElementAdvancedSettings","Bind","create","onChange","parentSelected","noPublished","description"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { get } from \"lodash\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { AutoComplete } from \"@webiny/ui/AutoComplete\";\nimport styled from \"@emotion/styled\";\nimport { validation } from \"@webiny/validation\";\nimport { LIST_FORMS } from \"./graphql\";\n\nconst FormOptionsWrapper = styled(\"div\")({\n    minHeight: 250\n});\n\nconst getOptions = ({ gqlResponse, data }) => {\n    const output = {\n        parents: {\n            options: [],\n            value: null\n        },\n        publishedRevisions: {\n            options: [],\n            value: null\n        }\n    };\n\n    const selected = {\n        parent: get(data, \"settings.form.parent\"),\n        revision: get(data, \"settings.form.revision\")\n    };\n\n    const parentsList = get(gqlResponse, \"data.forms.listForms.data\") || [];\n\n    output.parents.options = parentsList.map(({ parent, name }) => ({ id: parent, name }));\n    output.parents.value = output.parents.options.find(item => item.id === selected.parent) || null;\n\n    const parent = parentsList.find(item => item.parent === selected.parent);\n    if (parent) {\n        output.publishedRevisions.options = parent.publishedRevisions.map(item => ({\n            id: item.id,\n            name: `${item.name} (version ${item.version})`\n        }));\n        if (output.publishedRevisions.options.length > 0) {\n            output.publishedRevisions.options.unshift({\n                id: \"latest\",\n                name: \"Latest published revision\"\n            });\n        }\n\n        output.publishedRevisions.value =\n            output.publishedRevisions.options.find(item => item.id === selected.revision) || null;\n    }\n\n    return output;\n};\n\nconst FormElementAdvancedSettings = ({ Bind, data }) => {\n    return (\n        <FormOptionsWrapper>\n            <Query query={LIST_FORMS} fetchPolicy=\"network-only\">\n                {gqlResponse => {\n                    const options = getOptions({ gqlResponse, data });\n                    return (\n                        <Grid>\n                            <Cell span={12}>\n                                <Bind\n                                    name={\"settings.form.parent\"}\n                                    validators={validation.create(\"required\")}\n                                >\n                                    {({ onChange }) => (\n                                        <AutoComplete\n                                            options={options.parents.options}\n                                            value={options.parents.value}\n                                            onChange={onChange}\n                                            label={\"Form\"}\n                                        />\n                                    )}\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind\n                                    name={\"settings.form.revision\"}\n                                    validators={validation.create(\"required\")}\n                                >\n                                    {({ onChange }) => {\n                                        const parentSelected = !!options.parents.value;\n                                        const noPublished =\n                                            options.publishedRevisions.options.length === 0;\n\n                                        const description = \"Choose a published revision.\";\n                                        if (parentSelected && noPublished) {\n                                            return (\n                                                <Alert type=\"danger\" title=\"Form not published\">\n                                                    Please publish the form and then you can insert\n                                                    it into your page.\n                                                </Alert>\n                                            );\n                                        } else {\n                                            return (\n                                                <AutoComplete\n                                                    label={\"Revision\"}\n                                                    description={description}\n                                                    disabled={!parentSelected || noPublished}\n                                                    options={options.publishedRevisions.options}\n                                                    value={options.publishedRevisions.value}\n                                                    onChange={onChange}\n                                                />\n                                            );\n                                        }\n                                    }}\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    );\n                }}\n            </Query>\n        </FormOptionsWrapper>\n    );\n};\n\nexport default FormElementAdvancedSettings;\n"],"file":"FormElementAdvancedSettings.js"}