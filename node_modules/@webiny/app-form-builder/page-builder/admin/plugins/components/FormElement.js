import _get from "lodash/get";
import * as React from "react";
import { ElementRoot } from "@webiny/app-page-builder/render/components/ElementRoot";
import { Form as FormsForm } from "@webiny/app-form-builder/components/Form";
import styled from "@emotion/styled";
import { connect } from "react-redux";
import { getActiveElementId } from "@webiny/app-page-builder/editor/selectors";
var Overlay = /*#__PURE__*/styled("div", {
  target: "e10tbqra0",
  label: "Overlay"
})({
  background: "black",
  position: "absolute",
  width: "100%",
  height: "100%",
  zIndex: 10,
  opacity: 0.25
});

var FormElement = function FormElement(props) {
  var element = props.element,
      isActive = props.isActive;
  var render = /*#__PURE__*/React.createElement("span", null, "Form not selected.");
  var form = _get(element, "data.settings.form") || {};

  if (form.revision) {
    var _props = {
      preview: true,
      parentId: undefined,
      revisionId: undefined
    };

    if (form.revision === "latest") {
      _props.parentId = form.parent;
    } else {
      _props.revisionId = form.revision;
    }

    render = /*#__PURE__*/React.createElement(FormsForm, _props);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, isActive && /*#__PURE__*/React.createElement(Overlay, null), /*#__PURE__*/React.createElement(ElementRoot, {
    key: "form-".concat(form.parent, "-").concat(form.revision),
    element: element,
    className: "webiny-pb-element-form"
  }, render));
};

export default connect(function (state, props) {
  return {
    isActive: getActiveElementId(state) === props.element.id
  };
})(FormElement);
//# sourceMappingURL=FormElement.js.map