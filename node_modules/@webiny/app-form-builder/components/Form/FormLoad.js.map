{"version":3,"sources":["../../../src/components/Form/FormLoad.tsx"],"names":["React","GET_PUBLISHED_FORM","Query","FormRender","FormLoad","props","variables","slug","version","parent","id","parentId","revisionId","data","loading","formData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAuC;AACpD,MAAMC,SAAS,GAAG;AACdC,IAAAA,IAAI,EAAE,IADQ;AAEdC,IAAAA,OAAO,EAAE,IAFK;AAGdC,IAAAA,MAAM,EAAE,IAHM;AAIdC,IAAAA,EAAE,EAAE;AAJU,GAAlB;;AAOA,MAAIL,KAAK,CAACE,IAAV,EAAgB;AACZD,IAAAA,SAAS,CAACC,IAAV,GAAiBF,KAAK,CAACE,IAAvB;;AACA,QAAIF,KAAK,CAACG,OAAV,EAAmB;AACfF,MAAAA,SAAS,CAACE,OAAV,GAAoBH,KAAK,CAACG,OAA1B;AACH;AACJ,GALD,MAKO,IAAIH,KAAK,CAACM,QAAV,EAAoB;AACvBL,IAAAA,SAAS,CAACG,MAAV,GAAmBJ,KAAK,CAACM,QAAzB;AACH,GAFM,MAEA;AACHL,IAAAA,SAAS,CAACI,EAAV,GAAeL,KAAK,CAACO,UAArB;AACH;;AAED,sBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEX,kBAAd;AAAkC,IAAA,SAAS,EAAEK;AAA7C,KACK,gBAAuB;AAAA,QAApBO,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;;AACpB,QAAIA,OAAJ,EAAa;AACT;AACA,aAAO,IAAP;AACH;;AAED,QAAMC,QAAQ,GAAG,KAAIF,IAAJ,EAAU,6BAAV,CAAjB;;AACA,QAAI,CAACE,QAAL,EAAe;AACX;AACA,0BAAO,oDAAP;AACH;;AACD,wBAAO,oBAAC,UAAD,oBAAgBV,KAAhB;AAAuB,MAAA,IAAI,EAAEU;AAA7B,OAAP;AACH,GAbL,CADJ;AAiBH,CApCD;;AAsCA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { get } from \"lodash\";\nimport { GET_PUBLISHED_FORM } from \"./graphql\";\nimport { Query } from \"react-apollo\";\nimport FormRender from \"./FormRender\";\nimport { FormLoadComponentPropsType } from \"@webiny/app-form-builder/types\";\n\nconst FormLoad = (props: FormLoadComponentPropsType) => {\n    const variables = {\n        slug: null,\n        version: null,\n        parent: null,\n        id: null\n    };\n\n    if (props.slug) {\n        variables.slug = props.slug;\n        if (props.version) {\n            variables.version = props.version;\n        }\n    } else if (props.parentId) {\n        variables.parent = props.parentId;\n    } else {\n        variables.id = props.revisionId;\n    }\n\n    return (\n        <Query query={GET_PUBLISHED_FORM} variables={variables}>\n            {({ data, loading }) => {\n                if (loading) {\n                    // TODO: handle loading\n                    return null;\n                }\n\n                const formData = get(data, \"forms.getPublishedForm.data\");\n                if (!formData) {\n                    // TODO: handle cannot load form\n                    return <span>Form not found.</span>;\n                }\n                return <FormRender {...props} data={formData} />;\n            }}\n        </Query>\n    );\n};\n\nexport default FormLoad;\n"],"file":"FormLoad.js"}