{"version":3,"sources":["../../../../src/components/Form/components/createReCaptchaComponent.tsx"],"names":["React","ReCAPTCHA","reCaptchaEnabled","createReCaptchaComponent","formData","setResponseToken","ReCaptcha","props","settings","children","errorMessage","reCaptcha","siteKey","response","onChange","onErrored","onExpired"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;AAoBA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,MAC7BC,QAD6B,QAC7BA,QAD6B;AAAA,MAE7BC,gBAF6B,QAE7BA,gBAF6B;AAAA,SAI7B,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AACtC,QAAI,CAACL,gBAAgB,CAACE,QAAD,CAArB,EAAiC;AAC7B,aAAO,IAAP;AACH;;AAHqC,QAK9BI,QAL8B,GAKjBJ,QALiB,CAK9BI,QAL8B;;AAMtC,QAAI,OAAOD,KAAK,CAACE,QAAb,KAA0B,UAA9B,EAA0C;AACtC,aAAOF,KAAK,CAACE,QAAN,CAAe;AAClBC,QAAAA,YAAY,EAAEF,QAAQ,CAACG,SAAT,CAAmBD;AADf,OAAf,CAAP;AAGH;;AAED,QAAIH,KAAK,CAACE,QAAV,EAAoB;AAChB,aAAOF,KAAK,CAACE,QAAb;AACH;;AAED,wBACI,oBAAC,SAAD,oBACQF,KADR;AAEI,MAAA,OAAO,EAAEC,QAAQ,CAACG,SAAT,CAAmBH,QAAnB,CAA4BI,OAFzC;AAGI,MAAA,QAAQ,EAAE,kBAAAC,QAAQ,EAAI;AAClBR,QAAAA,gBAAgB,CAACQ,QAAD,CAAhB;AACA,eAAON,KAAK,CAACO,QAAb,KAA0B,UAA1B,IAAwCP,KAAK,CAACO,QAAN,CAAeD,QAAf,CAAxC;AACH,OANL;AAOI,MAAA,SAAS,EAAE,qBAAa;AACpBR,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA,eAAOE,KAAK,CAACQ,SAAb,KAA2B,UAA3B,IAAyCR,KAAK,CAACQ,SAAN,OAAAR,KAAK,YAA9C;AACH,OAVL;AAWI,MAAA,SAAS,EAAE,qBAAa;AACpBF,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA,eAAOE,KAAK,CAACS,SAAb,KAA2B,UAA3B,IAAyCT,KAAK,CAACS,SAAN,OAAAT,KAAK,YAA9C;AACH;AAdL,OADJ;AAkBH,GAtC4B;AAAA,CAAjC;;AAwCA,eAAeJ,wBAAf","sourcesContent":["import * as React from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { reCaptchaEnabled } from \"./../functions\";\nimport { FbFormModel, FbFormRenderComponentProps } from \"@webiny/app-form-builder/types\";\n\ntype CreateReCaptchaComponentArgs = {\n    props: FbFormRenderComponentProps;\n    formData: FbFormModel;\n    setResponseToken: (value: string) => void;\n};\n\ntype ChildrenFunction = ({ errorMessage: I18NStringValue }) => React.ReactNode;\n\nexport type ReCaptchaProps = {\n    children?: React.ReactNode | ChildrenFunction;\n    onChange?: (value: string) => void;\n    onErrored?: Function;\n    onExpired?: Function;\n};\n\nexport type ReCaptchaComponent = React.FC<ReCaptchaProps>;\n\nconst createReCaptchaComponent = ({\n    formData,\n    setResponseToken\n}: CreateReCaptchaComponentArgs): ReCaptchaComponent =>\n    function ReCaptcha(props: ReCaptchaProps) {\n        if (!reCaptchaEnabled(formData)) {\n            return null;\n        }\n\n        const { settings } = formData;\n        if (typeof props.children === \"function\") {\n            return props.children({\n                errorMessage: settings.reCaptcha.errorMessage\n            });\n        }\n\n        if (props.children) {\n            return props.children;\n        }\n\n        return (\n            <ReCAPTCHA\n                {...props}\n                sitekey={settings.reCaptcha.settings.siteKey}\n                onChange={response => {\n                    setResponseToken(response);\n                    typeof props.onChange === \"function\" && props.onChange(response);\n                }}\n                onErrored={(...args) => {\n                    setResponseToken(\"\");\n                    typeof props.onErrored === \"function\" && props.onErrored(...args);\n                }}\n                onExpired={(...args) => {\n                    setResponseToken(\"\");\n                    typeof props.onExpired === \"function\" && props.onExpired(...args);\n                }}\n            />\n        );\n    };\n\nexport default createReCaptchaComponent;\n"],"file":"createReCaptchaComponent.js"}