import * as React from "react";
import ReCAPTCHA from "react-google-recaptcha";
import { reCaptchaEnabled } from "./../functions";

var createReCaptchaComponent = function createReCaptchaComponent(_ref) {
  var formData = _ref.formData,
      setResponseToken = _ref.setResponseToken;
  return function ReCaptcha(props) {
    if (!reCaptchaEnabled(formData)) {
      return null;
    }

    var settings = formData.settings;

    if (typeof props.children === "function") {
      return props.children({
        errorMessage: settings.reCaptcha.errorMessage
      });
    }

    if (props.children) {
      return props.children;
    }

    return /*#__PURE__*/React.createElement(ReCAPTCHA, Object.assign({}, props, {
      sitekey: settings.reCaptcha.settings.siteKey,
      onChange: function onChange(response) {
        setResponseToken(response);
        typeof props.onChange === "function" && props.onChange(response);
      },
      onErrored: function onErrored() {
        setResponseToken("");
        typeof props.onErrored === "function" && props.onErrored.apply(props, arguments);
      },
      onExpired: function onExpired() {
        setResponseToken("");
        typeof props.onExpired === "function" && props.onExpired.apply(props, arguments);
      }
    }));
  };
};

export default createReCaptchaComponent;
//# sourceMappingURL=createReCaptchaComponent.js.map