{"version":3,"sources":["../../../../src/components/Form/components/createTermsOfServiceComponent.tsx"],"names":["termsOfServiceEnabled","createTermsOfServiceComponent","formData","setTermsOfServiceAccepted","TermsOfService","props","settings","children","errorMessage","termsOfServiceMessage","message","onChange","Error"],"mappings":"AACA,SAASA,qBAAT,QAAsC,gBAAtC;;AAyBA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC;AAAA,MAClCC,QADkC,QAClCA,QADkC;AAAA,MAElCC,yBAFkC,QAElCA,yBAFkC;AAAA,SAIlC;AACA,aAASC,cAAT,CAAwBC,KAAxB,EAAoD;AAChD,UAAI,CAACL,qBAAqB,CAACE,QAAD,CAA1B,EAAsC;AAClC,eAAO,IAAP;AACH;;AAH+C,UAKxCI,QALwC,GAK3BJ,QAL2B,CAKxCI,QALwC;;AAMhD,UAAI,OAAOD,KAAK,CAACE,QAAb,KAA0B,UAA9B,EAA0C;AACtC,eAAOF,KAAK,CAACE,QAAN,CAAe;AAClBC,UAAAA,YAAY,EAAEF,QAAQ,CAACG,qBAAT,CAA+BD,YAD3B;AAElBE,UAAAA,OAAO,EAAEJ,QAAQ,CAACG,qBAAT,CAA+BC,OAFtB;AAGlBC,UAAAA,QAAQ,EAAER;AAHQ,SAAf,CAAP;AAKH;;AAED,YAAM,IAAIS,KAAJ,CAAU,sEAAV,CAAN;AACH;AApBiC;AAAA,CAAtC;;AAsBA,eAAeX,6BAAf","sourcesContent":["import * as React from \"react\";\nimport { termsOfServiceEnabled } from \"./../functions\";\nimport { FbFormModel, FbFormRenderComponentProps } from \"@webiny/app-form-builder/types\";\nimport { I18NStringValue, I18NObjectValue } from \"@webiny/app-i18n/types\";\n\ntype CreateTermsOfServiceComponentArgs = {\n    props: FbFormRenderComponentProps;\n    formData: FbFormModel;\n    setTermsOfServiceAccepted: (value: boolean) => void;\n};\n\ntype ChildrenFunction = (params: {\n    onChange: (value: boolean) => void;\n    errorMessage: I18NStringValue;\n    message: I18NObjectValue;\n}) => React.ReactNode;\n\nexport type TermsOfServiceProps = {\n    children: ChildrenFunction;\n    onChange?: (value: string) => void;\n    onErrored?: Function;\n    onExpired?: Function;\n};\n\nexport type TermsOfServiceComponent = React.FC<TermsOfServiceProps>;\n\nconst createTermsOfServiceComponent = ({\n    formData,\n    setTermsOfServiceAccepted\n}: CreateTermsOfServiceComponentArgs): TermsOfServiceComponent =>\n    // @ts-ignore\n    function TermsOfService(props: TermsOfServiceProps) {\n        if (!termsOfServiceEnabled(formData)) {\n            return null;\n        }\n\n        const { settings } = formData;\n        if (typeof props.children === \"function\") {\n            return props.children({\n                errorMessage: settings.termsOfServiceMessage.errorMessage,\n                message: settings.termsOfServiceMessage.message,\n                onChange: setTermsOfServiceAccepted\n            });\n        }\n\n        throw new Error(\"Please use a function for children prop of TermsOfService component.\");\n    };\n\nexport default createTermsOfServiceComponent;\n"],"file":"createTermsOfServiceComponent.js"}