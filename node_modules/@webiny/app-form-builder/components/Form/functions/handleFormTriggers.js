import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _get from "lodash/get";
import { getPlugins } from "@webiny/plugins";
export default /*#__PURE__*/(function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {
    var data, props, plugins, i, plugin;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!args.props.preview) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return");

          case 2:
            data = args.data, props = args.props;
            plugins = getPlugins("form-trigger-handler");
            i = 0;

          case 5:
            if (!(i < plugins.length)) {
              _context.next = 12;
              break;
            }

            plugin = plugins[i];
            _context.next = 9;
            return plugin.trigger.handle({
              trigger: _get(props.data, "triggers.".concat(plugin.trigger.id)) || {},
              data: data,
              form: props.data
            });

          case 9:
            i++;
            _context.next = 5;
            break;

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})();
//# sourceMappingURL=handleFormTriggers.js.map