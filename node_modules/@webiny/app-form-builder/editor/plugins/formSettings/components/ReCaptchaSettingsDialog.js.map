{"version":3,"sources":["../../../../../src/editor/plugins/formSettings/components/ReCaptchaSettingsDialog.tsx"],"names":["React","Mutation","Form","Input","get","useSnackbar","CircularProgress","Grid","Cell","UPDATE_FORMS_SETTINGS","useFormEditor","validation","i18n","t","namespace","Dialog","DialogTitle","DialogContent","DialogActions","ButtonDefault","ReCaptchaSettingsDialog","open","onClose","reCaptchaSettings","onSubmit","useState","loading","setLoading","setData","showSnackbar","update","siteKey","secretKey","variables","data","reCaptcha","enabled","response","settings","error","message","Bind","submit","create"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,qBAAT,QAAsC,WAAtC;AACA,SAASC,aAAT,QAA8B,8DAA9B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,IAAMC,CAAC,GAAGD,IAAI,CAACE,SAAL,CAAe,+BAAf,CAAV;AAEA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,EAA6CC,aAA7C,QAAkE,mBAAlE;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AASA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAA2D;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,OAAkD,QAAlDA,OAAkD;AAAA,MAAzCC,iBAAyC,QAAzCA,iBAAyC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;;AAAA,wBACzDxB,KAAK,CAACyB,QAAN,CAAe,KAAf,CADyD;AAAA;AAAA,MAChFC,OADgF;AAAA,MACvEC,UADuE;;AAAA,uBAEnEjB,aAAa,EAFsD;AAAA,MAE/EkB,OAF+E,kBAE/EA,OAF+E;;AAAA,qBAG9DvB,WAAW,EAHmD;AAAA,MAG/EwB,YAH+E,gBAG/EA,YAH+E;;AAKvF,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAER,IAAd;AAAoB,IAAA,OAAO,EAAEC;AAA7B,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEb;AAApB,KACK,UAAAqB,MAAM;AAAA,wBACH,oBAAC,IAAD;AACI,MAAA,IAAI,EAAEP,iBADV;AAEI,MAAA,QAAQ;AAAA,6EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAASQ,kBAAAA,OAAT,SAASA,OAAT,EAAkBC,SAAlB,SAAkBA,SAAlB;AACNL,kBAAAA,UAAU,CAAC,IAAD,CAAV;AADM,gCAEWvB,GAFX;AAAA;AAAA,yBAGI0B,MAAM,CAAC;AACTG,oBAAAA,SAAS,EAAE;AACPC,sBAAAA,IAAI,EAAE;AAAEC,wBAAAA,SAAS,EAAE;AAAEC,0BAAAA,OAAO,EAAE,IAAX;AAAiBL,0BAAAA,OAAO,EAAPA,OAAjB;AAA0BC,0BAAAA,SAAS,EAATA;AAA1B;AAAb;AADC;AADF,mBAAD,CAHV;;AAAA;AAAA;AAEAK,kBAAAA,QAFA,iCAQF,2BARE;AAUNT,kBAAAA,OAAO,CAAC,UAAAM,IAAI,EAAI;AACZA,oBAAAA,IAAI,CAACI,QAAL,CAAcH,SAAd,CAAwBG,QAAxB,GAAmC;AAC/BF,sBAAAA,OAAO,EAAE,IADsB;AAE/BL,sBAAAA,OAAO,EAAPA,OAF+B;AAG/BC,sBAAAA,SAAS,EAATA;AAH+B,qBAAnC;AAKA,2BAAOE,IAAP;AACH,mBAPM,CAAP;AAQAP,kBAAAA,UAAU,CAAC,KAAD,CAAV;;AAlBM,uBAoBFU,QAAQ,CAACE,KApBP;AAAA;AAAA;AAAA;;AAAA,mDAqBKV,YAAY,CAACQ,QAAQ,CAACE,KAAT,CAAeC,OAAhB,CArBjB;;AAAA;AAwBNhB,kBAAAA,QAAQ;;AAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA;AAFZ,OA6BK,iBAAsB;AAAA,UAAnBiB,IAAmB,SAAnBA,IAAmB;AAAA,UAAbC,MAAa,SAAbA,MAAa;AACnB,0BACI,0CACKhB,OAAO,iBAAI,oBAAC,gBAAD,OADhB,eAEI,oBAAC,WAAD,QAAcb,CAAd,oBAFJ,eAGI,oBAAC,aAAD,qBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ,sBACI,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,SADV;AAEI,QAAA,UAAU,EAAEF,UAAU,CAACgC,MAAX,CAAkB,UAAlB;AAFhB,sBAII,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,UADX;AAEI,QAAA,WAAW,eACP,oEAC2B,GAD3B,eAEI;AACI,UAAA,IAAI,EAAC,wCADT;AAEI,UAAA,MAAM,EAAE,QAFZ;AAGI,UAAA,GAAG,EAAC;AAHR,oCAFJ;AAHR,QAJJ,CADJ,CADJ,eAuBI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ,sBACI,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,WADV;AAEI,QAAA,UAAU,EAAEhC,UAAU,CAACgC,MAAX,CAAkB,UAAlB;AAFhB,sBAII,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,YADX;AAEI,QAAA,WAAW,eACP,sEAC6B,GAD7B,eAEI;AACI,UAAA,IAAI,EAAC,wCADT;AAEI,UAAA,MAAM,EAAE,QAFZ;AAGI,UAAA,GAAG,EAAC;AAHR,oCAFJ;AAHR,QAJJ,CADJ,CAvBJ,CADJ,CAHJ,eAmDI,oBAAC,aAAD,qBACI,oBAAC,aAAD;AACI,QAAA,OAAO,EAAED;AADb,SAEE7B,CAFF,qBADJ,CAnDJ,CADJ;AA2DH,KAzFL,CADG;AAAA,GADX,CADJ,CADJ;AAmGH,CAxGD;;AA0GA,eAAeO,uBAAf","sourcesContent":["import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport get from \"lodash.get\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { UPDATE_FORMS_SETTINGS } from \"./graphql\";\nimport { useFormEditor } from \"@webiny/app-form-builder/admin/components/FormEditor/Context\";\nimport { validation } from \"@webiny/validation\";\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"Forms.ReCaptchaSettingsDialog\");\n\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@webiny/ui/Dialog\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\n\ntype Props = {\n    open: boolean;\n    onClose: () => void;\n    onSubmit: () => void;\n    reCaptchaSettings: any;\n};\n\nconst ReCaptchaSettingsDialog = ({ open, onClose, reCaptchaSettings, onSubmit }: Props) => {\n    const [loading, setLoading] = React.useState(false);\n    const { setData } = useFormEditor();\n    const { showSnackbar } = useSnackbar();\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <Mutation mutation={UPDATE_FORMS_SETTINGS}>\n                {update => (\n                    <Form\n                        data={reCaptchaSettings}\n                        onSubmit={async ({ siteKey, secretKey }) => {\n                            setLoading(true);\n                            const response = get(\n                                await update({\n                                    variables: {\n                                        data: { reCaptcha: { enabled: true, siteKey, secretKey } }\n                                    }\n                                }),\n                                \"data.forms.updateSettings\"\n                            );\n                            setData(data => {\n                                data.settings.reCaptcha.settings = {\n                                    enabled: true,\n                                    siteKey,\n                                    secretKey\n                                };\n                                return data;\n                            });\n                            setLoading(false);\n\n                            if (response.error) {\n                                return showSnackbar(response.error.message);\n                            }\n\n                            onSubmit();\n                        }}\n                    >\n                        {({ Bind, submit }) => {\n                            return (\n                                <>\n                                    {loading && <CircularProgress />}\n                                    <DialogTitle>{t`Edit Google reCAPTCHA settings`}</DialogTitle>\n                                    <DialogContent>\n                                        <Grid>\n                                            <Cell span={12}>\n                                                <Bind\n                                                    name={\"siteKey\"}\n                                                    validators={validation.create(\"required\")}\n                                                >\n                                                    <Input\n                                                        label={\"Site key\"}\n                                                        description={\n                                                            <>\n                                                                A v2 Tickbox site key.{\" \"}\n                                                                <a\n                                                                    href=\"https://www.google.com/recaptcha/admin\"\n                                                                    target={\"_blank\"}\n                                                                    rel=\"noopener noreferrer\"\n                                                                >\n                                                                    Don&apos;t have a site key?\n                                                                </a>\n                                                            </>\n                                                        }\n                                                    />\n                                                </Bind>\n                                            </Cell>\n                                            <Cell span={12}>\n                                                <Bind\n                                                    name={\"secretKey\"}\n                                                    validators={validation.create(\"required\")}\n                                                >\n                                                    <Input\n                                                        label={\"Secret key\"}\n                                                        description={\n                                                            <>\n                                                                A v2 Tickbox secret key.{\" \"}\n                                                                <a\n                                                                    href=\"https://www.google.com/recaptcha/admin\"\n                                                                    target={\"_blank\"}\n                                                                    rel=\"noopener noreferrer\"\n                                                                >\n                                                                    Don&apos;t have a site key?\n                                                                </a>\n                                                            </>\n                                                        }\n                                                    />\n                                                </Bind>\n                                            </Cell>\n                                        </Grid>\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <ButtonDefault\n                                            onClick={submit}\n                                        >{t`Enable Google reCAPTCHA`}</ButtonDefault>\n                                    </DialogActions>\n                                </>\n                            );\n                        }}\n                    </Form>\n                )}\n            </Mutation>\n        </Dialog>\n    );\n};\n\nexport default ReCaptchaSettingsDialog;\n"],"file":"ReCaptchaSettingsDialog.js"}