{"version":3,"sources":["../../../../../src/editor/plugins/formSettings/components/GeneralSettings.tsx"],"names":["React","useMemo","Grid","Cell","Select","I18NInput","getPlugins","GeneralSettings","Bind","theme","Object","assign","map","pl","layouts","layout","reduce","acc","item","find","l","name","push","value","label","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAClC,MAAMC,KAAK,GAAGR,OAAO,CACjB;AAAA,WAAMS,MAAM,CAACC,MAAP,OAAAD,MAAM,GAAQ,EAAR,4BAAeJ,UAAU,CAAC,UAAD,CAAV,CAAuBM,GAAvB,CAA2B,UAACC,EAAD;AAAA,aAAuBA,EAAE,CAACJ,KAA1B;AAAA,KAA3B,CAAf,GAAZ;AAAA,GADiB,EAEjB,EAFiB,CAArB;AAKA,MAAMK,OAAO,GAAGb,OAAO,CACnB;AAAA,WACI,6BACQ,KAAIQ,KAAJ,EAAW,eAAX,KAA+B,EADvC,sBAEOH,UAAU,CAAqB,aAArB,CAAV,CAA8CM,GAA9C,CAAkD,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACE,MAAP;AAAA,KAApD,CAFP,GAGEC,MAHF,CAGS,UAACC,GAAD,EAAMC,IAAN,EAAe;AACpB,UAAI,CAACD,GAAG,CAACE,IAAJ,CAAS,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,KAAWH,IAAI,CAACG,IAApB;AAAA,OAAV,CAAL,EAA0C;AACtCJ,QAAAA,GAAG,CAACK,IAAJ,CAASJ,IAAT;AACH;;AACD,aAAOD,GAAP;AACH,KARD,EAQG,EARH,CADJ;AAAA,GADmB,EAWnB,EAXmB,CAAvB;AAcA,sBACI,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,MAAnB;AAAoB,IAAA,KAAK,EAAE;AAA3B,IADJ,CADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAlB,IADJ,CADJ,CANJ,eAWI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE,QADX;AAEI,IAAA,OAAO,EAAEH,OAAO,CAACF,GAAR,CAAY,UAAAM,IAAI,EAAI;AACzB,aAAO;AAAEK,QAAAA,KAAK,EAAEL,IAAI,CAACG,IAAd;AAAoBG,QAAAA,KAAK,EAAEN,IAAI,CAACO;AAAhC,OAAP;AACH,KAFQ;AAFb,IADJ,CADJ,CAXJ,CADJ,CADJ;AA0BH,CA9CD;;AAgDA,eAAelB,eAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { get } from \"lodash\";\nimport { I18NInput } from \"@webiny/app-i18n/admin/components\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { FbFormLayoutPlugin } from \"@webiny/app-form-builder/types\";\nimport { PbThemePlugin } from \"@webiny/app-page-builder/types\";\n\nconst GeneralSettings = ({ Bind }) => {\n    const theme = useMemo(\n        () => Object.assign({}, ...getPlugins(\"pb-theme\").map((pl: PbThemePlugin) => pl.theme)),\n        []\n    );\n\n    const layouts = useMemo(\n        () =>\n            [\n                ...(get(theme, \"forms.layouts\") || []),\n                ...getPlugins<FbFormLayoutPlugin>(\"form-layout\").map(pl => pl.layout)\n            ].reduce((acc, item) => {\n                if (!acc.find(l => l.name === item.name)) {\n                    acc.push(item);\n                }\n                return acc;\n            }, []),\n        []\n    );\n\n    return (\n        <React.Fragment>\n            <Grid>\n                <Cell span={12}>\n                    <Bind name={\"successMessage\"}>\n                        <I18NInput richText label={\"Success message\"} />\n                    </Bind>\n                </Cell>\n                <Cell span={12}>\n                    <Bind name={\"submitButtonLabel\"}>\n                        <I18NInput label={\"Submit button label\"} />\n                    </Bind>\n                </Cell>\n                <Cell span={12}>\n                    <Bind name={\"layout.renderer\"}>\n                        <Select\n                            label={\"Layout\"}\n                            options={layouts.map(item => {\n                                return { value: item.name, label: item.title };\n                            })}\n                        />\n                    </Bind>\n                </Cell>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default GeneralSettings;\n"],"file":"GeneralSettings.js"}