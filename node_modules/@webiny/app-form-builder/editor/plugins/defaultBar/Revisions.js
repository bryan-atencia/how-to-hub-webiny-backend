import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject() {
  var data = _taggedTemplateLiteral(["Revisions"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { css } from "emotion";
import { useRouter } from "@webiny/react-router";
import { Menu, MenuItem } from "@webiny/ui/Menu";
import { ButtonDefault } from "@webiny/ui/Button";
import { Icon } from "@webiny/ui/Icon";
import { Typography } from "@webiny/ui/Typography";
import { ReactComponent as DownButton } from "@svgr/webpack!./icons/round-arrow_drop_down-24px.svg";
import { useFormEditor } from "@webiny/app-form-builder/admin/components/FormEditor/Context";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormEditor.RevisionsMenu");
var buttonStyle = /*#__PURE__*/css({
  "&.mdc-button": {
    color: "var(--mdc-theme-text-primary-on-background) !important"
  }
}, "label:buttonStyle;");
var menuList = /*#__PURE__*/css({
  ".mdc-list-item": {
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "baseline",
    textAlign: "left"
  }
}, "label:menuList;");

var Revisions = function Revisions() {
  var _useFormEditor = useFormEditor(),
      data = _useFormEditor.state.data;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var revisions = data.revisions || [];
  return /*#__PURE__*/React.createElement(Menu, {
    className: menuList,
    onSelect: function onSelect(evt) {
      history.push("/forms/".concat(revisions[evt.detail.index].id));
    },
    handle: /*#__PURE__*/React.createElement(ButtonDefault, {
      className: buttonStyle
    }, t(_templateObject()), " ", /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(DownButton, null)
    }))
  }, revisions.map(function (rev) {
    return /*#__PURE__*/React.createElement(MenuItem, {
      key: rev.id,
      disabled: rev.status !== "draft"
    }, /*#__PURE__*/React.createElement(Typography, {
      use: "body2"
    }, "v", rev.version), /*#__PURE__*/React.createElement(Typography, {
      use: "caption"
    }, "(", rev.status, ")"));
  }));
};

export default /*#__PURE__*/React.memo(Revisions);
//# sourceMappingURL=Revisions.js.map