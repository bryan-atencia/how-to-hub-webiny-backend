import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Publish"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Publish changes"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Your form was published successfully!"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["You are about to publish this form, are you sure want to continue?"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Publish form"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { Mutation } from "react-apollo";
import { useRouter } from "@webiny/react-router";
import { ButtonPrimary } from "@webiny/ui/Button";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useFormEditor } from "@webiny/app-form-builder/admin/components/FormEditor/Context";
import { publishRevision } from "./PublishFormButton/graphql";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormEditor.PublishPageButton");

var PublishFormButton = function PublishFormButton() {
  var _useFormEditor = useFormEditor(),
      data = _useFormEditor.state.data;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  return /*#__PURE__*/React.createElement(ConfirmationDialog, {
    title: t(_templateObject()),
    message: t(_templateObject2())
  }, function (_ref) {
    var showConfirmation = _ref.showConfirmation;
    return /*#__PURE__*/React.createElement(Mutation, {
      mutation: publishRevision,
      refetchQueries: ["FormsListForms"]
    }, function (update) {
      return /*#__PURE__*/React.createElement(ButtonPrimary, {
        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
          return _regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
                    var response, error;
                    return _regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.next = 2;
                            return update({
                              variables: {
                                id: data.id
                              }
                            });

                          case 2:
                            response = _context.sent;
                            error = response.data.forms.publishRevision.error;

                            if (!error) {
                              _context.next = 6;
                              break;
                            }

                            return _context.abrupt("return", showSnackbar(error.message));

                          case 6:
                            history.push("/forms?id=".concat(data.id)); // Let's wait a bit, because we are also redirecting the user.

                            setTimeout(function () {
                              showSnackbar(t(_templateObject3()));
                            }, 500);

                          case 8:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee);
                  })));

                case 1:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }))
      }, data.version > 1 ? t(_templateObject4()) : t(_templateObject5()));
    });
  });
};

export default PublishFormButton;
//# sourceMappingURL=PublishFormButton.js.map