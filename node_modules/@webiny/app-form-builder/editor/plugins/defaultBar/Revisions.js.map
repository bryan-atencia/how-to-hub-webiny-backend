{"version":3,"sources":["../../../../src/editor/plugins/defaultBar/Revisions.tsx"],"names":["React","css","useRouter","Menu","MenuItem","ButtonDefault","Icon","Typography","useFormEditor","i18n","t","namespace","buttonStyle","color","menuList","flexDirection","justifyContent","alignItems","textAlign","Revisions","data","state","history","revisions","evt","push","detail","index","id","map","rev","status","version","memo"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,SAASC,aAAT,QAA8B,8DAA9B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,IAAMC,CAAC,GAAGD,IAAI,CAACE,SAAL,CAAe,0BAAf,CAAV;AAEA,IAAMC,WAAW,gBAAGX,GAAG,CAAC;AACpB,kBAAgB;AACZY,IAAAA,KAAK,EAAE;AADK;AADI,CAAD,uBAAvB;AAMA,IAAMC,QAAQ,gBAAGb,GAAG,CAAC;AACjB,oBAAkB;AACdc,IAAAA,aAAa,EAAE,QADD;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,UAHE;AAIdC,IAAAA,SAAS,EAAE;AAJG;AADD,CAAD,oBAApB;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,uBAGhBX,aAAa,EAHG;AAAA,MAEPY,IAFO,kBAEhBC,KAFgB,CAEPD,IAFO;;AAAA,mBAKAlB,SAAS,EALT;AAAA,MAKZoB,OALY,cAKZA,OALY;;AAOpB,MAAMC,SAAS,GAAGH,IAAI,CAACG,SAAL,IAAkB,EAApC;AACA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAET,QADf;AAEI,IAAA,QAAQ,EAAE,kBAAAU,GAAG,EAAI;AACbF,MAAAA,OAAO,CAACG,IAAR,kBAAuBF,SAAS,CAACC,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAAT,CAA4BC,EAAnD;AACH,KAJL;AAKI,IAAA,MAAM,eACF,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEhB;AAA1B,OACKF,CADL,uCACmB,oBAAC,IAAD;AAAM,MAAA,IAAI,eAAE,oBAAC,UAAD;AAAZ,MADnB;AANR,KAWKa,SAAS,CAACM,GAAV,CAAc,UAAAC,GAAG;AAAA,wBACd,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACF,EAAnB;AAAuB,MAAA,QAAQ,EAAEE,GAAG,CAACC,MAAJ,KAAe;AAAhD,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA4BD,GAAG,CAACE,OAAhC,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA8BF,GAAG,CAACC,MAAlC,MAFJ,CADc;AAAA,GAAjB,CAXL,CADJ;AAoBH,CA5BD;;AA8BA,4BAAe/B,KAAK,CAACiC,IAAN,CAAWd,SAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ReactComponent as DownButton } from \"./icons/round-arrow_drop_down-24px.svg\";\nimport { useFormEditor } from \"@webiny/app-form-builder/admin/components/FormEditor/Context\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"FormEditor.RevisionsMenu\");\n\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuList = css({\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\"\n    }\n});\n\nconst Revisions = () => {\n    const {\n        state: { data }\n    } = useFormEditor();\n\n    const { history } = useRouter();\n\n    const revisions = data.revisions || [];\n    return (\n        <Menu\n            className={menuList}\n            onSelect={evt => {\n                history.push(`/forms/${revisions[evt.detail.index].id}`);\n            }}\n            handle={\n                <ButtonDefault className={buttonStyle}>\n                    {t`Revisions`} <Icon icon={<DownButton />} />\n                </ButtonDefault>\n            }\n        >\n            {revisions.map(rev => (\n                <MenuItem key={rev.id} disabled={rev.status !== \"draft\"}>\n                    <Typography use={\"body2\"}>v{rev.version}</Typography>\n                    <Typography use={\"caption\"}>({rev.status})</Typography>\n                </MenuItem>\n            ))}\n        </Menu>\n    );\n};\n\nexport default React.memo(Revisions);\n"],"file":"Revisions.js"}