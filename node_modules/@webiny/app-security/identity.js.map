{"version":3,"sources":["../src/identity.ts"],"names":["Identity","data","scope","getScopes","includes","scopes","options","__hasResources","type","resources","hasResourceMethod","Array","isArray","isLoggedIn","hasFullAccess","i","length","result","forceBoolean","key","resourcesToCheck","resourceToCheck","identity","getIdentity","setIdentity"],"mappings":"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","sourcesContent":["import { get, upperFirst } from \"lodash\";\n\nexport type ResourcesType = Array<string> | { [key: string]: Array<string> };\nexport type OptionsType = {\n    forceBoolean?: boolean;\n};\n\nclass Identity {\n    data = null;\n    constructor(data?: { [key: string]: any }) {\n        this.data = data;\n    }\n\n    isLoggedIn(): boolean {\n        return !!this.data;\n    }\n\n    hasFullAccess(): boolean {\n        return !!get(this.data, \"access.fullAccess\");\n    }\n\n    getScopes(): Array<string> {\n        return get(this.data, \"access.scopes\") || [];\n    }\n\n    hasScope(scope: string) {\n        return this.getScopes().includes(scope);\n    }\n\n    hasScopes(scopes: ResourcesType, options: OptionsType) {\n        return this.__hasResources({\n            type: \"scope\",\n            resources: scopes,\n            options\n        });\n    }\n\n    __hasResources({\n        type,\n        resources,\n        options = {}\n    }: {\n        type: string;\n        resources: ResourcesType;\n        options: OptionsType;\n    }): any {\n        // \"hasScope\" or \"hasRole\".\n        const hasResourceMethod = `has${upperFirst(type)}`;\n\n        if (Array.isArray(resources)) {\n            if (!this.isLoggedIn()) {\n                return false;\n            }\n\n            if (this.hasFullAccess()) {\n                return true;\n            }\n\n            for (let i = 0; i < resources.length; i++) {\n                if (!this[hasResourceMethod](resources[i])) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        const result = {};\n        if (!this.isLoggedIn()) {\n            if (options.forceBoolean) {\n                return false;\n            }\n\n            for (const key in resources) {\n                result[key] = false;\n            }\n            return result;\n        }\n\n        if (this.hasFullAccess()) {\n            if (options.forceBoolean) {\n                return true;\n            }\n\n            for (const key in resources) {\n                result[key] = true;\n            }\n            return result;\n        }\n\n        for (const key in resources) {\n            result[key] = true;\n            const resourcesToCheck: Array<string> = resources[key];\n            for (let i = 0; i < resourcesToCheck.length; i++) {\n                const resourceToCheck = resourcesToCheck[i];\n                if (!this[hasResourceMethod](resourceToCheck)) {\n                    if (options.forceBoolean) {\n                        return false;\n                    }\n                    result[key] = false;\n                    break;\n                }\n            }\n        }\n\n        if (options.forceBoolean) {\n            return true;\n        }\n        return result;\n    }\n}\n\nlet identity = new Identity();\n\nexport const getIdentity = () => {\n    return identity;\n};\n\nexport const setIdentity = data => {\n    identity = new Identity(data);\n};\n"],"file":"identity.js"}