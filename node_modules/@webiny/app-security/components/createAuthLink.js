import _get from "lodash/get";
import { ApolloLink, Observable } from "apollo-link";
import localStorage from "store";
export default (function () {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
    token: "webiny-token"
  },
      token = _ref.token;

  return new ApolloLink(function (operation, forward) {
    var tokenValue = localStorage.get(token);

    if (tokenValue) {
      operation.setContext({
        headers: {
          Authorization: tokenValue
        }
      });
    }

    var observable = forward(operation);
    var unsetTokenCodes = ["TOKEN_EXPIRED", "TOKEN_INVALID"];
    return new Observable(function (observer) {
      var subscription = observable.subscribe({
        next: function next(data) {
          if (data.errors) {
            data.errors.forEach(function (error) {
              var code = _get(error, "extensions.exception.code", error.code);

              if (unsetTokenCodes.includes(code)) {
                localStorage.remove(token);
              }
            });
          }

          return observer.next.bind(observer)(data);
        },
        error: observer.error.bind(observer),
        complete: observer.complete.bind(observer)
      });
      return function () {
        subscription.unsubscribe();
      };
    });
  });
});
//# sourceMappingURL=createAuthLink.js.map