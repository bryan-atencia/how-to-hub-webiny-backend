{"version":3,"sources":["../../../../src/admin/views/Users/graphql.ts"],"names":["gql","fields","LIST_USERS","READ_USER","CREATE_USER","UPDATE_USER","DELETE_USER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,MAAM;AAAG;AAAH,+XAAZ;AA2BA,OAAO,IAAMC,UAAU,GAAGF,GAAH,mBAAhB;AA4CP,OAAO,IAAMG,SAAS,GAAGH,GAAH,qBAICC,MAJD,CAAf;AAcP,OAAO,IAAMG,WAAW,GAAGJ,GAAH,qBAIDC,MAJC,CAAjB;AAeP,OAAO,IAAMI,WAAW,GAAGL,GAAH,qBAIDC,MAJC,CAAjB;AAeP,OAAO,IAAMK,WAAW,GAAGN,GAAH,oBAAjB","sourcesContent":["import gql from \"graphql-tag\";\n\nconst fields = /* GraphQL */ `\n    {\n        id\n        email\n        firstName\n        lastName\n        fullName\n        avatar {\n            id\n            src\n        }\n        groups {\n            id\n            name\n        }\n        roles {\n            id\n            name\n        }\n        personalAccessTokens {\n            id\n            name\n            token\n        }\n    }\n`;\n\nexport const LIST_USERS = gql`\n    query listUsers(\n        $where: JSON\n        $sort: JSON\n        $limit: Int\n        $after: String\n        $before: String\n        $search: SecurityUserSearchInput\n    ) {\n        security {\n            users: listUsers(\n                where: $where\n                sort: $sort\n                limit: $limit\n                after: $after\n                before: $before\n                search: $search\n            ) {\n                data {\n                    id\n                    email\n                    firstName\n                    lastName\n                    fullName\n                    avatar {\n                        id\n                        src\n                    }\n                    createdOn\n                }\n                meta {\n                    cursors {\n                        next\n                        previous\n                    }\n                    hasNextPage\n                    hasPreviousPage\n                    totalCount\n                }\n            }\n        }\n    }\n`;\n\nexport const READ_USER = gql`\n    query getUser($id: ID!) {\n        security {\n            user: getUser(id: $id){\n                data ${fields}\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nexport const CREATE_USER = gql`\n    mutation createUser($data: SecurityUserInput!){\n        security {\n            user: createUser(data: $data) {\n                data ${fields}\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n`;\n\nexport const UPDATE_USER = gql`\n    mutation updateUser($id: ID!, $data: SecurityUserInput!){\n        security {\n            user: updateUser(id: $id, data: $data) {\n                data ${fields}\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n`;\n\nexport const DELETE_USER = gql`\n    mutation deleteUser($id: ID!) {\n        security {\n            deleteUser(id: $id) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n"],"file":"graphql.js"}