{"version":3,"sources":["../../../../src/admin/views/Users/UsersForm.tsx"],"names":["React","useState","getPlugin","i18n","Form","Input","CircularProgress","ButtonPrimary","GroupsAutocomplete","RolesAutocomplete","AvatarImage","useCrud","validation","SimpleForm","SimpleFormHeader","SimpleFormFooter","SimpleFormContent","AccountTokens","t","ns","UsersForm","formIsLoading","setFormIsLoading","crudForm","form","auth","Error","data","Bind","setValue","marginBottom","marginTop","loading","fullName","createElement","view","fields","firstName","create","lastName","email","groups","roles","personalAccessTokens","submit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { getPlugin } from \"@webiny/plugins\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport GroupsAutocomplete from \"./../Components/GroupsAutocomplete\";\nimport RolesAutocomplete from \"./../Components/RolesAutocomplete\";\nimport AvatarImage from \"./../Components/AvatarImage\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\nimport { validation } from \"@webiny/validation\";\nimport { SecurityViewUserFormPlugin } from \"@webiny/app-security/types\";\nimport {\n    SimpleForm,\n    SimpleFormHeader,\n    SimpleFormFooter,\n    SimpleFormContent\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport AccountTokens from \"@webiny/app-security/admin/views/AccountTokens\";\n\nconst t = i18n.ns(\"app-security/admin/users/form\");\n\nconst UsersForm = () => {\n    const [formIsLoading, setFormIsLoading] = useState(false);\n    const { form: crudForm } = useCrud();\n\n    const auth = getPlugin<SecurityViewUserFormPlugin>(\"security-view-user-form\");\n\n    if (!auth) {\n        throw Error(`You must register a \"security-view-user-form\" plugin to render User form!`);\n    }\n\n    return (\n        <Form {...crudForm}>\n            {({ data, form, Bind, setValue }) => (\n                <>\n                    <div style={{ marginBottom: \"32px\", marginTop: \"24px\" }}>\n                        <Bind name=\"avatar\">\n                            <AvatarImage round />\n                        </Bind>\n                    </div>\n                    <SimpleForm>\n                        {(formIsLoading || crudForm.loading) && <CircularProgress />}\n                        <SimpleFormHeader title={data.fullName || t`New User`} />\n                        <SimpleFormContent>\n                            {React.createElement(auth.view, {\n                                Bind,\n                                data,\n                                fields: {\n                                    firstName: (\n                                        <Bind\n                                            name=\"firstName\"\n                                            validators={validation.create(\"required\")}\n                                        >\n                                            <Input label={t`First Name`} />\n                                        </Bind>\n                                    ),\n                                    lastName: (\n                                        <Bind\n                                            name=\"lastName\"\n                                            validators={validation.create(\"required\")}\n                                        >\n                                            <Input label={t`Last name`} />\n                                        </Bind>\n                                    ),\n                                    email: (\n                                        <Bind\n                                            name=\"email\"\n                                            validators={validation.create(\"required,email\")}\n                                        >\n                                            <Input label={t`E-mail`} />\n                                        </Bind>\n                                    ),\n                                    groups: (\n                                        <Bind name=\"groups\">\n                                            <GroupsAutocomplete label={t`Groups`} />\n                                        </Bind>\n                                    ),\n                                    roles: (\n                                        <Bind name=\"roles\">\n                                            <RolesAutocomplete label={t`Roles`} />\n                                        </Bind>\n                                    ),\n                                    personalAccessTokens: (\n                                        <Bind name=\"personalAccessTokens\">\n                                            <AccountTokens\n                                                data={data}\n                                                setValue={setValue}\n                                                setFormIsLoading={setFormIsLoading}\n                                            />\n                                        </Bind>\n                                    )\n                                }\n                            })}\n                        </SimpleFormContent>\n                        <SimpleFormFooter>\n                            <ButtonPrimary onClick={form.submit}>{t`Save user`}</ButtonPrimary>\n                        </SimpleFormFooter>\n                    </SimpleForm>\n                </>\n            )}\n        </Form>\n    );\n};\n\nexport default UsersForm;\n"],"file":"UsersForm.js"}