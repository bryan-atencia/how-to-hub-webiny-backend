{"version":3,"sources":["../../../src/admin/views/AccountTokens.tsx"],"names":["useApolloClient","ButtonDefault","CopyButton","Form","React","useState","Typography","styled","Input","Dialog","DialogCancel","DialogAccept","DialogTitle","DialogContent","DialogActions","DialogButton","Alert","useSnackbar","i18n","t","ns","TokenList","CREATE_PAT","validation","Header","display","justifyContent","marginBottom","PatContainer","paddingLeft","paddingRight","background","TokensElement","setFormIsLoading","data","setValue","showCreatePATDialog","setShowCreatePATDialog","showPATHashDialog","setShowPATHashDialog","tokenHash","setTokenHash","showSnackbar","client","generateToken","formData","mutate","mutation","variables","name","createTokenName","userId","id","queryResponse","error","security","createPAT","message","action","token","personalAccessToken","pat","personalAccessTokens","newPATs","Bind","form","create","submit","alignItems","lineHeight"],"mappings":"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","sourcesContent":["import { useApolloClient } from \"react-apollo\";\nimport { ButtonDefault, CopyButton } from \"@webiny/ui/Button\";\nimport { Form } from \"@webiny/form\";\nimport React, { useState } from \"react\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport styled from \"@emotion/styled\";\nimport { Input } from \"@webiny/ui/Input\";\nimport {\n    Dialog,\n    DialogCancel,\n    DialogAccept,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogButton\n} from \"@webiny/ui/Dialog\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.ns(\"app-security/admin/roles/data-list\");\nimport TokenList from \"./PersonalAccessTokens/TokenList\";\n\nimport { CREATE_PAT } from \"./AccountGraphql\";\nimport { validation } from \"@webiny/validation\";\n\nconst Header = styled(\"div\")({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 15\n});\n\nconst PatContainer = styled(\"div\")({\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    background: \"var(--mdc-theme-on-background)\"\n});\n\nconst TokensElement = ({ setFormIsLoading, data, setValue }) => {\n    const [showCreatePATDialog, setShowCreatePATDialog] = useState(false);\n    const [showPATHashDialog, setShowPATHashDialog] = useState(false);\n    const [tokenHash, setTokenHash] = useState();\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    const generateToken = async formData => {\n        setShowCreatePATDialog(false);\n        setFormIsLoading(true);\n        const queryResponse = await client.mutate({\n            mutation: CREATE_PAT,\n            variables: {\n                name: formData.createTokenName,\n                userId: data.id\n            }\n        });\n        setFormIsLoading(false);\n\n        const { error } = queryResponse.data.security.createPAT;\n        if (error) {\n            return showSnackbar(error.message, {\n                action: t`Close`\n            });\n        }\n\n        const { token, pat: personalAccessToken } = queryResponse.data.security.createPAT.data;\n        let newPATs;\n        if (!data.personalAccessTokens) {\n            newPATs = [personalAccessToken];\n        } else {\n            newPATs = [personalAccessToken, ...data.personalAccessTokens];\n        }\n\n        setValue(\"personalAccessTokens\", newPATs);\n        setTokenHash(token);\n        setShowPATHashDialog(true);\n        showSnackbar(t`Token created successfully!`);\n    };\n\n    return (\n        <>\n            <Form onSubmit={generateToken} submitOnEnter={true}>\n                {({ Bind, form }) => (\n                    <Dialog\n                        open={showCreatePATDialog}\n                        onClose={() => setShowCreatePATDialog(false)}\n                        data-testid=\"account-tokens-dialog\"\n                    >\n                        <DialogTitle>{t`Create new Personal Access Token`}</DialogTitle>\n                        <DialogContent>\n                            <Bind\n                                name={\"createTokenName\"}\n                                validators={validation.create(\"required,maxLength:100\")}\n                            >\n                                <Input label={t`Token name`} />\n                            </Bind>\n                        </DialogContent>\n                        <DialogActions>\n                            <DialogCancel>{t`Cancel`}</DialogCancel>\n                            <DialogButton\n                                data-testid={`accept-generate-token`}\n                                onClick={form.submit}\n                            >\n                                {t`OK`}\n                            </DialogButton>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </Form>\n\n            <Dialog\n                open={showPATHashDialog}\n                onClose={() => setShowPATHashDialog(false)}\n                data-testid=\"created-token-dialog\"\n            >\n                <DialogTitle>{t`Your Personal Access Token`}</DialogTitle>\n                <DialogContent>\n                    <Alert title={t`Please copy the token`} type=\"info\">\n                        {t`Make sure to copy your new personal access token now. You won't be able to see it again!`}\n                    </Alert>\n                    <div>\n                        <div\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\"\n                            }}\n                        >\n                            <PatContainer>\n                                <Typography use=\"overline\">{tokenHash}</Typography>\n                            </PatContainer>\n                            <CopyButton value={tokenHash} />\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <DialogAccept>{t`Close`}</DialogAccept>\n                </DialogActions>\n            </Dialog>\n\n            <Header>\n                <Typography style={{ lineHeight: \"2.4rem\" }} use={\"overline\"}>\n                    {t`Tokens`}\n                </Typography>\n                <ButtonDefault onClick={() => setShowCreatePATDialog(true)}>\n                    {t`Create Token`}\n                </ButtonDefault>\n            </Header>\n            <div data-testid={\"pat-tokens-list\"}>\n                <TokenList setFormIsLoading={setFormIsLoading} data={data} setValue={setValue} />\n            </div>\n        </>\n    );\n};\n\nexport default TokensElement;\n"],"file":"AccountTokens.js"}