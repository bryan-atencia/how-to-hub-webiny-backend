import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _pick from "lodash/pick";
import * as React from "react";
import { SplitView, LeftPanel, RightPanel } from "@webiny/app-admin/components/SplitView";
import { FloatingActionButton } from "@webiny/app-admin/components/FloatingActionButton";
import GroupsDataList from "./GroupsDataList";
import GroupsForm from "./GroupsForm";
import { READ_GROUP, LIST_GROUPS, CREATE_GROUP, UPDATE_GROUP, DELETE_GROUP } from "./graphql";
import { CrudProvider } from "@webiny/app-admin/contexts/Crud";

var Groups = function Groups(_ref) {
  var scopes = _ref.scopes,
      formProps = _ref.formProps,
      listProps = _ref.listProps;

  var variables = function variables(data) {
    return {
      data: _objectSpread(_objectSpread({}, _pick(data, ["name", "slug", "description"])), {}, {
        roles: (data.roles || []).map(function (x) {
          return x.id;
        })
      })
    };
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CrudProvider, {
    delete: DELETE_GROUP,
    read: READ_GROUP,
    list: {
      query: LIST_GROUPS,
      variables: {
        sort: {
          savedOn: -1
        }
      }
    },
    update: {
      mutation: UPDATE_GROUP,
      variables: variables
    },
    create: {
      mutation: CREATE_GROUP,
      variables: variables
    }
  }, function (_ref2) {
    var actions = _ref2.actions;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, null, /*#__PURE__*/React.createElement(GroupsDataList, listProps)), /*#__PURE__*/React.createElement(RightPanel, null, /*#__PURE__*/React.createElement(GroupsForm, Object.assign({
      scopes: scopes
    }, formProps)))), /*#__PURE__*/React.createElement(FloatingActionButton, {
      "data-testid": "new-record-button",
      onClick: actions.resetForm
    }));
  }));
};

export default Groups;
//# sourceMappingURL=Groups.js.map