{"version":3,"sources":["../../../../src/admin/views/Groups/GroupsDataList.tsx"],"names":["React","i18n","ConfirmationDialog","DataList","ScrollList","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","DeleteIcon","useCrud","t","ns","GroupsDataList","actions","list","label","sorters","savedOn","name","data","select","isSelected","map","item","id","description","showConfirmation","delete"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SACIC,QADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,YAJJ,EAKIC,qBALJ,EAMIC,YANJ,EAOIC,WAPJ,QAQO,iBARP;AAUA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,OAAT,QAAwB,iCAAxB;AAEA,IAAMC,CAAC,GAAGX,IAAI,CAACY,EAAL,CAAQ,qCAAR,CAAV;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,iBACCH,OAAO,EADR;AAAA,MACjBI,OADiB,YACjBA,OADiB;AAAA,MACRC,IADQ,YACRA,IADQ;;AAEzB,sBACI,oBAAC,QAAD,oBACQA,IADR;AAEI,IAAA,KAAK,EAAEJ,CAAF,mBAFT;AAGI,IAAA,OAAO,EAAE,CACL;AACIK,MAAAA,KAAK,EAAEL,CAAF,oBADT;AAEIM,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAC;AAAZ;AAFb,KADK,EAKL;AACIF,MAAAA,KAAK,EAAEL,CAAF,oBADT;AAEIM,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFb,KALK,EASL;AACIF,MAAAA,KAAK,EAAEL,CAAF,oBADT;AAEIM,MAAAA,OAAO,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR;AAFb,KATK,EAaL;AACIH,MAAAA,KAAK,EAAEL,CAAF,oBADT;AAEIM,MAAAA,OAAO,EAAE;AAAEE,QAAAA,IAAI,EAAE,CAAC;AAAT;AAFb,KAbK;AAHb,MAsBK;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,MAAT,QAASA,MAAT;AAAA,QAAiBC,UAAjB,QAAiBA,UAAjB;AAAA,wBACG,oBAAC,UAAD;AAAY,qBAAY;AAAxB,OACKF,IAAI,CAACG,GAAL,CAAS,UAAAC,IAAI;AAAA,0BACV,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,QAAA,QAAQ,EAAEH,UAAU,CAACE,IAAD;AAA5C,sBACI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA,iBAAMH,MAAM,CAACG,IAAD,CAAZ;AAAA;AAAvB,SACKA,IAAI,CAACL,IADV,eAEI,oBAAC,qBAAD,QAAwBK,IAAI,CAACE,WAA7B,CAFJ,CADJ,eAMI,oBAAC,YAAD,qBACI,oBAAC,WAAD,qBACI,oBAAC,kBAAD,QACK;AAAA,YAAGC,gBAAH,SAAGA,gBAAH;AAAA,4BACG,oBAAC,UAAD;AACI,UAAA,OAAO,EAAE;AAAA,mBACLA,gBAAgB,CAAC;AAAA,qBAAMb,OAAO,CAACc,MAAR,CAAeJ,IAAf,CAAN;AAAA,aAAD,CADX;AAAA;AADb,UADH;AAAA,OADL,CADJ,CADJ,CANJ,CADU;AAAA,KAAb,CADL,CADH;AAAA,GAtBL,CADJ;AAmDH,CArDD;;AAuDA,eAAeX,cAAf","sourcesContent":["import React from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport {\n    DataList,\n    ScrollList,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions\n} from \"@webiny/ui/List\";\n\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\n\nconst t = i18n.ns(\"app-security/admin/groups/data-list\");\n\nconst GroupsDataList = () => {\n    const { actions, list } = useCrud();\n    return (\n        <DataList\n            {...list}\n            title={t`Security Groups`}\n            sorters={[\n                {\n                    label: t`Newest to oldest`,\n                    sorters: { savedOn: -1 }\n                },\n                {\n                    label: t`Oldest to newest`,\n                    sorters: { savedOn: 1 }\n                },\n                {\n                    label: t`Name A-Z`,\n                    sorters: { name: 1 }\n                },\n                {\n                    label: t`Name Z-A`,\n                    sorters: { name: -1 }\n                }\n            ]}\n        >\n            {({ data, select, isSelected }) => (\n                <ScrollList data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.id} selected={isSelected(item)}>\n                            <ListItemText onClick={() => select(item)}>\n                                {item.name}\n                                <ListItemTextSecondary>{item.description}</ListItemTextSecondary>\n                            </ListItemText>\n\n                            <ListItemMeta>\n                                <ListActions>\n                                    <ConfirmationDialog>\n                                        {({ showConfirmation }) => (\n                                            <DeleteIcon\n                                                onClick={() =>\n                                                    showConfirmation(() => actions.delete(item))\n                                                }\n                                            />\n                                        )}\n                                    </ConfirmationDialog>\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </ScrollList>\n            )}\n        </DataList>\n    );\n};\n\nexport default GroupsDataList;\n"],"file":"GroupsDataList.js"}