{"version":3,"sources":["../../../../src/admin/views/Groups/graphql.ts"],"names":["gql","fields","LIST_GROUPS","READ_GROUP","CREATE_GROUP","UPDATE_GROUP","DELETE_GROUP"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,IAAMC,MAAM,2EAAZ;AAQA,OAAO,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AAsCP,OAAO,IAAMG,UAAU,GAAGH,GAAH,qBAKDC,MALC,CAAhB;AAgBP,OAAO,IAAMG,YAAY,GAAGJ,GAAH,qBAKHC,MALG,CAAlB;AAiBP,OAAO,IAAMI,YAAY,GAAGL,GAAH,qBAKHC,MALG,CAAlB;AAiBP,OAAO,IAAMK,YAAY,GAAGN,GAAH,oBAAlB","sourcesContent":["import gql from \"graphql-tag\";\n\nconst fields = `\n    id\n    name\n    slug\n    description\n    roles { id name }\n`;\n\nexport const LIST_GROUPS = gql`\n    query listGroups(\n        $where: JSON\n        $sort: JSON\n        $search: SecurityGroupSearchInput\n        $limit: Int\n        $after: String\n        $before: String\n    ) {\n        security {\n            groups: listGroups(\n                where: $where\n                sort: $sort\n                search: $search\n                limit: $limit\n                after: $after\n                before: $before\n            ) {\n                data {\n                    id\n                    name\n                    description\n                    createdOn\n                }\n                meta {\n                    cursors {\n                        next\n                        previous\n                    }\n                    hasNextPage\n                    hasPreviousPage\n                    totalCount\n                }\n            }\n        }\n    }\n`;\n\nexport const READ_GROUP = gql`\n    query getGroup($id: ID!) {\n        security {\n            group: getGroup(id: $id){\n                data {\n                    ${fields}\n                }\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nexport const CREATE_GROUP = gql`\n    mutation createGroup($data: SecurityGroupInput!){\n        security {\n            group: createGroup(data: $data) {\n                data {\n                    ${fields}\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n`;\n\nexport const UPDATE_GROUP = gql`\n    mutation updateGroup($id: ID!, $data: SecurityGroupInput!){\n        security {\n            group: updateGroup(id: $id, data: $data) {\n                data {\n                    ${fields}\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n`;\n\nexport const DELETE_GROUP = gql`\n    mutation deleteGroup($id: ID!) {\n        security {\n            deleteGroup(id: $id) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n"],"file":"graphql.js"}