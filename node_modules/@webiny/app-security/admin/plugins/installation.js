import _regeneratorRuntime from "@babel/runtime/regenerator";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject5() {
  var data = _taggedTemplateLiteral(["E-mail"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Last Name"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["First Name"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    mutation InstallSecurity($data: SecurityInstallInput!) {\n        security {\n            install(data: $data) {\n                data {\n                    user\n                    authUser\n                }\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    {\n        security {\n            isInstalled {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import gql from "graphql-tag";
import React, { useState, useCallback } from "react";
import { useApolloClient } from "react-apollo";
import { Form } from "@webiny/form";
import { i18n } from "@webiny/app/i18n";
import { ButtonPrimary } from "@webiny/ui/Button";
import { Input } from "@webiny/ui/Input";
import { Checkbox } from "@webiny/ui/Checkbox";
import { Alert } from "@webiny/ui/Alert";
import { Typography } from "@webiny/ui/Typography";
import { Grid, Cell } from "@webiny/ui/Grid";
import { CircularProgress } from "@webiny/ui/Progress";
import { validation } from "@webiny/validation";
import { getPlugin } from "@webiny/plugins";
import { SimpleForm, SimpleFormHeader, SimpleFormFooter, SimpleFormContent } from "@webiny/app-admin/components/SimpleForm";
var t = i18n.ns("app-security/admin/installation");
var IS_INSTALLED = gql(_templateObject());
var INSTALL = gql(_templateObject2());

var Install = function Install(_ref) {
  var onInstalled = _ref.onInstalled;
  var auth = getPlugin("security-view-install-form");

  if (!auth) {
    throw Error("You must register a \"security-view-install-form\" plugin to render installation form!");
  }

  var client = useApolloClient();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      authUserMessage = _useState4[0],
      setAuthUserMessage = _useState4[1];

  var _useState5 = useState(null),
      _useState6 = _slicedToArray(_useState5, 2),
      error = _useState6[0],
      setError = _useState6[1];

  var onSubmit = useCallback( /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {
      var subscribed, form, _yield$client$mutate, res, _res$security$install, error, data;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              subscribed = _ref2.subscribed, form = _objectWithoutProperties(_ref2, ["subscribed"]);
              setLoading(true);
              setError(null);

              if (!(typeof auth.onSubmit === "function")) {
                _context.next = 14;
                break;
              }

              _context.prev = 4;
              _context.next = 7;
              return auth.onSubmit({
                data: form
              });

            case 7:
              _context.next = 14;
              break;

            case 9:
              _context.prev = 9;
              _context.t0 = _context["catch"](4);
              setLoading(false);
              setError(_context.t0);
              return _context.abrupt("return");

            case 14:
              _context.next = 16;
              return client.mutate({
                mutation: INSTALL,
                variables: {
                  data: form
                }
              });

            case 16:
              _yield$client$mutate = _context.sent;
              res = _yield$client$mutate.data;
              setLoading(false);
              _res$security$install = res.security.install, error = _res$security$install.error, data = _res$security$install.data;

              if (!error) {
                _context.next = 23;
                break;
              }

              setError(error);
              return _context.abrupt("return");

            case 23:
              if (data.authUser) {
                _context.next = 26;
                break;
              }

              setAuthUserMessage(true);
              return _context.abrupt("return");

            case 26:
              if (!subscribed) {
                _context.next = 35;
                break;
              }

              _context.prev = 27;
              _context.next = 30;
              return fetch("https://app.mailerlite.com/webforms/submit/g9f1i1?fields%5Bemail%5D=" + encodeURIComponent(form.email) + "&ml-submit=1&ajax=1", {
                method: "GET",
                headers: {
                  "Content-Type": "application/x-www-form-urlencoded"
                }
              });

            case 30:
              _context.next = 35;
              break;

            case 32:
              _context.prev = 32;
              _context.t1 = _context["catch"](27);
              setError("Unable to subscribe you to the newsletter " + _context.t1);

            case 35:
              onInstalled();

            case 36:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[4, 9], [27, 32]]);
    }));

    return function (_x) {
      return _ref3.apply(this, arguments);
    };
  }(), []);
  var privacyPolicyLink = /*#__PURE__*/React.createElement("a", {
    href: "https://www.webiny.com/privacy-policy"
  }, "privacy policy");
  return /*#__PURE__*/React.createElement(Form, {
    onSubmit: onSubmit,
    submitOnEnter: true
  }, function (_ref4) {
    var data = _ref4.data,
        Bind = _ref4.Bind,
        submit = _ref4.submit;
    return /*#__PURE__*/React.createElement(SimpleForm, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Install Security"
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, authUserMessage && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Alert, {
      type: "success",
      title: "Success"
    }, "Admin user created successfully!")), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Typography, {
      use: "body1"
    }, "However, there already is a user with the same email address on your authentication provider. For security reasons, the password you provided was not applied.")), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Typography, {
      use: "body1"
    }, "If you are the owner of that account, simply use your credentials to login, when prompted."))), !authUserMessage && /*#__PURE__*/React.createElement(auth.view, {
      Bind: Bind,
      data: data,
      error: error,
      fields: {
        firstName: /*#__PURE__*/React.createElement(Bind, {
          name: "firstName",
          validators: validation.create("required")
        }, /*#__PURE__*/React.createElement(Input, {
          label: t(_templateObject3())
        })),
        lastName: /*#__PURE__*/React.createElement(Bind, {
          name: "lastName",
          validators: validation.create("required")
        }, /*#__PURE__*/React.createElement(Input, {
          label: t(_templateObject4())
        })),
        email: /*#__PURE__*/React.createElement(Bind, {
          name: "email",
          validators: validation.create("required,email")
        }, /*#__PURE__*/React.createElement(Input, {
          label: t(_templateObject5())
        }))
      }
    }), !authUserMessage && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "subscribed"
    }, /*#__PURE__*/React.createElement(Checkbox, {
      label: /*#__PURE__*/React.createElement("span", null, "I want to receive updates on product improvements and new features. Doing so I accept Webiny's ", privacyPolicyLink, ".")
    }))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, !authUserMessage && /*#__PURE__*/React.createElement(ButtonPrimary, {
      "data-testid": "install-security-button",
      onClick: submit
    }, "Install security"), authUserMessage && /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: onInstalled
    }, "OK, finish installation!")));
  });
};

export default [{
  name: "installation-security",
  type: "admin-installation",
  secure: false,
  title: "Security app",
  isInstalled: function isInstalled(_ref5) {
    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
      var client, _yield$client$query, data;

      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              client = _ref5.client;
              _context2.next = 3;
              return client.query({
                query: IS_INSTALLED
              });

            case 3:
              _yield$client$query = _context2.sent;
              data = _yield$client$query.data;
              return _context2.abrupt("return", data.security.isInstalled.data);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }))();
  },
  render: function render(_ref6) {
    var onInstalled = _ref6.onInstalled;
    return /*#__PURE__*/React.createElement(Install, {
      onInstalled: onInstalled
    });
  }
}];
//# sourceMappingURL=installation.js.map