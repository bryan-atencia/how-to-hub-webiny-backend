import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Roles"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Groups"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Roles and Groups"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Users"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Identities"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Security"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { i18n } from "@webiny/app/i18n";
import { SecureView } from "@webiny/app-security/components";
import { ReactComponent as SecurityIcon } from "@svgr/webpack!./../assets/icons/baseline-security-24px.svg";
var t = i18n.ns("app-security/admin/menus"); // TODO: Update to  more fine grained scopes

var ROLE_SECURITY_GROUPS = ["security:group:crud"];
var ROLE_SECURITY_ROLES = ["security:role:crud"];
var ROLE_SECURITY_USERS = ["security:user:crud"];
export default [{
  name: "menu-security",
  type: "admin-menu",
  render: function render(_ref) {
    var Menu = _ref.Menu,
        Section = _ref.Section,
        Item = _ref.Item;
    return /*#__PURE__*/React.createElement(SecureView, {
      scopes: {
        groups: ROLE_SECURITY_GROUPS,
        roles: ROLE_SECURITY_ROLES,
        users: ROLE_SECURITY_USERS
      }
    }, function (_ref2) {
      var identityRoles = _ref2.scopes;
      var groups = identityRoles.groups,
          roles = identityRoles.roles,
          users = identityRoles.users;

      if (!groups && !roles && !users) {
        return null;
      }

      return /*#__PURE__*/React.createElement(Menu, {
        name: "security",
        label: t(_templateObject()),
        icon: /*#__PURE__*/React.createElement(SecurityIcon, null)
      }, users && /*#__PURE__*/React.createElement(Section, {
        label: t(_templateObject2())
      }, users && /*#__PURE__*/React.createElement(Item, {
        label: t(_templateObject3()),
        path: "/users"
      })), (groups || roles) && /*#__PURE__*/React.createElement(Section, {
        label: t(_templateObject4())
      }, groups && /*#__PURE__*/React.createElement(Item, {
        label: t(_templateObject5()),
        path: "/groups"
      }), roles && /*#__PURE__*/React.createElement(Item, {
        label: t(_templateObject6()),
        path: "/roles"
      })));
    });
  }
}];
//# sourceMappingURL=menus.js.map