{"version":3,"sources":["../src/index.tsx"],"names":["React","processTextPart","part","values","modifiers","parts","split","variable","modifier","value","parameters","name","shift","execute","canExecute","data","key","isValidElement","translation","map","index","i18n"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAmBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAeC,MAAf,EAA4BC,SAA5B,EAA+C;AACnE,MAAI,CAAC,YAAaF,IAAb,EAAmB,GAAnB,CAAL,EAA8B;AAC1B,WAAOA,IAAP;AACH;;AAEDA,EAAAA,IAAI,GAAG,MAAOA,IAAP,EAAa,IAAb,CAAP;AAEA,MAAMG,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAW,GAAX,CAAd;;AAPmE,8BAStCD,KATsC;AAAA,MAS5DE,QAT4D;AAAA,MASlDC,QATkD;;AAWnE,MAAI,CAAC,KAAML,MAAN,EAAcI,QAAd,CAAL,EAA8B;AAC1B,WAAOA,QAAP;AACH;;AAED,MAAIE,KAAK,GAAGN,MAAM,CAACI,QAAD,CAAlB;;AACA,MAAIC,QAAJ,EAAc;AACV,QAAME,UAAU,GAAGF,QAAQ,CAACF,KAAT,CAAe,GAAf,CAAnB;AACA,QAAMK,IAAI,GAAGD,UAAU,CAACE,KAAX,EAAb;;AACA,QAAIR,SAAS,CAACO,IAAD,CAAb,EAAqB;AACjB,UAAMH,SAAQ,GAAGJ,SAAS,CAACO,IAAD,CAA1B;AACAF,MAAAA,KAAK,GAAGD,SAAQ,CAACK,OAAT,CAAiBJ,KAAjB,EAAwBC,UAAxB,CAAR;AACH;AACJ;;AAED,SAAOD,KAAP;AACH,CA1BD;;AA4BA,eAAe;AACXE,EAAAA,IAAI,EAAE,OADK;AAEXG,EAAAA,UAFW,sBAEAC,IAFA,EAEM;AACb,SAAK,IAAMC,GAAX,IAAkBD,IAAI,CAACZ,MAAvB,EAA+B;AAC3B,UAAMM,KAAK,GAAGM,IAAI,CAACZ,MAAL,CAAYa,GAAZ,CAAd;;AACA,wBAAIhB,KAAK,CAACiB,cAAN,CAAqBR,KAArB,CAAJ,EAAiC;AAC7B,eAAO,IAAP;AACH;AACJ;;AAED,WAAO,KAAP;AACH,GAXU;AAYXI,EAAAA,OAZW,mBAYHE,IAZG,EAYG;AACV,QAAMV,KAAK,GAAGU,IAAI,CAACG,WAAL,CAAiBZ,KAAjB,CAAuB,SAAvB,CAAd,CADU,CAEV;;AACA,wBACI,uCACKD,KAAK,CAACc,GAAN,CAAU,UAACjB,IAAD,EAAOkB,KAAP;AAAA,0BACP;AAAgB,QAAA,GAAG,EAAEA;AAArB,SACKnB,eAAe,CAACC,IAAD,EAAOa,IAAI,CAACZ,MAAZ,EAAoBY,IAAI,CAACM,IAAL,CAAUjB,SAA9B,CADpB,CADO;AAAA,KAAV,CADL,CADJ;AASH;AAxBU,CAAf","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport { Processor } from \"@webiny/i18n/types\";\n\ndeclare global {\n    // eslint-disable-next-line\n    namespace JSX {\n        interface IntrinsicElements {\n            \"i18n-text\": {\n                children?: React.ReactNode;\n            };\n\n            \"i18n-text-part\": {\n                key?: any;\n                children?: React.ReactNode;\n            };\n        }\n    }\n}\n\nconst processTextPart = (part: string, values: any, modifiers): any => {\n    if (!_.startsWith(part, \"{\")) {\n        return part;\n    }\n\n    part = _.trim(part, \"{}\");\n\n    const parts = part.split(\"|\");\n\n    const [variable, modifier] = parts;\n\n    if (!_.has(values, variable)) {\n        return variable;\n    }\n\n    let value = values[variable];\n    if (modifier) {\n        const parameters = modifier.split(\":\");\n        const name = parameters.shift();\n        if (modifiers[name]) {\n            const modifier = modifiers[name];\n            value = modifier.execute(value, parameters);\n        }\n    }\n\n    return value;\n};\n\nexport default {\n    name: \"react\",\n    canExecute(data) {\n        for (const key in data.values) {\n            const value = data.values[key];\n            if (React.isValidElement(value)) {\n                return true;\n            }\n        }\n\n        return false;\n    },\n    execute(data) {\n        const parts = data.translation.split(/({.*?})/);\n        // @ts-ignore\n        return (\n            <i18n-text>\n                {parts.map((part, index) => (\n                    <i18n-text-part key={index}>\n                        {processTextPart(part, data.values, data.i18n.modifiers)}\n                    </i18n-text-part>\n                ))}\n            </i18n-text>\n        );\n    }\n} as Processor;\n"],"file":"index.js"}