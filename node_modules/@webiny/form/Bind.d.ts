import * as React from "react";
import { Form } from "./Form";
export declare type BindComponentRenderPropValidation = {
    isValid: boolean;
    message: string;
    results?: {
        [key: string]: any;
    };
};
export declare type BindComponentRenderPropOnChange = (value: any) => Promise<void>;
export declare type BindComponentRenderProp = {
    form: Object;
    onChange: BindComponentRenderPropOnChange;
    value: any;
    validate: () => Promise<boolean | any>;
    validation: BindComponentRenderPropValidation;
};
export declare type BindComponentProps = {
    name: string;
    beforeChange?: Function;
    afterChange?: Function;
    defaultValue?: any;
    validators?: Function | Array<Function>;
    children: ((props: BindComponentRenderProp) => React.ReactElement) | React.ReactElement;
    validate?: Function;
};
export declare type BindComponent = (props: BindComponentProps) => React.ReactElement;
declare const createBind: (form: Form) => BindComponent;
export { createBind };
