{"version":3,"sources":["../src/linkState.ts"],"names":["linkState","component","key","value","inlineCallback","Promise","resolve","setState","state"],"mappings":";;AAGA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAiBC,GAAjB,EAAiC;AACtD,SAAO,UAACC,KAAD,EAA+D;AAAA,QAAlDC,cAAkD;AAClE,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC1BL,MAAAA,SAAS,CAACM,QAAV,CACI,UAAAC,KAAK;AAAA,eAAI,KAAIN,GAAJ,EAASC,KAAT,EAAgBK,KAAhB,CAAJ;AAAA,OADT,EAEI,YAAM;AACF,YAAI,OAAOJ,cAAP,KAA0B,UAA9B,EAA0C;AACtCA,UAAAA,cAAc,CAACD,KAAD,CAAd;AACH;;AACDG,QAAAA,OAAO,CAACH,KAAD,CAAP;AACH,OAPL;AASH,KAVM,CAAP;AAWH,GAZD;AAaH,CAdM","sourcesContent":["import { noop } from \"lodash\";\nimport { set } from \"lodash/fp\";\n\nexport const linkState = (component: any, key: string) => {\n    return (value: any, inlineCallback: Function = noop): Promise<any> => {\n        return new Promise(resolve => {\n            component.setState(\n                state => set(key, value, state),\n                () => {\n                    if (typeof inlineCallback === \"function\") {\n                        inlineCallback(value);\n                    }\n                    resolve(value);\n                }\n            );\n        });\n    };\n};\n"],"file":"linkState.js"}