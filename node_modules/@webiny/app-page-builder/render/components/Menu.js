import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _get from "lodash/get";

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    query GetMenuBySlug($slug: String!) {\n        pageBuilder {\n            menus: getMenuBySlug(slug: $slug) {\n                data {\n                    slug\n                    title\n                    items\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import * as React from "react";
import { Query } from "react-apollo";
import gql from "graphql-tag";
import invariant from "invariant";
export var getMenuBySlug = gql(_templateObject());

var Menu = function Menu(_ref) {
  var slug = _ref.slug,
      Component = _ref.component;
  invariant(Component, "You must provide a valid Menu component name (via \"component\" prop).");
  return /*#__PURE__*/React.createElement(Query, {
    query: getMenuBySlug,
    variables: {
      slug: slug
    }
  }, function (props) {
    var data = _get(props, "data.pageBuilder.menus.data", {
      items: [],
      title: null,
      slug: null
    });

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("ssr-cache", {
      "data-class": "pb-menu",
      "data-id": slug
    }), /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {
      data: data
    })));
  });
};

export default Menu;
//# sourceMappingURL=Menu.js.map