import React, { CSSProperties, ReactElement } from "react";
import { PbRenderElementStylePlugin, PbRenderElementAttributesPlugin, PbElement } from "@webiny/app-page-builder/types";
export declare type ElementRootChildrenFunction = (params: {
    getAllClasses(...classes: string[]): string;
    combineClassNames(...classes: string[]): string;
    elementStyle: CSSProperties;
    elementAttributes: {
        [key: string]: string;
    };
    customClasses: string[];
}) => ReactElement;
export declare type ElementRootProps = {
    element: PbElement;
    style?: CSSProperties;
    className?: string;
    children?: ReactElement | ReactElement[] | ElementRootChildrenFunction;
};
declare class ElementRoot extends React.Component<ElementRootProps> {
    stylePlugins: Array<PbRenderElementStylePlugin>;
    attributePlugins: Array<PbRenderElementAttributesPlugin>;
    constructor(props: any);
    shouldComponentUpdate(props: ElementRootProps): boolean;
    render(): JSX.Element;
}
export { ElementRoot };
