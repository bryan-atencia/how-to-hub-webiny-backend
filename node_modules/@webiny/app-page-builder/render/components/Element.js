import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import React, { useMemo } from "react";
import { getPlugins } from "@webiny/plugins";
import tryRenderingPlugin from "./../../utils/tryRenderingPlugin";

var Element = function Element(props) {
  var element = props.element;
  var theme = useMemo(function () {
    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(getPlugins("pb-theme").map(function (pl) {
      return pl.theme;
    }))));
  }, []);

  if (!element) {
    return null;
  }

  var plugin = getPlugins("pb-render-page-element").find(function (pl) {
    return pl.elementType === element.type;
  });

  if (!plugin) {
    return null;
  }

  var renderedPlugin = tryRenderingPlugin(function () {
    return plugin.render({
      theme: theme,
      element: element
    });
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, renderedPlugin);
};

export default Element;
//# sourceMappingURL=Element.js.map