import _get from "lodash/get";
import React, { useEffect, useCallback } from "react";
import { css } from "emotion";

function appendSDK(props) {
  var sdk = props.sdk,
      global = props.global,
      element = props.element;

  var _ref = _get(element, "data.source") || {},
      url = _ref.url;

  if (!sdk || !url || window[global]) {
    return Promise.resolve();
  }

  return new Promise(function (resolve) {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = encodeURI(sdk);
    script.setAttribute("async", "");
    script.setAttribute("charset", "utf-8");
    script.onload = resolve;
    document.body.appendChild(script);
  });
}

function initEmbed(props) {
  var sdk = props.sdk,
      init = props.init,
      element = props.element;

  if (sdk && _get(element, "data.source.url")) {
    var node = document.getElementById(element.id);

    if (typeof init === "function" && node) {
      init({
        props: props,
        node: node
      });
    }
  }
}

var centerAlign = /*#__PURE__*/css({
  "*:first-of-type": {
    marginLeft: "auto !important",
    marginRight: "auto !important"
  }
}, "label:centerAlign;");
export default (function (props) {
  var element = props.element,
      renderEmbed = props.renderEmbed;

  var _ref2 = _get(element, "data.source") || {},
      url = _ref2.url;

  var renderer = useCallback(function () {
    if (typeof renderEmbed === "function") {
      return renderEmbed(props);
    }

    return /*#__PURE__*/React.createElement("div", {
      id: element.id,
      className: centerAlign,
      dangerouslySetInnerHTML: {
        __html: _get(element, "data.oembed.html") || ""
      }
    });
  }, [element, renderEmbed]);
  useEffect(function () {
    appendSDK(props).then(function () {
      return initEmbed(props);
    });
  });
  return url ? renderer() : null;
});
//# sourceMappingURL=OEmbed.js.map