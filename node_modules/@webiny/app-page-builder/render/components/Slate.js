import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import React, { useMemo, useRef, useState } from "react";
import { Value } from "slate";
import { Editor } from "slate-react";
import { getPlugins } from "@webiny/plugins";

var SlateEditor = function SlateEditor(props) {
  var theme = useMemo(function () {
    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(getPlugins("pb-theme").map(function (pl) {
      return pl.theme;
    }))));
  }, []);
  var plugins = useRef(getPlugins("pb-render-slate-editor").map(function (pl) {
    return pl.slate;
  }));

  var _useState = useState(Value.fromJSON(props.value || {})),
      _useState2 = _slicedToArray(_useState, 1),
      value = _useState2[0];

  return /*#__PURE__*/React.createElement(Editor, {
    readOnly: true,
    autoCorrect: false,
    spellCheck: false,
    plugins: plugins.current,
    value: value,
    theme: theme
  });
};

export default SlateEditor;
//# sourceMappingURL=Slate.js.map