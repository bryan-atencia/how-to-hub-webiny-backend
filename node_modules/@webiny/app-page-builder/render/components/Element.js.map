{"version":3,"sources":["../../../src/render/components/Element.tsx"],"names":["React","useMemo","getPlugins","tryRenderingPlugin","Element","props","element","theme","Object","assign","map","pl","plugin","find","elementType","type","renderedPlugin","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAyB;AAAA,MAC7BC,OAD6B,GACjBD,KADiB,CAC7BC,OAD6B;AAGrC,MAAMC,KAAK,GAAGN,OAAO,CACjB;AAAA,WAAMO,MAAM,CAACC,MAAP,OAAAD,MAAM,GAAQ,EAAR,4BAAeN,UAAU,CAAC,UAAD,CAAV,CAAuBQ,GAAvB,CAA2B,UAACC,EAAD;AAAA,aAAuBA,EAAE,CAACJ,KAA1B;AAAA,KAA3B,CAAf,GAAZ;AAAA,GADiB,EAEjB,EAFiB,CAArB;;AAKA,MAAI,CAACD,OAAL,EAAc;AACV,WAAO,IAAP;AACH;;AAED,MAAMM,MAAM,GAAGV,UAAU,CAAwB,wBAAxB,CAAV,CAA4DW,IAA5D,CACX,UAAAF,EAAE;AAAA,WAAIA,EAAE,CAACG,WAAH,KAAmBR,OAAO,CAACS,IAA/B;AAAA,GADS,CAAf;;AAIA,MAAI,CAACH,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,MAAMI,cAAc,GAAGb,kBAAkB,CAAC;AAAA,WAAMS,MAAM,CAACK,MAAP,CAAc;AAAEV,MAAAA,KAAK,EAALA,KAAF;AAASD,MAAAA,OAAO,EAAPA;AAAT,KAAd,CAAN;AAAA,GAAD,CAAzC;AAEA,sBAAO,0CAAGU,cAAH,CAAP;AACH,CAvBD;;AAyBA,eAAeZ,OAAf","sourcesContent":["import React, { useMemo } from \"react\";\n\nimport { getPlugins } from \"@webiny/plugins\";\nimport { PbElement, PbRenderElementPlugin, PbThemePlugin } from \"@webiny/app-page-builder/types\";\n\nimport tryRenderingPlugin from \"./../../utils/tryRenderingPlugin\";\n\nexport type ElementProps = {\n    element: PbElement;\n};\n\nconst Element = (props: ElementProps) => {\n    const { element } = props;\n\n    const theme = useMemo(\n        () => Object.assign({}, ...getPlugins(\"pb-theme\").map((pl: PbThemePlugin) => pl.theme)),\n        []\n    );\n\n    if (!element) {\n        return null;\n    }\n\n    const plugin = getPlugins<PbRenderElementPlugin>(\"pb-render-page-element\").find(\n        pl => pl.elementType === element.type\n    );\n\n    if (!plugin) {\n        return null;\n    }\n\n    const renderedPlugin = tryRenderingPlugin(() => plugin.render({ theme, element }));\n\n    return <>{renderedPlugin}</>;\n};\n\nexport default Element;\n"],"file":"Element.js"}