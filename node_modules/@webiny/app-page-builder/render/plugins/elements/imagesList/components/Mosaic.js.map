{"version":3,"sources":["../../../../../../src/render/plugins/elements/imagesList/components/Mosaic.tsx"],"names":["React","Mosaic","UiMosaic","Lightbox","useReducer","reducer","state","action","next","type","open","currentIndex","index","useLightbox","dispatch","opened","close","prev","props","data","Array","isArray","map","item","i","width","display","src"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Mosaic as UiMosaic } from \"@webiny/ui/Mosaic\";\nimport Lightbox from \"react-images\";\n\nconst { useReducer } = React;\n\nconst reducer = (state, action) => {\n    const next = { ...state };\n    switch (action.type) {\n        case \"open\":\n            next.open = true;\n            next.currentIndex = action.index || 0;\n            break;\n        case \"close\":\n            next.open = false;\n            break;\n        case \"next\":\n            next.currentIndex = next.currentIndex + 1;\n            break;\n        case \"prev\":\n            next.currentIndex = next.currentIndex - 1;\n            break;\n    }\n    return next;\n};\n\nconst useLightbox = () => {\n    const [state, dispatch] = useReducer(reducer, {\n        open: false,\n        currentIndex: null\n    });\n\n    return {\n        opened: state.open,\n        currentIndex: state.currentIndex,\n        open: index => dispatch({ type: \"open\", index }),\n        close: () => dispatch({ type: \"close\" }),\n        next: () => dispatch({ type: \"next\" }),\n        prev: () => dispatch({ type: \"prev\" })\n    };\n};\n\nexport default function Mosaic(props) {\n    const { data } = props;\n    const { opened, open, close, next, prev, currentIndex } = useLightbox();\n\n    if (Array.isArray(data)) {\n        return (\n            <>\n                <UiMosaic>\n                    {data.map((item, i) => (\n                        <img\n                            onClick={() => open(i)}\n                            style={{ width: \"100%\", display: \"block\" }}\n                            key={i + item.src}\n                            src={item.src}\n                        />\n                    ))}\n                </UiMosaic>\n\n                <Lightbox\n                    images={data}\n                    currentImage={currentIndex}\n                    isOpen={opened}\n                    onClickPrev={prev}\n                    onClickNext={next}\n                    onClose={close}\n                />\n            </>\n        );\n    }\n\n    return <span>No images to display.</span>;\n}\n"],"file":"Mosaic.js"}