import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import * as React from "react";
import { Mosaic as UiMosaic } from "@webiny/ui/Mosaic";
import Lightbox from "react-images";
var useReducer = React.useReducer;

var reducer = function reducer(state, action) {
  var next = _objectSpread({}, state);

  switch (action.type) {
    case "open":
      next.open = true;
      next.currentIndex = action.index || 0;
      break;

    case "close":
      next.open = false;
      break;

    case "next":
      next.currentIndex = next.currentIndex + 1;
      break;

    case "prev":
      next.currentIndex = next.currentIndex - 1;
      break;
  }

  return next;
};

var useLightbox = function useLightbox() {
  var _useReducer = useReducer(reducer, {
    open: false,
    currentIndex: null
  }),
      _useReducer2 = _slicedToArray(_useReducer, 2),
      state = _useReducer2[0],
      dispatch = _useReducer2[1];

  return {
    opened: state.open,
    currentIndex: state.currentIndex,
    open: function open(index) {
      return dispatch({
        type: "open",
        index: index
      });
    },
    close: function close() {
      return dispatch({
        type: "close"
      });
    },
    next: function next() {
      return dispatch({
        type: "next"
      });
    },
    prev: function prev() {
      return dispatch({
        type: "prev"
      });
    }
  };
};

export default function Mosaic(props) {
  var data = props.data;

  var _useLightbox = useLightbox(),
      opened = _useLightbox.opened,
      open = _useLightbox.open,
      close = _useLightbox.close,
      next = _useLightbox.next,
      prev = _useLightbox.prev,
      currentIndex = _useLightbox.currentIndex;

  if (Array.isArray(data)) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UiMosaic, null, data.map(function (item, i) {
      return /*#__PURE__*/React.createElement("img", {
        onClick: function onClick() {
          return open(i);
        },
        style: {
          width: "100%",
          display: "block"
        },
        key: i + item.src,
        src: item.src
      });
    })), /*#__PURE__*/React.createElement(Lightbox, {
      images: data,
      currentImage: currentIndex,
      isOpen: opened,
      onClickPrev: prev,
      onClickNext: next,
      onClose: close
    }));
  }

  return /*#__PURE__*/React.createElement("span", null, "No images to display.");
}
//# sourceMappingURL=Mosaic.js.map