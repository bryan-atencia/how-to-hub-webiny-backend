{"version":3,"sources":["../../../../../../src/render/plugins/elements/pagesList/components/GridPageList.tsx"],"names":["React","Link","formatDate","date","d","Date","year","getFullYear","month","getMonth","day","getDate","monthNames","PageItem","data","className","fullUrl","backgroundImage","title","snippet","publishedOn","GridPageList","nextPage","prevPage","map","page","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,IAAT,QAAqB,sBAArB;;;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AACvB,MAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAV;AACA,MAAMG,IAAI,GAAGF,CAAC,CAACG,WAAF,EAAb;AACA,MAAMC,KAAK,GAAGJ,CAAC,CAACK,QAAF,EAAd;AACA,MAAMC,GAAG,GAAGN,CAAC,CAACO,OAAF,EAAZ;AAEA,MAAMC,UAAU,GAAG,CACf,KADe,EAEf,KAFe,EAGf,KAHe,EAIf,KAJe,EAKf,KALe,EAMf,KANe,EAOf,KAPe,EAQf,KARe,EASf,KATe,EAUf,KAVe,EAWf,KAXe,EAYf,KAZe,CAAnB;AAeA,SAAOA,UAAU,CAACJ,KAAD,CAAV,GAAoB,GAApB,GAA0BE,GAA1B,GAAgC,IAAhC,GAAuCJ,IAA9C;AACH,CAtBD;;AA6BA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,OAAwC;AAAA,MAArCC,IAAqC,QAArCA,IAAqC;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AACrD,sBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,IAAI,CAACE,OAAf;AAAwB,IAAA,SAAS,EAAE,4CAA4CD;AAA/E,kBACI;AACI,IAAA,SAAS,EAAE,yCADf;AAEI,IAAA,KAAK,EAAE;AACHE,MAAAA,eAAe,kBAAU,KAAIH,IAAJ,EAAU,4BAAV,CAAV;AADZ;AAFX,IADJ,eAOI;AAAK,IAAA,SAAS,EAAE;AAAhB,kBACI;AAAI,IAAA,SAAS,EAAE;AAAf,KACKA,IAAI,CAACI,KADV,CADJ,eAII;AACI,IAAA,SAAS,EACL;AAFR,KAKKJ,IAAI,CAACK,OALV,CAJJ,eAWI;AACI,IAAA,SAAS,EACL;AAFR,KAKKjB,UAAU,CAACY,IAAI,CAACM,WAAN,CALf,CAXJ,CAPJ,CADJ;AA6BH,CA9BD;;AAgCA,IAAMC,YAAY,GAAG,SAAfA,YAAe,QAAkC;AAAA,MAA/BP,IAA+B,SAA/BA,IAA+B;AAAA,MAAzBQ,QAAyB,SAAzBA,QAAyB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AACnD,sBACI;AAAK,IAAA,SAAS,EAAE;AAAhB,kBACI;AAAK,IAAA,SAAS,EAAE;AAAhB,KACKT,IAAI,CAACU,GAAL,CAAS,UAAAC,IAAI;AAAA,wBACV,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED;AAA9B,MADU;AAAA,GAAb,CADL,CADJ,eAMI;AAAK,IAAA,SAAS,EAAE;AAAhB,KACKF,QAAQ,iBACL;AAAG,IAAA,OAAO,EAAEA;AAAZ,kBACI,oBAAC,QAAD,OADJ,eAFR,EAMKD,QAAQ,iBACL;AAAG,IAAA,OAAO,EAAEA;AAAZ,gCACc,oBAAC,QAAD,OADd,CAPR,CANJ,CADJ;AAqBH,CAtBD;;AAwBA,eAAeD,YAAf","sourcesContent":["import * as React from \"react\";\nimport { get } from \"lodash\";\nimport { Link } from \"@webiny/react-router\";\n\nimport { ReactComponent as PrevIcon } from \"./icons/round-navigate_before-24px.svg\";\nimport { ReactComponent as NextIcon } from \"./icons/round-navigate_next-24px.svg\";\n\nconst formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = d.getMonth();\n    const day = d.getDate();\n\n    const monthNames = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\"\n    ];\n\n    return monthNames[month] + \" \" + day + \", \" + year;\n};\n\nexport type PageItemProps = {\n    data: any; // TODO: create a better type\n    className?: string;\n};\n\nconst PageItem = ({ data, className }: PageItemProps) => {\n    return (\n        <Link to={data.fullUrl} className={\"webiny-pb-page-element-page-list__item \" + className}>\n            <div\n                className={\"webiny-pb-page-element-page-list__media\"}\n                style={{\n                    backgroundImage: `url(\"${get(data, \"settings.general.image.src\")}?width=500\")`\n                }}\n            />\n            <div className={\"webiny-pb-page-element-page-list__content\"}>\n                <h3 className={\"webiny-pb-page-element-page-list__title webiny-pb-typography-h3\"}>\n                    {data.title}\n                </h3>\n                <p\n                    className={\n                        \"webiny-pb-page-element-page-list__snippet webiny-pb-typography-description\"\n                    }\n                >\n                    {data.snippet}\n                </p>\n                <div\n                    className={\n                        \"webiny-pb-page-element-page-list__date webiny-pb-typography-description\"\n                    }\n                >\n                    {formatDate(data.publishedOn)}\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nconst GridPageList = ({ data, nextPage, prevPage }) => {\n    return (\n        <div className={\"webiny-pb-page-element-page-list webiny-pb-page-element-page-list--grid\"}>\n            <div className={\"webiny-pb-page-element-page-list__items\"}>\n                {data.map(page => (\n                    <PageItem key={page.id} data={page} />\n                ))}\n            </div>\n            <div className={\"webiny-pb-page-element-page-list__navigation\"}>\n                {prevPage && (\n                    <a onClick={prevPage}>\n                        <PrevIcon /> Prev page\n                    </a>\n                )}\n                {nextPage && (\n                    <a onClick={nextPage}>\n                        Next page <NextIcon />\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default GridPageList;\n"],"file":"GridPageList.js"}