{"version":3,"sources":["../../../../../src/render/plugins/elements/pagesList/PagesList.tsx"],"names":["React","warning","useQuery","loadPages","getPlugins","PagesList","props","data","component","vars","theme","plugins","pageList","find","cmp","componentName","ListComponent","sort","sortBy","parseInt","sortDirection","variables","category","tags","tagsRule","limit","resultsPerPage","after","undefined","before","loading","refetch","pages","pageBuilder","listPublishedPages","length","prevPage","meta","hasPreviousPage","cursors","previous","nextPage","hasNextPage","next","memo"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport warning from \"warning\";\nimport { useQuery } from \"react-apollo\";\nimport { loadPages } from \"./graphql\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { PbPageElementPagesListComponentPlugin } from \"@webiny/app-page-builder/types\";\n\ndeclare global {\n    // eslint-disable-next-line\n    namespace JSX {\n        interface IntrinsicElements {\n            \"ssr-cache\": {\n                class?: string;\n                id?: string;\n            };\n        }\n    }\n}\n\nconst PagesList = props => {\n    const {\n        data: { component, ...vars },\n        theme\n    } = props;\n\n    const plugins = getPlugins<PbPageElementPagesListComponentPlugin>(\n        \"pb-page-element-pages-list-component\"\n    );\n\n    const pageList = plugins.find(cmp => cmp.componentName === component);\n\n    if (!pageList) {\n        warning(false, `Pages list component \"${component}\" is missing!`);\n        return null;\n    }\n\n    const { component: ListComponent } = pageList;\n\n    if (!ListComponent) {\n        warning(false, `React component is not defined for \"${component}\"!`);\n        return null;\n    }\n\n    let sort = null;\n    if (vars.sortBy) {\n        sort = { [vars.sortBy]: parseInt(vars.sortDirection) || -1 };\n    }\n\n    const variables = {\n        category: vars.category,\n        sort,\n        tags: vars.tags,\n        tagsRule: vars.tagsRule,\n        limit: parseInt(vars.resultsPerPage),\n        after: undefined,\n        before: undefined\n    };\n\n    const { data, loading, refetch } = useQuery(loadPages, { variables });\n\n    if (loading) {\n        return null;\n    }\n\n    const pages = data.pageBuilder.listPublishedPages;\n\n    if (!pages || !pages.data.length) {\n        return null;\n    }\n\n    let prevPage = null;\n    if (pages.meta.hasPreviousPage) {\n        prevPage = () => refetch({ ...variables, before: pages.meta.cursors.previous });\n    }\n\n    let nextPage = null;\n    if (pages.meta.hasNextPage) {\n        nextPage = () => refetch({ ...variables, after: pages.meta.cursors.next });\n    }\n\n    return (\n        <>\n            <ssr-cache data-class=\"pb-pages-list\" />\n            <ListComponent {...pages} nextPage={nextPage} prevPage={prevPage} theme={theme} />\n        </>\n    );\n};\n\nexport default React.memo(PagesList);\n"],"file":"PagesList.js"}