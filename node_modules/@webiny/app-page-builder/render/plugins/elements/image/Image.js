import _get from "lodash/get";
import React from "react";
import { ElementRoot } from "@webiny/app-page-builder/render/components/ElementRoot";
import { Image as WebinyImage } from "@webiny/app/components";
import { Link as RouterLink } from "@webiny/react-router";

var Link = function Link(_ref) {
  var link = _ref.link,
      children = _ref.children;

  if (link && link.href) {
    return /*#__PURE__*/React.createElement(RouterLink, {
      to: link.href,
      target: link.newTab ? "_blank" : "_self"
    }, children);
  }

  return children;
};

var Image = function Image(props) {
  var _get2 = _get(props, "element.data", {}),
      _get2$image = _get2.image,
      image = _get2$image === void 0 ? {} : _get2$image,
      _get2$link = _get2.link,
      link = _get2$link === void 0 ? {} : _get2$link,
      _get2$settings = _get2.settings,
      settings = _get2$settings === void 0 ? {} : _get2$settings;

  if (!image || !image.file) {
    return null;
  }

  var width = image.width,
      height = image.height,
      title = image.title;
  var _settings$horizontalA = settings.horizontalAlign,
      horizontalAlign = _settings$horizontalA === void 0 ? "center" : _settings$horizontalA;
  var style = {
    width: width,
    height: height
  };

  if (!style.width) {
    style.width = "100%";
  } else {
    style.width += style.width.endsWith("px") ? "" : "px";
  }

  if (!style.height) {
    style.height = "100%";
  } else {
    style.height += style.height.endsWith("px") ? "" : "px";
  }

  return /*#__PURE__*/React.createElement(ElementRoot, {
    element: props.element,
    style: {
      textAlign: horizontalAlign
    },
    className: "webiny-pb-base-page-element-style webiny-pb-page-element-image"
  }, /*#__PURE__*/React.createElement(Link, {
    link: link
  }, /*#__PURE__*/React.createElement(WebinyImage, {
    title: title,
    alt: title,
    style: style,
    src: image.file.src,
    srcSet: "auto"
  })));
};

export default Image;
//# sourceMappingURL=Image.js.map