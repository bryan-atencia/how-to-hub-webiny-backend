{"version":3,"sources":["../../../../../src/render/plugins/slate/typography/index.tsx"],"names":["React","name","type","slate","renderNode","props","next","attributes","children","node","editor","typography","theme","hasOwnProperty","component","Node","className","nodeProps","style","textAlign","data","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA;;;;AAKA,gBAAe,YAAiC;AAC5C,SAAO;AACHC,IAAAA,IAAI,EAAE,mCADH;AAEHC,IAAAA,IAAI,EAAE,wBAFH;AAGHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,UADG,sBACQC,KADR,EACeC,IADf,EACqB;AAAA,YACZC,UADY,GAC2BF,KAD3B,CACZE,UADY;AAAA,YACAC,QADA,GAC2BH,KAD3B,CACAG,QADA;AAAA,YACUC,IADV,GAC2BJ,KAD3B,CACUI,IADV;AAAA,YACgBC,MADhB,GAC2BL,KAD3B,CACgBK,MADhB,EAEpB;;AAFoB,YAGZR,IAHY,GAGHO,IAHG,CAGZP,IAHY,EAKpB;;AALoB,YAMZS,UANY,GAMGD,MAAM,CAACL,KAAP,CAAaO,KANhB,CAMZD,UANY;;AAQpB,YAAIA,UAAU,CAACE,cAAX,CAA0BX,IAA1B,KAAmCS,UAAU,CAACT,IAAD,CAAV,CAAiBY,SAAxD,EAAmE;AAAA,iCACjBH,UAAU,CAACT,IAAD,CADO;AAAA,cAC5Ca,IAD4C,oBACvDD,SADuD;AAAA,uDACtCE,SADsC;AAAA,cACtCA,SADsC,sCAC1B,IAD0B;;AAG/D,cAAIC,SAAS,mCACNV,UADM;AAETS,YAAAA,SAAS,EAATA,SAFS;AAGT;AACAE,YAAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,YAAKV,IAAI,CAACW,IAAL,CAAUC,GAAV,CAAc,OAAd,CAAL;AAAX;AAJE,YAAb;;AAOA,cAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACAE,YAAAA,SAAS,GAAGZ,KAAZ;AACH;;AAED,8BAAO,oBAAC,IAAD,EAAUY,SAAV,EAAsBT,QAAtB,CAAP;AACH;;AAED,eAAOF,IAAI,EAAX;AACH;AA5BE;AAHJ,GAAP;AAkCH,CAnCD","sourcesContent":["import React from \"react\";\nimport { PbRenderSlateEditorPlugin } from \"@webiny/app-page-builder/types\";\n\n/**\n * TODO: figure out why slate typings are not really working here (see all the @ts-ignore lines)\n * Maybe I'm doing something wrong; if anybody knows - please help!\n */\n\nexport default (): PbRenderSlateEditorPlugin => {\n    return {\n        name: \"pb-render-slate-editor-typography\",\n        type: \"pb-render-slate-editor\",\n        slate: {\n            renderNode(props, next) {\n                const { attributes, children, node, editor } = props;\n                // @ts-ignore\n                const { type } = node;\n\n                // @ts-ignore\n                const { typography } = editor.props.theme;\n\n                if (typography.hasOwnProperty(type) && typography[type].component) {\n                    const { component: Node, className = null } = typography[type];\n\n                    let nodeProps = {\n                        ...attributes,\n                        className,\n                        // @ts-ignore\n                        style: { textAlign: `${node.data.get(\"align\")}` }\n                    };\n\n                    if (typeof Node !== \"string\") {\n                        // @ts-ignore\n                        nodeProps = props;\n                    }\n\n                    return <Node {...nodeProps}>{children}</Node>;\n                }\n\n                return next();\n            }\n        }\n    };\n};\n"],"file":"index.js"}