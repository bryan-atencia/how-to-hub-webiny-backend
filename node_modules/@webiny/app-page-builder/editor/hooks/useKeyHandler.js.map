{"version":3,"sources":["../../../src/editor/hooks/useKeyHandler.ts"],"names":["React","shortid","isHotkey","keyStack","listener","filter","setupListener","document","body","addEventListener","e","srcElement","dataset","slateEditor","includes","nodeName","matchedKey","Object","keys","find","key","length","item","handler","stopPropagation","addKeyHandler","id","unshift","removeKeyHandler","index","findIndex","splice","useKeyHandler","useState","generate","useMemo"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent } from \"react\";\nimport shortid from \"shortid\";\nimport isHotkey from \"is-hotkey\";\nconst keyStack = {};\n\nlet listener = false;\nconst filter = [\"TEXTAREA\", \"INPUT\"];\n\nconst setupListener = () => {\n    if (!listener && document.body) {\n        document.body.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n            // We ignore all keyboard events coming from within `slateEditor` element and inputs.\n            // @ts-ignore\n            if (e.srcElement.dataset.slateEditor || filter.includes(e.srcElement.nodeName)) {\n                return;\n            }\n\n            const matchedKey = Object.keys(keyStack).find(key => isHotkey(key, e));\n\n            if (matchedKey && keyStack[matchedKey].length > 0) {\n                const item = keyStack[matchedKey][0];\n                item.handler(e);\n                e.stopPropagation();\n            }\n        });\n\n        listener = true;\n    }\n};\n\nconst addKeyHandler = (\n    id: string,\n    key: string,\n    handler: (e: SyntheticEvent<HTMLElement>) => void\n) => {\n    setupListener();\n    keyStack[key] = keyStack[key] || [];\n    if (!keyStack[key].find(item => item.id === id)) {\n        keyStack[key].unshift({ id, handler });\n    }\n};\n\nconst removeKeyHandler = (id, key) => {\n    if (!keyStack[key]) {\n        return;\n    }\n\n    const index = keyStack[key].findIndex(item => item.id === id);\n    if (index >= 0) {\n        keyStack[key].splice(index, 1);\n    }\n};\n\ntype AddKeyHandlerType = (key: string, handler: (e: SyntheticEvent<HTMLElement>) => void) => void;\n\ntype RemoveKeyHandlerType = (key: string) => void;\n\nexport function useKeyHandler(): {\n    addKeyHandler: AddKeyHandlerType;\n    removeKeyHandler: RemoveKeyHandlerType;\n} {\n    const [id] = React.useState(shortid.generate());\n\n    return React.useMemo(\n        () => ({\n            addKeyHandler(key, handler) {\n                addKeyHandler(id, key, handler);\n            },\n            removeKeyHandler(key) {\n                removeKeyHandler(id, key);\n            }\n        }),\n        []\n    );\n}\n"],"file":"useKeyHandler.js"}