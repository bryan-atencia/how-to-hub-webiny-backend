export var wrapMiddleware = function wrapMiddleware(middleware, actions) {
  return function (store) {
    return function (next) {
      return function (action) {
        if (!actions || actions.includes(action.type)) {
          middleware({
            store: store,
            next: next,
            action: action
          });
        } else {
          next(action);
        }
      };
    };
  };
};
export default (function (redux) {
  return redux.middleware.map(function (mw) {
    return wrapMiddleware(mw.middleware, mw.actions);
  });
});
//# sourceMappingURL=createMiddleware.js.map