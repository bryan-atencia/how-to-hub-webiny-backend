{"version":3,"sources":["../../../../src/editor/plugins/toolbar/Action.tsx"],"names":["React","useCallback","css","connect","togglePlugin","isPluginActive","IconButton","Tooltip","activeStyle","color","Action","icon","onClick","active","tooltip","plugin","clickHandler","name","btnIcon","Array","isArray","iconButton","visible","state","props","memo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,YAAT,QAA6B,yCAA7B;AACA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,WAAW,gBAAGN,GAAG,CAAC;AACpB,4BAA0B;AACtBO,IAAAA,KAAK,EAAE;AADe;AADN,CAAD,uBAAvB;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA8D;AAAA,MAA3DC,IAA2D,QAA3DA,IAA2D;AAAA,MAArDC,OAAqD,QAArDA,OAAqD;AAAA,MAA5CC,MAA4C,QAA5CA,MAA4C;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BV,YAA2B,QAA3BA,YAA2B;AAAA,MAAbW,MAAa,QAAbA,MAAa;AACzE,MAAMC,YAAY,GAAGf,WAAW,CAAC,YAAM;AACnC,QAAI,OAAOW,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,aAAOA,OAAO,EAAd;AACH;;AACDR,IAAAA,YAAY,CAAC;AAAEa,MAAAA,IAAI,EAAEF;AAAR,KAAD,CAAZ;AACH,GAL+B,EAK7B,CAACA,MAAD,CAL6B,CAAhC;AAOA,MAAIG,OAAO,GAAGP,IAAd;;AACA,MAAIQ,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAJ,EAAyB;AACrBO,IAAAA,OAAO,GAAGL,MAAM,GAAGF,IAAI,CAAC,CAAD,CAAP,GAAaA,IAAI,CAAC,CAAD,CAAjC;AACH;;AAED,MAAMU,UAAU,gBACZ,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEH,OAAlB;AAA2B,IAAA,OAAO,EAAEF,YAApC;AAAkD,IAAA,SAAS,EAAEH,MAAM,IAAIL;AAAvE,IADJ;;AAIA,MAAIM,OAAJ,EAAa;AACT,wBACI,oBAAC,OAAD;AACI,MAAA,SAAS,EAAE,OADf;AAEI,MAAA,OAAO,eAAE,kCAAOA,OAAP;AAFb,OAGSD,MAAM,GAAG;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAwB,EAHvC,GAKKD,UALL,CADJ;AASH;;AAED,SAAOA,UAAP;AACH,CA9BD;;AAgCA,eAAelB,OAAO,CAClB,UAACoB,KAAD,EAAQC,KAAR;AAAA,SAAwB;AACpBX,IAAAA,MAAM,EAAER,cAAc,CAACmB,KAAK,CAACT,MAAP,CAAd,CAA6BQ,KAA7B;AADY,GAAxB;AAAA,CADkB,EAIlB;AAAEnB,EAAAA,YAAY,EAAZA;AAAF,CAJkB,CAAP,eAKbJ,KAAK,CAACyB,IAAN,CAAWf,MAAX,CALa,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { css } from \"emotion\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { togglePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\n\nconst activeStyle = css({\n    \".mdc-icon-button__icon\": {\n        color: \"var(--mdc-theme-primary)\"\n    }\n});\n\nconst Action = ({ icon, onClick, active, tooltip, togglePlugin, plugin }) => {\n    const clickHandler = useCallback(() => {\n        if (typeof onClick === \"function\") {\n            return onClick();\n        }\n        togglePlugin({ name: plugin });\n    }, [plugin]);\n\n    let btnIcon = icon;\n    if (Array.isArray(icon)) {\n        btnIcon = active ? icon[0] : icon[1];\n    }\n\n    const iconButton = (\n        <IconButton icon={btnIcon} onClick={clickHandler} className={active && activeStyle} />\n    );\n\n    if (tooltip) {\n        return (\n            <Tooltip\n                placement={\"right\"}\n                content={<span>{tooltip}</span>}\n                {...(active ? { visible: false } : {})}\n            >\n                {iconButton}\n            </Tooltip>\n        );\n    }\n\n    return iconButton;\n};\n\nexport default connect<any, any, any>(\n    (state, props: any) => ({\n        active: isPluginActive(props.plugin)(state)\n    }),\n    { togglePlugin }\n)(React.memo(Action));\n"],"file":"Action.js"}