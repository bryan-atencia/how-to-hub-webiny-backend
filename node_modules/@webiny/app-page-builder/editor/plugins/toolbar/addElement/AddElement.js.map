{"version":3,"sources":["../../../../../src/editor/plugins/toolbar/addElement/AddElement.tsx"],"names":["React","useCallback","useState","connect","Draggable","dragStart","dragEnd","deactivatePlugin","dropElement","getPlugins","getActivePluginParams","usePageBuilder","Styled","css","List","ListItem","ListItemMeta","Icon","Typography","ButtonFloating","ADD_ELEMENT","categoriesList","backgroundColor","boxShadow","borderTop","width","fontWeight","borderBottom","color","AddElement","params","getGroups","getGroupElements","group","filter","el","toolbar","name","setGroup","theme","refresh","enableDragOverlay","document","querySelector","classList","add","disableDragOverlay","remove","renderDraggable","element","plugin","elementType","target","props","type","setTimeout","monitor","getItem","drag","renderOverlay","onClick","label","renderClickable","item","source","cloneElement","key","map","title","icon","preview","state","getParams"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport Draggable from \"@webiny/app-page-builder/editor/components/Draggable\";\nimport {\n    dragStart,\n    dragEnd,\n    deactivatePlugin,\n    dropElement\n} from \"@webiny/app-page-builder/editor/actions\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { getActivePluginParams } from \"@webiny/app-page-builder/editor/selectors\";\nimport { usePageBuilder } from \"@webiny/app-page-builder/hooks/usePageBuilder\";\nimport * as Styled from \"./StyledComponents\";\nimport { css } from \"emotion\";\nimport { List, ListItem, ListItemMeta } from \"@webiny/ui/List\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ButtonFloating } from \"@webiny/ui/Button\";\nimport { ReactComponent as AddIcon } from \"@webiny/app-page-builder/editor/assets/icons/add.svg\";\nimport {\n    PbEditorPageElementGroupPlugin,\n    PbEditorPageElementPlugin\n} from \"@webiny/app-page-builder/types\";\n\nconst ADD_ELEMENT = \"pb-editor-toolbar-add-element\";\n\n// @ts-ignore\nconst categoriesList = css({\n    backgroundColor: \"var(--mdc-theme-surface)\",\n    boxShadow: \"inset 1px 0px 5px 0px var(--mdc-theme-background)\",\n    borderTop: \"1px solid var(--mdc-theme-background)\",\n    \".mdc-list-item\": {\n        width: 150,\n        fontWeight: \"600 !important\",\n        borderBottom: \"1px solid var(--mdc-theme-background)\",\n        \"&.active\": {\n            backgroundColor: \"var(--mdc-theme-background)\",\n            color: \"var(--mdc-theme-primary)\",\n            \".mdc-list-item__meta\": {\n                color: \"var(--mdc-theme-primary)\"\n            }\n        }\n    }\n});\n\nconst AddElement = ({ params, dropElement, dragStart, deactivatePlugin, dragEnd }) => {\n    const getGroups = useCallback(() => {\n        return getPlugins<PbEditorPageElementGroupPlugin>(\"pb-editor-page-element-group\");\n    }, []);\n\n    const getGroupElements = useCallback(group => {\n        return getPlugins<PbEditorPageElementPlugin>(\"pb-editor-page-element\").filter(\n            el => el.toolbar && el.toolbar.group === group\n        );\n    }, []);\n\n    const [group, setGroup] = useState(getGroups()[0].name);\n\n    const { theme } = usePageBuilder();\n\n    const refresh = useCallback(() => {\n        setGroup(group);\n    }, []);\n\n    const enableDragOverlay = useCallback(() => {\n        const el = document.querySelector(\".pb-editor\");\n        if (el) {\n            el.classList.add(\"pb-editor-dragging\");\n        }\n    }, []);\n\n    const disableDragOverlay = useCallback(() => {\n        const el = document.querySelector(\".pb-editor\");\n        if (el) {\n            el.classList.remove(\"pb-editor-dragging\");\n        }\n    }, []);\n\n    const renderDraggable = useCallback(\n        (element, plugin) => {\n            const { elementType } = plugin;\n\n            return (\n                <Draggable\n                    key={plugin.name}\n                    target={plugin.target}\n                    beginDrag={props => {\n                        dragStart({ element: { type: elementType } });\n                        setTimeout(\n                            () =>\n                                deactivatePlugin({\n                                    name: ADD_ELEMENT\n                                }),\n                            20\n                        );\n                        return { type: elementType, target: props.target };\n                    }}\n                    endDrag={(props, monitor) => {\n                        dragEnd({ element: monitor.getItem() });\n                    }}\n                >\n                    {({ drag }) => (\n                        <div ref={drag}>{renderOverlay(element, null, \"Drag to Add\", plugin)}</div>\n                    )}\n                </Draggable>\n            );\n        },\n        [dragStart, deactivatePlugin, dragEnd]\n    );\n\n    const renderOverlay = useCallback(\n        (element, onClick = null, label, plugin) => {\n            return (\n                <Styled.ElementPreview>\n                    <Styled.Overlay>\n                        <Styled.Backdrop className={\"backdrop\"} />\n                        <Styled.AddBlock className={\"add-block\"}>\n                            <ButtonFloating\n                                data-testid={`pb-editor-add-element-button-${plugin.elementType}`}\n                                onClick={onClick}\n                                label={label}\n                                icon={<AddIcon />}\n                                onMouseDown={enableDragOverlay}\n                                onMouseUp={disableDragOverlay}\n                            />\n                        </Styled.AddBlock>\n                    </Styled.Overlay>\n                    {element}\n                </Styled.ElementPreview>\n            );\n        },\n        [enableDragOverlay, disableDragOverlay]\n    );\n\n    const renderClickable = useCallback(\n        (element, plugin) => {\n            const item = renderOverlay(\n                element,\n                () => {\n                    dropElement({\n                        source: { type: plugin.elementType },\n                        target: { ...params }\n                    });\n                    deactivatePlugin({\n                        name: ADD_ELEMENT\n                    });\n                },\n                \"Click to Add\",\n                plugin\n            );\n\n            return React.cloneElement(item, { key: plugin.name });\n        },\n        [params, deactivatePlugin, dropElement, renderOverlay]\n    );\n\n    return (\n        <Styled.Flex>\n            <List className={categoriesList}>\n                {getGroups().map(plugin => (\n                    <ListItem\n                        onClick={() => setGroup(plugin.name)}\n                        key={plugin.name}\n                        className={plugin.name === group && \"active\"}\n                    >\n                        {plugin.group.title}\n\n                        {plugin.group.icon && (\n                            <ListItemMeta>\n                                <Icon icon={plugin.group.icon} />\n                            </ListItemMeta>\n                        )}\n                    </ListItem>\n                ))}\n            </List>\n            <Styled.Elements>\n                {group &&\n                    getGroupElements(group).map(plugin => {\n                        return (params ? renderClickable : renderDraggable)(\n                            <div data-role=\"draggable\">\n                                <Styled.ElementBox>\n                                    <Styled.ElementTitle>\n                                        {typeof plugin.toolbar.title === \"function\" ? (\n                                            plugin.toolbar.title({ refresh })\n                                        ) : (\n                                            <Typography use=\"overline\">\n                                                {plugin.toolbar.title}\n                                            </Typography>\n                                        )}\n                                    </Styled.ElementTitle>\n                                    <Styled.ElementPreviewCanvas>\n                                        {plugin.toolbar.preview({ theme })}\n                                    </Styled.ElementPreviewCanvas>\n                                </Styled.ElementBox>\n                            </div>,\n                            plugin\n                        );\n                    })}\n            </Styled.Elements>\n        </Styled.Flex>\n    );\n};\n\nexport default connect<any, any, any>(\n    state => {\n        const getParams = getActivePluginParams(\"pb-editor-toolbar-add-element\");\n        return {\n            params: getParams ? getParams(state) : null\n        };\n    },\n    { dragStart, dragEnd, deactivatePlugin, dropElement }\n)(AddElement);\n"],"file":"AddElement.js"}