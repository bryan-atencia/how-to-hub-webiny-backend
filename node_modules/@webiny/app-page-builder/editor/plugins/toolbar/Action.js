import React, { useCallback } from "react";
import { css } from "emotion";
import { connect } from "@webiny/app-page-builder/editor/redux";
import { togglePlugin } from "@webiny/app-page-builder/editor/actions";
import { isPluginActive } from "@webiny/app-page-builder/editor/selectors";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
var activeStyle = /*#__PURE__*/css({
  ".mdc-icon-button__icon": {
    color: "var(--mdc-theme-primary)"
  }
}, "label:activeStyle;");

var Action = function Action(_ref) {
  var icon = _ref.icon,
      onClick = _ref.onClick,
      active = _ref.active,
      tooltip = _ref.tooltip,
      togglePlugin = _ref.togglePlugin,
      plugin = _ref.plugin;
  var clickHandler = useCallback(function () {
    if (typeof onClick === "function") {
      return onClick();
    }

    togglePlugin({
      name: plugin
    });
  }, [plugin]);
  var btnIcon = icon;

  if (Array.isArray(icon)) {
    btnIcon = active ? icon[0] : icon[1];
  }

  var iconButton = /*#__PURE__*/React.createElement(IconButton, {
    icon: btnIcon,
    onClick: clickHandler,
    className: active && activeStyle
  });

  if (tooltip) {
    return /*#__PURE__*/React.createElement(Tooltip, Object.assign({
      placement: "right",
      content: /*#__PURE__*/React.createElement("span", null, tooltip)
    }, active ? {
      visible: false
    } : {}), iconButton);
  }

  return iconButton;
};

export default connect(function (state, props) {
  return {
    active: isPluginActive(props.plugin)(state)
  };
}, {
  togglePlugin: togglePlugin
})( /*#__PURE__*/React.memo(Action));
//# sourceMappingURL=Action.js.map