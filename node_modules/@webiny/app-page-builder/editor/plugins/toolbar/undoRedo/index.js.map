{"version":3,"sources":["../../../../../src/editor/plugins/toolbar/undoRedo/index.tsx"],"names":["platform","React","dispatch","ActionCreators","Action","metaKey","os","family","undo","name","type","renderAction","redo"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,uCAAzB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAGA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,IAAMC,OAAO,GAAGL,QAAQ,CAACM,EAAT,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,KAAhC,GAAwC,MAAxD;AAEA,OAAO,IAAMC,IAAiC,GAAG;AAC7CC,EAAAA,IAAI,EAAE,wBADuC;AAE7CC,EAAAA,IAAI,EAAE,0BAFuC;AAG7CC,EAAAA,YAH6C,0BAG9B;AACX,wBACI,oBAAC,MAAD;AACI,MAAA,OAAO,kBAAWN,OAAX,QADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMH,QAAQ,CAACC,cAAc,CAACK,IAAf,EAAD,CAAd;AAAA,OAFb;AAGI,MAAA,IAAI,eAAE,oBAAC,QAAD;AAHV,MADJ;AAOH;AAX4C,CAA1C;AAcP,OAAO,IAAMI,IAAiC,GAAG;AAC7CH,EAAAA,IAAI,EAAE,wBADuC;AAE7CC,EAAAA,IAAI,EAAE,0BAFuC;AAG7CC,EAAAA,YAH6C,0BAG9B;AACX,wBACI,oBAAC,MAAD;AACI,MAAA,OAAO,kBAAWN,OAAX,cADX;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMH,QAAQ,CAACC,cAAc,CAACS,IAAf,EAAD,CAAd;AAAA,OAFb;AAGI,MAAA,IAAI,eAAE,oBAAC,QAAD;AAHV,MADJ;AAOH;AAX4C,CAA1C","sourcesContent":["import platform from \"platform\";\nimport React from \"react\";\nimport { dispatch } from \"@webiny/app-page-builder/editor/redux\";\nimport { ActionCreators } from \"redux-undo\";\nimport { ReactComponent as UndoIcon } from \"@webiny/app-page-builder/editor/assets/icons/undo-icon.svg\";\nimport { ReactComponent as RedoIcon } from \"@webiny/app-page-builder/editor/assets/icons/redo-icon.svg\";\nimport Action from \"../Action\";\nimport { PbEditorToolbarBottomPlugin } from \"@webiny/app-page-builder/types\";\n\nconst metaKey = platform.os.family === \"OS X\" ? \"CMD\" : \"CTRL\";\n\nexport const undo: PbEditorToolbarBottomPlugin = {\n    name: \"pb-editor-toolbar-undo\",\n    type: \"pb-editor-toolbar-bottom\",\n    renderAction() {\n        return (\n            <Action\n                tooltip={`Undo (${metaKey}+Z)`}\n                onClick={() => dispatch(ActionCreators.undo())}\n                icon={<UndoIcon />}\n            />\n        );\n    }\n};\n\nexport const redo: PbEditorToolbarBottomPlugin = {\n    name: \"pb-editor-toolbar-redo\",\n    type: \"pb-editor-toolbar-bottom\",\n    renderAction() {\n        return (\n            <Action\n                tooltip={`Redo (${metaKey}+SHIFT+Z)`}\n                onClick={() => dispatch(ActionCreators.redo())}\n                icon={<RedoIcon />}\n            />\n        );\n    }\n};\n"],"file":"index.js"}