{"version":3,"sources":["../../../../../src/editor/plugins/elements/image/ImageContainer.tsx"],"names":["React","useCallback","connect","styled","isNumeric","SingleImageUpload","updateElement","getElement","position","left","center","right","AlignImage","props","img","alignSelf","align","ImageContainer","horizontalAlign","element","image","imgStyle","width","height","parseInt","onChange","data","merge","style","srcSet","file","state","elementId","settings","id","type","path","areStatePropsEqual","memo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,iBAAP,MAA8B,gDAA9B;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,UAAT,QAA2B,2CAA3B;AAEA,IAAMC,QAAQ,GAAG;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,MAAM,EAAE,QAA9B;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAAjB;AAEA,IAAMC,UAAU,gBAAGT,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB,UAACU,KAAD;AAAA,SAAiB;AAC9CC,IAAAA,GAAG,EAAE;AACDC,MAAAA,SAAS,EAAEP,QAAQ,CAACK,KAAK,CAACG,KAAP;AADlB;AADyC,GAAjB;AAAA,CAAjB,CAAhB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,KAAK,EAAI;AAAA,MACpBK,eADoB,GACwBL,KADxB,CACpBK,eADoB;AAAA,MACHZ,aADG,GACwBO,KADxB,CACHP,aADG;AAAA,MACYa,OADZ,GACwBN,KADxB,CACYM,OADZ;;AAE5B,MAAMC,KAAK,qBAAQP,KAAK,CAACO,KAAd,CAAX;;AAEA,MAAMC,QAAQ,GAAG;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAjB;;AACA,MAAIH,KAAK,CAACE,KAAV,EAAiB;AAAA,QACLA,KADK,GACKF,KADL,CACLE,KADK;AAEbD,IAAAA,QAAQ,CAACC,KAAT,GAAiBlB,SAAS,CAACkB,KAAD,CAAT,GAAmBE,QAAQ,CAACF,KAAD,CAA3B,GAAqCA,KAAtD;AACH;;AACD,MAAIF,KAAK,CAACG,MAAV,EAAkB;AAAA,QACNA,MADM,GACKH,KADL,CACNG,MADM;AAEdF,IAAAA,QAAQ,CAACE,MAAT,GAAkBnB,SAAS,CAACmB,MAAD,CAAT,GAAoBC,QAAQ,CAACD,MAAD,CAA5B,GAAuCA,MAAzD;AACH;;AAED,MAAME,QAAQ,GAAGxB,WAAW;AAAA,wEACxB,iBAAMyB,IAAN;AAAA;AAAA;AAAA;AAAA;AACIpB,cAAAA,aAAa,CAAC;AAAEa,gBAAAA,OAAO,EAAE,KAAIA,OAAJ,EAAa,iBAAb,EAAgCO,IAAhC,CAAX;AAAkDC,gBAAAA,KAAK,EAAE;AAAzD,eAAD,CAAb;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;;AAAA;AAAA;AAAA;AAAA,OAIxB,CAACR,OAAD,CAJwB,CAA5B;AAOA,sBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAED;AAAnB,kBACI,oBAAC,iBAAD;AACI,IAAA,iBAAiB,EAAE;AAAEU,MAAAA,KAAK,EAAEP,QAAT;AAAmBQ,MAAAA,MAAM,EAAE;AAA3B,KADvB;AAEI,IAAA,QAAQ,EAAEJ,QAFd;AAGI,IAAA,KAAK,EAAEL,KAAK,CAACU;AAHjB,IADJ,CADJ;AASH,CA9BD;;AAgCA,eAAe5B,OAAO,CAClB,UAAC6B,KAAD,SAA0B;AAAA,MAAhBC,SAAgB,SAAhBA,SAAgB;AACtB,MAAMb,OAAO,GAAGZ,UAAU,CAACwB,KAAD,EAAQC,SAAR,CAA1B;AADsB,sBAEgBb,OAAO,CAACO,IAFxB;AAAA,0CAEdN,KAFc;AAAA,MAEdA,KAFc,oCAEN,EAFM;AAAA,4CAEFa,QAFE;AAAA,MAEFA,QAFE,sCAES,EAFT;AAItB,SAAO;AACHd,IAAAA,OAAO,EAAE;AAAEe,MAAAA,EAAE,EAAEf,OAAO,CAACe,EAAd;AAAkBC,MAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAAhC;AAAsCC,MAAAA,IAAI,EAAEjB,OAAO,CAACiB;AAApD,KADN;AAEHhB,IAAAA,KAAK,EAALA,KAFG;AAGHF,IAAAA,eAAe,EAAEe,QAAQ,CAACf,eAAT,IAA4B;AAH1C,GAAP;AAKH,CAViB,EAWlB;AAAEZ,EAAAA,aAAa,EAAbA;AAAF,CAXkB,EAYlB,IAZkB,EAalB;AAAE+B,EAAAA,kBAAkB;AAApB,CAbkB,CAAP,eAcbrC,KAAK,CAACsC,IAAN,CAAWrB,cAAX,CAda,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport styled from \"@emotion/styled\";\nimport isNumeric from \"isnumeric\";\nimport { set, isEqual } from \"lodash\";\nimport SingleImageUpload from \"@webiny/app-admin/components/SingleImageUpload\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getElement } from \"@webiny/app-page-builder/editor/selectors\";\n\nconst position = { left: \"flex-start\", center: \"center\", right: \"flex-end\" };\n\nconst AlignImage = styled(\"div\")((props: any) => ({\n    img: {\n        alignSelf: position[props.align]\n    }\n}));\n\nconst ImageContainer = props => {\n    const { horizontalAlign, updateElement, element } = props;\n    const image = { ...props.image };\n\n    const imgStyle = { width: null, height: null };\n    if (image.width) {\n        const { width } = image;\n        imgStyle.width = isNumeric(width) ? parseInt(width) : width;\n    }\n    if (image.height) {\n        const { height } = image;\n        imgStyle.height = isNumeric(height) ? parseInt(height) : height;\n    }\n\n    const onChange = useCallback(\n        async data => {\n            updateElement({ element: set(element, \"data.image.file\", data), merge: true });\n        },\n        [element]\n    );\n\n    return (\n        <AlignImage align={horizontalAlign}>\n            <SingleImageUpload\n                imagePreviewProps={{ style: imgStyle, srcSet: \"auto\" }}\n                onChange={onChange}\n                value={image.file}\n            />\n        </AlignImage>\n    );\n};\n\nexport default connect<any, any, any>(\n    (state, { elementId }) => {\n        const element = getElement(state, elementId);\n        const { image = {}, settings = {} } = element.data;\n\n        return {\n            element: { id: element.id, type: element.type, path: element.path },\n            image,\n            horizontalAlign: settings.horizontalAlign || \"center\"\n        };\n    },\n    { updateElement },\n    null,\n    { areStatePropsEqual: isEqual }\n)(React.memo(ImageContainer));\n"],"file":"ImageContainer.js"}