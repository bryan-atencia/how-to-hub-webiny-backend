{"version":3,"sources":["../../../../../src/editor/plugins/elements/pagesList/PagesList.tsx"],"names":["React","Query","usePageBuilder","loadPages","getPlugins","PagesList","data","component","vars","components","pageList","find","cmp","componentName","theme","ListComponent","sort","sortBy","parseInt","sortDirection","variables","category","tags","tagsRule","limit","resultsPerPage","after","undefined","before","loading","refetch","pages","length","prevPage","meta","hasPreviousPage","cursors","nextPage","hasNextPage","memo"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { usePageBuilder } from \"@webiny/app-page-builder/hooks/usePageBuilder\";\nimport { loadPages } from \"./graphql\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { get } from \"lodash\";\nimport { PbPageElementPagesListComponentPlugin } from \"@webiny/app-page-builder/types\";\n\nconst PagesList = ({ data }) => {\n    const { component, ...vars } = data;\n    const components = getPlugins<PbPageElementPagesListComponentPlugin>(\n        \"pb-page-element-pages-list-component\"\n    );\n    const pageList = components.find(cmp => cmp.componentName === component);\n    const { theme } = usePageBuilder();\n\n    if (!pageList) {\n        return <div>Selected page list component not found!</div>;\n    }\n\n    const { component: ListComponent } = pageList;\n\n    if (!ListComponent) {\n        return <div>You must select a component to render your list!</div>;\n    }\n\n    let sort = null;\n    if (vars.sortBy) {\n        sort = { [vars.sortBy]: parseInt(vars.sortDirection) || -1 };\n    }\n\n    const variables = {\n        category: vars.category,\n        sort,\n        tags: vars.tags,\n        tagsRule: vars.tagsRule,\n        limit: parseInt(vars.resultsPerPage),\n        after: undefined,\n        before: undefined\n    };\n\n    return (\n        <Query query={loadPages} variables={variables}>\n            {({ data, loading, refetch }) => {\n                if (loading) {\n                    return <div>Loading...</div>;\n                }\n\n                const pages = get(data, \"pageBuilder.listPublishedPages\");\n\n                if (!pages || !pages.data.length) {\n                    return <div>No pages match the criteria.</div>;\n                }\n\n                let prevPage = null;\n                if (pages.meta.hasPreviousPage) {\n                    prevPage = () => refetch({ ...variables, before: pages.meta.cursors.before });\n                }\n\n                let nextPage = null;\n                if (pages.meta.hasNextPage) {\n                    nextPage = () => refetch({ ...variables, after: pages.meta.cursors.after });\n                }\n\n                return (\n                    <ListComponent\n                        {...pages}\n                        nextPage={nextPage}\n                        prevPage={prevPage}\n                        theme={theme}\n                    />\n                );\n            }}\n        </Query>\n    );\n};\n\nexport default React.memo(PagesList);\n"],"file":"PagesList.js"}