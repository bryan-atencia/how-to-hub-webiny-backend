{"version":3,"sources":["../../../../../src/editor/plugins/elements/button/ButtonContainer.tsx"],"names":["React","useHandler","connect","set","updateElement","getElement","ConnectedSlate","excludePlugins","ButtonContainer","props","getAllClasses","elementStyle","elementAttributes","element","data","type","icon","svg","alignItems","position","onChange","value","display","justifyContent","__html","id","state","elementId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,UAAT,QAA2B,2CAA3B;AACA,OAAOC,cAAP,MAA2B,2DAA3B;AAEA,IAAMC,cAAc,GAAG,CACnB,gCADmB,EAEnB,iCAFmB,EAGnB,wCAHmB,EAInB,0CAJmB,EAKnB,gCALmB,EAMnB,8BANmB,EAOnB,8BAPmB,EAQnB,6BARmB,CAAvB;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,MACrBC,aADqB,GACuCD,KADvC,CACrBC,aADqB;AAAA,MACNC,YADM,GACuCF,KADvC,CACNE,YADM;AAAA,MACQC,iBADR,GACuCH,KADvC,CACQG,iBADR;AAAA,MAC2BC,OAD3B,GACuCJ,KADvC,CAC2BI,OAD3B;;AAAA,aAEWA,OAAO,CAACC,IAAR,IAAgB,EAF3B;AAAA,uBAErBC,IAFqB;AAAA,MAErBA,IAFqB,0BAEd,SAFc;AAAA,uBAEHC,IAFG;AAAA,MAEHA,IAFG,0BAEI,EAFJ;;AAG7B,MAAMC,GAAG,GAAGD,IAAI,CAACC,GAAL,IAAY,IAAxB;AAH6B,MAIrBC,UAJqB,GAINP,YAJM,CAIrBO,UAJqB;AAAA,uBAMCF,IAND,CAMrBG,QANqB;AAAA,MAMrBA,QANqB,+BAMV,MANU;AAQ7B,MAAMC,QAAQ,GAAGnB,UAAU,CAACQ,KAAD,EAAQ;AAAA,QAAGI,OAAH,SAAGA,OAAH;AAAA,QAAYT,aAAZ,SAAYA,aAAZ;AAAA,WAAgC,UAACiB,KAAD,EAAmB;AAClFjB,MAAAA,aAAa,CAAC;AAAES,QAAAA,OAAO,EAAEV,GAAG,CAACU,OAAD,EAAU,WAAV,EAAuBQ,KAAvB;AAAd,OAAD,CAAb;AACH,KAFkC;AAAA,GAAR,CAA3B;AAIA,sBACI;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,cAAc,EAAEL;AAFb;AADX,kBAMI;AACI,IAAA,IAAI,EAAE,IADV;AAEI,IAAA,KAAK,EAAEP;AAFX,KAGQC,iBAHR;AAII,IAAA,SAAS,EAAEF,aAAa,CACpB,+BADoB,EAEpB,oCAAoCK,IAFhB,EAGpB,0CAA0CI,QAHtB;AAJ5B,MAUKF,GAAG,iBAAI;AAAM,IAAA,uBAAuB,EAAE;AAAEO,MAAAA,MAAM,EAAEP;AAAV;AAA/B,IAVZ,eAWI,oBAAC,cAAD;AACI,IAAA,SAAS,EAAEJ,OAAO,CAACY,EADvB;AAEI,IAAA,QAAQ,EAAEL,QAFd;AAGI,IAAA,OAAO,EAAEb;AAHb,IAXJ,CANJ,CADJ;AA0BH,CAtCD;;AAwCA,eAAeL,OAAO,CAClB,UAACwB,KAAD,EAAQjB,KAAR;AAAA,SAAmB;AAAEI,IAAAA,OAAO,EAAER,UAAU,CAACqB,KAAD,EAAQjB,KAAK,CAACkB,SAAd;AAArB,GAAnB;AAAA,CADkB,EAElB;AAAEvB,EAAAA,aAAa,EAAbA;AAAF,CAFkB,CAAP,CAGbI,eAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { set } from \"dot-prop-immutable\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport ConnectedSlate from \"@webiny/app-page-builder/editor/components/ConnectedSlate\";\n\nconst excludePlugins = [\n    \"pb-editor-slate-menu-item-link\",\n    \"pb-editor-slate-menu-item-align\",\n    \"pb-editor-slate-menu-item-ordered-list\",\n    \"pb-editor-slate-menu-item-unordered-list\",\n    \"pb-editor-slate-menu-item-code\",\n    \"pb-editor-slate-editor-align\",\n    \"pb-editor-slate-editor-lists\",\n    \"pb-editor-slate-editor-link\"\n];\n\nconst ButtonContainer = props => {\n    const { getAllClasses, elementStyle, elementAttributes, element } = props;\n    const { type = \"default\", icon = {} } = element.data || {};\n    const svg = icon.svg || null;\n    const { alignItems } = elementStyle;\n\n    const { position = \"left\" } = icon;\n\n    const onChange = useHandler(props, ({ element, updateElement }) => (value: string) => {\n        updateElement({ element: set(element, \"data.text\", value) });\n    });\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: alignItems\n            }}\n        >\n            <a\n                href={null}\n                style={elementStyle}\n                {...elementAttributes}\n                className={getAllClasses(\n                    \"webiny-pb-page-element-button\",\n                    \"webiny-pb-page-element-button--\" + type,\n                    \"webiny-pb-page-element-button__icon--\" + position\n                )}\n            >\n                {svg && <span dangerouslySetInnerHTML={{ __html: svg }} />}\n                <ConnectedSlate\n                    elementId={element.id}\n                    onChange={onChange}\n                    exclude={excludePlugins}\n                />\n            </a>\n        </div>\n    );\n};\n\nexport default connect<any, any, any>(\n    (state, props) => ({ element: getElement(state, props.elementId) }),\n    { updateElement }\n)(ButtonContainer);\n"],"file":"ButtonContainer.js"}