import React from "react";
import { useHandler } from "@webiny/app/hooks/useHandler";
import { connect } from "@webiny/app-page-builder/editor/redux";
import { set } from "dot-prop-immutable";
import ConnectedSlate from "@webiny/app-page-builder/editor/components/ConnectedSlate";
import { ElementRoot } from "@webiny/app-page-builder/render/components/ElementRoot";
import { updateElement } from "@webiny/app-page-builder/editor/actions";
import { getElement } from "@webiny/app-page-builder/editor/selectors";
export var className = "webiny-pb-base-page-element-style webiny-pb-page-element-text";

var Text = function Text(props) {
  var onChange = useHandler(props, function (_ref) {
    var element = _ref.element,
        updateElement = _ref.updateElement;
    return function (value) {
      updateElement({
        element: set(element, "data.text", value)
      });
    };
  });
  return /*#__PURE__*/React.createElement(ElementRoot, {
    element: props.element,
    className: className
  }, /*#__PURE__*/React.createElement(ConnectedSlate, {
    elementId: props.element.id,
    onChange: onChange
  }));
};

export default connect(function (state, props) {
  return {
    element: getElement(state, props.elementId)
  };
}, {
  updateElement: updateElement
})(Text);
//# sourceMappingURL=Text.js.map