{"version":3,"sources":["../../../../../src/editor/plugins/elements/text/index.tsx"],"names":["React","loremIpsum","Text","className","createValue","defaultLipsum","count","units","sentenceLowerBound","sentenceUpperBound","name","type","elementType","toolbar","title","group","preview","previewText","settings","target","create","content","options","text","lipsum","elements","data","typography","margin","mobile","top","left","right","bottom","desktop","advanced","padding","all","render","element","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,IAAeC,SAAf,QAAgC,QAAhC;AACA,SAASC,WAAT,QAA4B,kDAA5B;AAGA,gBAAe,YAAiC;AAC5C,MAAMC,aAAa,GAAG;AAClBC,IAAAA,KAAK,EAAE,CADW;AAElBC,IAAAA,KAAK,EAAE,WAFW;AAGlBC,IAAAA,kBAAkB,EAAE,CAHF;AAIlBC,IAAAA,kBAAkB,EAAE;AAJF,GAAtB;AAOA,SAAO;AACHC,IAAAA,IAAI,EAAE,6BADH;AAEHC,IAAAA,IAAI,EAAE,wBAFH;AAGHC,IAAAA,WAAW,EAAE,MAHV;AAIHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,KAAK,EAAE,+BAFF;AAGLC,MAAAA,OAHK,qBAGK;AACN,YAAMC,WAAW,GAAGhB,UAAU,CAACI,aAAD,CAA9B;AAEA,4BAAO;AAAG,UAAA,SAAS,EAAEF;AAAd,WAA0Bc,WAA1B,CAAP;AACH;AAPI,KAJN;AAaHC,IAAAA,QAAQ,EAAE,CACN,4CADM,EAEN,EAFM,EAGN,wCAHM,EAIN,wCAJM,EAKN,EALM,EAMN,yCANM,EAON,wCAPM,EAQN,EARM,EASN,uCATM,EAUN,wCAVM,EAWN,EAXM,CAbP;AA0BHC,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,WAAlB,CA1BL;AA2BHC,IAAAA,MA3BG,wBA2BkC;AAAA,8BAA5BC,OAA4B;AAAA,UAA5BA,OAA4B,6BAAlB,EAAkB;AAAA,UAAXC,OAAW;;AACjC,UAAML,WAAW,GAAGI,OAAO,CAACE,IAAR,IAAgBtB,UAAU,CAACoB,OAAO,CAACG,MAAR,IAAkBnB,aAAnB,CAA9C;AAEA;AACIM,QAAAA,IAAI,EAAE,MADV;AAEIc,QAAAA,QAAQ,EAAE,EAFd;AAGIC,QAAAA,IAAI,EAAE;AACFH,UAAAA,IAAI,EAAEnB,WAAW,CAACa,WAAD,EAAcI,OAAO,CAACM,UAAR,IAAsB,WAApC,CADf;AAEFT,UAAAA,QAAQ,EAAE;AACNU,YAAAA,MAAM,EAAE;AACJC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,GAAG,EAAE,CAAP;AAAUC,gBAAAA,IAAI,EAAE,CAAhB;AAAmBC,gBAAAA,KAAK,EAAE,CAA1B;AAA6BC,gBAAAA,MAAM,EAAE;AAArC,eADJ;AAEJC,cAAAA,OAAO,EAAE;AAAEJ,gBAAAA,GAAG,EAAE,CAAP;AAAUC,gBAAAA,IAAI,EAAE,CAAhB;AAAmBC,gBAAAA,KAAK,EAAE,CAA1B;AAA6BC,gBAAAA,MAAM,EAAE;AAArC,eAFL;AAGJE,cAAAA,QAAQ,EAAE;AAHN,aADF;AAMNC,YAAAA,OAAO,EAAE;AACLF,cAAAA,OAAO,EAAE;AAAEG,gBAAAA,GAAG,EAAE;AAAP,eADJ;AAELR,cAAAA,MAAM,EAAE;AAAEQ,gBAAAA,GAAG,EAAE;AAAP;AAFH;AANH;AAFR;AAHV,SAiBOf,OAjBP;AAmBH,KAjDE;AAkDHgB,IAAAA,MAlDG,yBAkDiB;AAAA,UAAXC,OAAW,SAAXA,OAAW;AAChB,0BAAO,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEA,OAAO,CAACC;AAAzB,QAAP;AACH;AApDE,GAAP;AAsDH,CA9DD","sourcesContent":["import React from \"react\";\nimport loremIpsum from \"lorem-ipsum\";\nimport Text, { className } from \"./Text\";\nimport { createValue } from \"@webiny/app-page-builder/editor/components/Slate\";\nimport { PbEditorPageElementPlugin } from \"@webiny/app-page-builder/types\";\n\nexport default (): PbEditorPageElementPlugin => {\n    const defaultLipsum = {\n        count: 3,\n        units: \"sentences\",\n        sentenceLowerBound: 5,\n        sentenceUpperBound: 15\n    };\n\n    return {\n        name: \"pb-editor-page-element-text\",\n        type: \"pb-editor-page-element\",\n        elementType: \"text\",\n        toolbar: {\n            title: \"Text\",\n            group: \"pb-editor-element-group-basic\",\n            preview() {\n                const previewText = loremIpsum(defaultLipsum);\n\n                return <p className={className}>{previewText}</p>;\n            }\n        },\n        settings: [\n            \"pb-editor-page-element-settings-background\",\n            \"\",\n            \"pb-editor-page-element-settings-border\",\n            \"pb-editor-page-element-settings-shadow\",\n            \"\",\n            \"pb-editor-page-element-settings-padding\",\n            \"pb-editor-page-element-settings-margin\",\n            \"\",\n            \"pb-editor-page-element-settings-clone\",\n            \"pb-editor-page-element-settings-delete\",\n            \"\"\n        ],\n        target: [\"column\", \"row\", \"list-item\"],\n        create({ content = {}, ...options }) {\n            const previewText = content.text || loremIpsum(content.lipsum || defaultLipsum);\n\n            return {\n                type: \"text\",\n                elements: [],\n                data: {\n                    text: createValue(previewText, content.typography || \"paragraph\"),\n                    settings: {\n                        margin: {\n                            mobile: { top: 0, left: 0, right: 0, bottom: 15 },\n                            desktop: { top: 0, left: 0, right: 0, bottom: 25 },\n                            advanced: true\n                        },\n                        padding: {\n                            desktop: { all: 0 },\n                            mobile: { all: 0 }\n                        }\n                    }\n                },\n                ...options\n            };\n        },\n        render({ element }) {\n            return <Text elementId={element.id} />;\n        }\n    };\n};\n"],"file":"index.js"}