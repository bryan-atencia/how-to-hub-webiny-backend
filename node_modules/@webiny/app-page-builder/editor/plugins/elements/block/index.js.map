{"version":3,"sources":["../../../../../src/editor/plugins/elements/block/index.tsx"],"names":["React","redux","Block","set","createElement","createRow","createColumn","cloneElement","addElementToParent","updateElement","deleteElement","elementCreated","name","type","elementType","settings","create","options","elements","data","width","value","margin","mobile","top","left","right","bottom","desktop","advanced","padding","all","render","props","onReceived","source","target","position","dispatchNew","element","path","block","store","dispatch","onChildDeleted","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,uCAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SACIC,aADJ,EAEIC,SAFJ,EAGIC,YAHJ,EAIIC,YAJJ,EAKIC,kBALJ,QAMO,uCANP;AAOA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,cAHJ,QAIO,yCAJP;AAOA,gBAAe,YAAiC;AAC5C,SAAO;AACHC,IAAAA,IAAI,EAAE,8BADH;AAEHC,IAAAA,IAAI,EAAE,wBAFH;AAGHC,IAAAA,WAAW,EAAE,OAHV;AAIHC,IAAAA,QAAQ,EAAE,CACN,4CADM,EAEN,2CAFM,EAGN,EAHM,EAIN,wCAJM,EAKN,wCALM,EAMN,EANM,EAON,yCAPM,EAQN,wCARM,EASN,uCATM,EAUN,wCAVM,EAWN,uDAXM,EAYN,gDAZM,EAaN,EAbM,EAcN,uCAdM,EAeN,wCAfM,EAgBN,EAhBM,CAJP;AAsBHC,IAAAA,MAtBG,oBAsBkB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AACjB;AACIJ,QAAAA,IAAI,EAAE,OADV;AAEIK,QAAAA,QAAQ,EAAE,CACNb,SAAS,CAAC;AACNa,UAAAA,QAAQ,EAAE,CAACZ,YAAY,CAAC;AAAEa,YAAAA,IAAI,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAR,WAAD,CAAb;AADJ,SAAD,CADH,CAFd;AAOID,QAAAA,IAAI,EAAE;AACFJ,UAAAA,QAAQ,EAAE;AACNK,YAAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aADD;AAENC,YAAAA,MAAM,EAAE;AACJC,cAAAA,MAAM,EAAE;AAAEC,gBAAAA,GAAG,EAAE,EAAP;AAAWC,gBAAAA,IAAI,EAAE,EAAjB;AAAqBC,gBAAAA,KAAK,EAAE,EAA5B;AAAgCC,gBAAAA,MAAM,EAAE;AAAxC,eADJ;AAEJC,cAAAA,OAAO,EAAE;AAAEJ,gBAAAA,GAAG,EAAE,EAAP;AAAWC,gBAAAA,IAAI,EAAE,CAAjB;AAAoBC,gBAAAA,KAAK,EAAE,CAA3B;AAA8BC,gBAAAA,MAAM,EAAE;AAAtC,eAFL;AAGJE,cAAAA,QAAQ,EAAE;AAHN,aAFF;AAONC,YAAAA,OAAO,EAAE;AACLP,cAAAA,MAAM,EAAE;AAAEQ,gBAAAA,GAAG,EAAE;AAAP,eADH;AAELH,cAAAA,OAAO,EAAE;AAAEG,gBAAAA,GAAG,EAAE;AAAP;AAFJ;AAPH;AADR;AAPV,SAqBOd,OArBP;AAuBH,KA9CE;AA+CHe,IAAAA,MA/CG,kBA+CIC,KA/CJ,EA+CW;AACV,0BAAO,oBAAC,KAAD,EAAWA,KAAX,CAAP;AACH,KAjDE;AAkDH;AACAC,IAAAA,UAnDG,4BAmDkD;AAAA,UAAxCC,MAAwC,QAAxCA,MAAwC;AAAA,UAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,+BAAxBC,QAAwB;AAAA,UAAxBA,QAAwB,8BAAb,IAAa;AACjD,UAAIC,WAAW,GAAG,KAAlB;AACA,UAAIC,OAAJ;;AACA,UAAIJ,MAAM,CAACK,IAAX,EAAiB;AACbD,QAAAA,OAAO,GAAGhC,YAAY,CAAC4B,MAAD,CAAtB;AACH,OAFD,MAEO;AACHG,QAAAA,WAAW,GAAG,IAAd;AACAC,QAAAA,OAAO,GAAGnC,aAAa,CAAC+B,MAAM,CAACtB,IAAR,EAAc,EAAd,EAAkBuB,MAAlB,CAAvB;AACH;;AAED,UAAMK,KAAK,GAAGjC,kBAAkB,CAAC+B,OAAD,EAAUH,MAAV,EAAkBC,QAAlB,CAAhC,CAViD,CAYjD;;AACApC,MAAAA,KAAK,CAACyC,KAAN,CAAYC,QAAZ,CAAqBlC,aAAa,CAAC;AAAE8B,QAAAA,OAAO,EAAEE;AAAX,OAAD,CAAlC,EAbiD,CAejD;;AACA,UAAIN,MAAM,CAACK,IAAX,EAAiB;AACbvC,QAAAA,KAAK,CAACyC,KAAN,CAAYC,QAAZ,CAAqBjC,aAAa,CAAC;AAAE6B,UAAAA,OAAO,EAAEJ;AAAX,SAAD,CAAlC;AACH;;AAED,UAAIG,WAAJ,EAAiB;AACbrC,QAAAA,KAAK,CAACyC,KAAN,CAAYC,QAAZ,CAAqBhC,cAAc,CAAC;AAAE4B,UAAAA,OAAO,EAAPA,OAAF;AAAWJ,UAAAA,MAAM,EAANA;AAAX,SAAD,CAAnC;AACH;AACJ,KA1EE;AA2EHS,IAAAA,cA3EG,iCA2EyB;AAAA,UAAXL,OAAW,SAAXA,OAAW;;AACxB,UAAIA,OAAO,CAACrB,QAAR,CAAiB2B,MAAjB,KAA4B,CAAhC,EAAmC;AAC/BN,QAAAA,OAAO,GAAGpC,GAAG,CAACoC,OAAD,EAAU,UAAV,EAAsB,CAC/BlC,SAAS,CAAC;AACNa,UAAAA,QAAQ,EAAE,CAACZ,YAAY,CAAC;AAAEa,YAAAA,IAAI,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT;AAAR,WAAD,CAAb;AADJ,SAAD,CADsB,CAAtB,CAAb;AAMAnB,QAAAA,KAAK,CAACyC,KAAN,CAAYC,QAAZ,CAAqBlC,aAAa,CAAC;AAAE8B,UAAAA,OAAO,EAAPA;AAAF,SAAD,CAAlC;AACH;AACJ;AArFE,GAAP;AAuFH,CAxFD","sourcesContent":["import React from \"react\";\nimport { redux } from \"@webiny/app-page-builder/editor/redux\";\nimport Block from \"./Block\";\nimport { set } from \"dot-prop-immutable\";\nimport {\n    createElement,\n    createRow,\n    createColumn,\n    cloneElement,\n    addElementToParent\n} from \"@webiny/app-page-builder/editor/utils\";\nimport {\n    updateElement,\n    deleteElement,\n    elementCreated\n} from \"@webiny/app-page-builder/editor/actions\";\nimport { PbEditorPageElementPlugin } from \"@webiny/app-page-builder/types\";\n\nexport default (): PbEditorPageElementPlugin => {\n    return {\n        name: \"pb-editor-page-element-block\",\n        type: \"pb-editor-page-element\",\n        elementType: \"block\",\n        settings: [\n            \"pb-editor-page-element-settings-background\",\n            \"pb-editor-page-element-settings-animation\",\n            \"\",\n            \"pb-editor-page-element-settings-border\",\n            \"pb-editor-page-element-settings-shadow\",\n            \"\",\n            \"pb-editor-page-element-settings-padding\",\n            \"pb-editor-page-element-settings-margin\",\n            \"pb-editor-page-element-settings-width\",\n            \"pb-editor-page-element-settings-height\",\n            \"pb-editor-page-element-settings-horizontal-align-flex\",\n            \"pb-editor-page-element-settings-vertical-align\",\n            \"\",\n            \"pb-editor-page-element-settings-clone\",\n            \"pb-editor-page-element-settings-delete\",\n            \"\"\n        ],\n        create(options = {}) {\n            return {\n                type: \"block\",\n                elements: [\n                    createRow({\n                        elements: [createColumn({ data: { width: 100 } })]\n                    })\n                ],\n                data: {\n                    settings: {\n                        width: { value: \"1000px\" },\n                        margin: {\n                            mobile: { top: 15, left: 15, right: 15, bottom: 15 },\n                            desktop: { top: 25, left: 0, right: 0, bottom: 25 },\n                            advanced: true\n                        },\n                        padding: {\n                            mobile: { all: 10 },\n                            desktop: { all: 0 }\n                        }\n                    }\n                },\n                ...options\n            };\n        },\n        render(props) {\n            return <Block {...props} />;\n        },\n        // This callback is executed when another element is dropped on the drop zones with type \"block\"\n        onReceived({ source, target, position = null }: any) {\n            let dispatchNew = false;\n            let element;\n            if (source.path) {\n                element = cloneElement(source);\n            } else {\n                dispatchNew = true;\n                element = createElement(source.type, {}, target);\n            }\n\n            const block = addElementToParent(element, target, position);\n\n            // Dispatch update action\n            redux.store.dispatch(updateElement({ element: block }));\n\n            // Delete exiting element\n            if (source.path) {\n                redux.store.dispatch(deleteElement({ element: source }));\n            }\n\n            if (dispatchNew) {\n                redux.store.dispatch(elementCreated({ element, source }));\n            }\n        },\n        onChildDeleted({ element }) {\n            if (element.elements.length === 0) {\n                element = set(element, \"elements\", [\n                    createRow({\n                        elements: [createColumn({ data: { width: 100 } })]\n                    })\n                ]);\n\n                redux.store.dispatch(updateElement({ element }));\n            }\n        }\n    };\n};\n"],"file":"index.js"}