import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React from "react";
import { ReactComponent as IconSvg } from "@svgr/webpack!./round-star_border-24px.svg";
import IconSettings from "./IconSettings";
import styled from "@emotion/styled";
import Icon from "./Icon";
import { getSvg } from "./utils";
import Action from "./../../elementSettings/components/Action";
export default (function () {
  var PreviewBox = /*#__PURE__*/styled("div", {
    target: "e1dhgwzy0",
    label: "PreviewBox"
  })({
    textAlign: "center",
    height: 50,
    color: "var(--mdc-theme-text-primary-on-background)",
    svg: {
      height: 50,
      width: 50
    }
  });
  return [{
    name: "pb-editor-page-element-icon",
    type: "pb-editor-page-element",
    elementType: "icon",
    toolbar: {
      title: "Icon",
      group: "pb-editor-element-group-basic",
      preview: function preview() {
        return /*#__PURE__*/React.createElement(PreviewBox, null, /*#__PURE__*/React.createElement(IconSvg, null));
      }
    },
    settings: ["pb-editor-page-element-settings-icon", "", "pb-editor-page-element-settings-padding", "pb-editor-page-element-settings-margin", ["pb-editor-page-element-settings-horizontal-align", {
      alignments: ["left", "center", "right"]
    }], "", "pb-editor-page-element-settings-clone", "pb-editor-page-element-settings-delete", ""],
    target: ["column", "row"],
    create: function create(options) {
      return _objectSpread({
        type: "icon",
        elements: [],
        data: {
          icon: {
            id: ["far", "star"],
            svg: getSvg(["far", "star"], {
              width: 50
            }),
            width: 50
          },
          settings: {
            horizontalAlign: "center",
            margin: {
              desktop: {
                all: 0
              },
              mobile: {
                all: 0
              }
            },
            padding: {
              desktop: {
                all: 0
              },
              mobile: {
                all: 0
              }
            }
          }
        }
      }, options);
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Icon, props);
    }
  }, {
    name: "pb-editor-page-element-settings-icon",
    type: "pb-editor-page-element-settings",
    renderAction: function renderAction() {
      return /*#__PURE__*/React.createElement(Action, {
        plugin: this.name,
        tooltip: "Icon",
        icon: /*#__PURE__*/React.createElement(IconSvg, null)
      });
    },
    renderMenu: function renderMenu() {
      return /*#__PURE__*/React.createElement(IconSettings, null);
    }
  }];
});
//# sourceMappingURL=index.js.map