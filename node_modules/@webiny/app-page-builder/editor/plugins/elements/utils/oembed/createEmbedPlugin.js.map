{"version":3,"sources":["../../../../../../src/editor/plugins/elements/utils/oembed/createEmbedPlugin.tsx"],"names":["React","OEmbed","createEmbedPlugin","config","name","type","elementType","toolbar","settings","target","create","content","options","elements","data","margin","desktop","all","mobile","padding","render","props","element","oembed","onCreate","renderElementPreview","createEmbedSettingsPlugin"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAoC,mDAApC;AAgCA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAA0D;AACvF,SAAO;AACHC,IAAAA,IAAI,EAAE,4BAA4BD,MAAM,CAACE,IADtC;AAEHA,IAAAA,IAAI,EAAE,wBAFH;AAGHC,IAAAA,WAAW,EAAEH,MAAM,CAACE,IAHjB;AAIHE,IAAAA,OAAO,EAAEJ,MAAM,CAACI,OAJb;AAKHC,IAAAA,QAAQ,EAAEL,MAAM,CAACK,QAAP,IAAmB,CAAC,wCAAD,EAA2C,EAA3C,CAL1B;AAMHC,IAAAA,MAAM,EAAEN,MAAM,CAACM,MAAP,IAAiB,CAAC,QAAD,EAAW,KAAX,EAAkB,WAAlB,CANtB;AAOH;AACAC,IAAAA,MARG,wBAQkC;AAAA,8BAA5BC,OAA4B;AAAA,UAA5BA,OAA4B,6BAAlB,EAAkB;AAAA,UAAXC,OAAW;;AACjC;AACIP,QAAAA,IAAI,EAAEF,MAAM,CAACE,IADjB;AAEIQ,QAAAA,QAAQ,EAAE,EAFd;AAGIC,QAAAA,IAAI,EAAE;AACFN,UAAAA,QAAQ,EAAE;AACNO,YAAAA,MAAM,EAAE;AAAEC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAP,eAAX;AAAuBC,cAAAA,MAAM,EAAE;AAAED,gBAAAA,GAAG,EAAE;AAAP;AAA/B,aADF;AAENE,YAAAA,OAAO,EAAE;AAAEH,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,GAAG,EAAE;AAAP,eAAX;AAAuBC,cAAAA,MAAM,EAAE;AAAED,gBAAAA,GAAG,EAAE;AAAP;AAA/B;AAFH;AADR;AAHV,SASOL,OATP;AAWH,KApBE;AAqBHQ,IAAAA,MArBG,kBAqBIC,KArBJ,EAqBW;AACV,UAAIlB,MAAM,CAACiB,MAAX,EAAmB;AACf,eAAOjB,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAP;AACH;;AAED,0BAAO,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA,KAAK,CAACC;AAAvB,SAAqCnB,MAAM,CAACoB,MAAP,IAAiB,EAAtD,EAAP;AACH,KA3BE;AA4BHC,IAAAA,QAAQ,EAAErB,MAAM,CAACqB,QAAP,IAAmB,eA5B1B;AA6BHC,IAAAA,oBAAoB,EAAEtB,MAAM,CAACsB;AA7B1B,GAAP;AA+BH,CAhCM;AAuCP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,QAGkC;AAAA,MAFvErB,IAEuE,SAFvEA,IAEuE;AAAA,MADvEe,MACuE,SADvEA,MACuE;AACvE,SAAO;AACHhB,IAAAA,IAAI,EAAE,8CAA8CC,IADjD;AAEHA,IAAAA,IAAI,EAAE,0CAFH;AAGHC,IAAAA,WAAW,EAAED,IAHV;AAIHe,IAAAA,MAAM,EAANA;AAJG,GAAP;AAMH,CAVM","sourcesContent":["import * as React from \"react\";\nimport { BindComponent } from \"@webiny/form\";\nimport OEmbed, { OEmbedProps } from \"@webiny/app-page-builder/editor/components/OEmbed\";\nimport {\n    PbElement,\n    PbEditorPageElementPlugin,\n    PbEditorPageElementAdvancedSettingsPlugin\n} from \"@webiny/app-page-builder/types\";\n\ntype EmbedPluginConfig = {\n    type: string;\n    toolbar?: {\n        title?: string;\n        group?: string;\n        preview?: () => React.ReactNode;\n    };\n    render?: ({ element }) => React.ReactNode;\n    oembed?: {\n        global?: string;\n        sdk?: string;\n        onData?: Function;\n        renderEmbed?: (props: OEmbedProps) => React.ReactElement;\n        init?: (params: { node: HTMLElement }) => void;\n    };\n    settings?: Array<string>;\n    target?: Array<string>;\n    onCreate?: string;\n    renderElementPreview?: (params: {\n        element: PbElement;\n        width: number;\n        height: number;\n    }) => React.ReactElement;\n};\n\nexport const createEmbedPlugin = (config: EmbedPluginConfig): PbEditorPageElementPlugin => {\n    return {\n        name: \"pb-editor-page-element-\" + config.type,\n        type: \"pb-editor-page-element\",\n        elementType: config.type,\n        toolbar: config.toolbar,\n        settings: config.settings || [\"pb-editor-page-element-settings-delete\", \"\"],\n        target: config.target || [\"column\", \"row\", \"list-item\"],\n        // eslint-disable-next-line\n        create({ content = {}, ...options }) {\n            return {\n                type: config.type,\n                elements: [],\n                data: {\n                    settings: {\n                        margin: { desktop: { all: 0 }, mobile: { all: 0 } },\n                        padding: { desktop: { all: 0 }, mobile: { all: 0 } }\n                    }\n                },\n                ...options\n            };\n        },\n        render(props) {\n            if (config.render) {\n                return config.render(props);\n            }\n\n            return <OEmbed element={props.element} {...(config.oembed || {})} />;\n        },\n        onCreate: config.onCreate || \"open-settings\",\n        renderElementPreview: config.renderElementPreview\n    };\n};\n\ntype EmbedPluginSidebarConfig = {\n    type: string;\n    render(params?: { Bind: BindComponent }): React.ReactElement;\n};\n\nexport const createEmbedSettingsPlugin = ({\n    type,\n    render\n}: EmbedPluginSidebarConfig): PbEditorPageElementAdvancedSettingsPlugin => {\n    return {\n        name: \"pb-editor-page-element-advanced-settings-\" + type,\n        type: \"pb-editor-page-element-advanced-settings\",\n        elementType: type,\n        render\n    };\n};\n"],"file":"createEmbedPlugin.js"}