{"version":3,"sources":["../../../../../src/editor/plugins/defaultBar/components/PublishPageButton.tsx"],"names":["React","connect","ConfirmationDialog","ButtonPrimary","getPage","Mutation","useSnackbar","useRouter","PUBLISH_REVISION","PublishPageButton","page","history","showSnackbar","showConfirmation","update","variables","id","response","error","data","pageBuilder","publishRevision","message","push","setTimeout","version","state","areStatePropsEqual"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,2CAAxB;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,mBAChBH,SAAS,EADO;AAAA,MAC5BI,OAD4B,cAC5BA,OAD4B;;AAAA,qBAEXL,WAAW,EAFA;AAAA,MAE5BM,YAF4B,gBAE5BA,YAF4B;;AAGpC,sBACI,oBAAC,kBAAD;AACI,mBAAa,uCADjB;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC;AAHZ,KAKK;AAAA,QAAGC,gBAAH,SAAGA,gBAAH;AAAA,wBACG,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEL,gBAApB;AAAsC,MAAA,cAAc,EAAE,CAAC,aAAD;AAAtD,OACK,UAAAM,MAAM;AAAA,0BACH,oBAAC,aAAD;AACI,QAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AACLD,kBAAAA,gBAAgB,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACUC,MAAM,CAAC;AAC1BC,8BAAAA,SAAS,EAAE;AACPC,gCAAAA,EAAE,EAAEN,IAAI,CAACM;AADF;AADe,6BAAD,CADhB;;AAAA;AACPC,4BAAAA,QADO;AAOLC,4BAAAA,KAPK,GAOKD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BC,eAP/B,CAOLH,KAPK;;AAAA,iCAQTA,KARS;AAAA;AAAA;AAAA;;AAAA,6DASFN,YAAY,CAACM,KAAK,CAACI,OAAP,CATV;;AAAA;AAYbX,4BAAAA,OAAO,CAACY,IAAR,kCAAuCb,IAAI,CAACM,EAA5C,GAZa,CAcb;;AACAQ,4BAAAA,UAAU,CAAC,YAAM;AACbZ,8BAAAA,YAAY,CAAC,uCAAD,CAAZ;AACH,6BAFS,EAEP,GAFO,CAAV;;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAD,GAAhB;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;AADX,SAuBKF,IAAI,CAACe,OAAL,GAAe,CAAf,GAAmB,iBAAnB,GAAuC,SAvB5C,CADG;AAAA,KADX,CADH;AAAA,GALL,CADJ;AAuCH,CA1CD;;AA4CA,eAAexB,OAAO,CAClB,UAAAyB,KAAK;AAAA,SAAK;AAAEhB,IAAAA,IAAI,EAAE,MAAKN,OAAO,CAACsB,KAAD,CAAZ,EAAqB,CAAC,SAAD,CAArB;AAAR,GAAL;AAAA,CADa,EAElB,IAFkB,EAGlB,IAHkB,EAIlB;AAAEC,EAAAA,kBAAkB;AAApB,CAJkB,CAAP,CAKblB,iBALa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { getPage } from \"@webiny/app-page-builder/editor/selectors\";\nimport { omit, isEqual } from \"lodash\";\nimport { Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { PUBLISH_REVISION } from \"./PublishPageButton/graphql\";\n\nconst PublishPageButton = ({ page }) => {\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    return (\n        <ConfirmationDialog\n            data-testid={\"pb-editor-publish-confirmation-dialog\"}\n            title=\"Publish page\"\n            message=\"You are about to publish this page, are you sure want to continue?\"\n        >\n            {({ showConfirmation }) => (\n                <Mutation mutation={PUBLISH_REVISION} refetchQueries={[\"PbListPages\"]}>\n                    {update => (\n                        <ButtonPrimary\n                            onClick={async () => {\n                                showConfirmation(async () => {\n                                    const response = await update({\n                                        variables: {\n                                            id: page.id\n                                        }\n                                    });\n\n                                    const { error } = response.data.pageBuilder.publishRevision;\n                                    if (error) {\n                                        return showSnackbar(error.message);\n                                    }\n\n                                    history.push(`/page-builder/pages?id=${page.id}`);\n\n                                    // Let's wait a bit, because we are also redirecting the user.\n                                    setTimeout(() => {\n                                        showSnackbar(\"Your page was published successfully!\");\n                                    }, 500);\n                                });\n                            }}\n                        >\n                            {page.version > 1 ? \"Publish changes\" : \"Publish\"}\n                        </ButtonPrimary>\n                    )}\n                </Mutation>\n            )}\n        </ConfirmationDialog>\n    );\n};\n\nexport default connect<any, any, any>(\n    state => ({ page: omit(getPage(state), [\"content\"]) }),\n    null,\n    null,\n    { areStatePropsEqual: isEqual }\n)(PublishPageButton);\n"],"file":"PublishPageButton.js"}