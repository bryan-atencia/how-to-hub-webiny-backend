{"version":3,"sources":["../../../../../src/editor/plugins/defaultBar/components/Title.tsx"],"names":["React","useState","useCallback","slugify","connect","Input","updateRevision","getPage","Tooltip","Typography","PageMeta","PageTitle","pageTitleWrapper","PageVersion","TitleInputWrapper","TitleWrapper","Title","pageTitle","pageCategory","pageCategoryUrl","pageLocked","pageVersion","editTitle","setEdit","stateTitle","setTitle","title","enableEdit","onBlur","getRevData","onKeyDown","e","key","preventDefault","autoFocus","window","Cypress","width","display","newData","url","replacement","lower","remove","state","version","locked","category","name","memo"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, SyntheticEvent } from \"react\";\nimport slugify from \"slugify\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { updateRevision } from \"@webiny/app-page-builder/editor/actions\";\nimport { getPage } from \"@webiny/app-page-builder/editor/selectors\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport {\n    PageMeta,\n    PageTitle,\n    pageTitleWrapper,\n    PageVersion,\n    TitleInputWrapper,\n    TitleWrapper\n} from \"./Styled\";\n\ndeclare global {\n    interface Window {\n        Cypress: any;\n    }\n}\n\ntype Props = {\n    title: string;\n    pageTitle: string;\n    pageCategoryUrl: string;\n    pageCategory: string;\n    pageLocked: boolean;\n    pageVersion: number;\n    updateRevision: (params: { title: string; history?: boolean }) => void;\n    editTitle: boolean;\n    enableEdit: Function;\n    setTitle: (title: string) => void;\n    onKeyDown: Function;\n    onBlur: Function;\n};\n\nconst Title = ({\n    pageTitle,\n    pageCategory,\n    pageCategoryUrl,\n    pageLocked,\n    pageVersion,\n    updateRevision\n}: Props) => {\n    const [editTitle, setEdit] = useState(false);\n    const [stateTitle, setTitle] = useState(null);\n    let title = stateTitle === null ? pageTitle : stateTitle;\n    const enableEdit = useCallback(() => setEdit(true), []);\n\n    const onBlur = useCallback(() => {\n        if (title === \"\") {\n            title = \"Untitled\";\n            setTitle(title);\n        }\n        setEdit(false);\n        updateRevision(getRevData({ title, pageTitle, pageCategoryUrl }));\n    }, [title]);\n\n    const onKeyDown = useCallback(\n        (e: SyntheticEvent) => {\n            // @ts-ignore\n            switch (e.key) {\n                case \"Escape\":\n                    e.preventDefault();\n                    setEdit(false);\n                    setTitle(pageTitle);\n                    break;\n                case \"Enter\":\n                    if (title === \"\") {\n                        title = \"Untitled\";\n                        setTitle(title);\n                    }\n\n                    e.preventDefault();\n                    setEdit(false);\n\n                    updateRevision(getRevData({ title, pageTitle, pageCategoryUrl }));\n                    break;\n                default:\n                    return;\n            }\n        },\n        [title, pageTitle]\n    );\n\n    // Disable autoFocus because for some reason, blur event would automatically be triggered when clicking\n    // on the page title when doing Cypress testing. Not sure if this is RMWC or Cypress related issue.\n    const autoFocus = !window.Cypress;\n\n    return editTitle ? (\n        <TitleInputWrapper>\n            <Input\n                autoFocus={autoFocus}\n                fullwidth\n                value={title}\n                onChange={setTitle}\n                onKeyDown={onKeyDown}\n                onBlur={onBlur}\n            />\n        </TitleInputWrapper>\n    ) : (\n        <TitleWrapper>\n            <PageMeta>\n                <Typography use={\"overline\"}>\n                    {`${pageCategory} (status: ${pageLocked ? \"published\" : \"draft\"})`}\n                </Typography>\n            </PageMeta>\n            <div style={{ width: \"100%\", display: \"flex\" }}>\n                <Tooltip\n                    className={pageTitleWrapper}\n                    placement={\"bottom\"}\n                    content={<span>Rename</span>}\n                >\n                    <PageTitle data-testid=\"pb-editor-page-title\" onClick={enableEdit}>\n                        {title}\n                    </PageTitle>\n                </Tooltip>\n                <PageVersion>{`(v${pageVersion})`}</PageVersion>\n            </div>\n        </TitleWrapper>\n    );\n};\n\nconst getRevData = ({ title, pageTitle, pageCategoryUrl }) => {\n    const newData: { title: string; url?: string } = { title };\n    if (pageTitle === \"Untitled\") {\n        newData.url =\n            pageCategoryUrl +\n            slugify(title, {\n                replacement: \"-\",\n                lower: true,\n                remove: /[*#\\?<>_\\{\\}\\[\\]+~.()'\"!:;@]/g\n            });\n    }\n\n    return newData;\n};\n\nexport default connect<any, any, any>(\n    state => {\n        const { title, version, locked, category } = getPage(state);\n        return {\n            pageTitle: title,\n            pageVersion: version,\n            pageLocked: locked,\n            pageCategory: category.name,\n            pageCategoryUrl: category.url\n        };\n    },\n    { updateRevision }\n)(React.memo(Title));\n"],"file":"Title.js"}