{"version":3,"sources":["../../../../../src/editor/plugins/defaultBar/components/SetAsHomepageButton.tsx"],"names":["React","connect","getPage","useSnackbar","useRouter","MenuItem","ListItemGraphic","Icon","Mutation","gql","ConfirmationDialog","setHomePage","SetAsHomepageButton","page","history","showSnackbar","showConfirmation","update","variables","id","response","error","data","pageBuilder","message","push","setTimeout","state","areStatePropsEqual"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,OAAT,QAAwB,2CAAxB;AAEA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;;AAYA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,mBAClBT,SAAS,EADS;AAAA,MAC9BU,OAD8B,cAC9BA,OAD8B;;AAAA,qBAEbX,WAAW,EAFE;AAAA,MAE9BY,YAF8B,gBAE9BA,YAF8B;;AAItC,sBACI,oBAAC,kBAAD;AACI,IAAA,OAAO,eACH;AAFR,KAQK;AAAA,QAAGC,gBAAH,SAAGA,gBAAH;AAAA,wBACG,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEL;AAApB,OACK,UAAAM,MAAM;AAAA,0BACH,oBAAC,QAAD;AACI,QAAA,OAAO,EAAE,mBAAM;AACXD,UAAAA,gBAAgB,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACUC,MAAM,CAAC;AAC1BC,sBAAAA,SAAS,EAAE;AACPC,wBAAAA,EAAE,EAAEN,IAAI,CAACM;AADF;AADe,qBAAD,CADhB;;AAAA;AACPC,oBAAAA,QADO;AAOLC,oBAAAA,KAPK,GAOKD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BZ,WAP/B,CAOLU,KAPK;;AAAA,yBAQTA,KARS;AAAA;AAAA;AAAA;;AAAA,qDASFN,YAAY,CAACM,KAAK,CAACG,OAAP,CATV;;AAAA;AAYbV,oBAAAA,OAAO,CAACW,IAAR,kCAAuCZ,IAAI,CAACM,EAA5C,GAZa,CAcb;;AACAO,oBAAAA,UAAU,CACN;AAAA,6BAAMX,YAAY,CAAC,gCAAD,CAAlB;AAAA,qBADM,EAEN,GAFM,CAAV;;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAD,GAAhB;AAoBH;AAtBL,sBAwBI,oBAAC,eAAD,qBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,eAAE,oBAAC,QAAD;AAAZ,QADJ,CAxBJ,oBADG;AAAA,KADX,CADH;AAAA,GARL,CADJ;AA8CH,CAlDD;;AAoDA,eAAed,OAAO,CAClB,UAAA0B,KAAK;AAAA,SAAK;AAAEd,IAAAA,IAAI,EAAE,MAAKX,OAAO,CAACyB,KAAD,CAAZ,EAAqB,CAAC,SAAD,CAArB;AAAR,GAAL;AAAA,CADa,EAElB,IAFkB,EAGlB,IAHkB,EAIlB;AAAEC,EAAAA,kBAAkB;AAApB,CAJkB,CAAP,CAKbhB,mBALa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPage } from \"@webiny/app-page-builder/editor/selectors\";\nimport { omit, isEqual } from \"lodash\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { MenuItem } from \"@webiny/ui/Menu\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as HomeIcon } from \"@webiny/app-page-builder/admin/assets/round-home-24px.svg\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\n\nconst setHomePage = gql`\n    mutation SetHomePage($id: ID!) {\n        pageBuilder {\n            setHomePage(id: $id) {\n                error {\n                    message\n                }\n            }\n        }\n    }\n`;\n\nconst SetAsHomepageButton = ({ page }) => {\n    const { history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n\n    return (\n        <ConfirmationDialog\n            message={\n                <span>\n                    You&#39;re about to set this page as your new homepage, are you sure you want to\n                    continue? Note that the page will automatically be published.\n                </span>\n            }\n        >\n            {({ showConfirmation }) => (\n                <Mutation mutation={setHomePage}>\n                    {update => (\n                        <MenuItem\n                            onClick={() => {\n                                showConfirmation(async () => {\n                                    const response = await update({\n                                        variables: {\n                                            id: page.id\n                                        }\n                                    });\n\n                                    const { error } = response.data.pageBuilder.setHomePage;\n                                    if (error) {\n                                        return showSnackbar(error.message);\n                                    }\n\n                                    history.push(`/page-builder/pages?id=${page.id}`);\n\n                                    // Let's wait a bit, because we are also redirecting the user.\n                                    setTimeout(\n                                        () => showSnackbar(\"New homepage set successfully!\"),\n                                        500\n                                    );\n                                });\n                            }}\n                        >\n                            <ListItemGraphic>\n                                <Icon icon={<HomeIcon />} />\n                            </ListItemGraphic>\n                            Set as homepage\n                        </MenuItem>\n                    )}\n                </Mutation>\n            )}\n        </ConfirmationDialog>\n    );\n};\n\nexport default connect<any, any, any>(\n    state => ({ page: omit(getPage(state), [\"content\"]) }),\n    null,\n    null,\n    { areStatePropsEqual: isEqual }\n)(SetAsHomepageButton);\n"],"file":"SetAsHomepageButton.js"}