import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _omit from "lodash/omit";
import React, { useState, useCallback, useEffect } from "react";
import { connect } from "@webiny/app-page-builder/editor/redux";
import { getPlugins } from "@webiny/plugins";
import { deactivatePlugin, updateRevision } from "@webiny/app-page-builder/editor/actions";
import { getPage } from "@webiny/app-page-builder/editor/selectors";
import { useKeyHandler } from "@webiny/app-page-builder/editor/hooks/useKeyHandler";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { OverlayLayout } from "@webiny/app-admin/components/OverlayLayout";
import { SplitView, LeftPanel, RightPanel } from "@webiny/app-admin/components/SplitView";
import { Typography } from "@webiny/ui/Typography";
import { Form } from "@webiny/form";
import { Icon } from "@webiny/ui/Icon";
import { ButtonPrimary } from "@webiny/ui/Button";
import { List, ListItem, ListItemGraphic } from "@webiny/ui/List";
import { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from "@webiny/app-admin/components/SimpleForm";
import { Title, listItem, ListItemTitle, listStyle, TitleContent } from "./PageSettingsStyled";

var PageSettings = function PageSettings(props) {
  var plugins = getPlugins("pb-editor-page-settings");

  var _useState = useState("pb-editor-page-settings-general"),
      _useState2 = _slicedToArray(_useState, 2),
      active = _useState2[0],
      setActive = _useState2[1];

  var activePlugin = plugins.find(function (pl) {
    return pl.name === active;
  });

  if (!activePlugin) {
    return null;
  }

  return /*#__PURE__*/React.createElement(PageSettingsContent, Object.assign({}, props, {
    setActive: setActive,
    plugins: plugins,
    activePlugin: activePlugin
  }));
};

var PageSettingsContent = function PageSettingsContent(_ref) {
  var page = _ref.page,
      plugins = _ref.plugins,
      setActive = _ref.setActive,
      activePlugin = _ref.activePlugin,
      deactivatePlugin = _ref.deactivatePlugin,
      updateRevision = _ref.updateRevision;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useKeyHandler = useKeyHandler(),
      removeKeyHandler = _useKeyHandler.removeKeyHandler,
      addKeyHandler = _useKeyHandler.addKeyHandler;

  var savePage = useCallback(function (page) {
    updateRevision(page, {
      onFinish: function onFinish() {
        return showSnackbar("Settings saved");
      }
    });
  }, [page]);
  useEffect(function () {
    addKeyHandler("escape", function (e) {
      e.preventDefault();
      deactivatePlugin({
        name: "pb-editor-page-settings-bar"
      });
    });
    return function () {
      return removeKeyHandler("escape");
    };
  });
  return /*#__PURE__*/React.createElement(OverlayLayout, {
    barMiddle: Title,
    onExited: function onExited() {
      return deactivatePlugin({
        name: "pb-editor-page-settings-bar"
      });
    }
  }, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {
    span: 5
  }, /*#__PURE__*/React.createElement(List, {
    twoLine: true,
    className: listStyle
  }, plugins.map(function (pl) {
    return /*#__PURE__*/React.createElement(ListItem, {
      key: pl.name,
      className: listItem,
      onClick: function onClick() {
        return setActive(pl.name);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: pl.icon
    })), /*#__PURE__*/React.createElement(TitleContent, null, /*#__PURE__*/React.createElement(ListItemTitle, null, pl.title), /*#__PURE__*/React.createElement(Typography, {
      use: "subtitle2"
    }, pl.description)));
  }))), /*#__PURE__*/React.createElement(RightPanel, {
    span: 7
  }, /*#__PURE__*/React.createElement(Form, {
    data: page,
    onSubmit: savePage
  }, function (_ref2) {
    var Bind = _ref2.Bind,
        submit = _ref2.submit,
        form = _ref2.form,
        data = _ref2.data;
    return /*#__PURE__*/React.createElement(SimpleForm, null, /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: activePlugin.title
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, activePlugin ? activePlugin.render({
      Bind: Bind,
      form: form,
      data: data
    }) : null), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: submit
    }, "Save settings")));
  }))));
};

export default connect(function (state) {
  return {
    page: _omit(getPage(state), ["content"])
  };
}, {
  deactivatePlugin: deactivatePlugin,
  updateRevision: updateRevision
})(PageSettings);
//# sourceMappingURL=PageSettings.js.map