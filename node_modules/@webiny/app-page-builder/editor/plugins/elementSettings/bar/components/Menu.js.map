{"version":3,"sources":["../../../../../../src/editor/plugins/elementSettings/bar/components/Menu.tsx"],"names":["React","Transition","connect","styled","Elevation","togglePlugin","isPluginActive","Overlay","position","top","left","width","height","zIndex","defaultStyle","transform","opacity","transitionProperty","transitionTimingFunction","transitionDuration","willChange","transitionStyles","entering","entered","Wrapper","padding","boxSizing","paddingBottom","gridGap","display","alignItems","color","marginBottom","justifyContent","lineHeight","marginRight","ToolbarBox","backgroundColor","borderRadius","content","borderLeft","borderRight","borderBottom","props","Menu","createRef","ref","current","state","setState","offsetWidth","window","dispatchEvent","Event","active","plugin","options","renderMenu","name","Component"],"mappings":"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","sourcesContent":["import React, { RefObject } from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport styled from \"@emotion/styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { togglePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\n\nconst Overlay = styled(\"div\")({\n    position: \"fixed\",\n    top: 64,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 5\n});\n\nconst defaultStyle = {\n    transform: \"translateY(-5px)\",\n    opacity: 0,\n    transitionProperty: \"opacity, transform\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, .2, 1)\",\n    transitionDuration: \"250ms\",\n    willChange: \"opacity, transform\"\n};\n\nconst transitionStyles = {\n    entering: { opacity: 0, transform: \"translateY(-5px)\" },\n    entered: { opacity: 1, transform: \"translateY(0px)\" }\n};\n\nconst Wrapper = styled(\"div\")({\n    padding: 0,\n    boxSizing: \"border-box\",\n    \".mdc-tab-content\": {\n        padding: 15\n    },\n    \".mdc-layout-grid\": {\n        padding: 0,\n        \"&.no-bottom-padding\": {\n            paddingBottom: 0\n        },\n        \".mdc-layout-grid__inner\": {\n            gridGap: 0,\n            '[class*=\"mdc-layout-grid__cell--span-\"]': {\n                display: \"flex\",\n                alignItems: \"center\",\n                color: \"var(--mdc-theme-text-secondary-on-background)\",\n                marginBottom: 10,\n                justifyContent: \"flex-end\",\n                '[class*=\"mdc-typography--\"], .mdc-button__icon': {\n                    lineHeight: \"120%\",\n                    width: \"100%\"\n                },\n                \".mdc-button__icon\": {\n                    marginRight: 20\n                }\n            }\n        }\n    }\n});\n\nconst ToolbarBox = styled(\"div\")(\n    {\n        position: \"absolute\",\n        color: \"var(--mdc-theme-on-surface)\",\n        zIndex: 6,\n        width: 270,\n        top: 56,\n        left: 25,\n        \".elevationBox\": {\n            backgroundColor: \"var(--mdc-theme-surface)\",\n            borderRadius: 2,\n            \"&::after\": {\n                content: \"''\",\n                width: 0,\n                height: 0,\n                borderLeft: \"7px solid transparent\",\n                borderRight: \"7px solid transparent\",\n                borderBottom: \"7px solid var(--mdc-theme-on-background)\",\n                position: \"absolute\",\n                top: -7,\n                left: \"50%\",\n                transform: \"translateX(-50%)\"\n            }\n        }\n    },\n    (props: any) => ({\n        left: props.left || 0\n    })\n);\n\nclass Menu extends React.Component<any> {\n    ref: RefObject<any> = React.createRef();\n\n    state = {\n        left: null\n    };\n\n    componentDidUpdate() {\n        if (this.ref.current && this.state.left === null) {\n            this.setState({ left: -(this.ref.current.offsetWidth - 48) / 2 }, () => {\n                /*eslint-env browser */\n                window.dispatchEvent(new Event(\"resize\"));\n            });\n        }\n    }\n\n    render() {\n        const { active, plugin, options, togglePlugin } = this.props;\n\n        const content = plugin.renderMenu({ options });\n\n        return (\n            <Transition in={active} timeout={125} appear={true} unmountOnExit={true}>\n                {state => (\n                    <React.Fragment>\n                        <ToolbarBox\n                            left={this.state.left}\n                            style={{ ...defaultStyle, ...transitionStyles[state] }}\n                        >\n                            <Elevation z={2} className={\"elevationBox\"}>\n                                <div ref={this.ref}>\n                                    <Wrapper>{content}</Wrapper>\n                                </div>\n                            </Elevation>\n                        </ToolbarBox>\n                        <Overlay onClick={() => togglePlugin({ name: plugin.name })} />\n                    </React.Fragment>\n                )}\n            </Transition>\n        );\n    }\n}\n\nexport default connect<any, any, any>(\n    (state, props) => ({\n        active: isPluginActive(props.plugin.name)(state)\n    }),\n    { togglePlugin }\n)(Menu);\n"],"file":"Menu.js"}