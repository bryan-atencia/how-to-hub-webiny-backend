import React from "react";
import { useHandler } from "@webiny/app/hooks/useHandler";
import { connect } from "@webiny/app-page-builder/editor/redux";
import { getPlugins } from "@webiny/plugins";
import { set } from "dot-prop-immutable";
import { updateElement } from "@webiny/app-page-builder/editor/actions";
import { getActiveElement } from "@webiny/app-page-builder/editor/selectors";
import { get } from "dot-prop-immutable";
import { ReactComponent as AlignCenterIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_center.svg";
import { ReactComponent as AlignLeftIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_left.svg";
import { ReactComponent as AlignRightIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_right.svg";
// Icons map for dynamic render
var icons = {
  "flex-start": /*#__PURE__*/React.createElement(AlignLeftIcon, null),
  center: /*#__PURE__*/React.createElement(AlignCenterIcon, null),
  "flex-end": /*#__PURE__*/React.createElement(AlignRightIcon, null)
};
var alignments = Object.keys(icons);

var HorizontalAlignActionFlex = function HorizontalAlignActionFlex(props) {
  var element = props.element,
      children = props.children;
  var align = get(element, "data.settings.horizontalAlignFlex") || "flex-start";
  var onClick = useHandler(props, function (_ref) {
    var element = _ref.element,
        updateElement = _ref.updateElement;
    return function () {
      var align = get(element, "data.settings.horizontalAlignFlex") || "flex-start";
      var nextAlign = alignments[alignments.indexOf(align) + 1] || "flex-start";
      updateElement({
        element: set(element, "data.settings.horizontalAlignFlex", nextAlign)
      });
    };
  });
  var plugin = getPlugins("pb-editor-page-element").find(function (pl) {
    return pl.elementType === element.type;
  });

  if (!plugin) {
    return null;
  }

  return /*#__PURE__*/React.cloneElement(children, {
    onClick: onClick,
    icon: icons[align]
  });
};

export default connect(function (state) {
  return {
    element: getActiveElement(state)
  };
}, {
  updateElement: updateElement
})(HorizontalAlignActionFlex);
//# sourceMappingURL=HorizontalAlignFlex.js.map