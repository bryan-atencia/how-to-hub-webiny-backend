{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/height/Settings.tsx"],"names":["React","set","connect","useHandler","Tabs","Tab","Input","InputContainer","Typography","Grid","Cell","Switch","Form","updateElement","getActiveElement","validateHeight","value","isNaN","parseInt","Error","endsWith","Settings","props","updateSettings","element","data","form","validate","valid","attrKey","newElement","fullHeight","Bind","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { get } from \"lodash\";\nimport { set } from \"dot-prop-immutable\";\n\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { Tabs, Tab } from \"@webiny/ui/Tabs\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { InputContainer } from \"@webiny/app-page-builder/editor/plugins/elementSettings/components/StyledComponents\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Form } from \"@webiny/form\";\n\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\n\nconst validateHeight = value => {\n    if (!value) {\n        return null;\n    }\n\n    if (isNaN(parseInt(value))) {\n        throw Error(\"Enter a valid number!\");\n    }\n\n    if (value.endsWith(\"%\") || value.endsWith(\"px\")) {\n        return true;\n    }\n\n    throw Error(\"Specify % or px!\");\n};\n\nconst Settings = props => {\n    const updateSettings = useHandler(props, ({ element, updateElement }) => async (data, form) => {\n        const valid = await form.validate();\n        if (!valid) {\n            return;\n        }\n\n        const attrKey = `data.settings.height`;\n        const newElement = set(element, attrKey, data);\n\n        updateElement({ element: newElement });\n    });\n\n    const data = get(props.element.data, \"settings.height\", { fullHeight: false, value: \"100%\" });\n\n    return (\n        <Form data={data} onChange={updateSettings}>\n            {({ Bind, data }) => (\n                <Tabs>\n                    <Tab label={\"height\"}>\n                        <Grid>\n                            <Cell span={5}>\n                                <Typography use={\"overline\"}>full height</Typography>\n                            </Cell>\n                            <Cell span={7}>\n                                <InputContainer width={\"auto\"} margin={0}>\n                                    <Bind name={\"fullHeight\"}>\n                                        <Switch />\n                                    </Bind>\n                                </InputContainer>\n                            </Cell>\n                        </Grid>\n                        {!data.fullHeight && (\n                            <Grid>\n                                <Cell span={5}>\n                                    <Typography use={\"overline\"}>height</Typography>\n                                </Cell>\n                                <Cell span={7}>\n                                    <InputContainer width={\"auto\"} margin={0}>\n                                        <Bind name={\"value\"} validators={validateHeight}>\n                                            <Input />\n                                        </Bind>\n                                    </InputContainer>\n                                </Cell>\n                            </Grid>\n                        )}\n                    </Tab>\n                </Tabs>\n            )}\n        </Form>\n    );\n};\n\nexport default connect<any, any, any>(\n    state => ({ element: getActiveElement(state) }),\n    { updateElement }\n)(Settings);\n"],"file":"Settings.js"}