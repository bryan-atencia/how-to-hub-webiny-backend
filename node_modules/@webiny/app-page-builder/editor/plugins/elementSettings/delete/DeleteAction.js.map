{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/delete/DeleteAction.ts"],"names":["React","useHandler","connect","getPlugins","deleteElement","getActiveElement","DeleteAction","props","element","children","onClick","plugin","find","pl","elementType","type","canDelete","cloneElement","state"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,yCAA9B;AACA,SAASC,gBAAT,QAAiC,2CAAjC;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MAClBC,OADkB,GACID,KADJ,CAClBC,OADkB;AAAA,MACTC,QADS,GACIF,KADJ,CACTE,QADS;AAG1B,MAAMC,OAAO,GAAGT,UAAU,CAACM,KAAD,EAAQ;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,QAAYJ,aAAZ,QAAYA,aAAZ;AAAA,WAAgC,YAAM;AACpEA,MAAAA,aAAa,CAAC;AAAEI,QAAAA,OAAO,EAAPA;AAAF,OAAD,CAAb;AACH,KAFiC;AAAA,GAAR,CAA1B;AAIA,MAAMG,MAAM,GAAGR,UAAU,CAA4B,wBAA5B,CAAV,CAAgES,IAAhE,CACX,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,WAAH,KAAmBN,OAAO,CAACO,IAA/B;AAAA,GADS,CAAf;;AAGA,MAAI,CAACJ,MAAL,EAAa;AACT,WAAO,IAAP;AACH;;AAED,MAAI,OAAOA,MAAM,CAACK,SAAd,KAA4B,UAAhC,EAA4C;AACxC,QAAI,CAACL,MAAM,CAACK,SAAP,CAAiB;AAAER,MAAAA,OAAO,EAAPA;AAAF,KAAjB,CAAL,EAAoC;AAChC,aAAO,IAAP;AACH;AACJ;;AAED,sBAAOR,KAAK,CAACiB,YAAN,CAAmBR,QAAnB,EAA6B;AAAEC,IAAAA,OAAO,EAAPA;AAAF,GAA7B,CAAP;AACH,CArBD;;AAuBA,eAAeR,OAAO,CAClB,UAAAgB,KAAK;AAAA,SAAK;AAAEV,IAAAA,OAAO,EAAEH,gBAAgB,CAACa,KAAD;AAA3B,GAAL;AAAA,CADa,EAElB;AAAEd,EAAAA,aAAa,EAAbA;AAAF,CAFkB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { deleteElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { PbEditorPageElementPlugin } from \"@webiny/app-page-builder/types\";\n\nconst DeleteAction = props => {\n    const { element, children } = props;\n\n    const onClick = useHandler(props, ({ element, deleteElement }) => () => {\n        deleteElement({ element });\n    });\n\n    const plugin = getPlugins<PbEditorPageElementPlugin>(\"pb-editor-page-element\").find(\n        pl => pl.elementType === element.type\n    );\n    if (!plugin) {\n        return null;\n    }\n\n    if (typeof plugin.canDelete === \"function\") {\n        if (!plugin.canDelete({ element })) {\n            return null;\n        }\n    }\n\n    return React.cloneElement(children, { onClick });\n};\n\nexport default connect<any, any, any>(\n    state => ({ element: getActiveElement(state) }),\n    { deleteElement }\n)(DeleteAction);\n"],"file":"DeleteAction.js"}