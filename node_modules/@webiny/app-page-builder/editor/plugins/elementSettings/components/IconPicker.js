import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _isEqual from "lodash/isEqual";
import * as React from "react";
import { Typography } from "@webiny/ui/Typography";
import { Grid, Cell } from "@webiny/ui/Grid";
import IconPickerComponent from "@webiny/app-page-builder/editor/components/IconPicker";

var IconPicker = /*#__PURE__*/function (_React$Component) {
  _inherits(IconPicker, _React$Component);

  var _super = _createSuper(IconPicker);

  function IconPicker() {
    _classCallCheck(this, IconPicker);

    return _super.apply(this, arguments);
  }

  _createClass(IconPicker, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(props) {
      return !_isEqual(props, this.props);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          value = _this$props.value,
          updateValue = _this$props.updateValue;
      return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 4
      }, /*#__PURE__*/React.createElement(Typography, {
        use: "overline"
      }, label)), /*#__PURE__*/React.createElement(Cell, {
        span: 8
      }, /*#__PURE__*/React.createElement(IconPickerComponent, {
        value: value,
        onChange: updateValue
      })));
    }
  }]);

  return IconPicker;
}(React.Component);

export default IconPicker;
//# sourceMappingURL=IconPicker.js.map