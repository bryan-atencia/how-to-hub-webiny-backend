{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/components/Action.tsx"],"names":["React","useEffect","useCallback","css","connect","togglePlugin","IconButton","useKeyHandler","getUi","getActivePlugins","isPluginActive","Tooltip","activeStyle","color","Action","props","plugin","icon","active","tooltip","onClick","addKeyHandler","removeKeyHandler","clickHandler","name","closeOtherInGroup","shortcut","map","short","e","slateFocused","settingsActive","preventDefault","visible","state","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, ReactElement } from \"react\";\nimport { css } from \"emotion\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { togglePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useKeyHandler } from \"@webiny/app-page-builder/editor/hooks/useKeyHandler\";\nimport { getUi, getActivePlugins, isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\n\nconst activeStyle = css({\n    \"&.mdc-icon-button\": {\n        color: \"var(--mdc-theme-primary)\"\n    }\n});\n\ntype ActionProps = {\n    togglePlugin(params: { name: string; closeOtherInGroup: boolean });\n    plugin?: string;\n    icon: ReactElement;\n    active: boolean;\n    tooltip?: string;\n    onClick?: () => void;\n    shortcut?: string[];\n    slateFocused?: boolean;\n    settingsActive?: boolean;\n    // For testing purposes.\n    \"data-testid\"?: string;\n};\n\nconst Action = (props: ActionProps) => {\n    const { togglePlugin, plugin, icon, active, tooltip, onClick } = props;\n\n    const { addKeyHandler, removeKeyHandler } = useKeyHandler();\n\n    const clickHandler = useCallback(() => {\n        if (typeof onClick === \"function\") {\n            return onClick();\n        }\n        togglePlugin({ name: plugin, closeOtherInGroup: true });\n    }, [plugin, onClick]);\n\n    useEffect(() => {\n        let { shortcut = [] } = props;\n        const { onClick } = props;\n        if (typeof shortcut === \"string\") {\n            shortcut = [shortcut];\n        }\n\n        shortcut.map(short => {\n            addKeyHandler(short, e => {\n                const { slateFocused, settingsActive } = props;\n                if (slateFocused || settingsActive) {\n                    return;\n                }\n\n                e.preventDefault();\n                onClick();\n            });\n        });\n\n        return () => {\n            let { shortcut = [] } = props;\n\n            if (typeof shortcut === \"string\") {\n                shortcut = [shortcut];\n            }\n\n            shortcut.map(short => {\n                removeKeyHandler(short);\n            });\n        };\n    });\n\n    return (\n        <Tooltip\n            placement={\"bottom\"}\n            content={<span>{tooltip}</span>}\n            {...(active ? { visible: false } : {})}\n        >\n            <IconButton\n                icon={icon}\n                onClick={clickHandler}\n                className={active && activeStyle}\n                data-testid={props[\"data-testid\"]}\n            />\n        </Tooltip>\n    );\n};\n\nexport default connect<any, any, any>(\n    (state, props: { plugin?: string }) => ({\n        active: isPluginActive(props.plugin)(state),\n        slateFocused: getUi(state).slateFocused,\n        settingsActive: getActivePlugins(\"pb-editor-page-element-settings\")(state).length > 0\n    }),\n    { togglePlugin }\n)(Action);\n"],"file":"Action.js"}