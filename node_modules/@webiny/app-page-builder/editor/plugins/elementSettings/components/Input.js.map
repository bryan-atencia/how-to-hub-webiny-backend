{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/components/Input.tsx"],"names":["React","connect","Typography","Grid","Cell","Input","InputCmp","InputContainer","getActiveElement","label","value","placeholder","updateValue","inputWidth","state","valueKey","defaultValue","memo"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,kBAAlC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,gBAAT,QAAiC,2CAAjC;;AAWA,IAAMH,KAAK,GAAG,SAARA,KAAQ,OAAwE;AAAA,MAArEI,KAAqE,QAArEA,KAAqE;AAAA,MAA9DC,KAA8D,QAA9DA,KAA8D;AAAA,MAAvDC,WAAuD,QAAvDA,WAAuD;AAAA,MAA1CC,WAA0C,QAA1CA,WAA0C;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAClF,sBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE;AAAjB,KAA8BJ,KAA9B,CADJ,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAZ,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEI;AAAvB,kBACI,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEF,WAAvB;AAAoC,IAAA,KAAK,EAAED,KAA3C;AAAkD,IAAA,QAAQ,EAAEE;AAA5D,IADJ,CADJ,CAJJ,CADJ;AAYH,CAbD;;AAeA,eAAeX,OAAO,CAAgB,UAACa,KAAD,SAAmD;AAAA,MAAzCJ,KAAyC,SAAzCA,KAAyC;AAAA,MAAlCK,QAAkC,SAAlCA,QAAkC;AAAA,MAAxBC,YAAwB,SAAxBA,YAAwB;AACrF,SAAO;AACHN,IAAAA,KAAK,EAAEK,QAAQ,GAAG,KAAIP,gBAAgB,CAACM,KAAD,CAApB,EAA6BC,QAA7B,EAAuCC,YAAvC,CAAH,GAA0DN;AADtE,GAAP;AAGH,CAJqB,CAAP,eAIZV,KAAK,CAACiB,IAAN,CAAWZ,KAAX,CAJY,CAAf","sourcesContent":["import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input as InputCmp } from \"@webiny/ui/Input\";\nimport { InputContainer } from \"./StyledComponents\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\n\ntype InputProps = {\n    label: string;\n    placeholder: string;\n    value?: string | number;\n    valueKey?: string;\n    updateValue: (value: any) => void;\n    inputWidth?: number;\n};\n\nconst Input = ({ label, value, placeholder, updateValue, inputWidth }: InputProps) => {\n    return (\n        <Grid>\n            <Cell span={4}>\n                <Typography use={\"overline\"}>{label}</Typography>\n            </Cell>\n            <Cell span={8}>\n                <InputContainer width={inputWidth}>\n                    <InputCmp placeholder={placeholder} value={value} onChange={updateValue} />\n                </InputContainer>\n            </Cell>\n        </Grid>\n    );\n};\n\nexport default connect<any, any, any>((state, { value, valueKey, defaultValue }: any) => {\n    return {\n        value: valueKey ? get(getActiveElement(state), valueKey, defaultValue) : value\n    };\n})(React.memo(Input));\n"],"file":"Input.js"}