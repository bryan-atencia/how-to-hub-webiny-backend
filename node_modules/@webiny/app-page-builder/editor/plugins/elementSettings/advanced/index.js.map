{"version":3,"sources":["../../../../../src/editor/plugins/elementSettings/advanced/index.tsx"],"names":["React","getPlugins","ELEMENT_CREATED","activateElement","togglePlugin","AdvancedSettings","Action","AdvancedAction","name","type","render","actions","middleware","store","action","next","payload","element","source","sourcePlugin","find","pl","elementType","onCreate","plugin","dispatch","id","renderAction"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SACIC,eADJ,EAEIC,eAFJ,EAGIC,YAHJ,QAIO,yCAJP;;AAMA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAQA,eAAe,CACX;AACIC,EAAAA,IAAI,EAAE,6CADV;AAEIC,EAAAA,IAAI,EAAE,mBAFV;AAGIC,EAAAA,MAHJ,oBAGa;AACL,wBAAO,oBAAC,gBAAD,OAAP;AACH;AALL,CADW,EAQX;AACID,EAAAA,IAAI,EAAE,4BADV;AAEID,EAAAA,IAAI,EAAE,8CAFV;AAGIG,EAAAA,OAAO,EAAE,CAACT,eAAD,CAHb;AAIIU,EAAAA,UAAU,EAAE,0BAA6B;AAAA,QAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAAA,0BACTD,MAAM,CAACE,OADE;AAAA,QAC7BC,OAD6B,mBAC7BA,OAD6B;AAAA,QACpBC,MADoB,mBACpBA,MADoB;AAGrCH,IAAAA,IAAI,CAACD,MAAD,CAAJ,CAHqC,CAKrC;;AACA,QAAMK,YAAY,GAAGlB,UAAU,CAC3B,wBAD2B,CAAV,CAEnBmB,IAFmB,CAEd,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,WAAH,KAAmBJ,MAAM,CAACT,IAA9B;AAAA,KAFY,CAArB;;AAGA,QAAI,CAACU,YAAL,EAAmB;AACf;AACH;;AAXoC,QAY7BI,QAZ6B,GAYhBJ,YAZgB,CAY7BI,QAZ6B;;AAarC,QAAI,CAACA,QAAD,IAAaA,QAAQ,KAAK,MAA9B,EAAsC;AAClC;AACA,UAAMC,MAAM,GAAGvB,UAAU,CAA4B,wBAA5B,CAAV,CAAgEmB,IAAhE,CACX,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,WAAH,KAAmBL,OAAO,CAACR,IAA/B;AAAA,OADS,CAAf;;AAGA,UAAI,CAACe,MAAL,EAAa;AACT;AACH;;AAPiC,UAQ1BD,SAR0B,GAQbC,MARa,CAQ1BD,QAR0B;;AASlC,UAAIA,SAAQ,IAAIA,SAAQ,KAAK,eAA7B,EAA8C;AAC1CV,QAAAA,KAAK,CAACY,QAAN,CAAetB,eAAe,CAAC;AAAEc,UAAAA,OAAO,EAAEA,OAAO,CAACS;AAAnB,SAAD,CAA9B;AACAb,QAAAA,KAAK,CAACY,QAAN,CACIrB,YAAY,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CADhB;AAGH;AACJ;AACJ;AAjCL,CARW,EA2CX;AACIA,EAAAA,IAAI,EAAE,0CADV;AAEIC,EAAAA,IAAI,EAAE,iCAFV;AAGIkB,EAAAA,YAHJ,0BAGmB;AACX,wBACI,oBAAC,cAAD,qBACI,oBAAC,MAAD;AACI,MAAA,MAAM,EAAE,KAAKnB,IADjB;AAEI,MAAA,IAAI,eAAE,oBAAC,YAAD,OAFV;AAGI,qBAAa,oCAHjB;AAII,MAAA,OAAO,EAAE;AAJb,MADJ,CADJ;AAUH;AAdL,CA3CW,CAAf","sourcesContent":["import * as React from \"react\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport {\n    ELEMENT_CREATED,\n    activateElement,\n    togglePlugin\n} from \"@webiny/app-page-builder/editor/actions\";\nimport { ReactComponent as SettingsIcon } from \"@webiny/app-page-builder/editor/assets/icons/settings.svg\";\nimport AdvancedSettings from \"./AdvancedSettings\";\nimport Action from \"../components/Action\";\nimport AdvancedAction from \"./AdvancedAction\";\nimport {\n    PbEditorContentPlugin,\n    PbEditorReduxMiddlewarePlugin,\n    PbEditorPageElementPlugin,\n    PbEditorPageElementSettingsPlugin\n} from \"@webiny/app-page-builder/types\";\n\nexport default [\n    {\n        name: \"pb-editor-content-element-advanced-settings\",\n        type: \"pb-editor-content\",\n        render() {\n            return <AdvancedSettings />;\n        }\n    } as PbEditorContentPlugin,\n    {\n        type: \"pb-editor-redux-middleware\",\n        name: \"pb-editor-redux-middleware-advanced-settings\",\n        actions: [ELEMENT_CREATED],\n        middleware: ({ store, action, next }) => {\n            const { element, source } = action.payload;\n\n            next(action);\n\n            // Check the source of the element (could be `saved` element which behaves differently from other elements)\n            const sourcePlugin = getPlugins<PbEditorPageElementPlugin>(\n                \"pb-editor-page-element\"\n            ).find(pl => pl.elementType === source.type);\n            if (!sourcePlugin) {\n                return;\n            }\n            const { onCreate } = sourcePlugin;\n            if (!onCreate || onCreate !== \"skip\") {\n                // If source element does not define a specific `onCreate` behavior - continue with the actual element plugin\n                const plugin = getPlugins<PbEditorPageElementPlugin>(\"pb-editor-page-element\").find(\n                    pl => pl.elementType === element.type\n                );\n                if (!plugin) {\n                    return;\n                }\n                const { onCreate } = plugin;\n                if (onCreate && onCreate === \"open-settings\") {\n                    store.dispatch(activateElement({ element: element.id }));\n                    store.dispatch(\n                        togglePlugin({ name: \"pb-editor-page-element-settings-advanced\" })\n                    );\n                }\n            }\n        }\n    } as PbEditorReduxMiddlewarePlugin,\n    {\n        name: \"pb-editor-page-element-settings-advanced\",\n        type: \"pb-editor-page-element-settings\",\n        renderAction() {\n            return (\n                <AdvancedAction>\n                    <Action\n                        plugin={this.name}\n                        icon={<SettingsIcon />}\n                        data-testid={\"pb-editor-advanced-settings-button\"}\n                        tooltip={\"Advanced settings\"}\n                    />\n                </AdvancedAction>\n            );\n        }\n    } as PbEditorPageElementSettingsPlugin\n];\n"],"file":"index.js"}