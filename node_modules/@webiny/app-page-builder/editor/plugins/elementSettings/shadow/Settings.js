import _isEqual from "lodash/isEqual";
import * as React from "react";
import { connect } from "@webiny/app-page-builder/editor/redux";
import { getActiveElement } from "@webiny/app-page-builder/editor/selectors";
import { Tabs, Tab } from "@webiny/ui/Tabs";
import { updateElement } from "@webiny/app-page-builder/editor/actions";
import ColorPicker from "@webiny/app-page-builder/editor/plugins/elementSettings/components/ColorPicker";
import Input from "@webiny/app-page-builder/editor/plugins/elementSettings/components/Input";
import useUpdateHandlers from "@webiny/app-page-builder/editor/plugins/elementSettings/useUpdateHandlers";
var DATA_NAMESPACE = "data.settings.shadow"; // TODO: need to figure out how to properly type the `connect` props and apply it to all `elementSettings` plugins.

var Settings = function Settings(_ref) {
  var element = _ref.element,
      updateElement = _ref.updateElement;

  var _useUpdateHandlers = useUpdateHandlers({
    element: element,
    updateElement: updateElement,
    dataNamespace: DATA_NAMESPACE
  }),
      getUpdateValue = _useUpdateHandlers.getUpdateValue,
      getUpdatePreview = _useUpdateHandlers.getUpdatePreview;

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {
    label: "Shadow"
  }, /*#__PURE__*/React.createElement(ColorPicker, {
    label: "Color",
    valueKey: DATA_NAMESPACE + ".color",
    updateValue: getUpdateValue("color"),
    updatePreview: getUpdatePreview("color")
  }), /*#__PURE__*/React.createElement(Input, {
    label: "Horizontal offset",
    valueKey: DATA_NAMESPACE + ".horizontal",
    updateValue: getUpdateValue("horizontal")
  }), /*#__PURE__*/React.createElement(Input, {
    label: "Vertical offset",
    valueKey: DATA_NAMESPACE + ".vertical",
    updateValue: getUpdateValue("vertical")
  }), /*#__PURE__*/React.createElement(Input, {
    label: "Blur",
    valueKey: DATA_NAMESPACE + ".blur",
    updateValue: getUpdateValue("blur")
  }), /*#__PURE__*/React.createElement(Input, {
    label: "Spread",
    valueKey: DATA_NAMESPACE + ".spread",
    updateValue: getUpdateValue("spread")
  }))));
};

export default connect(function (state) {
  var _getActiveElement = getActiveElement(state),
      id = _getActiveElement.id,
      type = _getActiveElement.type,
      path = _getActiveElement.path;

  return {
    element: {
      id: id,
      type: type,
      path: path
    }
  };
}, {
  updateElement: updateElement
}, null, {
  areStatePropsEqual: _isEqual
})(Settings);
//# sourceMappingURL=Settings.js.map