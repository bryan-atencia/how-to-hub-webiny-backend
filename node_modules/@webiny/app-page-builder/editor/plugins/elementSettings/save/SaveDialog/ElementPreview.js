import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import React from "react";
import { renderToStaticMarkup } from "react-dom/server";
import { getPlugins } from "@webiny/plugins";
import domToImage from "./domToImage";

var ElementPreview = /*#__PURE__*/function (_React$Component) {
  _inherits(ElementPreview, _React$Component);

  var _super = _createSuper(ElementPreview);

  function ElementPreview() {
    _classCallCheck(this, ElementPreview);

    return _super.apply(this, arguments);
  }

  _createClass(ElementPreview, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.generateImage();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.generateImage();
    }
  }, {
    key: "replaceContent",
    value: function replaceContent(element, doc) {
      var _this = this;

      var pl = getPlugins("pb-editor-page-element").find(function (pl) {
        return pl.elementType === element.type;
      });

      if (!pl) {
        return doc;
      }

      if (typeof pl.renderElementPreview === "function") {
        var elementNode = document.getElementById(element.id);

        if (!elementNode) {
          return doc;
        }

        var newContentString = renderToStaticMarkup(pl.renderElementPreview({
          element: element,
          width: elementNode.offsetWidth || 0,
          height: elementNode.offsetHeight || 0
        }));
        var wrapper = document.createElement("div");
        wrapper.innerHTML = newContentString;
        var newContentDoc = wrapper.firstChild;
        doc.querySelector("#" + element.id).replaceWith(newContentDoc);
      }

      if (element.elements.length) {
        element.elements.forEach(function (el) {
          doc = _this.replaceContent(el, doc);
        });
      }

      return doc;
    }
  }, {
    key: "generateImage",
    value: function () {
      var _generateImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var _this2 = this;

        var element, node, editor, dataUrl;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                element = this.props.element;
                node = document.getElementById(element.id);

                if (node) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", null);

              case 4:
                editor = document.querySelector(".pb-editor"); // Hide element highlight while creating the image

                editor.classList.add("pb-editor-no-highlight");
                _context.next = 8;
                return domToImage.toPng(node, {
                  onDocument: function onDocument(doc) {
                    return _this2.replaceContent(element, doc);
                  },
                  width: 1000
                });

              case 8:
                dataUrl = _context.sent;
                editor.classList.remove("pb-editor-no-highlight");
                this.props.onChange(dataUrl);

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function generateImage() {
        return _generateImage.apply(this, arguments);
      }

      return generateImage;
    }()
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return ElementPreview;
}(React.Component);

export { ElementPreview as default };
//# sourceMappingURL=ElementPreview.js.map