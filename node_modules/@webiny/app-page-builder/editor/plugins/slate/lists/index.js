import * as React from "react";
import { ReactComponent as OrderedListIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_list_numbered.svg";
import { ReactComponent as UnorderedListIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_list_bulleted.svg";

var hasBlock = function hasBlock(value, type) {
  return value.blocks.some(function (node) {
    return node.type === type;
  });
};

var onClickBlock = function onClickBlock(type, onChange, editor) {
  editor.change(function (change) {
    var value = change.value;
    var document = value.document; // Handle the extra wrapping required for list buttons.

    var isList = hasBlock(editor.value, "list-item");
    var isType = value.blocks.some(function (block) {
      return !!document.getClosest(block.key, function (parent) {
        return parent.type === type;
      });
    });

    if (isList && isType) {
      change.setBlocks("paragraph").unwrapBlock("unordered-list").unwrapBlock("ordered-list");
    } else if (isList) {
      change.unwrapBlock(type === "unordered-list" ? "ordered-list" : "unordered-list").wrapBlock(type);
    } else {
      change.setBlocks("list-item").wrapBlock(type);
    }

    onChange(change);
  });
};

export default (function () {
  return {
    menu: [{
      name: "pb-editor-slate-menu-item-ordered-list",
      type: "pb-editor-slate-menu-item",
      render: function render(_ref) {
        var MenuButton = _ref.MenuButton,
            editor = _ref.editor,
            onChange = _ref.onChange;
        var isActive = hasBlock(editor.value, "ordered-list");
        return (
          /*#__PURE__*/
          // eslint-disable-next-line react/jsx-no-bind
          React.createElement(MenuButton, {
            onClick: function onClick() {
              return onClickBlock("ordered-list", onChange, editor);
            },
            active: isActive
          }, /*#__PURE__*/React.createElement(OrderedListIcon, null))
        );
      }
    }, {
      name: "pb-editor-slate-menu-item-unordered-list",
      type: "pb-editor-slate-menu-item",
      render: function render(_ref2) {
        var MenuButton = _ref2.MenuButton,
            editor = _ref2.editor,
            onChange = _ref2.onChange;
        var isActive = hasBlock(editor.value, "unordered-list");
        return (
          /*#__PURE__*/
          // eslint-disable-next-line react/jsx-no-bind
          React.createElement(MenuButton, {
            onClick: function onClick() {
              return onClickBlock("unordered-list", onChange, editor);
            },
            active: isActive
          }, /*#__PURE__*/React.createElement(UnorderedListIcon, null))
        );
      }
    }],
    editor: [{
      name: "pb-editor-slate-editor-lists",
      type: "pb-editor-slate-editor",
      slate: {
        renderNode: function renderNode(props, next) {
          var attributes = props.attributes,
              children = props.children,
              node = props.node; // @ts-ignore

          switch (node.type) {
            case "unordered-list":
              return /*#__PURE__*/React.createElement("ul", Object.assign({
                className: "webiny-pb-typography-unordered-list"
              }, attributes), children);

            case "list-item":
              return /*#__PURE__*/React.createElement("li", attributes, children);

            case "ordered-list":
              return /*#__PURE__*/React.createElement("ol", Object.assign({
                className: "webiny-pb-typography-ordered-list"
              }, attributes), children);

            default:
              return next();
          }
        }
      }
    }]
  };
});
//# sourceMappingURL=index.js.map