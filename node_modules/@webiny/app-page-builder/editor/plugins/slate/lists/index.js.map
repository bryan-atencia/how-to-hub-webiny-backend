{"version":3,"sources":["../../../../../src/editor/plugins/slate/lists/index.tsx"],"names":["React","hasBlock","value","type","blocks","some","node","onClickBlock","onChange","editor","change","document","isList","isType","block","getClosest","key","parent","setBlocks","unwrapBlock","wrapBlock","menu","name","render","MenuButton","isActive","slate","renderNode","props","next","attributes","children"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ReactComponent as OrderedListIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_list_numbered.svg\";\nimport { ReactComponent as UnorderedListIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_list_bulleted.svg\";\nimport {\n    PbEditorSlateEditorPlugin,\n    PbEditorSlateMenuItemPlugin\n} from \"@webiny/app-page-builder/types\";\n\nconst hasBlock = (value, type) => {\n    return value.blocks.some(node => node.type === type);\n};\n\nconst onClickBlock = (type, onChange, editor) => {\n    editor.change(change => {\n        const { value } = change;\n        const { document } = value;\n\n        // Handle the extra wrapping required for list buttons.\n        const isList = hasBlock(editor.value, \"list-item\");\n        const isType = value.blocks.some(block => {\n            return !!document.getClosest(block.key, parent => parent.type === type);\n        });\n\n        if (isList && isType) {\n            change\n                .setBlocks(\"paragraph\")\n                .unwrapBlock(\"unordered-list\")\n                .unwrapBlock(\"ordered-list\");\n        } else if (isList) {\n            change\n                .unwrapBlock(type === \"unordered-list\" ? \"ordered-list\" : \"unordered-list\")\n                .wrapBlock(type);\n        } else {\n            change.setBlocks(\"list-item\").wrapBlock(type);\n        }\n\n        onChange(change);\n    });\n};\n\nexport default () => {\n    return {\n        menu: [\n            {\n                name: \"pb-editor-slate-menu-item-ordered-list\",\n                type: \"pb-editor-slate-menu-item\",\n                render({ MenuButton, editor, onChange }) {\n                    const isActive = hasBlock(editor.value, \"ordered-list\");\n\n                    return (\n                        // eslint-disable-next-line react/jsx-no-bind\n                        <MenuButton\n                            onClick={() => onClickBlock(\"ordered-list\", onChange, editor)}\n                            active={isActive}\n                        >\n                            <OrderedListIcon />\n                        </MenuButton>\n                    );\n                }\n            } as PbEditorSlateMenuItemPlugin,\n            {\n                name: \"pb-editor-slate-menu-item-unordered-list\",\n                type: \"pb-editor-slate-menu-item\",\n                render({ MenuButton, editor, onChange }) {\n                    const isActive = hasBlock(editor.value, \"unordered-list\");\n\n                    return (\n                        // eslint-disable-next-line react/jsx-no-bind\n                        <MenuButton\n                            onClick={() => onClickBlock(\"unordered-list\", onChange, editor)}\n                            active={isActive}\n                        >\n                            <UnorderedListIcon />\n                        </MenuButton>\n                    );\n                }\n            } as PbEditorSlateMenuItemPlugin\n        ],\n        editor: [\n            {\n                name: \"pb-editor-slate-editor-lists\",\n                type: \"pb-editor-slate-editor\",\n                slate: {\n                    renderNode(props, next) {\n                        const { attributes, children, node } = props;\n\n                        // @ts-ignore\n                        switch (node.type) {\n                            case \"unordered-list\":\n                                return (\n                                    <ul\n                                        className={\"webiny-pb-typography-unordered-list\"}\n                                        {...attributes}\n                                    >\n                                        {children}\n                                    </ul>\n                                );\n                            case \"list-item\":\n                                return <li {...attributes}>{children}</li>;\n                            case \"ordered-list\":\n                                return (\n                                    <ol\n                                        className={\"webiny-pb-typography-ordered-list\"}\n                                        {...attributes}\n                                    >\n                                        {children}\n                                    </ol>\n                                );\n                            default:\n                                return next();\n                        }\n                    }\n                }\n            } as PbEditorSlateEditorPlugin\n        ]\n    };\n};\n"],"file":"index.js"}