{"version":3,"sources":["../../../../../src/editor/plugins/slate/link/LinkDialog.tsx"],"names":["React","Fragment","useCallback","useMemo","Form","Input","Switch","Cell","Grid","Dialog","DialogContent","DialogTitle","DialogCancel","DialogActions","DialogButton","getLinkRange","isLink","TYPE","validation","LinkDialog","open","editor","onChange","closeDialog","activePlugin","linkData","value","selection","inlines","anchorText","link","find","getText","ns","normalizeSelection","start","anchor","offset","end","focus","selectedText","substr","data","text","updateLink","change","linkSelection","select","unwrapInline","insertText","moveAnchorBackward","length","wrapInline","type","moveToStart","Bind","submit","create"],"mappings":"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","sourcesContent":["import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    DialogCancel,\n    DialogActions,\n    DialogButton\n} from \"@webiny/ui/Dialog\";\nimport { getLinkRange, isLink, TYPE } from \"./utils\";\nimport { validation } from \"@webiny/validation\";\n\nconst LinkDialog = ({ open, editor, onChange, closeDialog, activePlugin }) => {\n    const { linkData } = useMemo(() => {\n        if (!activePlugin) {\n            return { linkData: null };\n        }\n\n        const { selection, inlines } = activePlugin.value;\n        let { anchorText } = activePlugin.value;\n        const link = inlines.find(isLink);\n\n        if (typeof anchorText !== \"string\") {\n            anchorText = anchorText.getText();\n        }\n\n        const ns = normalizeSelection(selection);\n        const start = ns.anchor.offset;\n        const end = ns.focus.offset;\n        const selectedText = link ? anchorText : anchorText.substr(start, end - start);\n\n        return { linkData: { ...(link && link.data), text: selectedText } };\n    }, [activePlugin]);\n\n    const updateLink = useCallback(\n        ({ text, ...data }) => {\n            editor.change(change => {\n                const { selection } = activePlugin.value;\n                const linkSelection = getLinkRange(change, normalizeSelection(selection));\n                change\n                    .select(linkSelection)\n                    .unwrapInline(TYPE)\n                    .insertText(text)\n                    .moveAnchorBackward(text.length)\n                    .wrapInline({ type: TYPE, data })\n                    .moveToStart();\n\n                onChange(change);\n                closeDialog();\n            });\n        },\n        [editor, activePlugin, onChange, closeDialog]\n    );\n\n    return (\n        <Dialog open={open} onClose={closeDialog}>\n            <Form data={linkData} onSubmit={updateLink}>\n                {({ Bind, submit }) => (\n                    <Fragment>\n                        <DialogTitle>Edit Link</DialogTitle>\n                        <DialogContent>\n                            <Grid>\n                                <Cell span={12}>\n                                    <Bind name={\"text\"} validators={validation.create(\"required\")}>\n                                        <Input label=\"Text to display\" />\n                                    </Bind>\n                                </Cell>\n                                <Cell span={12}>\n                                    <Bind name={\"href\"} validators={validation.create(\"required\")}>\n                                        <Input label=\"URL\" />\n                                    </Bind>\n                                </Cell>\n                                <Cell span={6}>\n                                    <Bind name={\"newTab\"}>\n                                        <Switch\n                                            onChange={() => submit()}\n                                            label={\"Open in new window\"}\n                                        />\n                                    </Bind>\n                                </Cell>\n                                <Cell span={6}>\n                                    <Bind name={\"noFollow\"}>\n                                        <Switch\n                                            onChange={() => submit()}\n                                            label={`Add \"rel=nofollow\"`}\n                                        />\n                                    </Bind>\n                                </Cell>\n                            </Grid>\n                        </DialogContent>\n                        <DialogActions>\n                            <DialogCancel onClick={closeDialog}>Cancel</DialogCancel>\n                            <DialogButton onClick={submit}>OK</DialogButton>\n                        </DialogActions>\n                    </Fragment>\n                )}\n            </Form>\n        </Dialog>\n    );\n};\n\nconst normalizeSelection = selection => {\n    let start, end;\n    if (selection.anchor.offset > selection.focus.offset) {\n        start = selection.focus;\n        end = selection.anchor;\n    } else {\n        start = selection.anchor;\n        end = selection.focus;\n    }\n\n    return {\n        anchor: start,\n        focus: end\n    };\n};\n\nexport default LinkDialog;\n"],"file":"LinkDialog.js"}