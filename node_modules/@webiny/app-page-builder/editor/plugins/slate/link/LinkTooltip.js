import React from "react";
import styled from "@emotion/styled";
import { css } from "emotion";
import { Elevation } from "@webiny/ui/Elevation";
import useLink from "./useLink";
var Tooltip = /*#__PURE__*/styled("span", {
  target: "eomjgyt0",
  label: "Tooltip"
})({
  display: "flex",
  flexDirection: "row",
  position: "fixed",
  top: 20,
  left: 0,
  zIndex: 1,
  width: "auto",
  maxWidth: 520,
  "> span:not(:first-of-type)": {
    marginLeft: 10
  }
});
var tooltipInner = /*#__PURE__*/css({
  padding: "5px 10px",
  borderRadius: 2,
  fontSize: "0.8rem",
  a: {
    cursor: "pointer"
  }
}, "label:tooltipInner;");

var compressLink = function compressLink(href) {
  var start = href.substr(0, 24);
  var end = href.substr(24).substr(-24);
  return [start, "...", end].join("");
};

var displayNone = {
  display: "none"
};

var LinkTooltip = function LinkTooltip(props) {
  var _useLink = useLink(props),
      menuRef = _useLink.menuRef,
      href = _useLink.href,
      activateLink = _useLink.activateLink,
      removeLink = _useLink.removeLink;

  return /*#__PURE__*/React.createElement(Tooltip, {
    ref: menuRef,
    style: displayNone
  }, /*#__PURE__*/React.createElement(Elevation, {
    className: tooltipInner,
    z: 1
  }, /*#__PURE__*/React.createElement("span", null, "Link:", " ", /*#__PURE__*/React.createElement("a", {
    href: href,
    target: "_blank"
  }, href.length > 50 ? compressLink(href) : href)), " ", "| ", /*#__PURE__*/React.createElement("a", {
    onClick: activateLink
  }, "Change"), " | ", /*#__PURE__*/React.createElement("a", {
    onClick: removeLink
  }, "Remove")));
};

export default LinkTooltip;
//# sourceMappingURL=LinkTooltip.js.map