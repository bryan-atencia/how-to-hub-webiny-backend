{"version":3,"sources":["../../../../../src/editor/plugins/slate/block/index.tsx"],"names":["React","TypographySelector","icons","left","AlignLeftIcon","center","AlignCenterIcon","right","AlignRightIcon","justify","AlignJustifyIcon","alignments","Object","keys","setAlign","align","blockType","onChange","editor","change","setBlocks","type","data","focus","menu","name","render","MenuButton","props","block","value","blocks","first","get","nextAlign","indexOf","createElement","slate","renderNode","next","attributes","children","node","typography","theme","hasOwnProperty","component","Component","className","nodeProps","style","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ReactComponent as AlignCenterIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_align_center.svg\";\nimport { ReactComponent as AlignLeftIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_align_left.svg\";\nimport { ReactComponent as AlignJustifyIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_align_justify.svg\";\nimport { ReactComponent as AlignRightIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_align_right.svg\";\nimport TypographySelector from \"./TypographySelector\";\nimport {\n    PbEditorSlateEditorPlugin,\n    PbEditorSlateMenuItemPlugin\n} from \"@webiny/app-page-builder/types\";\n\n// Icons map for dynamic render\nconst icons = {\n    left: AlignLeftIcon,\n    center: AlignCenterIcon,\n    right: AlignRightIcon,\n    justify: AlignJustifyIcon\n};\n\n// Alignment types for faster access\nconst alignments = Object.keys(icons);\n\nconst setAlign = (align, blockType, onChange, editor) => {\n    editor.change(change => {\n        change\n            .setBlocks({\n                type: blockType,\n                data: { align }\n            })\n            .focus();\n        onChange(change);\n        return change;\n    });\n};\n\nexport default () => {\n    return {\n        menu: [\n            {\n                name: \"pb-editor-slate-menu-item-typography\",\n                type: \"pb-editor-slate-menu-item\",\n                render({ MenuButton, ...props }) {\n                    return (\n                        <MenuButton>\n                            <TypographySelector {...props} />\n                        </MenuButton>\n                    );\n                }\n            } as PbEditorSlateMenuItemPlugin,\n            {\n                name: \"pb-editor-slate-menu-item-align\",\n                type: \"pb-editor-slate-menu-item\",\n                render({ MenuButton, editor, onChange }) {\n                    const block = editor.value.blocks.first();\n\n                    const align = block.data.get(\"align\") || \"left\";\n                    const nextAlign = alignments[alignments.indexOf(align) + 1] || \"left\";\n\n                    return (\n                        // eslint-disable-next-line react/jsx-no-bind\n                        <MenuButton\n                            onClick={() => setAlign(nextAlign, block.type, onChange, editor)}\n                        >\n                            {React.createElement(icons[align])}\n                        </MenuButton>\n                    );\n                }\n            } as PbEditorSlateMenuItemPlugin\n        ],\n        editor: [\n            {\n                name: \"pb-editor-slate-editor-typography\",\n                type: \"pb-editor-slate-editor\",\n                slate: {\n                    renderNode(props, next) {\n                        const { attributes, children, node, editor } = props;\n                        // @ts-ignore\n                        const { type } = node;\n\n                        // @ts-ignore\n                        const { typography } = editor.props.theme;\n\n                        if (typography.hasOwnProperty(type) && typography[type].component) {\n                            const { component: Component, className = null } = typography[type];\n\n                            let nodeProps: any = {\n                                ...attributes,\n                                className,\n                                // @ts-ignore\n                                style: { textAlign: `${node.data.get(\"align\")}` }\n                            };\n\n                            if (typeof Component !== \"string\") {\n                                nodeProps = props;\n                            }\n\n                            return <Component {...nodeProps}>{children}</Component>;\n                        }\n\n                        return next();\n                    }\n                }\n            } as PbEditorSlateEditorPlugin\n        ]\n    };\n};\n"],"file":"index.js"}