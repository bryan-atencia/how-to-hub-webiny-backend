{"version":3,"sources":["../../../../../src/editor/plugins/slate/bold/index.tsx"],"names":["React","css","isKeyHotkey","isBoldHotkey","hasMark","value","type","Boolean","activeMarks","find","mark","onClickMark","editor","onChange","change","toggleMark","strongStyle","fontWeight","menu","name","render","MenuButton","isActive","slate","onKeyDown","event","next","preventDefault","renderMark","props","attributes","children"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,SAApB;;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,IAAMC,YAAY,GAAGD,WAAW,CAAC,OAAD,CAAhC;;AAEA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAC7B,SAAOC,OAAO,CAACF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACJ,IAAL,KAAcA,IAAlB;AAAA,GAA3B,CAAD,CAAd;AACH,CAFD;;AAIA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACL,IAAD,EAAOM,MAAP,EAAeC,QAAf,EAA4B;AAC5CD,EAAAA,MAAM,CAACE,MAAP,CAAc,UAAAA,MAAM;AAAA,WAAID,QAAQ,CAACC,MAAM,CAACC,UAAP,CAAkBT,IAAlB,CAAD,CAAZ;AAAA,GAApB;AACH,CAFD;;AAIA,IAAMI,IAAI,GAAG,MAAb,C,CAEA;;AACA,IAAMM,WAAW,gBAAGf,GAAG,CAAC;AACpB,iCAA+B;AAC3BgB,IAAAA,UAAU,EAAE;AADe;AADX,CAAD,uBAAvB;AAMA,gBAAe,YAAM;AACjB,SAAO;AACHC,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,IAAI,EAAE,gCADV;AAEIb,MAAAA,IAAI,EAAE,2BAFV;AAGIc,MAAAA,MAHJ,wBAG6C;AAAA,YAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,YAApBT,MAAoB,QAApBA,MAAoB;AAAA,YAAZC,QAAY,QAAZA,QAAY;AACrC,YAAMS,QAAQ,GAAGlB,OAAO,CAACQ,MAAM,CAACP,KAAR,EAAeK,IAAf,CAAxB;AAEA;AAAA;AACI;AACA,8BAAC,UAAD;AACI,YAAA,OAAO,EAAE;AAAA,qBAAMC,WAAW,CAACD,IAAD,EAAOE,MAAP,EAAeC,QAAf,CAAjB;AAAA,aADb;AAEI,YAAA,MAAM,EAAES;AAFZ,0BAII,oBAAC,cAAD,OAJJ;AAFJ;AASH;AAfL,KADE,CADH;AAoBHV,IAAAA,MAAM,EAAE,CACJ;AACIO,MAAAA,IAAI,EAAE,6BADV;AAEIb,MAAAA,IAAI,EAAE,wBAFV;AAGIiB,MAAAA,KAAK,EAAE;AACHC,QAAAA,SADG,qBACOC,KADP,EACcX,MADd,EACsBY,IADtB,EAC4B;AAC3B;AACA,cAAIvB,YAAY,CAACsB,KAAD,CAAhB,EAAyB;AACrBA,YAAAA,KAAK,CAACE,cAAN;AACAb,YAAAA,MAAM,CAACC,UAAP,CAAkBL,IAAlB;AACA,mBAAO,IAAP;AACH;;AAED,iBAAOgB,IAAI,EAAX;AACH,SAVE;AAWHE,QAAAA,UAXG,sBAWQC,KAXR,EAWeH,IAXf,EAWqB;AACpB,cAAIG,KAAK,CAACnB,IAAN,CAAWJ,IAAX,KAAoBI,IAAxB,EAA8B;AAC1B,gCACI;AAAQ,cAAA,SAAS,EAAEM;AAAnB,eAAoCa,KAAK,CAACC,UAA1C,GACKD,KAAK,CAACE,QADX,CADJ;AAKH;;AAED,iBAAOL,IAAI,EAAX;AACH;AArBE;AAHX,KADI;AApBL,GAAP;AAkDH,CAnDD","sourcesContent":["import * as React from \"react\";\nimport { css } from \"emotion\";\nimport { ReactComponent as FormatBoldIcon } from \"@webiny/app-page-builder/editor/assets/icons/format_bold.svg\";\nimport { isKeyHotkey } from \"is-hotkey\";\nconst isBoldHotkey = isKeyHotkey(\"mod+b\");\n\nconst hasMark = (value, type) => {\n    return Boolean(value.activeMarks.find(mark => mark.type === type));\n};\n\nconst onClickMark = (type, editor, onChange) => {\n    editor.change(change => onChange(change.toggleMark(type)));\n};\n\nconst mark = \"bold\";\n\n// @ts-ignore\nconst strongStyle = css({\n    \"[class*='mdc-typography--']\": {\n        fontWeight: \"bold !important\"\n    }\n});\n\nexport default () => {\n    return {\n        menu: [\n            {\n                name: \"pb-editor-slate-menu-item-bold\",\n                type: \"pb-editor-slate-menu-item\",\n                render({ MenuButton, editor, onChange }) {\n                    const isActive = hasMark(editor.value, mark);\n\n                    return (\n                        // eslint-disable-next-line react/jsx-no-bind\n                        <MenuButton\n                            onClick={() => onClickMark(mark, editor, onChange)}\n                            active={isActive}\n                        >\n                            <FormatBoldIcon />\n                        </MenuButton>\n                    );\n                }\n            }\n        ],\n        editor: [\n            {\n                name: \"pb-editor-slate-editor-bold\",\n                type: \"pb-editor-slate-editor\",\n                slate: {\n                    onKeyDown(event, change, next) {\n                        // Decide what to do based on the key code...\n                        if (isBoldHotkey(event)) {\n                            event.preventDefault();\n                            change.toggleMark(mark);\n                            return true;\n                        }\n\n                        return next();\n                    },\n                    renderMark(props, next) {\n                        if (props.mark.type === mark) {\n                            return (\n                                <strong className={strongStyle} {...props.attributes}>\n                                    {props.children}\n                                </strong>\n                            );\n                        }\n\n                        return next();\n                    }\n                }\n            }\n        ]\n    };\n};\n"],"file":"index.js"}