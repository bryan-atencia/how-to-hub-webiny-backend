import * as React from "react";
import { ReactComponent as CodeIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/code.svg";
var MARK = "code";

var hasMark = function hasMark(value, type) {
  return Boolean(value.marks.find(function (mark) {
    return mark.type === type;
  }));
};

var onClickMark = function onClickMark(type, editor, onChange) {
  editor.change(function (change) {
    return onChange(change.toggleMark(type));
  });
};

export default (function () {
  return {
    menu: [{
      name: "pb-editor-slate-menu-item-code",
      type: "pb-editor-slate-menu-item",
      render: function render(_ref) {
        var MenuButton = _ref.MenuButton,
            editor = _ref.editor,
            onChange = _ref.onChange;
        var isActive = hasMark(editor.value, MARK);
        return (
          /*#__PURE__*/
          // eslint-disable-next-line react/jsx-no-bind
          React.createElement(MenuButton, {
            onClick: function onClick() {
              return onClickMark(MARK, editor, onChange);
            },
            active: isActive
          }, /*#__PURE__*/React.createElement(CodeIcon, null))
        );
      }
    }],
    editor: [{
      name: "pb-editor-slate-editor-code",
      type: "pb-editor-slate-editor",
      slate: {
        renderMark: function renderMark(props, editor, next) {
          if (props.mark.type === MARK) {
            return /*#__PURE__*/React.createElement("code", Object.assign({
              className: "webiny-pb-typography-code"
            }, props.attributes), props.children);
          }

          return next();
        }
      }
    }]
  };
});
//# sourceMappingURL=index.js.map