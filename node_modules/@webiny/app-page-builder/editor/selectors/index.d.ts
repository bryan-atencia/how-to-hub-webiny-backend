import { State, PbElement, PbShallowElement } from "@webiny/app-page-builder/types";
/**
 * Get editor `ui` state
 */
export declare const getUi: (state: State) => any;
/**
 * Get editor `page` state
 */
export declare const getPage: (state: State) => any;
/**
 * Get editor `revisions` state
 */
export declare const getRevisions: (state: State) => any[];
/**
 * Get editor content.
 */
export declare const getContent: (state: State) => any;
/**
 * Get element and all of its children recursively.
 * WARNING: use carefully as this makes render optimization really difficult when used in `connect`!
 */
export declare const getElementWithChildren: (state: State, id: string) => PbElement;
/**
 * Get element by ID or path.
 * @param state
 * @param id ID or path of the element
 */
export declare const getElement: (state: State, id: string) => PbShallowElement;
/**
 * Get parent element and all of its children recursively
 * WARNING: use carefully as this makes render optimization really difficult when used in `connect`!
 * @param state
 * @param id
 * @returns {*}
 */
export declare const getParentElementWithChildren: (state: State, id: string) => PbElement;
export declare const getActiveElement: (state: State) => PbShallowElement;
/**
 * Get active element ID.
 */
export declare const getActiveElementId: (state: State) => string;
/**
 * Get editor plugins (this mostly contains UI state).
 */
export declare const getPlugins: (state: State) => Object;
/**
 * Get editor plugins of certain type (this mostly contains UI state).
 */
export declare const getPluginsByType: (type: string) => (state: State) => any;
/**
 * Get an active plugin of the given type.
 */
export declare const getActivePlugins: (type: string) => (state: State) => any;
/**
 * Get active plugin params
 */
export declare const getActivePluginParams: (name: string) => (state: State) => any;
export declare const isPluginActive: (name: string) => (state: State) => boolean;
/**
 * Get dragging state.
 */
export declare const getIsDragging: (state: State) => any;
/**
 * Get props that need to be passed to an <Element>.
 */
export declare const getElementProps: (state: State, { id }: {
    id: any;
}) => {
    active: boolean;
    highlight: boolean;
};
