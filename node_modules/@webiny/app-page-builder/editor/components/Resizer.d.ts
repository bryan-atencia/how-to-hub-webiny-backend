import React, { ReactElement, SyntheticEvent } from "react";
declare type ResizerProps = {
    axis: "x" | "y";
    onResizeStart?: () => void;
    onResizeStop?: () => void;
    onResize(position: number): void;
    children(params: {
        isResizing: boolean;
        onMouseDown(e: SyntheticEvent): void;
    }): ReactElement;
};
declare class Resizer extends React.Component<ResizerProps> {
    state: {
        dragging: boolean;
    };
    startPosition: number;
    getMousePosition: (e: any) => any;
    onMouseDown: (e: React.SyntheticEvent<Element, Event>) => void;
    onMouseUp: () => void;
    onMouseMove: (e: any) => void;
    render(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
}
export default Resizer;
