import React, { RefObject } from "react";
import { Editor } from "slate-react";
import { Value } from "slate";
export declare type SlateEditorProps = {
    exclude?: string[];
    onChange?: (value: {
        [key: string]: any;
    }) => void;
};
export declare type SlateEditorState = {
    modified: boolean;
    showMenu: boolean;
    value: Value;
    readOnly: boolean;
    activePlugin: {
        plugin: string;
        value: {
            [key: string]: any;
        };
    };
};
declare class SlateEditor extends React.Component<SlateEditorProps, SlateEditorState> {
    static defaultProps: {
        exclude: any[];
    };
    id: string;
    nextElement: HTMLElement;
    plugins: any[];
    editor: RefObject<Editor>;
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    trackNextElement: (e: any) => void;
    untrackNextElement: () => void;
    static getDerivedStateFromProps(props: any, state: any): {
        value: any;
    };
    onChange: (change: any, callback?: (...args: any[]) => void) => void;
    onBlur: () => void;
    getMenuContainer: () => HTMLElement;
    getSelectionRect: () => DOMRect | {
        top: number;
        left: number;
        width: number;
        height: number;
    };
    renderFloatingMenu: () => React.ReactPortal;
    activatePlugin: (plugin: string) => void;
    deactivatePlugin: () => void;
    render(): JSX.Element;
}
export default SlateEditor;
