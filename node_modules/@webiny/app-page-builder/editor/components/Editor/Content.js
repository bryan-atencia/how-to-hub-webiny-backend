import React from "react";
import { get } from "dot-prop-immutable";
import { connect } from "@webiny/app-page-builder/editor/redux";
import styled from "@emotion/styled";
import { css } from "emotion";
import { getPlugins } from "@webiny/plugins";
import { usePageBuilder } from "@webiny/app-page-builder/hooks/usePageBuilder";
import { getContent, isPluginActive, getPage } from "@webiny/app-page-builder/editor/selectors";
import Element from "@webiny/app-page-builder/editor/components/Element";
import { Elevation } from "@webiny/ui/Elevation";
var ContentContainer = /*#__PURE__*/styled("div", {
  target: "e1q1altr0",
  label: "ContentContainer"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    backgroundColor: get(theme, "colors.background"),
    ".webiny-pb-page-document": {
      overflowY: "visible",
      // cuts off the block selector tooltip
      overflowX: "visible"
    }
  };
});
var contentContainerWrapper = /*#__PURE__*/css({
  margin: "95px 65px 50px 85px",
  padding: 0,
  position: "absolute",
  width: "calc(100vw - 115px)",
  //overflow: "hidden", // cuts off the block selector tooltip
  top: 0,
  boxSizing: "border-box",
  zIndex: 1
}, "label:contentContainerWrapper;");
var BaseContainer = /*#__PURE__*/styled("div", {
  target: "e1q1altr1",
  label: "BaseContainer"
})({
  width: "100%",
  left: 52,
  margin: "0 auto"
});

var Content = function Content(_ref2) {
  var rootElement = _ref2.rootElement,
      renderLayout = _ref2.renderLayout,
      layout = _ref2.layout;

  var _usePageBuilder = usePageBuilder(),
      theme = _usePageBuilder.theme;

  var plugins = getPlugins("pb-editor-content");
  var layouts = React.useMemo(function () {
    var plugins = getPlugins("pb-page-layout");
    return plugins.map(function (pl) {
      return pl.layout;
    });
  }, []);
  var themeLayout = layouts.find(function (l) {
    return l.name === layout;
  });

  if (renderLayout && !themeLayout) {
    return /*#__PURE__*/React.createElement("div", null, "Layout \"", layout, "\" was not found in your theme!");
  }

  var content = /*#__PURE__*/React.createElement(Element, {
    id: rootElement.id
  });
  content = renderLayout ? /*#__PURE__*/React.createElement(themeLayout.component, null, content) : content;
  return /*#__PURE__*/React.createElement(Elevation, {
    className: contentContainerWrapper,
    z: 2
  }, /*#__PURE__*/React.createElement(ContentContainer, {
    theme: theme
  }, plugins.map(function (plugin) {
    return /*#__PURE__*/React.cloneElement(plugin.render(), {
      key: plugin.name
    });
  }), /*#__PURE__*/React.createElement(BaseContainer, {
    className: "webiny-pb-editor-content-preview"
  }, content)));
};

var stateToProps = function stateToProps(state) {
  return {
    rootElement: state.elements[getContent(state).id],
    layout: get(getPage(state), "settings.general.layout"),
    renderLayout: isPluginActive("pb-editor-toolbar-preview")(state)
  };
};

export default connect(stateToProps)(Content);
//# sourceMappingURL=Content.js.map