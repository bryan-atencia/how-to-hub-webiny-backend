import React, { useEffect } from "react";
import { connect } from "@webiny/app-page-builder/editor/redux";
import classSet from "classnames";
import { ActionCreators } from "redux-undo";
import HTML5Backend from "react-dnd-html5-backend";
import { DndProvider } from "react-dnd";
import { getUi } from "@webiny/app-page-builder/editor/selectors";
import { useKeyHandler } from "@webiny/app-page-builder/editor/hooks/useKeyHandler";
import "./Editor.scss"; // Components

import EditorBar from "./Bar";
import EditorToolbar from "./Toolbar";
import EditorContent from "./Content";
import DragPreview from "./DragPreview";
import Dialogs from "./Dialogs";

var EditorComponent = function EditorComponent(_ref) {
  var isDragging = _ref.isDragging,
      isResizing = _ref.isResizing,
      undo = _ref.undo,
      redo = _ref.redo,
      slateFocused = _ref.slateFocused;

  var _useKeyHandler = useKeyHandler(),
      addKeyHandler = _useKeyHandler.addKeyHandler,
      removeKeyHandler = _useKeyHandler.removeKeyHandler;

  useEffect(function () {
    addKeyHandler("mod+z", function (e) {
      if (!slateFocused) {
        e.preventDefault();
        undo();
      }
    });
    addKeyHandler("mod+shift+z", function (e) {
      if (!slateFocused) {
        e.preventDefault();
        redo();
      }
    });
    return function () {
      removeKeyHandler("mod+z");
      removeKeyHandler("mod+shift+z");
    };
  });
  var classes = {
    "pb-editor": true,
    "pb-editor-dragging": isDragging,
    "pb-editor-resizing": isResizing
  };
  return /*#__PURE__*/React.createElement(DndProvider, {
    backend: HTML5Backend
  }, /*#__PURE__*/React.createElement("div", {
    className: classSet(classes)
  }, /*#__PURE__*/React.createElement(EditorBar, null), /*#__PURE__*/React.createElement(EditorToolbar, null), /*#__PURE__*/React.createElement(EditorContent, null), /*#__PURE__*/React.createElement(Dialogs, null), /*#__PURE__*/React.createElement(DragPreview, null)));
};

export var Editor = connect(function (state) {
  var ui = getUi(state);
  return {
    slateFocused: ui.slateFocused,
    isDragging: ui.dragging,
    isResizing: ui.resizing
  };
}, {
  undo: ActionCreators.undo,
  redo: ActionCreators.redo
})(EditorComponent);
//# sourceMappingURL=Editor.js.map