{"version":3,"sources":["../../../src/editor/components/OEmbed.tsx"],"names":["React","connect","css","set","gql","useQuery","updateElement","useSnackbar","appendSDK","props","sdk","global","element","url","window","Promise","resolve","script","document","createElement","type","src","encodeURI","setAttribute","onload","body","appendChild","initEmbed","init","node","getElementById","id","oembedQuery","centerAlign","marginLeft","marginRight","OEmbed","memo","showSnackbar","onData","d","useEffect","then","source","oembed","skip","variables","onCompleted","data","error","message","loading","renderEmpty","useCallback","renderEmbed","__html"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { css } from \"emotion\";\nimport { isEqual } from \"lodash\";\nimport { get } from \"lodash\";\nimport { set } from \"dot-prop-immutable\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"react-apollo\";\nimport { PbUpdateElement, updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { PbElement } from \"@webiny/app-page-builder/types\";\nimport { ReactElement } from \"react\";\n\nfunction appendSDK(props) {\n    const { sdk, global, element } = props;\n    const { url } = get(element, \"data.source\") || {};\n\n    if (!sdk || !url || window[global]) {\n        return Promise.resolve();\n    }\n\n    return new Promise(resolve => {\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = encodeURI(sdk);\n        script.setAttribute(\"async\", \"\");\n        script.setAttribute(\"charset\", \"utf-8\");\n        script.onload = resolve;\n        document.body.appendChild(script);\n    });\n}\n\nfunction initEmbed(props) {\n    const { sdk, init, element } = props;\n    if (sdk && get(element, \"data.source.url\")) {\n        const node = document.getElementById(element.id);\n        if (typeof init === \"function\" && node) {\n            init({ props, node });\n        }\n    }\n}\n\nconst oembedQuery = gql`\n    query GetOEmbedData($url: String!, $width: String, $height: String) {\n        pageBuilder {\n            oembedData(url: $url, width: $width, height: $height) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nconst centerAlign = css({\n    \"*:first-of-type\": {\n        marginLeft: \"auto !important\",\n        marginRight: \"auto !important\"\n    }\n});\n\nexport type OEmbedProps = {\n    element: PbElement;\n    updateElement: PbUpdateElement;\n    onData?: (data: { [key: string]: any }) => { [key: string]: any };\n    renderEmbed?: (props: OEmbedProps) => ReactElement;\n    data: any;\n};\n\nconst OEmbed = React.memo((props: OEmbedProps) => {\n    const { showSnackbar } = useSnackbar();\n    const { element, updateElement, onData = d => d } = props;\n\n    React.useEffect(() => {\n        appendSDK(props).then(() => initEmbed(props));\n    });\n\n    const source = get(element, \"data.source\") || {};\n    const oembed = get(element, \"data.oembed\") || {};\n    const skip = !source.url || isEqual(oembed.source, source);\n\n    const { loading } = useQuery(oembedQuery, {\n        skip,\n        variables: source,\n        onCompleted: data => {\n            if (skip) {\n                return;\n            }\n            const { data: oembed, error } = get(data, \"pageBuilder.oembedData\");\n            if (oembed) {\n                // Store loaded oembed data\n                updateElement({\n                    element: set(element, \"data.oembed\", onData(oembed))\n                });\n            }\n            if (error) {\n                showSnackbar(error.message);\n            }\n        }\n    });\n\n    const renderEmpty = React.useCallback(\n        () => <div>You must configure your embed in the settings!</div>,\n        []\n    );\n\n    const renderEmbed = React.useCallback(() => {\n        if (typeof props.renderEmbed === \"function\") {\n            return props.renderEmbed(props);\n        }\n\n        if (loading) {\n            return <div>Loading embed data...</div>;\n        }\n\n        return (\n            <div\n                id={element.id}\n                className={\n                    centerAlign + \" pb-editor-dragging--disabled pb-editor-resizing--disabled\"\n                }\n                dangerouslySetInnerHTML={{ __html: get(element, \"data.oembed.html\") || \"\" }}\n            />\n        );\n    }, [element, loading]);\n\n    const { url } = get(element, \"data.source\") || {};\n\n    return url ? renderEmbed() : renderEmpty();\n});\n\nexport default connect<any, any, any>(null, { updateElement })(OEmbed);\n"],"file":"OEmbed.js"}