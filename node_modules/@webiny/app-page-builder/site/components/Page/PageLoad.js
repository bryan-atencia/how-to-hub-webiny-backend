import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React from "react";
import { useQuery } from "react-apollo";
import PageRender from "./PageRender";
import { GET_PUBLISHED_PAGE } from "./graphql";

var PageLoad = function PageLoad(_ref) {
  var _data$pageBuilder;

  var parent = _ref.parent,
      id = _ref.id,
      url = _ref.url;

  var _useQuery = useQuery(GET_PUBLISHED_PAGE(), {
    variables: {
      parent: parent,
      id: id,
      url: url,
      returnErrorPage: true,
      returnNotFoundPage: true,
      preview: !!id
    }
  }),
      loading = _useQuery.loading,
      data = _useQuery.data,
      error = _useQuery.error;

  if (error) {
    return /*#__PURE__*/React.createElement(PageRender, {
      error: error
    });
  }

  var props = _objectSpread(_objectSpread({}, data === null || data === void 0 ? void 0 : (_data$pageBuilder = data.pageBuilder) === null || _data$pageBuilder === void 0 ? void 0 : _data$pageBuilder.page), {}, {
    loading: loading
  });

  return /*#__PURE__*/React.createElement(PageRender, props);
};

export default PageLoad;
//# sourceMappingURL=PageLoad.js.map