import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _get from "lodash/get";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    query listCategories($search: PbSearchInput) {\n        pageBuilder {\n            categories: listCategories(search: $search) {\n                data {\n                    id\n                    name\n                }\n            }\n        }\n    }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    query getCategory($id: ID!) {\n        pageBuilder {\n            getCategory(id: $id) {\n                data {\n                    id\n                    name\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import * as React from "react";
import { AutoComplete } from "@webiny/ui/AutoComplete";
import gql from "graphql-tag";
import { Query } from "react-apollo";
import { useAutocomplete } from "@webiny/app/hooks/useAutocomplete";
var GET_CATEGORY = gql(_templateObject());
var LIST_CATEGORIES = gql(_templateObject2());
export function CategoriesAutocomplete(props) {
  var autoComplete = useAutocomplete({
    search: function search(query) {
      return {
        query: query,
        fields: ["name"]
      };
    },
    query: LIST_CATEGORIES
  });
  return /*#__PURE__*/React.createElement(Query, {
    skip: !props.value,
    variables: {
      id: props.value
    },
    query: GET_CATEGORY
  }, function (_ref) {
    var data = _ref.data;
    return /*#__PURE__*/React.createElement(AutoComplete, Object.assign({}, props, autoComplete, {
      value: _get(data, "pageBuilder.getCategory.data")
    }));
  });
}
//# sourceMappingURL=CategoriesAutocomplete.js.map