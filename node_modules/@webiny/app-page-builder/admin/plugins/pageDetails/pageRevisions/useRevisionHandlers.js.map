{"version":3,"sources":["../../../../../src/admin/plugins/pageDetails/pageRevisions/useRevisionHandlers.ts"],"names":["useCallback","useApolloClient","useRouter","CREATE_REVISION_FORM","DELETE_REVISION","usePublishRevisionHandler","useSnackbar","usePageDetails","useRevisionHandlers","rev","showSnackbar","history","client","page","publishRevision","createRevision","mutate","mutation","variables","revision","id","refetchQueries","awaitRefetchQueries","res","data","pageBuilder","error","message","push","editRevision","deleteRevision"],"mappings":"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","sourcesContent":["import { useCallback } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport {\n    CREATE_REVISION_FORM,\n    DELETE_REVISION\n} from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { usePublishRevisionHandler } from \"../utils/usePublishRevisionHandler\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { usePageDetails } from \"@webiny/app-page-builder/admin/hooks/usePageDetails\";\n\nexport function useRevisionHandlers({ rev }) {\n    const { showSnackbar } = useSnackbar();\n    const { history } = useRouter();\n    const client = useApolloClient();\n    const { page } = usePageDetails();\n    const { publishRevision } = usePublishRevisionHandler({ page });\n\n    const createRevision = useCallback(async () => {\n        const { data: res } = await client.mutate({\n            mutation: CREATE_REVISION_FORM,\n            variables: { revision: rev.id },\n            refetchQueries: [\"PbListPages\"],\n            awaitRefetchQueries: true\n        });\n        const { data, error } = res.pageBuilder.revision;\n\n        if (error) {\n            return showSnackbar(error.message);\n        }\n\n        history.push(`/page-builder/editor/${data.id}`);\n    }, [rev]);\n\n    const editRevision = useCallback(() => {\n        history.push(`/page-builder/editor/${rev.id}`);\n    }, [rev]);\n\n    const deleteRevision = useCallback(async () => {\n        const { data: res } = await client.mutate({\n            mutation: DELETE_REVISION,\n            variables: { id: rev.id },\n            refetchQueries: [\"PbListPages\"],\n            awaitRefetchQueries: true\n        });\n        const { error } = res.pageBuilder.deleteRevision;\n        if (error) {\n            return showSnackbar(error.message);\n        }\n\n        if (rev.id === page.id) {\n            history.push(\"/page-builder/pages\");\n        }\n    }, [rev, page]);\n\n    return {\n        publishRevision,\n        createRevision,\n        editRevision,\n        deleteRevision\n    };\n}\n"],"file":"useRevisionHandlers.js"}