import React from "react";
import { css } from "emotion";
import TimeAgo from "timeago-react";
import { ListItem, ListItemText, ListItemTextPrimary, ListItemTextSecondary, ListItemGraphic, ListItemMeta } from "@webiny/ui/List";
import { IconButton } from "@webiny/ui/Button";
import { Icon } from "@webiny/ui/Icon";
import { MenuItem, Menu, MenuDivider } from "@webiny/ui/Menu";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { Tooltip } from "@webiny/ui/Tooltip";
import { ReactComponent as MoreVerticalIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/more_vert.svg";
import { ReactComponent as LockIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/lock.svg";
import { ReactComponent as BeenHereIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/beenhere.svg";
import { ReactComponent as GestureIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/gesture.svg";
import { useRevisionHandlers } from "./useRevisionHandlers";
import { usePageBuilderSettings } from "@webiny/app-page-builder/admin/hooks/usePageBuilderSettings";
import { ReactComponent as AddIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/add.svg";
import { ReactComponent as EditIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/edit.svg";
import { ReactComponent as PublishIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/round-publish-24px.svg";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/delete.svg";
import { ReactComponent as PreviewIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/visibility.svg";
var primaryColor = /*#__PURE__*/css({
  color: "var(--mdc-theme-primary)"
}, "label:primaryColor;");
var revisionsMenu = /*#__PURE__*/css({
  width: 250,
  right: -105,
  left: "auto !important"
}, "label:revisionsMenu;");

var getIcon = function getIcon(rev) {
  switch (true) {
    case rev.locked && !rev.published:
      return {
        icon: /*#__PURE__*/React.createElement(Icon, {
          icon: /*#__PURE__*/React.createElement(LockIcon, null)
        }),
        text: "This revision is locked (it has already been published)"
      };

    case rev.published:
      return {
        icon: /*#__PURE__*/React.createElement(Icon, {
          icon: /*#__PURE__*/React.createElement(BeenHereIcon, null),
          className: primaryColor
        }),
        text: "This revision is currently published!"
      };

    default:
      return {
        icon: /*#__PURE__*/React.createElement(Icon, {
          icon: /*#__PURE__*/React.createElement(GestureIcon, null)
        }),
        text: "This is a draft"
      };
  }
};

var Div = function Div(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React.createElement("div", null, children);
};

var Revision = function Revision(_ref2) {
  var rev = _ref2.rev;

  var _getIcon = getIcon(rev),
      icon = _getIcon.icon,
      tooltipText = _getIcon.text;

  var _usePageBuilderSettin = usePageBuilderSettings(),
      getPagePreviewUrl = _usePageBuilderSettin.getPagePreviewUrl;

  var _useRevisionHandlers = useRevisionHandlers({
    rev: rev
  }),
      deleteRevision = _useRevisionHandlers.deleteRevision,
      createRevision = _useRevisionHandlers.createRevision,
      publishRevision = _useRevisionHandlers.publishRevision,
      editRevision = _useRevisionHandlers.editRevision;

  return /*#__PURE__*/React.createElement(ConfirmationDialog, {
    title: "Confirmation required!",
    message: /*#__PURE__*/React.createElement("span", null, "Are you sure you want to delete this revision?")
  }, function (_ref3) {
    var showConfirmation = _ref3.showConfirmation;
    return /*#__PURE__*/React.createElement(ListItem, null, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Tooltip, {
      content: tooltipText,
      placement: "bottom"
    }, icon)), /*#__PURE__*/React.createElement(ListItemText, null, /*#__PURE__*/React.createElement(ListItemTextPrimary, null, rev.title), /*#__PURE__*/React.createElement(ListItemTextSecondary, null, "Last modified ", /*#__PURE__*/React.createElement(TimeAgo, {
      datetime: rev.savedOn
    }), " (#", rev.version, ")")), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(Menu, {
      handle: /*#__PURE__*/React.createElement(IconButton, {
        icon: /*#__PURE__*/React.createElement(MoreVerticalIcon, null)
      }),
      className: revisionsMenu
      /*openSide={"left"} TODO: @adrian */

    }, /*#__PURE__*/React.createElement(MenuItem, {
      onClick: createRevision
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(AddIcon, null)
    })), "New from current"), !rev.locked && /*#__PURE__*/React.createElement(MenuItem, {
      onClick: editRevision
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(EditIcon, null)
    })), "Edit"), !rev.published && /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        return publishRevision(rev);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(PublishIcon, null)
    })), "Publish"), /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        return window.open(getPagePreviewUrl(rev), "_blank");
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(PreviewIcon, null)
    })), "Preview"), !rev.locked && rev.id !== rev.parent && /*#__PURE__*/React.createElement(Div, null, /*#__PURE__*/React.createElement(MenuDivider, null), /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        return showConfirmation(deleteRevision);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(DeleteIcon, null)
    })), "Delete")))));
  });
};

export default Revision;
//# sourceMappingURL=Revision.js.map