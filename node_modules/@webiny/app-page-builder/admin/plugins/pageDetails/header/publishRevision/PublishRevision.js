import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _get from "lodash/get";
import React, { useState, useCallback } from "react";
import { usePublishRevisionHandler } from "../../utils/usePublishRevisionHandler";
import { usePageDetails } from "@webiny/app-page-builder/admin/hooks/usePageDetails";
import PublishRevisionDialog from "./PublishRevisionDialog";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
import { ReactComponent as PublishIcon } from "@svgr/webpack!@webiny/app-page-builder/admin/assets/round-publish-24px.svg";

function getPublishSuggestion(page, revisions) {
  if (!page.published) {
    return page.id;
  }

  if (revisions[0]) {
    return revisions[0].id;
  }

  return "";
}

function getPublishableRevisions(revisions) {
  return revisions.filter(function (r) {
    return !r.published;
  }).sort(function (a, b) {
    // @ts-ignore
    return new Date(b.savedOn) - new Date(a.savedOn);
  });
}

var PublishRevision = function PublishRevision() {
  var _usePageDetails = usePageDetails(),
      page = _usePageDetails.page;

  var _usePublishRevisionHa = usePublishRevisionHandler({
    page: page
  }),
      publishRevision = _usePublishRevisionHa.publishRevision;

  var publishableRevisions = getPublishableRevisions(_get(page, "revisions") || []);
  var publishSuggestion = getPublishSuggestion(page, publishableRevisions);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      openDialog = _useState2[0],
      setOpenDialog = _useState2[1];

  var showDialog = useCallback(function () {
    return setOpenDialog(true);
  }, []);
  var hideDialog = useCallback(function () {
    return setOpenDialog(false);
  }, []);
  var onSubmit = useCallback(function (revision) {
    hideDialog();
    return publishRevision(revision);
  }, [publishRevision]);

  if (!publishableRevisions.length) {
    return null;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {
    content: "Publish",
    placement: "top"
  }, /*#__PURE__*/React.createElement(IconButton, {
    icon: /*#__PURE__*/React.createElement(PublishIcon, null),
    onClick: showDialog
  })), /*#__PURE__*/React.createElement(PublishRevisionDialog, {
    open: openDialog,
    onClose: hideDialog,
    onSubmit: onSubmit,
    selected: publishSuggestion,
    revisions: publishableRevisions
  }));
};

export default PublishRevision;
//# sourceMappingURL=PublishRevision.js.map