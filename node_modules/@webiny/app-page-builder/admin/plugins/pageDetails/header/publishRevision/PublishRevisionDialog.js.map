{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/publishRevision/PublishRevisionDialog.tsx"],"names":["React","css","Dialog","DialogTitle","DialogContent","DialogActions","DialogAccept","DialogCancel","Select","Form","validation","narrowDialog","width","minWidth","PublishRevisionDialog","open","onClose","onSubmit","revisions","selected","revision","find","r","id","submit","Bind","create","filter","published","map","rev","title","version"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SACIC,MADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,YANJ,QAQO,mBARP;AASA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,IAAMC,YAAY,gBAAGV,GAAG,CAAC;AACrB,0BAAwB;AACpBW,IAAAA,KAAK,EAAE,GADa;AAEpBC,IAAAA,QAAQ,EAAE;AAFU;AADH,CAAD,wBAAxB;;AAeA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA6D;AAAA,MAA1DC,IAA0D,QAA1DA,IAA0D;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,MAA3CC,SAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,SAAiC,QAAjCA,SAAiC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AACvF,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEJ,IAAd;AAAoB,IAAA,OAAO,EAAEC,OAA7B;AAAsC,IAAA,SAAS,EAAEL;AAAjD,kBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AAAES,MAAAA,QAAQ,EAAED,QAAQ,IAAI;AAAxB,KADV;AAEI,IAAA,QAAQ,EAAE;AAAA,UAAGC,QAAH,SAAGA,QAAH;AAAA,aAAkBH,SAAQ,CAACC,SAAS,CAACG,IAAV,CAAe,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASH,QAAb;AAAA,OAAhB,CAAD,CAA1B;AAAA;AAFd,KAIK;AAAA,QAAGI,MAAH,SAAGA,MAAH;AAAA,QAAWC,IAAX,SAAWA,IAAX;AAAA,wBACG,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,WAAD,uCADJ,eAEI,oBAAC,aAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,UAAZ;AAAwB,MAAA,UAAU,EAAEf,UAAU,CAACgB,MAAX,CAAkB,UAAlB;AAApC,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAf,OACKR,SAAS,CACLS,MADJ,CACW,UAAAL,CAAC;AAAA,aAAI,CAACA,CAAC,CAACM,SAAP;AAAA,KADZ,EAEIC,GAFJ,CAEQ,UAAAC,GAAG;AAAA,0BACJ;AAAQ,QAAA,GAAG,EAAEA,GAAG,CAACP,EAAjB;AAAqB,QAAA,KAAK,EAAEO,GAAG,CAACP;AAAhC,SACKO,GAAG,CAACC,KADT,SAEKD,GAAG,CAACE,OAFT,MADI;AAAA,KAFX,CADL,CADJ,CADJ,CAFJ,eAgBI,oBAAC,aAAD,qBACI,oBAAC,YAAD,iBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAER;AAAvB,iBAFJ,CAhBJ,CADH;AAAA,GAJL,CADJ,CADJ;AAgCH,CAjCD;;AAmCA,eAAeV,qBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    DialogAccept,\n    DialogCancel,\n    DialogOnClose\n} from \"@webiny/ui/Dialog\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { Form } from \"@webiny/form\";\nimport { validation } from \"@webiny/validation\";\n\nconst narrowDialog = css({\n    \".mdc-dialog__surface\": {\n        width: 600,\n        minWidth: 600\n    }\n});\n\ntype Props = {\n    open: boolean;\n    onClose: DialogOnClose;\n    onSubmit: Function;\n    revisions: Array<{ id: string; title: string; version: number; published: boolean }>;\n    selected: string;\n};\n\nconst PublishRevisionDialog = ({ open, onClose, onSubmit, revisions, selected }: Props) => {\n    return (\n        <Dialog open={open} onClose={onClose} className={narrowDialog}>\n            <Form\n                data={{ revision: selected || \"\" }}\n                onSubmit={({ revision }) => onSubmit(revisions.find(r => r.id === revision))}\n            >\n                {({ submit, Bind }) => (\n                    <React.Fragment>\n                        <DialogTitle>Select a revision to publish</DialogTitle>\n                        <DialogContent>\n                            <Bind name={\"revision\"} validators={validation.create(\"required\")}>\n                                <Select label={\"Revision to publish\"}>\n                                    {revisions\n                                        .filter(r => !r.published)\n                                        .map(rev => (\n                                            <option key={rev.id} value={rev.id}>\n                                                {rev.title} (#\n                                                {rev.version})\n                                            </option>\n                                        ))}\n                                </Select>\n                            </Bind>\n                        </DialogContent>\n                        <DialogActions>\n                            <DialogCancel>Cancel</DialogCancel>\n                            <DialogAccept onClick={submit}>Publish</DialogAccept>\n                        </DialogActions>\n                    </React.Fragment>\n                )}\n            </Form>\n        </Dialog>\n    );\n};\n\nexport default PublishRevisionDialog;\n"],"file":"PublishRevisionDialog.js"}