{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/editRevision/EditRevision.tsx"],"names":["React","useCallback","useState","IconButton","useRouter","useApolloClient","Tooltip","CREATE_REVISION_FORM","usePageDetails","useSnackbar","EditRevision","showSnackbar","client","history","page","inProgress","setInProgress","unpublishedRevision","find","item","published","locked","editRevision","push","id","copyAndEdit","revisions","latestRevision","mutate","mutation","variables","revision","refetchQueries","awaitRefetchQueries","res","data","pageBuilder","error","message"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useApolloClient } from \"react-apollo\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as EditIcon } from \"@webiny/app-page-builder/admin/assets/edit.svg\";\nimport { CREATE_REVISION_FORM } from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { usePageDetails } from \"@webiny/app-page-builder/admin/hooks/usePageDetails\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { get } from \"lodash\";\n\nconst EditRevision = () => {\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n    const { history } = useRouter();\n    const { page } = usePageDetails();\n    const [inProgress, setInProgress] = useState();\n\n    const unpublishedRevision = (get(page, \"revisions\") || []).find(\n        item => !item.published && !item.locked\n    );\n\n    const editRevision = useCallback(() => {\n        if (unpublishedRevision) {\n            history.push(`/page-builder/editor/${unpublishedRevision.id}`);\n        }\n    }, [unpublishedRevision]);\n\n    const copyAndEdit = useCallback(async () => {\n        const [latestRevision] = page.revisions;\n        setInProgress(true);\n        const { data: res } = await client.mutate({\n            mutation: CREATE_REVISION_FORM,\n            variables: { revision: latestRevision.id },\n            refetchQueries: [\"PbListPages\"],\n            awaitRefetchQueries: true\n        });\n        setInProgress(false);\n        const { data, error } = res.pageBuilder.revision;\n\n        if (error) {\n            return showSnackbar(error.message);\n        }\n\n        history.push(`/page-builder/editor/${data.id}`);\n    }, [page]);\n\n    if (unpublishedRevision) {\n        return (\n            <Tooltip content={\"Edit\"} placement={\"top\"}>\n                <IconButton\n                    disabled={inProgress}\n                    icon={<EditIcon />}\n                    onClick={editRevision}\n                    data-testid={\"pb-page-details-header-edit-revision\"}\n                />\n            </Tooltip>\n        );\n    }\n\n    return (\n        <Tooltip content={\"Edit\"} placement={\"top\"}>\n            <IconButton\n                disabled={inProgress}\n                icon={<EditIcon />}\n                onClick={copyAndEdit}\n                data-testid={\"pb-page-details-header-edit-revision\"}\n            />\n        </Tooltip>\n    );\n};\n\nexport default EditRevision;\n"],"file":"EditRevision.js"}