{"version":3,"sources":["../../../../../../src/admin/plugins/pageDetails/header/pageOptionsMenu/PageOptionsMenu.tsx"],"names":["React","IconButton","Icon","ListItemGraphic","MenuItem","Menu","usePageBuilderSettings","css","Mutation","useSnackbar","classNames","setHomePage","useConfirmationDialog","getPlugins","menuStyles","width","right","left","opacity","pointerEvents","PageOptionsMenu","props","page","pageDetails","getPageUrl","getPagePreviewUrl","showSnackbar","title","message","published","showConfirmation","target","window","Cypress","locked","open","update","disabled","isHomePage","variables","id","response","error","data","pageBuilder","refreshPages","map","plugin","name","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as MoreVerticalIcon } from \"@webiny/app-page-builder/admin/assets/more_vert.svg\";\nimport { ReactComponent as PreviewIcon } from \"@webiny/app-page-builder/admin/assets/visibility.svg\";\nimport { ReactComponent as HomeIcon } from \"@webiny/app-page-builder/admin/assets/round-home-24px.svg\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { MenuItem, Menu } from \"@webiny/ui/Menu\";\nimport { usePageBuilderSettings } from \"@webiny/app-page-builder/admin/hooks/usePageBuilderSettings\";\nimport { css } from \"emotion\";\nimport { Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport classNames from \"classnames\";\nimport { setHomePage } from \"./graphql\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { PbPageDetailsHeaderRightOptionsMenuItemPlugin } from \"@webiny/app-page-builder/types\";\n\nconst menuStyles = css({\n    width: 250,\n    right: -105,\n    left: \"auto !important\",\n    \".disabled\": {\n        opacity: 0.5,\n        pointerEvents: \"none\"\n    }\n});\n\nconst PageOptionsMenu = props => {\n    const {\n        pageDetails: { page }\n    } = props;\n\n    const { getPageUrl, getPagePreviewUrl } = usePageBuilderSettings();\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        title: \"Delete page\",\n        message: (\n            <span>\n                You&#39;re about to set the <strong>{page.title}</strong> page as your new homepage,\n                are you sure you want to continue?{\" \"}\n                {!page.published && \"Note that your page will be automatically published.\"}\n            </span>\n        )\n    });\n\n    // We must prevent opening in new tab - Cypress doesn't work with new tabs.\n    const target = window.Cypress ? \"_self\" : \"_blank\";\n\n    return (\n        <Menu\n            className={menuStyles}\n            handle={\n                <IconButton\n                    data-testid=\"pb-page-details-header-page-options-menu\"\n                    icon={<MoreVerticalIcon />}\n                />\n            }\n        >\n            {page.locked ? (\n                <MenuItem onClick={() => window.open(getPageUrl(page), target)}>\n                    <ListItemGraphic>\n                        <Icon\n                            data-testid=\"pb-page-details-header-page-options-menu-preview\"\n                            icon={<PreviewIcon />}\n                        />\n                    </ListItemGraphic>\n                    View\n                </MenuItem>\n            ) : (\n                <MenuItem onClick={() => window.open(getPagePreviewUrl(page), target)}>\n                    <ListItemGraphic>\n                        <Icon\n                            data-testid=\"pb-page-details-header-page-options-menu-preview\"\n                            icon={<PreviewIcon />}\n                        />\n                    </ListItemGraphic>\n                    Preview\n                </MenuItem>\n            )}\n\n            <Mutation mutation={setHomePage}>\n                {update => (\n                    <MenuItem\n                        className={classNames({ disabled: page.isHomePage })}\n                        onClick={() => {\n                            showConfirmation(async () => {\n                                const response = await update({\n                                    variables: {\n                                        id: page.id\n                                    }\n                                });\n\n                                const { error } = response.data.pageBuilder.setHomePage;\n                                if (error) {\n                                    showSnackbar(error.message);\n                                } else {\n                                    showSnackbar(\"Homepage set successfully!\");\n                                    if (!page.published) {\n                                        props.refreshPages();\n                                    }\n                                }\n                            });\n                        }}\n                    >\n                        <ListItemGraphic>\n                            <Icon icon={<HomeIcon />} />\n                        </ListItemGraphic>\n                        Set as homepage\n                    </MenuItem>\n                )}\n            </Mutation>\n\n            {getPlugins<PbPageDetailsHeaderRightOptionsMenuItemPlugin>(\n                \"pb-page-details-header-right-options-menu-item\"\n            ).map(plugin => (\n                <React.Fragment key={plugin.name}>{plugin.render(props)}</React.Fragment>\n            ))}\n        </Menu>\n    );\n};\n\nexport default PageOptionsMenu;\n"],"file":"PageOptionsMenu.js"}