{"version":3,"sources":["../../../../../src/admin/plugins/pageDetails/previewContent/Zoom.ts"],"names":["React","store","observe","addPlugin","LOCAL_STORAGE_KEY","Zoom","props","zoom","set","get","window","innerWidth","state","getZoomLevel","watchId","setState","parseFloat","unobserve","children","setZoom","setZoomLevel","Component"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACAD,KAAK,CAACE,SAAN,CAAgBD,OAAhB;AAEA,IAAME,iBAAiB,GAAG,qBAA1B;;IAUMC,I;;;;;AAGF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe;;AAAA,mEAkBJ,UAACC,IAAD,EAAkB;AAC7BN,MAAAA,KAAK,CAACO,GAAN,CAAUJ,iBAAV,EAA6BG,IAA7B;AACH,KApBkB;;AAAA,mEAsBJ,YAAM;AACjB,UAAMA,IAAI,GAAGN,KAAK,CAACQ,GAAN,CAAUL,iBAAV,CAAb;;AACA,UAAI,CAACG,IAAL,EAAW;AACP,gBAAQ,IAAR;AACI,eAAKG,MAAM,CAACC,UAAP,GAAoB,IAAzB;AACI,mBAAO,IAAP;;AACJ,eAAKD,MAAM,CAACC,UAAP,GAAoB,IAAzB;AACI,mBAAO,GAAP;;AACJ;AACI,mBAAO,CAAP;AANR;AAQH;;AAED,aAAOJ,IAAP;AACH,KApCkB;;AAGf,UAAKK,KAAL,GAAa;AACTL,MAAAA,IAAI,EAAE,MAAKM,YAAL;AADG,KAAb;AAHe;AAMlB;;;;wCAEmB;AAAA;;AAChB,WAAKC,OAAL,GAAeb,KAAK,CAACC,OAAN,CAAcE,iBAAd;AAAA,4EAAiC,iBAAOG,IAAP;AAAA;AAAA;AAAA;AAAA;AAC5C,kBAAA,MAAI,CAACQ,QAAL,CAAc;AAAER,oBAAAA,IAAI,EAAES,UAAU,CAACT,IAAD;AAAlB,mBAAd;;AAD4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjC;;AAAA;AAAA;AAAA;AAAA,UAAf;AAGH;;;2CAEsB;AACnBN,MAAAA,KAAK,CAACgB,SAAN,CAAgB,KAAKH,OAArB;AACH;;;6BAsBQ;AAAA,UACGI,QADH,GACgB,KAAKZ,KADrB,CACGY,QADH;AAEL,aAAOA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IAAnB;AAAyBY,QAAAA,OAAO,EAAE,KAAKC;AAAvC,OAAD,CAAf;AACH;;;;EA5CcpB,KAAK,CAACqB,S;;AA+CzB,eAAehB,IAAf","sourcesContent":["import * as React from \"react\";\nimport store from \"store\";\nimport observe from \"store/plugins/observe\";\nstore.addPlugin(observe);\n\nconst LOCAL_STORAGE_KEY = \"webiny_pb_page_zoom\";\n\ntype ZoomProps = {\n    children(params: { zoom: number; setZoom(zoom: number): void }): React.ReactElement;\n};\n\ntype State = {\n    zoom: number;\n};\n\nclass Zoom extends React.Component<ZoomProps, State> {\n    watchId: any;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            zoom: this.getZoomLevel()\n        };\n    }\n\n    componentDidMount() {\n        this.watchId = store.observe(LOCAL_STORAGE_KEY, async (zoom: string) => {\n            this.setState({ zoom: parseFloat(zoom) });\n        });\n    }\n\n    componentWillUnmount() {\n        store.unobserve(this.watchId);\n    }\n\n    setZoomLevel = (zoom: number) => {\n        store.set(LOCAL_STORAGE_KEY, zoom);\n    };\n\n    getZoomLevel = () => {\n        const zoom = store.get(LOCAL_STORAGE_KEY);\n        if (!zoom) {\n            switch (true) {\n                case window.innerWidth < 1600:\n                    return 0.75;\n                case window.innerWidth < 1200:\n                    return 0.5;\n                default:\n                    return 1;\n            }\n        }\n\n        return zoom;\n    };\n\n    render() {\n        const { children } = this.props;\n        return children({ zoom: this.state.zoom, setZoom: this.setZoomLevel });\n    }\n}\n\nexport default Zoom;\n"],"file":"Zoom.js"}