import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject10() {
  var data = _taggedTemplateLiteral(["Install Page Builder"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["Domain"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["Site Name"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Finalizing..."]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Creating menus..."]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Creating pages..."]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Creating page blocks..."]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Creating page categories..."]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    mutation InstallPageBuilder($step: Int!, $data: PbInstallInput!) {\n        pageBuilder {\n            install(step: $step, data: $data) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    {\n        pageBuilder {\n            isInstalled {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useState, useCallback } from "react";
import gql from "graphql-tag";
import { useApolloClient } from "react-apollo";
import { i18n } from "@webiny/app/i18n";
import { Form } from "@webiny/form";
import { Alert } from "@webiny/ui/Alert";
import { Grid, Cell } from "@webiny/ui/Grid";
import { ButtonPrimary } from "@webiny/ui/Button";
import { CircularProgress } from "@webiny/ui/Progress";
import { Input } from "@webiny/ui/Input";
import { validation } from "@webiny/validation";
import { SimpleForm, SimpleFormHeader, SimpleFormFooter, SimpleFormContent } from "@webiny/app-admin/components/SimpleForm";
var t = i18n.ns("app-pb/admin/installation");
var IS_INSTALLED = gql(_templateObject());
var INSTALL = gql(_templateObject2());
var installationSteps = {
  1: t(_templateObject3()),
  2: t(_templateObject4()),
  3: t(_templateObject5()),
  4: t(_templateObject6()),
  5: t(_templateObject7())
};

var PBInstaller = function PBInstaller(_ref) {
  var onInstalled = _ref.onInstalled;
  var client = useApolloClient();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      error = _useState4[0],
      setError = _useState4[1];

  var _useState5 = useState(0),
      _useState6 = _slicedToArray(_useState5, 2),
      installationStep = _useState6[0],
      setInstallationStep = _useState6[1];

  var onSubmit = useCallback( /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(form) {
      var step, response, _error;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              setError(null);
              _context.prev = 2;
              step = 1;

            case 4:
              if (!(step <= 5)) {
                _context.next = 15;
                break;
              }

              setInstallationStep(step);
              _context.next = 8;
              return client.mutate({
                mutation: INSTALL,
                variables: {
                  step: step,
                  data: form
                }
              });

            case 8:
              response = _context.sent;
              _error = response.data.pageBuilder.install.error;

              if (!_error) {
                _context.next = 12;
                break;
              }

              throw new Error(_error.message);

            case 12:
              step++;
              _context.next = 4;
              break;

            case 15:
              _context.next = 22;
              break;

            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](2);
              setError(_context.t0.message);
              setLoading(false);
              return _context.abrupt("return");

            case 22:
              setLoading(false);
              onInstalled();

            case 24:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[2, 17]]);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }(), [installationStep]);
  return /*#__PURE__*/React.createElement(Form, {
    onSubmit: onSubmit,
    data: {
      domain: window.location.origin
    },
    submitOnEnter: true
  }, function (_ref3) {
    var Bind = _ref3.Bind,
        submit = _ref3.submit;
    return /*#__PURE__*/React.createElement(SimpleForm, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {
      label: installationSteps[installationStep]
    }), error && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Alert, {
      title: "Something went wrong",
      type: "danger"
    }, error))), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: "Install Page Builder"
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "name",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject8()),
      description: "Name of your site, eg: \"My Site\""
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "domain",
      validators: validation.create("required,url")
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject9()),
      placeholder: "https://www.mysite.com"
    }))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      "data-testid": "install-pb-button",
      onClick: submit
    }, t(_templateObject10()))));
  });
};

export default {
  name: "installation-pb",
  type: "admin-installation",
  title: "Page Builder app",
  dependencies: [],
  secure: true,
  isInstalled: function isInstalled(_ref4) {
    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
      var client, _yield$client$query, data;

      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              client = _ref4.client;
              _context2.next = 3;
              return client.query({
                query: IS_INSTALLED
              });

            case 3:
              _yield$client$query = _context2.sent;
              data = _yield$client$query.data;
              return _context2.abrupt("return", data.pageBuilder.isInstalled.data);

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }))();
  },
  render: function render(_ref5) {
    var onInstalled = _ref5.onInstalled;
    return /*#__PURE__*/React.createElement(PBInstaller, {
      onInstalled: onInstalled
    });
  }
};
//# sourceMappingURL=install.js.map