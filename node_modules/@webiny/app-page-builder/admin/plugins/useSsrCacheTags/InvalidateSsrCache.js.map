{"version":3,"sources":["../../../../src/admin/plugins/useSsrCacheTags/InvalidateSsrCache.tsx"],"names":["React","Icon","ListItemGraphic","MenuItem","Mutation","useSnackbar","classNames","INVALIDATE_SSR_CACHE","useConfirmationDialog","InvalidateSsrCache","props","page","pageDetails","showSnackbar","title","message","showConfirmation","update","disabled","published","variables","revision","id","refresh","response","error","data","pageBuilder","invalidateSsrCache","refreshPages"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,qBAAT,QAAsC,+CAAtC;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AAAA,MAEbC,IAFa,GAG5BD,KAH4B,CAE5BE,WAF4B,CAEbD,IAFa;;AAAA,qBAKPN,WAAW,EALJ;AAAA,MAKxBQ,YALwB,gBAKxBA,YALwB;;AAAA,8BAMHL,qBAAqB,CAAC;AAC/CM,IAAAA,KAAK,EAAE,kBADwC;AAE/CC,IAAAA,OAAO,eACH,4FACiD,oCAASJ,IAAI,CAACG,KAAd,CADjD,4DAGI,+BAHJ,eAII,+BAJJ;AAH2C,GAAD,CANlB;AAAA,MAMxBE,gBANwB,yBAMxBA,gBANwB;;AAmBhC,sBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAET;AAApB,KACK,UAAAU,MAAM;AAAA,wBACH,oBAAC,QAAD;AACI,MAAA,SAAS,EAAEX,UAAU,CAAC;AAAEY,QAAAA,QAAQ,EAAE,CAACP,IAAI,CAACQ;AAAlB,OAAD,CADzB;AAEI,MAAA,OAAO,EAAE,mBAAM;AACXH,QAAAA,gBAAgB,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACUC,MAAM,CAAC;AAC1BG,oBAAAA,SAAS,EAAE;AACPC,sBAAAA,QAAQ,EAAEV,IAAI,CAACW,EADR;AAEPC,sBAAAA,OAAO,EAAE;AAFF;AADe,mBAAD,CADhB;;AAAA;AACPC,kBAAAA,QADO;AAQLC,kBAAAA,KARK,GAQKD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BC,kBAR/B,CAQLH,KARK;;AASb,sBAAIA,KAAJ,EAAW;AACPZ,oBAAAA,YAAY,CAACY,KAAK,CAACV,OAAP,CAAZ;AACH,mBAFD,MAEO;AACHF,oBAAAA,YAAY,CAAC,iCAAD,CAAZ;;AACA,wBAAI,CAACF,IAAI,CAACQ,SAAV,EAAqB;AACjBT,sBAAAA,KAAK,CAACmB,YAAN;AACH;AACJ;;AAhBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,GAAhB;AAkBH;AArBL,oBAuBI,oBAAC,eAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,eAAE,oBAAC,WAAD;AAAZ,MADJ,CAvBJ,qBADG;AAAA,GADX,CADJ;AAkCH,CArDD;;AAuDA,eAAepB,kBAAf","sourcesContent":["import React from \"react\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as RefreshIcon } from \"@webiny/app-page-builder/admin/assets/baseline-autorenew-24px.svg\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { MenuItem } from \"@webiny/ui/Menu\";\nimport { Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport classNames from \"classnames\";\nimport { INVALIDATE_SSR_CACHE } from \"./graphql\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\n\nconst InvalidateSsrCache = props => {\n    const {\n        pageDetails: { page }\n    } = props;\n\n    const { showSnackbar } = useSnackbar();\n    const { showConfirmation } = useConfirmationDialog({\n        title: \"Invalidate cache\",\n        message: (\n            <span>\n                You&#39;re about to invalidate the cache for <strong>{page.title}</strong> page, are\n                you sure you want to continue?\n                <br />\n                <br />\n                Note that sometimes the cache invalidation process may take up to 10 minutes.\n            </span>\n        )\n    });\n\n    return (\n        <Mutation mutation={INVALIDATE_SSR_CACHE}>\n            {update => (\n                <MenuItem\n                    className={classNames({ disabled: !page.published })}\n                    onClick={() => {\n                        showConfirmation(async () => {\n                            const response = await update({\n                                variables: {\n                                    revision: page.id,\n                                    refresh: true\n                                }\n                            });\n\n                            const { error } = response.data.pageBuilder.invalidateSsrCache;\n                            if (error) {\n                                showSnackbar(error.message);\n                            } else {\n                                showSnackbar(\"Cache invalidated successfully!\");\n                                if (!page.published) {\n                                    props.refreshPages();\n                                }\n                            }\n                        });\n                    }}\n                >\n                    <ListItemGraphic>\n                        <Icon icon={<RefreshIcon />} />\n                    </ListItemGraphic>\n                    Invalidate cache\n                </MenuItem>\n            )}\n        </Mutation>\n    );\n};\n\nexport default InvalidateSsrCache;\n"],"file":"InvalidateSsrCache.js"}