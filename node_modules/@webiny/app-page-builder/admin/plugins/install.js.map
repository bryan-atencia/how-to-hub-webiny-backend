{"version":3,"sources":["../../../src/admin/plugins/install.tsx"],"names":["React","useState","useCallback","gql","useApolloClient","i18n","Form","Alert","Grid","Cell","ButtonPrimary","CircularProgress","Input","validation","SimpleForm","SimpleFormHeader","SimpleFormFooter","SimpleFormContent","t","ns","IS_INSTALLED","INSTALL","installationSteps","PBInstaller","onInstalled","client","loading","setLoading","error","setError","installationStep","setInstallationStep","onSubmit","form","step","mutate","mutation","variables","data","response","pageBuilder","install","Error","message","domain","window","location","origin","Bind","submit","create","name","type","title","dependencies","secure","isInstalled","query","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SACIC,UADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,iBAJJ,QAKO,yCALP;AAOA,IAAMC,CAAC,GAAGb,IAAI,CAACc,EAAL,CAAQ,2BAAR,CAAV;AAEA,IAAMC,YAAY,GAAGjB,GAAH,mBAAlB;AAcA,IAAMkB,OAAO,GAAGlB,GAAH,oBAAb;AAcA,IAAMmB,iBAAiB,GAAG;AACtB,KAAGJ,CAAH,oBADsB;AAEtB,KAAGA,CAAH,oBAFsB;AAGtB,KAAGA,CAAH,oBAHsB;AAItB,KAAGA,CAAH,oBAJsB;AAKtB,KAAGA,CAAH;AALsB,CAA1B;;AAQA,IAAMK,WAAW,GAAG,SAAdA,WAAc,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACrC,MAAMC,MAAM,GAAGrB,eAAe,EAA9B;;AADqC,kBAEPH,QAAQ,CAAC,KAAD,CAFD;AAAA;AAAA,MAE9ByB,OAF8B;AAAA,MAErBC,UAFqB;;AAAA,mBAGX1B,QAAQ,CAAC,IAAD,CAHG;AAAA;AAAA,MAG9B2B,KAH8B;AAAA,MAGvBC,QAHuB;;AAAA,mBAIW5B,QAAQ,CAAC,CAAD,CAJnB;AAAA;AAAA,MAI9B6B,gBAJ8B;AAAA,MAIZC,mBAJY;;AAMrC,MAAMC,QAAQ,GAAG9B,WAAW;AAAA,yEACxB,iBAAM+B,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIN,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ,CAAC,IAAD,CAAR;AAFJ;AAKiBK,cAAAA,IALjB,GAKwB,CALxB;;AAAA;AAAA,oBAK2BA,IAAI,IAAI,CALnC;AAAA;AAAA;AAAA;;AAMYH,cAAAA,mBAAmB,CAACG,IAAD,CAAnB;AANZ;AAAA,qBAOmCT,MAAM,CAACU,MAAP,CAAc;AACjCC,gBAAAA,QAAQ,EAAEf,OADuB;AAEjCgB,gBAAAA,SAAS,EAAE;AAAEH,kBAAAA,IAAI,EAAEA,IAAR;AAAcI,kBAAAA,IAAI,EAAEL;AAApB;AAFsB,eAAd,CAPnC;;AAAA;AAOkBM,cAAAA,QAPlB;AAYoBX,cAAAA,MAZpB,GAY8BW,QAAQ,CAACD,IAAT,CAAcE,WAAd,CAA0BC,OAZxD,CAYoBb,KAZpB;;AAAA,mBAagBA,MAbhB;AAAA;AAAA;AAAA;;AAAA,oBAcsB,IAAIc,KAAJ,CAAUd,MAAK,CAACe,OAAhB,CAdtB;;AAAA;AAKsCT,cAAAA,IAAI,EAL1C;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBQL,cAAAA,QAAQ,CAAC,YAAEc,OAAH,CAAR;AACAhB,cAAAA,UAAU,CAAC,KAAD,CAAV;AAnBR;;AAAA;AAuBIA,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,cAAAA,WAAW;;AAxBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;;AAAA;AAAA;AAAA;AAAA,OA2BxB,CAACM,gBAAD,CA3BwB,CAA5B;AA8BA,sBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,QAAhB;AAA0B,IAAA,IAAI,EAAE;AAAEY,MAAAA,MAAM,EAAEC,MAAM,CAACC,QAAP,CAAgBC;AAA1B,KAAhC;AAAoE,IAAA,aAAa;AAAjF,KACK;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,MAAT,SAASA,MAAT;AAAA,wBACG,oBAAC,UAAD,QACKvB,OAAO,iBAAI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEJ,iBAAiB,CAACQ,gBAAD;AAA1C,MADhB,EAEKF,KAAK,iBACF,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,sBAAd;AAAsC,MAAA,IAAI,EAAE;AAA5C,OACKA,KADL,CADJ,CADJ,CAHR,eAWI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAzB,MAXJ,eAYI,oBAAC,iBAAD,qBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,UAAU,EAAEf,UAAU,CAACqC,MAAX,CAAkB,UAAlB;AAA9B,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEhC,CAAF,oBADT;AAEI,MAAA,WAAW;AAFf,MADJ,CADJ,CADJ,eASI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,UAAU,EAAEL,UAAU,CAACqC,MAAX,CAAkB,cAAlB;AAAhC,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEhC,CAAF,oBADT;AAEI,MAAA,WAAW,EAAE;AAFjB,MADJ,CADJ,CATJ,CADJ,CAZJ,eAgCI,oBAAC,gBAAD,qBACI,oBAAC,aAAD;AACI,qBAAY,mBADhB;AAEI,MAAA,OAAO,EAAE+B;AAFb,OAGE/B,CAHF,sBADJ,CAhCJ,CADH;AAAA,GADL,CADJ;AA6CH,CAjFD;;AAmFA,eAAe;AACXiC,EAAAA,IAAI,EAAE,iBADK;AAEXC,EAAAA,IAAI,EAAE,oBAFK;AAGXC,EAAAA,KAAK,EAAE,kBAHI;AAIXC,EAAAA,YAAY,EAAE,EAJH;AAKXC,EAAAA,MAAM,EAAE,IALG;AAMLC,EAAAA,WANK,8BAMmB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAV/B,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBACHA,MAAM,CAACgC,KAAP,CAAa;AAAEA,gBAAAA,KAAK,EAAErC;AAAT,eAAb,CADG;;AAAA;AAAA;AAClBkB,cAAAA,IADkB,uBAClBA,IADkB;AAAA,gDAEnBA,IAAI,CAACE,WAAL,CAAiBgB,WAAjB,CAA6BlB,IAFV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B,GATU;AAUXoB,EAAAA,MAVW,yBAUa;AAAA,QAAflC,WAAe,SAAfA,WAAe;AACpB,wBAAO,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAEA;AAA1B,MAAP;AACH;AAZU,CAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useApolloClient } from \"react-apollo\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Form } from \"@webiny/form\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Input } from \"@webiny/ui/Input\";\n\nimport { validation } from \"@webiny/validation\";\nimport {\n    SimpleForm,\n    SimpleFormHeader,\n    SimpleFormFooter,\n    SimpleFormContent\n} from \"@webiny/app-admin/components/SimpleForm\";\n\nconst t = i18n.ns(\"app-pb/admin/installation\");\n\nconst IS_INSTALLED = gql`\n    {\n        pageBuilder {\n            isInstalled {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nconst INSTALL = gql`\n    mutation InstallPageBuilder($step: Int!, $data: PbInstallInput!) {\n        pageBuilder {\n            install(step: $step, data: $data) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n`;\n\nconst installationSteps = {\n    1: t`Creating page categories...`,\n    2: t`Creating page blocks...`,\n    3: t`Creating pages...`,\n    4: t`Creating menus...`,\n    5: t`Finalizing...`\n};\n\nconst PBInstaller = ({ onInstalled }) => {\n    const client = useApolloClient();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [installationStep, setInstallationStep] = useState(0);\n\n    const onSubmit = useCallback(\n        async form => {\n            setLoading(true);\n            setError(null);\n\n            try {\n                for (let step = 1; step <= 5; step++) {\n                    setInstallationStep(step);\n                    const response = await client.mutate({\n                        mutation: INSTALL,\n                        variables: { step: step, data: form }\n                    });\n\n                    const { error } = response.data.pageBuilder.install;\n                    if (error) {\n                        throw new Error(error.message);\n                    }\n                }\n            } catch (e) {\n                setError(e.message);\n                setLoading(false);\n                return;\n            }\n\n            setLoading(false);\n            onInstalled();\n        },\n        [installationStep]\n    );\n\n    return (\n        <Form onSubmit={onSubmit} data={{ domain: window.location.origin }} submitOnEnter>\n            {({ Bind, submit }) => (\n                <SimpleForm>\n                    {loading && <CircularProgress label={installationSteps[installationStep]} />}\n                    {error && (\n                        <Grid>\n                            <Cell span={12}>\n                                <Alert title={\"Something went wrong\"} type={\"danger\"}>\n                                    {error}\n                                </Alert>\n                            </Cell>\n                        </Grid>\n                    )}\n                    <SimpleFormHeader title={\"Install Page Builder\"} />\n                    <SimpleFormContent>\n                        <Grid>\n                            <Cell span={12}>\n                                <Bind name=\"name\" validators={validation.create(\"required\")}>\n                                    <Input\n                                        label={t`Site Name`}\n                                        description={`Name of your site, eg: \"My Site\"`}\n                                    />\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind name=\"domain\" validators={validation.create(\"required,url\")}>\n                                    <Input\n                                        label={t`Domain`}\n                                        placeholder={\"https://www.mysite.com\"}\n                                    />\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    </SimpleFormContent>\n                    <SimpleFormFooter>\n                        <ButtonPrimary\n                            data-testid=\"install-pb-button\"\n                            onClick={submit}\n                        >{t`Install Page Builder`}</ButtonPrimary>\n                    </SimpleFormFooter>\n                </SimpleForm>\n            )}\n        </Form>\n    );\n};\n\nexport default {\n    name: \"installation-pb\",\n    type: \"admin-installation\",\n    title: \"Page Builder app\",\n    dependencies: [],\n    secure: true,\n    async isInstalled({ client }) {\n        const { data } = await client.query({ query: IS_INSTALLED });\n        return data.pageBuilder.isInstalled.data;\n    },\n    render({ onInstalled }) {\n        return <PBInstaller onInstalled={onInstalled} />;\n    }\n};\n"],"file":"install.js"}