{"version":3,"sources":["../../../src/admin/utils/createElementPlugin.tsx"],"names":["React","cloneDeep","registerPlugins","getPlugins","Title","el","plugins","rootPlugin","find","pl","elementType","content","type","name","id","title","target","toolbar","refresh","group","preview","src","width","height","backgroundColor","onCreate","settings","create"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,iBAA5C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,gBAAe,UAACC,EAAD,EAAmB;AAC9B,MAAMC,OAAO,GAAGH,UAAU,CAA4B,wBAA5B,CAA1B;AACA,MAAMI,UAAqC,GAAGD,OAAO,CAACE,IAAR,CAC1C,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,WAAH,KAAmBL,EAAE,CAACM,OAAH,CAAWC,IAAlC;AAAA,GADwC,CAA9C;;AAIA,MAAI,CAACL,UAAL,EAAiB;AACb;AACH;;AAED,MAAMM,IAAI,GAAG,mBAAmBR,EAAE,CAACS,EAAnC;AAEAZ,EAAAA,eAAe,CAAC;AACZW,IAAAA,IAAI,EAAJA,IADY;AAEZE,IAAAA,KAAK,EAAEV,EAAE,CAACQ,IAFE;AAGZD,IAAAA,IAAI,EAAE,wBAHM;AAIZF,IAAAA,WAAW,EAAEG,IAJD;AAKZG,IAAAA,MAAM,EAAET,UAAU,CAACS,MALP;AAMZC,IAAAA,OAAO,EAAE;AACLF,MAAAA,KADK,uBACc;AAAA,YAAXG,OAAW,QAAXA,OAAW;AACf,4BAAO,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAEL,IAAf;AAAqB,UAAA,KAAK,EAAER,EAAE,CAACQ,IAA/B;AAAqC,UAAA,EAAE,EAAER,EAAE,CAACS,EAA5C;AAAgD,UAAA,OAAO,EAAEI;AAAzD,UAAP;AACH,OAHI;AAILC,MAAAA,KAAK,EAAE,+BAJF;AAKLC,MAAAA,OALK,qBAKK;AACN,4BACI;AACI,UAAA,GAAG,EAAEf,EAAE,CAACe,OAAH,CAAWC,GADpB;AAEI,UAAA,GAAG,EAAEhB,EAAE,CAACQ,IAFZ;AAGI,UAAA,KAAK,EAAE;AAAES,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE,MAAtB;AAA8BC,YAAAA,eAAe,EAAE;AAA/C;AAHX,UADJ;AAOH;AAbI,KANG;AAqBZC,IAAAA,QAAQ,EAAE,MArBE;AAsBZC,IAAAA,QAAQ,EAAEnB,UAAU,GAAGA,UAAU,CAACmB,QAAd,GAAyB,EAtBjC;AAuBZC,IAAAA,MAvBY,oBAuBH;AACL,aAAO1B,SAAS,CAACI,EAAE,CAACM,OAAJ,CAAhB;AACH;AAzBW,GAAD,CAAf;AA2BH,CAvCD","sourcesContent":["import React from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { registerPlugins, getPlugins } from \"@webiny/plugins\";\nimport { PbElement, PbEditorPageElementPlugin } from \"@webiny/app-page-builder/types\";\nimport Title from \"./components/Title\";\n\nexport default (el: PbElement) => {\n    const plugins = getPlugins<PbEditorPageElementPlugin>(\"pb-editor-page-element\");\n    const rootPlugin: PbEditorPageElementPlugin = plugins.find(\n        pl => pl.elementType === el.content.type\n    );\n\n    if (!rootPlugin) {\n        return;\n    }\n\n    const name = \"saved-element-\" + el.id;\n\n    registerPlugins({\n        name,\n        title: el.name,\n        type: \"pb-editor-page-element\",\n        elementType: name,\n        target: rootPlugin.target,\n        toolbar: {\n            title({ refresh }) {\n                return <Title plugin={name} title={el.name} id={el.id} refresh={refresh} />;\n            },\n            group: \"pb-editor-element-group-saved\",\n            preview() {\n                return (\n                    <img\n                        src={el.preview.src}\n                        alt={el.name}\n                        style={{ width: 227, height: \"auto\", backgroundColor: \"#fff\" }}\n                    />\n                );\n            }\n        },\n        onCreate: \"skip\",\n        settings: rootPlugin ? rootPlugin.settings : [],\n        create() {\n            return cloneDeep(el.content);\n        }\n    });\n};\n"],"file":"createElementPlugin.js"}