import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useState, useCallback } from "react";
import { useApolloClient } from "react-apollo";
import styled from "@emotion/styled";
import { useHandlers } from "@webiny/app/hooks/useHandlers";
import { unregisterPlugin } from "@webiny/plugins";
import { Typography } from "@webiny/ui/Typography";
import { IconButton } from "@webiny/ui/Button";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/close.svg";
import { ReactComponent as EditIcon } from "@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/edit.svg";
import { deleteElement, updateElement } from "./graphql";
import EditElementDialog from "./EditElementDialog";
import createElementPlugin from "@webiny/app-page-builder/admin/utils/createElementPlugin";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
var EditIconWrapper = /*#__PURE__*/styled("div", {
  target: "efssgx80",
  label: "EditIconWrapper"
})({
  position: "absolute",
  top: 0,
  right: 48
});
var DeleteIconWrapper = /*#__PURE__*/styled("div", {
  target: "efssgx81",
  label: "DeleteIconWrapper"
})({
  position: "absolute",
  top: 0,
  right: 16
});

var Title = function Title(props) {
  var pluginName = props.plugin,
      title = props.title;
  var client = useApolloClient();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      editDialogOpened = _useState2[0],
      setEditDialog = _useState2[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var openEditDialog = useCallback(function () {
    return setEditDialog(true);
  }, []);
  var closeEditDialog = useCallback(function () {
    return setEditDialog(false);
  }, []);

  var _useHandlers = useHandlers(props, {
    onSubmit: function onSubmit(_ref) {
      var id = _ref.id,
          refresh = _ref.refresh;
      return /*#__PURE__*/function () {
        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(plugin) {
          var name, response, _response$data$pageBu, error, data;

          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  name = plugin.title;
                  _context.next = 3;
                  return client.mutate({
                    mutation: updateElement,
                    variables: {
                      id: id,
                      data: {
                        name: name
                      }
                    }
                  });

                case 3:
                  response = _context.sent;
                  _response$data$pageBu = response.data.pageBuilder.updateElement, error = _response$data$pageBu.error, data = _response$data$pageBu.data;

                  if (!error) {
                    _context.next = 9;
                    break;
                  }

                  closeEditDialog();
                  setTimeout(function () {
                    // For better UX, success message is shown after 300ms has passed.
                    showSnackbar(error.message);
                  }, 300);
                  return _context.abrupt("return");

                case 9:
                  // This will replace previously registered block plugin.
                  createElementPlugin(data);
                  closeEditDialog();
                  refresh();
                  setTimeout(function () {
                    // For better UX, success message is shown after 300ms has passed.
                    showSnackbar("Element " + plugin.title + " successfully saved.");
                  }, 300);

                case 13:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function (_x) {
          return _ref2.apply(this, arguments);
        };
      }();
    }
  }),
      onSubmit = _useHandlers.onSubmit;

  return /*#__PURE__*/React.createElement(ConfirmationDialog, {
    title: "Delete saved element",
    message: /*#__PURE__*/React.createElement("p", null, "Are you sure you want to permanently delete the ", /*#__PURE__*/React.createElement("strong", null, title), " ", "element?")
  }, function (_ref3) {
    var showConfirmation = _ref3.showConfirmation;
    return /*#__PURE__*/React.createElement(Typography, {
      use: "overline"
    }, title, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditIconWrapper, null, /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(EditIcon, null),
      onClick: openEditDialog
    })), " ", /*#__PURE__*/React.createElement(EditElementDialog, {
      onSubmit: onSubmit,
      plugin: pluginName,
      open: !!editDialogOpened,
      onClose: closeEditDialog
    })), /*#__PURE__*/React.createElement(DeleteIconWrapper, null, /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(DeleteIcon, null),
      onClick: function onClick() {
        return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
          var plugin, refresh, id, _yield$client$mutate, res, error;

          return _regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  plugin = props.plugin, refresh = props.refresh, id = props.id;
                  _context2.next = 3;
                  return client.mutate({
                    mutation: deleteElement,
                    variables: {
                      id: id
                    }
                  });

                case 3:
                  _yield$client$mutate = _context2.sent;
                  res = _yield$client$mutate.data;
                  error = res.pageBuilder.deleteElement.error;

                  if (!error) {
                    _context2.next = 8;
                    break;
                  }

                  return _context2.abrupt("return", showSnackbar(error.message));

                case 8:
                  unregisterPlugin(plugin);
                  refresh();
                  showSnackbar( /*#__PURE__*/React.createElement("span", null, "Element ", /*#__PURE__*/React.createElement("strong", null, title), " deleted!"));

                case 11:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        })));
      }
    })));
  });
};

export default Title;
//# sourceMappingURL=Title.js.map