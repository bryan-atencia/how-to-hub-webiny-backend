{"version":3,"sources":["../../../../src/admin/hooks/usePageBuilderSettings/usePageBuilderSettings.ts"],"names":["useCallback","useQuery","gql","getPagePreviewUrlFunction","DOMAIN_QUERY","usePageBuilderSettings","data","loading","getDomain","getPageUrl","page","url","getPagePreviewUrl","domain"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,yBAAP,MAAsC,qBAAtC;AAEA,OAAO,IAAMC,YAAY,GAAGF,GAAH,mBAAlB;AAaP,OAAO,SAASG,sBAAT,GAAkC;AAAA,kBACXJ,QAAQ,CAACG,YAAD,CADG;AAAA,MAC7BE,IAD6B,aAC7BA,IAD6B;AAAA,MACvBC,OADuB,aACvBA,OADuB;;AAGrC,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,WAAO,KAAIF,IAAJ,EAAU,qCAAV,CAAP;AACH,GAFD;;AAIA,MAAMG,UAAU,GAAGT,WAAW,CAC1B,UAAAU,IAAI,EAAI;AACJ,QAAIH,OAAJ,EAAa;AACT,aAAO,IAAP;AACH;;AACD,WAAOC,SAAS,KAAKE,IAAI,CAACC,GAA1B;AACH,GANyB,EAO1B,CAACL,IAAD,EAAOC,OAAP,CAP0B,CAA9B;AAUA,MAAMK,iBAAiB,GAAGZ,WAAW,CACjC,UAAAU,IAAI,EAAI;AACJ,QAAIH,OAAJ,EAAa;AACT,aAAO,IAAP;AACH;;AACD,WAAOJ,yBAAyB,CAAC;AAAEO,MAAAA,IAAI,EAAJA,IAAF;AAAQG,MAAAA,MAAM,EAAEL,SAAS;AAAzB,KAAD,CAAhC;AACH,GANgC,EAOjC,CAACF,IAAD,EAAOC,OAAP,CAPiC,CAArC;AAUA,SAAO;AACHC,IAAAA,SAAS,EAATA,SADG;AAEHC,IAAAA,UAAU,EAAVA,UAFG;AAGHG,IAAAA,iBAAiB,EAAjBA,iBAHG;AAIHN,IAAAA,IAAI,EAAEC,OAAO,GAAG,IAAH,GAAU,KAAID,IAAJ,EAAU,8BAAV;AAJpB,GAAP;AAMH","sourcesContent":["import { useCallback } from \"react\";\nimport { useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { get } from \"lodash\";\nimport getPagePreviewUrlFunction from \"./getPagePreviewUrl\";\n\nexport const DOMAIN_QUERY = gql`\n    query PbGetDomain {\n        pageBuilder {\n            getSettings {\n                id\n                data {\n                    domain\n                }\n            }\n        }\n    }\n`;\n\nexport function usePageBuilderSettings() {\n    const { data, loading } = useQuery(DOMAIN_QUERY);\n\n    const getDomain = () => {\n        return get(data, \"pageBuilder.getSettings.data.domain\");\n    };\n\n    const getPageUrl = useCallback(\n        page => {\n            if (loading) {\n                return null;\n            }\n            return getDomain() + page.url;\n        },\n        [data, loading]\n    );\n\n    const getPagePreviewUrl = useCallback(\n        page => {\n            if (loading) {\n                return null;\n            }\n            return getPagePreviewUrlFunction({ page, domain: getDomain() });\n        },\n        [data, loading]\n    );\n\n    return {\n        getDomain,\n        getPageUrl,\n        getPagePreviewUrl,\n        data: loading ? null : get(data, \"pageBuilder.getSettings.data\")\n    };\n}\n"],"file":"usePageBuilderSettings.js"}