import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { useState } from "react";
import { useQuery } from "react-apollo";
import { get } from "dot-prop-immutable";
import { LIST_ELEMENTS } from "@webiny/app-page-builder/admin/graphql/pages";
import createElementPlugin from "../../utils/createElementPlugin";
import createBlockPlugin from "../../utils/createBlockPlugin";
export var useSavedElements = function useSavedElements() {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      ready = _useState2[0],
      setReady = _useState2[1];

  var _useQuery = useQuery(LIST_ELEMENTS, {
    skip: ready
  }),
      data = _useQuery.data,
      loading = _useQuery.loading;

  if (ready) {
    return true;
  }

  if (loading) {
    return false;
  }

  var elements = get(data, "pageBuilder.elements.data");

  if (!ready) {
    elements.forEach(function (el) {
      if (el.type === "element") {
        createElementPlugin(el);
      } else {
        createBlockPlugin(el);
      }
    });
    setReady(true);
  }

  return ready;
};
//# sourceMappingURL=useSavedElements.js.map