import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import { css } from "emotion";
import styled from "@emotion/styled";
import uniqid from "uniqid";
import { getPlugins } from "@webiny/plugins";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Icon } from "@webiny/ui/Icon";
import { Menu } from "@webiny/ui/Menu";
import { List, ListItem, ListItemGraphic } from "@webiny/ui/List";
import { ButtonPrimary } from "@webiny/ui/Button";
import MenuItemsList from "./MenuItems/MenuItemsList";
import MenuItemForm from "./MenuItems/MenuItemForm";
import findObject from "./MenuItems/findObject";
import { Typography } from "@webiny/ui/Typography";
var leftPanel = /*#__PURE__*/css({
  padding: 25,
  backgroundColor: "var(--mdc-theme-background)",
  overflow: "scroll"
}, "label:leftPanel;");
var menuItems = /*#__PURE__*/css({
  width: 170
}, "label:menuItems;");
var MenuHolder = /*#__PURE__*/styled("div", {
  target: "e2eq7qu0",
  label: "MenuHolder"
})({
  textAlign: "center",
  color: "var(--mdc-theme-text-primary-on-background)"
});
var AddMenu = /*#__PURE__*/styled("div", {
  target: "e2eq7qu1",
  label: "AddMenu"
})({
  width: 180,
  margin: "25px auto 0 auto"
});

var MenuItems = /*#__PURE__*/function (_React$Component) {
  _inherits(MenuItems, _React$Component);

  var _super = _createSuper(MenuItems);

  function MenuItems() {
    var _this;

    _classCallCheck(this, MenuItems);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "form", /*#__PURE__*/React.createRef());

    _defineProperty(_assertThisInitialized(_this), "state", {
      currentMenuItem: null
    });

    _defineProperty(_assertThisInitialized(_this), "addItem", function (plugin) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          value = _this$props.value;
      var newItem = {
        type: plugin.menuItem.type,
        id: uniqid(),
        __new: true
      };
      onChange([].concat(_toConsumableArray(value), [newItem]));

      _this.editItem(newItem);
    });

    _defineProperty(_assertThisInitialized(_this), "editItem", function (data) {
      _this.setState({
        currentMenuItem: data
      });
    });

    _defineProperty(_assertThisInitialized(_this), "deleteItem", function (item) {
      var _this$props2 = _this.props,
          value = _this$props2.value,
          onChange = _this$props2.onChange;
      var target = findObject(value, item.id);
      target && target.source.splice(target.index, 1);
      onChange(value);

      _this.editItem(null);
    });

    return _this;
  }

  _createClass(MenuItems, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          items = _this$props3.value,
          onChange = _this$props3.onChange;
      var currentMenuItem = this.state.currentMenuItem;
      var plugins = getPlugins("pb-menu-item");
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 7,
        className: leftPanel
      }, /*#__PURE__*/React.createElement(MenuItemsList, {
        items: items,
        onChange: onChange,
        editItem: this.editItem,
        deleteItem: this.deleteItem
      })), /*#__PURE__*/React.createElement(Cell, {
        span: 5
      }, !currentMenuItem && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuHolder, null, /*#__PURE__*/React.createElement(Typography, {
        use: "body2"
      }, "To build your menu you need to create menu items! Begin by clicking the \"Add menu item\" button"), /*#__PURE__*/React.createElement(AddMenu, null, /*#__PURE__*/React.createElement(Menu, {
        handle: /*#__PURE__*/React.createElement(ButtonPrimary, null, "+ Add menu item"),
        anchor: "topEnd"
      }, /*#__PURE__*/React.createElement(List, {
        className: menuItems
      }, plugins.map(function (pl) {
        return /*#__PURE__*/React.createElement(ListItem, {
          key: pl.name,
          onClick: function onClick() {
            return _this2.addItem(pl);
          },
          style: {
            whiteSpace: "nowrap"
          }
        }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
          icon: pl.menuItem.icon
        })), pl.menuItem.title);
      })))))), currentMenuItem && /*#__PURE__*/React.createElement(MenuItemForm, {
        currentMenuItem: currentMenuItem,
        editItem: this.editItem,
        deleteItem: this.deleteItem,
        items: items,
        onChange: onChange
      }))));
    }
  }]);

  return MenuItems;
}(React.Component);

export default MenuItems;
//# sourceMappingURL=MenuItems.js.map