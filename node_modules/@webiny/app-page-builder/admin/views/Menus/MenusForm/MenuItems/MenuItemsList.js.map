{"version":3,"sources":["../../../../../../src/admin/views/Menus/MenusForm/MenuItems/MenuItemsList.tsx"],"names":["React","SortableTree","getPlugins","MenuItemRenderer","Typography","styled","TreeWrapper","width","height","backgroundColor","EmptyTree","display","alignItems","justifyContent","color","MenuItemsList","props","items","onChange","editItem","deleteItem","data","Array","isArray","dom","length","canHaveChildren","node","id","plugins","plugin","find","pl","menuItem","type","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,IAAMC,WAAW,gBAAGD,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC9BE,EAAAA,KAAK,EAAE,MADuB;AAE9BC,EAAAA,MAAM,EAAE,GAFsB;AAG9B,4KAA0K;AACtKC,IAAAA,eAAe,EAAE;AADqJ;AAH5I,CAAjB,CAAjB;AAQA,IAAMC,SAAS,gBAAGL,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC5BE,EAAAA,KAAK,EAAE,MADqB;AAE5BC,EAAAA,MAAM,EAAE,MAFoB;AAG5BG,EAAAA,OAAO,EAAE,MAHmB;AAI5BC,EAAAA,UAAU,EAAE,QAJgB;AAK5BC,EAAAA,cAAc,EAAE,QALY;AAM5BC,EAAAA,KAAK,EAAE;AANqB,CAAjB,CAAf;;IASMC,a;;;;;;;;;;;;;6BAOO;AAAA,wBAC6C,KAAKC,KADlD;AAAA,UACGC,KADH,eACGA,KADH;AAAA,UACUC,QADV,eACUA,QADV;AAAA,UACoBC,QADpB,eACoBA,QADpB;AAAA,UAC8BC,UAD9B,eAC8BA,UAD9B;AAEL,UAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcN,KAAd,uBAA2BA,KAA3B,IAAoC,EAAjD;AAEA,UAAIO,GAAG,gBACH,oBAAC,SAAD,qBACI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAE;AAAjB,8CADJ,CADJ;;AAKA,UAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACjBD,QAAAA,GAAG,gBACC,oBAAC,YAAD;AACI,UAAA,QAAQ,EAAEH,IADd;AAEI,UAAA,QAAQ,EAAEH,QAFd;AAGI,UAAA,mBAAmB,EAAEH,aAAa,CAACW,eAHvC;AAII,UAAA,mBAAmB,EAAEvB,gBAJzB;AAKI,UAAA,SAAS,EAAE,EALf;AAMI,UAAA,iBAAiB,EAAE;AAAA,mBAAO;AACtBgB,cAAAA,QAAQ,EAARA,QADsB;AAEtBC,cAAAA,UAAU,EAAVA;AAFsB,aAAP;AAAA,WANvB;AAUI,UAAA,UAAU,EAAE;AAAA,gBAAGO,IAAH,QAAGA,IAAH;AAAA,mBAAcA,IAAI,CAACC,EAAnB;AAAA;AAVhB,UADJ;AAcH;;AAED,0BAAO,oBAAC,WAAD,QAAcJ,GAAd,CAAP;AACH;;;oCAjCsBG,I,EAAM;AACzB,UAAME,OAAO,GAAG3B,UAAU,CAAmB,cAAnB,CAA1B;AACA,UAAM4B,MAAM,GAAGD,OAAO,CAACE,IAAR,CAAa,UAAAC,EAAE;AAAA,eAAIA,EAAE,CAACC,QAAH,CAAYC,IAAZ,KAAqBP,IAAI,CAACO,IAA9B;AAAA,OAAf,CAAf;AACA,aAAOJ,MAAM,GAAGA,MAAM,CAACG,QAAP,CAAgBP,eAAnB,GAAqC,KAAlD;AACH;;;;EALuB1B,KAAK,CAACmC,S;;AAqClC,eAAepB,aAAf","sourcesContent":["import React from \"react\";\nimport SortableTree from \"react-sortable-tree\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport MenuItemRenderer from \"./MenuItemRenderer\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport styled from \"@emotion/styled\";\nimport { PbMenuItemPlugin } from \"@webiny/app-page-builder/types\";\n\nconst TreeWrapper = styled(\"div\")({\n    width: \"100%\",\n    height: 400,\n    \".rst__lineHalfHorizontalRight::before, .rst__lineFullVertical::after, .rst__lineHalfVerticalTop::after, .rst__lineHalfVerticalBottom::after, .rst__lineChildren::after\": {\n        backgroundColor: \"var(--mdc-theme-on-surface)\"\n    }\n});\n\nconst EmptyTree = styled(\"div\")({\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"var(--mdc-theme-on-surface)\"\n});\n\nclass MenuItemsList extends React.Component<any> {\n    static canHaveChildren(node) {\n        const plugins = getPlugins<PbMenuItemPlugin>(\"pb-menu-item\");\n        const plugin = plugins.find(pl => pl.menuItem.type === node.type);\n        return plugin ? plugin.menuItem.canHaveChildren : false;\n    }\n\n    render() {\n        const { items, onChange, editItem, deleteItem } = this.props;\n        const data = Array.isArray(items) ? [...items] : [];\n\n        let dom = (\n            <EmptyTree>\n                <Typography use={\"overline\"}>There are no menu items to display</Typography>\n            </EmptyTree>\n        );\n        if (data.length > 0) {\n            dom = (\n                <SortableTree\n                    treeData={data}\n                    onChange={onChange}\n                    canNodeHaveChildren={MenuItemsList.canHaveChildren}\n                    nodeContentRenderer={MenuItemRenderer}\n                    rowHeight={80}\n                    generateNodeProps={() => ({\n                        editItem,\n                        deleteItem\n                    })}\n                    getNodeKey={({ node }) => node.id}\n                />\n            );\n        }\n\n        return <TreeWrapper>{dom}</TreeWrapper>;\n    }\n}\n\nexport default MenuItemsList;\n"],"file":"MenuItemsList.js"}