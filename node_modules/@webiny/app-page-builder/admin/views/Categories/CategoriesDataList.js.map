{"version":3,"sources":["../../../../src/admin/views/Categories/CategoriesDataList.tsx"],"names":["React","i18n","ConfirmationDialog","DeleteIcon","useCrud","DataList","List","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","t","ns","CategoriesDataList","actions","list","label","sorters","createdOn","name","data","isSelected","select","map","item","id","url","showConfirmation","delete"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,OAAT,QAAwB,iCAAxB;AAEA,SACIC,QADJ,EAEIC,IAFJ,EAGIC,QAHJ,EAIIC,YAJJ,EAKIC,qBALJ,EAMIC,YANJ,EAOIC,WAPJ,QAQO,iBARP;AAUA,IAAMC,CAAC,GAAGX,IAAI,CAACY,EAAL,CAAQ,6CAAR,CAAV;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,iBACHV,OAAO,EADJ;AAAA,MACrBW,OADqB,YACrBA,OADqB;AAAA,MACZC,IADY,YACZA,IADY;;AAG7B,sBACI,oBAAC,QAAD,oBACQA,IADR;AAEI,IAAA,KAAK,EAAEJ,CAAF,mBAFT;AAGI,IAAA,OAAO,EAAE,CACL;AACIK,MAAAA,KAAK,EAAE,kBADX;AAEIC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,SAAS,EAAE,CAAC;AAAd;AAFb,KADK,EAKL;AACIF,MAAAA,KAAK,EAAE,kBADX;AAEIC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAFb,KALK,EASL;AACIF,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,OAAO,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR;AAFb,KATK,EAaL;AACIH,MAAAA,KAAK,EAAE,UADX;AAEIC,MAAAA,OAAO,EAAE;AAAEE,QAAAA,IAAI,EAAE,CAAC;AAAT;AAFb,KAbK;AAHb,MAsBK;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,UAAT,QAASA,UAAT;AAAA,QAAqBC,MAArB,QAAqBA,MAArB;AAAA,wBACG,oBAAC,IAAD;AAAM,qBAAY;AAAlB,OACKF,IAAI,CAACG,GAAL,CAAS,UAAAC,IAAI;AAAA,0BACV,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,QAAA,QAAQ,EAAEJ,UAAU,CAACG,IAAD;AAA5C,sBACI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAA,iBAAMF,MAAM,CAACE,IAAD,CAAZ;AAAA;AAAvB,SACKA,IAAI,CAACL,IADV,eAEI,oBAAC,qBAAD,QAAwBK,IAAI,CAACE,GAA7B,CAFJ,CADJ,eAMI,oBAAC,YAAD,qBACI,oBAAC,WAAD,qBACI,oBAAC,kBAAD,QACK;AAAA,YAAGC,gBAAH,SAAGA,gBAAH;AAAA,4BACG,oBAAC,UAAD;AACI,UAAA,OAAO,EAAE;AAAA,mBACLA,gBAAgB,CAAC;AAAA,qBAAMb,OAAO,CAACc,MAAR,CAAeJ,IAAf,CAAN;AAAA,aAAD,CADX;AAAA;AADb,UADH;AAAA,OADL,CADJ,CADJ,CANJ,CADU;AAAA,KAAb,CADL,CADH;AAAA,GAtBL,CADJ;AAmDH,CAtDD;;AAwDA,eAAeX,kBAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\n\nimport {\n    DataList,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions\n} from \"@webiny/ui/List\";\n\nconst t = i18n.ns(\"app-page-builder/admin/categories/data-list\");\n\nconst CategoriesDataList = () => {\n    const { actions, list } = useCrud();\n\n    return (\n        <DataList\n            {...list}\n            title={t`Categories`}\n            sorters={[\n                {\n                    label: \"Newest to oldest\",\n                    sorters: { createdOn: -1 }\n                },\n                {\n                    label: \"Oldest to newest\",\n                    sorters: { createdOn: 1 }\n                },\n                {\n                    label: \"Name A-Z\",\n                    sorters: { name: 1 }\n                },\n                {\n                    label: \"Name Z-A\",\n                    sorters: { name: -1 }\n                }\n            ]}\n        >\n            {({ data, isSelected, select }) => (\n                <List data-testid=\"default-data-list\">\n                    {data.map(item => (\n                        <ListItem key={item.id} selected={isSelected(item)}>\n                            <ListItemText onClick={() => select(item)}>\n                                {item.name}\n                                <ListItemTextSecondary>{item.url}</ListItemTextSecondary>\n                            </ListItemText>\n\n                            <ListItemMeta>\n                                <ListActions>\n                                    <ConfirmationDialog>\n                                        {({ showConfirmation }) => (\n                                            <DeleteIcon\n                                                onClick={() =>\n                                                    showConfirmation(() => actions.delete(item))\n                                                }\n                                            />\n                                        )}\n                                    </ConfirmationDialog>\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </DataList>\n    );\n};\n\nexport default CategoriesDataList;\n"],"file":"CategoriesDataList.js"}