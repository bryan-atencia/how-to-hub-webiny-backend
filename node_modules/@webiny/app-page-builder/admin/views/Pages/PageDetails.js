import _get from "lodash/get";
import React from "react";
import { Query } from "react-apollo";
import { useRouter } from "@webiny/react-router";
import styled from "@emotion/styled";
import { Elevation } from "@webiny/ui/Elevation";
import { renderPlugins } from "@webiny/app/plugins";
import { GET_PAGE } from "@webiny/app-page-builder/admin/graphql/pages";
import { PageDetailsProvider, PageDetailsConsumer } from "../../contexts/PageDetails";
import { ElementAnimation } from "@webiny/app-page-builder/render/components";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
var EmptySelect = /*#__PURE__*/styled("div", {
  target: "e1c91zhx0",
  label: "EmptySelect"
})({
  width: "100%",
  height: "100%",
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  color: "var(--mdc-theme-on-surface)",
  ".select-page": {
    maxWidth: 400,
    padding: "50px 100px",
    textAlign: "center",
    display: "block",
    borderRadius: 2,
    backgroundColor: "var(--mdc-theme-surface)"
  }
});
var DetailsContainer = /*#__PURE__*/styled("div", {
  target: "e1c91zhx1",
  label: "DetailsContainer"
})({
  height: "calc(100% - 10px)",
  overflow: "hidden",
  position: "relative",
  nav: {
    backgroundColor: "var(--mdc-theme-surface)"
  }
});

var EmptyPageDetails = function EmptyPageDetails() {
  return /*#__PURE__*/React.createElement(EmptySelect, null, /*#__PURE__*/React.createElement(Elevation, {
    z: 2,
    className: "select-page"
  }, "Select a page on the left side, or click the green button to create a new one."));
};

var PageDetails = function PageDetails(_ref) {
  var refreshPages = _ref.refreshPages;

  var _useRouter = useRouter(),
      history = _useRouter.history,
      location = _useRouter.location;

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var query = new URLSearchParams(location.search);
  var pageId = query.get("id");

  if (!pageId) {
    return /*#__PURE__*/React.createElement(EmptyPageDetails, null);
  }

  return /*#__PURE__*/React.createElement(Query, {
    query: GET_PAGE(),
    variables: {
      id: pageId
    },
    onCompleted: function onCompleted(data) {
      var error = _get(data, "pageBuilder.page.error.message");

      if (error) {
        query.delete("id");
        history.push({
          search: query.toString()
        });
        showSnackbar(error);
      }
    }
  }, function (_ref2) {
    var data = _ref2.data,
        loading = _ref2.loading;
    var details = {
      page: _get(data, "pageBuilder.page.data") || {},
      loading: loading
    };
    return /*#__PURE__*/React.createElement(ElementAnimation, null, function (_ref3) {
      var refresh = _ref3.refresh;
      return /*#__PURE__*/React.createElement(DetailsContainer, {
        onScroll: refresh
      }, /*#__PURE__*/React.createElement(PageDetailsProvider, {
        value: details
      }, /*#__PURE__*/React.createElement(PageDetailsConsumer, null, function (pageDetails) {
        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("test-id", {
          "data-testid": "pb-page-details"
        }, renderPlugins("pb-page-details", {
          refreshPages: refreshPages,
          pageDetails: pageDetails,
          loading: loading
        })));
      })));
    });
  });
};

export default PageDetails;
//# sourceMappingURL=PageDetails.js.map