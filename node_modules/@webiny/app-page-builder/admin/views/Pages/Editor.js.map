{"version":3,"sources":["../../../../src/admin/views/Pages/Editor.tsx"],"names":["React","useCallback","Provider","useRouter","Query","useApolloClient","Editor","PbEditor","createElement","redux","SETUP_EDITOR","GET_PAGE","useSavedElements","Snackbar","useSnackbar","Typography","LoadingEditor","LoadingTitle","editorMock","getEmptyData","page","revisions","ui","activeElement","dragging","highlightElement","plugins","resizing","tmp","pageSet","client","match","history","showSnackbar","ready","params","renderEditor","data","loading","store","initStore","pageBuilder","content","id","dispatch","type","payload","zIndex","position","error","push"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Query, useApolloClient } from \"react-apollo\";\nimport { get } from \"lodash\";\nimport { Editor as PbEditor } from \"@webiny/app-page-builder/editor\";\nimport { createElement } from \"@webiny/app-page-builder/editor/utils\";\nimport { redux } from \"@webiny/app-page-builder/editor/redux\";\nimport { SETUP_EDITOR } from \"@webiny/app-page-builder/editor/actions\";\nimport { GET_PAGE } from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { useSavedElements } from \"@webiny/app-page-builder/admin/hooks/useSavedElements\";\nimport Snackbar from \"@webiny/app-admin/plugins/Snackbar/Snackbar\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\n\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { LoadingEditor, LoadingTitle } from \"./EditorStyled.js\";\nimport editorMock from \"@webiny/app-page-builder/admin/assets/editor-mock.png\";\n\nconst getEmptyData = (page = {}, revisions = []) => {\n    return {\n        ui: {\n            activeElement: null,\n            dragging: false,\n            highlightElement: null,\n            plugins: {},\n            resizing: false\n        },\n        tmp: {},\n        page,\n        revisions\n    };\n};\n\nlet pageSet = null;\n\nconst Editor = () => {\n    const client = useApolloClient();\n    const { match, history } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const ready = useSavedElements();\n\n    const params: { id: string } = match.params as any;\n\n    const renderEditor = useCallback(\n        ({ data, loading }) => {\n            if (loading || !ready) {\n                return (\n                    <LoadingEditor>\n                        <img src={editorMock} />\n                        <LoadingTitle>\n                            <Typography tag={\"div\"} use={\"headline6\"}>\n                                Loading Editor<span>.</span>\n                                <span>.</span>\n                                <span>.</span>\n                            </Typography>\n                        </LoadingTitle>\n                    </LoadingEditor>\n                );\n            }\n\n            if (!get(data, \"pageBuilder.page.data\")) {\n                return null;\n            }\n\n            if (!redux.store) {\n                redux.initStore({}, { client });\n            }\n\n            if (!loading) {\n                const { revisions, ...page } = data.pageBuilder.page.data;\n                if (!page.content) {\n                    page.content = createElement(\"document\");\n                }\n\n                if (pageSet !== page.id) {\n                    pageSet = page.id;\n                    redux.store.dispatch({\n                        type: SETUP_EDITOR,\n                        payload: getEmptyData(page, revisions)\n                    });\n                    redux.store.dispatch({ type: \"@@redux-undo/INIT\" });\n                }\n            }\n\n            return (\n                <React.Fragment>\n                    <Provider store={redux.store}>\n                        <PbEditor />\n                    </Provider>\n                    <div style={{ zIndex: 10, position: \"absolute\" }}>\n                        <Snackbar />\n                    </div>\n                </React.Fragment>\n            );\n        },\n        [ready]\n    );\n\n    return (\n        <Query\n            query={GET_PAGE()}\n            variables={{ id: params.id }}\n            onCompleted={data => {\n                const error = get(data, \"pageBuilder.page.error.message\");\n                if (error) {\n                    history.push(`/page-builder/pages`);\n                    showSnackbar(error);\n                }\n            }}\n        >\n            {renderEditor}\n        </Query>\n    );\n};\n\nexport default Editor;\n"],"file":"Editor.js"}