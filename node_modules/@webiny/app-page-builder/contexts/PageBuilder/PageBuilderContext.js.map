{"version":3,"sources":["../../../src/contexts/PageBuilder/PageBuilderContext.tsx"],"names":["React","registerPlugins","getPlugins","PageBuilderContext","createContext","PageBuilderProvider","theme","bcTheme","children","rest","value","useMemo","Object","assign","map","pl","layouts","l","name","type","layout","PageBuilderConsumer","props","cloneElement","pageBuilder"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,iBAA5C;AAIA,OAAO,IAAMC,kBAAkB,GAAGH,KAAK,CAACI,aAAN,CAAoB,IAApB,CAA3B;AAqBP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAIH;AAAA,wBAH5BC,KAG4B;AAAA,MAHrBC,OAGqB,2BAHX,IAGW;AAAA,MAF5BC,QAE4B,QAF5BA,QAE4B;AAAA,MADzBC,IACyB;;AAC5B,MAAMC,KAA8B,GAAGV,KAAK,CAACW,OAAN,CAAc,YAAM;AACvD,QAAML,KAAK,GAAGM,MAAM,CAACC,MAAP,OAAAD,MAAM,GAChB,EADgB,EAEhBL,OAFgB,4BAGbL,UAAU,CAAC,UAAD,CAAV,CAAuBY,GAAvB,CAA2B,UAACC,EAAD;AAAA,aAAuBA,EAAE,CAACT,KAA1B;AAAA,KAA3B,CAHa,GAApB,CADuD,CAOvD;;AACA,QAAIA,KAAK,CAACU,OAAV,EAAmB;AACff,MAAAA,eAAe,CACXK,KAAK,CAACU,OAAN,CAAcF,GAAd,CAAkB,UAAAG,CAAC;AAAA,eAAK;AACpBC,UAAAA,IAAI,2BAAoBD,CAAC,CAACC,IAAtB,CADgB;AAEpBC,UAAAA,IAAI,kBAFgB;AAGpBC,UAAAA,MAAM,EAAEH;AAHY,SAAL;AAAA,OAAnB,CADW,CAAf;AAOH;;AAED;AACIX,MAAAA,KAAK,EAALA;AADJ,OAEOG,IAFP;AAIH,GAtBsC,EAsBpC,EAtBoC,CAAvC;AAwBA,sBAAO,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEC;AAApC,KAA4CF,QAA5C,CAAP;AACH,CA9BM;AAgCP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAAGb,QAAH,SAAGA,QAAH;AAAA,sBAC/B,oBAAC,kBAAD,CAAoB,QAApB,QACK,UAAAc,KAAK;AAAA,wBAAItB,KAAK,CAACuB,YAAN,CAAmBf,QAAnB,EAA6B;AAAEgB,MAAAA,WAAW,EAAEF;AAAf,KAA7B,CAAJ;AAAA,GADV,CAD+B;AAAA,CAA5B","sourcesContent":["import * as React from \"react\";\nimport { registerPlugins, getPlugins } from \"@webiny/plugins\";\nimport { PbThemePlugin, PbTheme, PbPageLayoutPlugin } from \"@webiny/app-page-builder/types\";\nimport { ReactElement } from \"react\";\n\nexport const PageBuilderContext = React.createContext(null);\n\nexport type PageBuilderContextValue = {\n    theme: PbTheme;\n    defaults?: {\n        pages?: {\n            notFound?: React.ComponentType<any>;\n            error?: React.ComponentType<any>;\n        };\n    };\n};\n\nexport type PageBuilderProviderProps = {\n    /**\n     * DEPRECATED: this prop will be removed in future releases. Use `pb-theme` plugin to register a theme.\n     */\n    theme?: PbTheme;\n    children?: ReactElement;\n    [key: string]: any;\n};\n\nexport const PageBuilderProvider = ({\n    theme: bcTheme = null,\n    children,\n    ...rest\n}: PageBuilderProviderProps) => {\n    const value: PageBuilderContextValue = React.useMemo(() => {\n        const theme = Object.assign(\n            {},\n            bcTheme,\n            ...getPlugins(\"pb-theme\").map((pl: PbThemePlugin) => pl.theme)\n        );\n\n        // For backwards compatibility, grab any page layouts defined in the theme and convert them to plugins\n        if (theme.layouts) {\n            registerPlugins(\n                theme.layouts.map(l => ({\n                    name: `pb-page-layout-${l.name}`,\n                    type: `pb-page-layout`,\n                    layout: l\n                })) as PbPageLayoutPlugin[]\n            );\n        }\n\n        return {\n            theme,\n            ...rest\n        };\n    }, []);\n\n    return <PageBuilderContext.Provider value={value}>{children}</PageBuilderContext.Provider>;\n};\n\nexport const PageBuilderConsumer = ({ children }) => (\n    <PageBuilderContext.Consumer>\n        {props => React.cloneElement(children, { pageBuilder: props })}\n    </PageBuilderContext.Consumer>\n);\n"],"file":"PageBuilderContext.js"}