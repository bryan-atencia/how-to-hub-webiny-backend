{"version":3,"sources":["../../../src/admin/views/ForgotPassword.tsx"],"names":["React","Form","validation","ButtonPrimary","ButtonDefault","Input","Grid","Cell","Typography","Alert","Elevation","StateContainer","alignRight","InnerContent","Title","CircularProgress","ForgotPassword","requestCode","setPassword","codeSent","error","loading","authProps","authData","username","Bind","submit","data","create","val","cb","toLowerCase","textAlign","changeState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,mBAA7C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,KAAnC,QAAgD,oBAAhD;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAGA,IAAMC,cAAqD,GAAG,SAAxDA,cAAwD,OAOxD;AAAA,MANFC,WAME,QANFA,WAME;AAAA,MALFC,WAKE,QALFA,WAKE;AAAA,MAJFC,QAIE,QAJFA,QAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFFC,OAEE,QAFFA,OAEE;AAAA,MADFC,SACE,QADFA,SACE;;AAAA,cACwBA,SAAS,CAACC,QAAV,IAAsB,EAD9C;AAAA,6BACMC,QADN;AAAA,MACMA,QADN,+BACiB,EADjB;;AAEF,sBACI,oBAAC,cAAD,qBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AAAEA,MAAAA,QAAQ,EAARA;AAAF,KADV;AAEI,IAAA,QAAQ,EAAE;AAAA,UAAGA,QAAH,SAAGA,QAAH;AAAA,aACNL,QAAQ,GAAGD,WAAW,CAAC;AAAEM,QAAAA,QAAQ,EAARA;AAAF,OAAD,CAAd,GAA+BP,WAAW,CAAC;AAAEO,QAAAA,QAAQ,EAARA;AAAF,OAAD,CAD5C;AAAA,KAFd;AAKI,IAAA,aAAa;AALjB,KAOK;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,MAAT,SAASA,MAAT;AAAA,QAAiBC,IAAjB,SAAiBA,IAAjB;AAAA,wBACG,uDACI,oBAAC,SAAD;AAAW,MAAA,CAAC,EAAE;AAAd,oBACI,oBAAC,YAAD,QACKN,OAAO,iBAAI,oBAAC,gBAAD,OADhB,eAEI,oBAAC,KAAD,qBACI,6CACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,2BADJ,CADJ,eAII,4CACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,uCADJ,CAJJ,CAFJ,EAaKD,KAAK,iBACF,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,sBAAd;AAAsC,MAAA,IAAI,EAAE;AAA5C,OACKA,KADL,CADJ,CADJ,CAdR,EAuBK,CAACD,QAAD,gBACG,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,UAAU,EAAEjB,UAAU,CAAC0B,MAAX,CAAkB,UAAlB,CAFhB;AAGI,MAAA,YAAY,EAAE,sBAACC,GAAD,EAAMC,EAAN;AAAA,eACVA,EAAE,CAACD,GAAG,CAACE,WAAJ,EAAD,CADQ;AAAA;AAHlB,oBAOI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,OADX;AAEI,MAAA,QAAQ,EAAE,IAFd;AAGI,MAAA,WAAW,EACP;AAJR,MAPJ,CADJ,CADJ,CADJ,eAqBI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,SAAS,EAAEnB;AAA3B,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEc;AAAxB,OACK,kBADL,CADJ,CADJ,CArBJ,CADH,gBA+BG,uDACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAC;AAAhB,uEAEI,+BAFJ,eAGI,+BAHJ,8GADJ,CADJ,CADJ,eAaI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,SAAS,EAAEd;AAA3B,oBACI,oBAAC,aAAD;AACI,MAAA,OAAO,EAAE;AAAA,eACLK,WAAW,CAAC;AAAEO,UAAAA,QAAQ,EAAEG,IAAI,CAACH;AAAjB,SAAD,CADN;AAAA;AADb,OAKK,aALL,CADJ,eAQI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEE;AAAxB,yBARJ,CADJ,CAbJ,CAtDR,CADJ,CADJ,eAuFI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE;AAAb;AAAvB,yCAEI;AAAG,MAAA,IAAI,EAAE,GAAT;AAAc,MAAA,OAAO,EAAE;AAAA,eAAMV,SAAS,CAACW,WAAV,CAAsB,QAAtB,CAAN;AAAA;AAAvB,iBAFJ,CADJ,CAvFJ,CADH;AAAA,GAPL,CADJ,CADJ;AA8GH,CAvHD;;AAyHA,eAAejB,cAAf","sourcesContent":["import * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { validation } from \"@webiny/validation\";\nimport { ButtonPrimary, ButtonDefault } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport StateContainer from \"./StateContainer\";\nimport { alignRight, InnerContent, Title } from \"./StyledComponents\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { ForgotPasswordChildrenProps } from \"@webiny/app-plugin-security-cognito/types\";\n\nconst ForgotPassword: React.FC<ForgotPasswordChildrenProps> = ({\n    requestCode,\n    setPassword,\n    codeSent,\n    error,\n    loading,\n    authProps\n}) => {\n    const { username = \"\" } = authProps.authData || {};\n    return (\n        <StateContainer>\n            <Form\n                data={{ username }}\n                onSubmit={({ username }) =>\n                    codeSent ? setPassword({ username }) : requestCode({ username })\n                }\n                submitOnEnter\n            >\n                {({ Bind, submit, data }) => (\n                    <>\n                        <Elevation z={2}>\n                            <InnerContent>\n                                {loading && <CircularProgress />}\n                                <Title>\n                                    <h1>\n                                        <Typography use=\"headline4\">Password recovery</Typography>\n                                    </h1>\n                                    <p>\n                                        <Typography use=\"subtitle2\">\n                                            request a password reset code\n                                        </Typography>\n                                    </p>\n                                </Title>\n\n                                {error && (\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Alert title={\"Something went wrong\"} type={\"danger\"}>\n                                                {error}\n                                            </Alert>\n                                        </Cell>\n                                    </Grid>\n                                )}\n\n                                {!codeSent ? (\n                                    <>\n                                        <Grid>\n                                            <Cell span={12}>\n                                                <Bind\n                                                    name=\"username\"\n                                                    validators={validation.create(\"required\")}\n                                                    beforeChange={(val, cb) =>\n                                                        cb(val.toLowerCase())\n                                                    }\n                                                >\n                                                    <Input\n                                                        label={\"Email\"}\n                                                        outlined={true}\n                                                        description={\n                                                            \"A reset code will be sent to your email.\"\n                                                        }\n                                                    />\n                                                </Bind>\n                                            </Cell>\n                                        </Grid>\n\n                                        <Grid>\n                                            <Cell span={12} className={alignRight}>\n                                                <ButtonPrimary onClick={submit}>\n                                                    {\"Send me the code\"}\n                                                </ButtonPrimary>\n                                            </Cell>\n                                        </Grid>\n                                    </>\n                                ) : (\n                                    <>\n                                        <Grid>\n                                            <Cell span={12}>\n                                                <Typography use=\"body1\">\n                                                    We have sent you a code to reset your password!\n                                                    <br />\n                                                    <br />\n                                                    Click the &quot;Resend code&quot; button below\n                                                    to resend the code in case you haven&apos;t\n                                                    received it the first time.\n                                                </Typography>\n                                            </Cell>\n                                        </Grid>\n                                        <Grid>\n                                            <Cell span={12} className={alignRight}>\n                                                <ButtonDefault\n                                                    onClick={() =>\n                                                        requestCode({ username: data.username })\n                                                    }\n                                                >\n                                                    {\"Resend code\"}\n                                                </ButtonDefault>\n                                                <ButtonPrimary onClick={submit}>\n                                                    I got the code!\n                                                </ButtonPrimary>\n                                            </Cell>\n                                        </Grid>\n                                    </>\n                                )}\n                            </InnerContent>\n                        </Elevation>\n                        <Grid>\n                            <Cell span={12} style={{ textAlign: \"center\" }}>\n                                Want to sign in? {/* eslint-disable-next-line */}\n                                <a href={\"#\"} onClick={() => authProps.changeState(\"signIn\")}>\n                                    Sign in\n                                </a>\n                            </Cell>\n                        </Grid>\n                    </>\n                )}\n            </Form>\n        </StateContainer>\n    );\n};\n\nexport default ForgotPassword;\n"],"file":"ForgotPassword.js"}