import React from "react";
import { Form } from "@webiny/form";
import { validation } from "@webiny/validation";
import { ButtonPrimary } from "@webiny/ui/Button";
import { Input } from "@webiny/ui/Input";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Typography } from "@webiny/ui/Typography";
import { Elevation } from "@webiny/ui/Elevation";
import { CircularProgress } from "@webiny/ui/Progress";
import StateContainer from "./StateContainer";
import { alignRight, InnerContent, Title, errorMessage } from "./StyledComponents";

var SetNewPassword = function SetNewPassword(_ref) {
  var setPassword = _ref.setPassword,
      error = _ref.error,
      loading = _ref.loading,
      authProps = _ref.authProps;
  return /*#__PURE__*/React.createElement(StateContainer, null, /*#__PURE__*/React.createElement(Form, {
    onSubmit: setPassword,
    submitOnEnter: true
  }, function (_ref2) {
    var Bind = _ref2.Bind,
        submit = _ref2.submit,
        data = _ref2.data;

    var retypePasswordValidator = function retypePasswordValidator(value) {
      if (value !== data.password) {
        throw Error("Passwords do not match!");
      }
    };

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Elevation, {
      z: 2
    }, /*#__PURE__*/React.createElement(InnerContent, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(Title, null, /*#__PURE__*/React.createElement("h1", null, /*#__PURE__*/React.createElement(Typography, {
      use: "headline4"
    }, "Set new password"))), error && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      className: errorMessage
    }, error)), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "code",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(Input, {
      autoComplete: "off",
      label: "Password reset code",
      outlined: true,
      description: "Enter the code we sent to your email."
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "password",
      validators: validation.create("required")
    }, /*#__PURE__*/React.createElement(Input, {
      autoComplete: "off",
      type: "password",
      label: "New password",
      outlined: true,
      description: "Enter your new password."
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "retypePassword",
      validators: [validation.create("required"), retypePasswordValidator]
    }, /*#__PURE__*/React.createElement(Input, {
      type: "password",
      label: "Retype password",
      outlined: true,
      description: "Enter your new password once more."
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      className: alignRight
    }, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: submit
    }, "Set new password"))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      style: {
        textAlign: "center"
      }
    }, "Want to sign in? ", /*#__PURE__*/React.createElement("a", {
      href: "#",
      onClick: function onClick() {
        return authProps.changeState("signIn");
      }
    }, "Sign in"))));
  }));
};

export default SetNewPassword;
//# sourceMappingURL=SetNewPassword.js.map