import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Password"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Type a new password to reset it."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { Cell, Grid } from "@webiny/ui/Grid";
import { Input } from "@webiny/ui/Input";
import { i18n } from "@webiny/app/i18n";
import { Accordion, AccordionItem } from "@webiny/ui/Accordion";
import { ReactComponent as SettingsIcon } from "@svgr/webpack!./../assets/icons/settings-24px.svg";
import { ReactComponent as SecurityIcon } from "@svgr/webpack!./../assets/icons/security-24px.svg";
var t = i18n.ns("app-plugin-security-cognito-theme/users/account");

var UserAccountForm = function UserAccountForm(_ref) {
  var Bind = _ref.Bind,
      data = _ref.data,
      fields = _ref.fields;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Accordion, {
    elevation: 0
  }, /*#__PURE__*/React.createElement(AccordionItem, {
    description: "Show Account bio information",
    title: "Bio",
    icon: /*#__PURE__*/React.createElement(SettingsIcon, null)
  }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, fields.email), /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, /*#__PURE__*/React.createElement(Bind, {
    name: "password"
  }, /*#__PURE__*/React.createElement(Input, {
    autoComplete: "off",
    description: data.id && t(_templateObject()),
    type: "password",
    label: t(_templateObject2())
  }))), /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, fields.firstName), /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, fields.lastName))), /*#__PURE__*/React.createElement(AccordionItem, {
    description: "Show Personal Access Tokens",
    title: "Personal Access Tokens",
    icon: /*#__PURE__*/React.createElement(SecurityIcon, null)
  }, fields.personalAccessTokens)));
};

export default UserAccountForm;
//# sourceMappingURL=UserAccountForm.js.map