{"version":3,"sources":["../../../src/admin/views/SetNewPassword.tsx"],"names":["React","Form","validation","ButtonPrimary","Input","Grid","Cell","Typography","Elevation","CircularProgress","StateContainer","alignRight","InnerContent","Title","errorMessage","SetNewPassword","setPassword","error","loading","authProps","Bind","submit","data","retypePasswordValidator","value","password","Error","create","textAlign","changeState"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { validation } from \"@webiny/validation\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport StateContainer from \"./StateContainer\";\nimport { alignRight, InnerContent, Title, errorMessage } from \"./StyledComponents\";\nimport { SetNewPasswordChildrenProps } from \"@webiny/app-plugin-security-cognito/types\";\n\nconst SetNewPassword: React.FC<SetNewPasswordChildrenProps> = ({\n    setPassword,\n    error,\n    loading,\n    authProps\n}) => {\n    return (\n        <StateContainer>\n            <Form onSubmit={setPassword} submitOnEnter>\n                {({ Bind, submit, data }) => {\n                    const retypePasswordValidator = value => {\n                        if (value !== data.password) {\n                            throw Error(\"Passwords do not match!\");\n                        }\n                    };\n\n                    return (\n                        <>\n                            <Elevation z={2}>\n                                <InnerContent>\n                                    {loading && <CircularProgress />}\n                                    <Title>\n                                        <h1>\n                                            <Typography use=\"headline4\">\n                                                Set new password\n                                            </Typography>\n                                        </h1>\n                                    </Title>\n\n                                    {error && (\n                                        <Grid>\n                                            <Cell span={12} className={errorMessage}>\n                                                {error}\n                                            </Cell>\n                                        </Grid>\n                                    )}\n\n                                    <Grid>\n                                        <Cell span={12}>\n                                            <Bind\n                                                name=\"code\"\n                                                validators={validation.create(\"required\")}\n                                            >\n                                                <Input\n                                                    autoComplete=\"off\"\n                                                    label={\"Password reset code\"}\n                                                    outlined={true}\n                                                    description={\n                                                        \"Enter the code we sent to your email.\"\n                                                    }\n                                                />\n                                            </Bind>\n                                        </Cell>\n                                        <Cell span={12}>\n                                            <Bind\n                                                name=\"password\"\n                                                validators={validation.create(\"required\")}\n                                            >\n                                                <Input\n                                                    autoComplete={\"off\"}\n                                                    type={\"password\"}\n                                                    label={\"New password\"}\n                                                    outlined={true}\n                                                    description={\"Enter your new password.\"}\n                                                />\n                                            </Bind>\n                                        </Cell>\n                                        <Cell span={12}>\n                                            <Bind\n                                                name=\"retypePassword\"\n                                                validators={[\n                                                    validation.create(\"required\"),\n                                                    retypePasswordValidator\n                                                ]}\n                                            >\n                                                <Input\n                                                    type={\"password\"}\n                                                    label={\"Retype password\"}\n                                                    outlined={true}\n                                                    description={\n                                                        \"Enter your new password once more.\"\n                                                    }\n                                                />\n                                            </Bind>\n                                        </Cell>\n                                        <Cell span={12} className={alignRight}>\n                                            <ButtonPrimary onClick={submit}>\n                                                {\"Set new password\"}\n                                            </ButtonPrimary>\n                                        </Cell>\n                                    </Grid>\n                                </InnerContent>\n                            </Elevation>\n                            <Grid>\n                                <Cell span={12} style={{ textAlign: \"center\" }}>\n                                    Want to sign in? {/* eslint-disable-next-line */}\n                                    <a href={\"#\"} onClick={() => authProps.changeState(\"signIn\")}>\n                                        Sign in\n                                    </a>\n                                </Cell>\n                            </Grid>\n                        </>\n                    );\n                }}\n            </Form>\n        </StateContainer>\n    );\n};\n\nexport default SetNewPassword;\n"],"file":"SetNewPassword.js"}