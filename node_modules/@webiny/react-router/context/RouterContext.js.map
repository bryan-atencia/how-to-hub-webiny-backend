{"version":3,"sources":["../../src/context/RouterContext.tsx"],"names":["React","useMemo","getPlugins","useApolloClient","RouterContext","createContext","RouterProvider","children","apolloClient","value","plugins","onLink","link","i","length","RouterConsumer","props","cloneElement"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,eAAT,QAAgC,cAAhC;AAOA,OAAO,IAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAN,CAA6C,IAA7C,CAAtB;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5C,MAAMC,YAAY,GAAGL,eAAe,EAApC;AAEA,MAAMM,KAAK,GAAGR,OAAO,CAAC,YAAM;AACxB,QAAMS,OAAO,GAAGR,UAAU,CAA0B,sBAA1B,CAA1B;AACA,WAAO;AACHS,MAAAA,MADG,kBACIC,IADJ,EACU;AACT,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AAAA,cAC7BF,OAD6B,GAClBD,OAAO,CAACG,CAAD,CADW,CAC7BF,MAD6B;;AAErC,cAAI,OAAOA,OAAP,KAAkB,UAAtB,EAAkC;AAC9BA,YAAAA,OAAM,CAAC;AAAEC,cAAAA,IAAI,EAAJA,IAAF;AAAQJ,cAAAA,YAAY,EAAZA;AAAR,aAAD,CAAN;AACH;AACJ;AACJ;AARE,KAAP;AAUH,GAZoB,EAYlB,EAZkB,CAArB;AAaA,sBAAO,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC;AAA/B,KAAuCF,QAAvC,CAAP;AACH,CAjBM;AAmBP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGR,QAAH,SAAGA,QAAH;AAAA,sBAC1B,oBAAC,aAAD,CAAe,QAAf,QAAyB,UAAAS,KAAK;AAAA,wBAAIhB,KAAK,CAACiB,YAAN,CAAmBV,QAAnB,EAA6BS,KAA7B,CAAJ;AAAA,GAA9B,CAD0B;AAAA,CAAvB","sourcesContent":["import React, { useMemo } from \"react\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { useApolloClient } from \"react-apollo\";\nimport { ReactRouterOnLinkPlugin } from \"../types\";\n\nexport type ReactRouterContextValue = {\n    onLink(link: string): void;\n};\n\nexport const RouterContext = React.createContext<ReactRouterContextValue>(null);\n\nexport const RouterProvider = ({ children }) => {\n    const apolloClient = useApolloClient();\n\n    const value = useMemo(() => {\n        const plugins = getPlugins<ReactRouterOnLinkPlugin>(\"react-router-on-link\");\n        return {\n            onLink(link) {\n                for (let i = 0; i < plugins.length; i++) {\n                    const { onLink } = plugins[i];\n                    if (typeof onLink === \"function\") {\n                        onLink({ link, apolloClient });\n                    }\n                }\n            }\n        };\n    }, []);\n    return <RouterContext.Provider value={value}>{children}</RouterContext.Provider>;\n};\n\nexport const RouterConsumer = ({ children }) => (\n    <RouterContext.Consumer>{props => React.cloneElement(children, props)}</RouterContext.Consumer>\n);\n"],"file":"RouterContext.js"}