import React, { useMemo } from "react";
import { getPlugins } from "@webiny/plugins";
import { useApolloClient } from "react-apollo";
export var RouterContext = React.createContext(null);
export var RouterProvider = function RouterProvider(_ref) {
  var children = _ref.children;
  var apolloClient = useApolloClient();
  var value = useMemo(function () {
    var plugins = getPlugins("react-router-on-link");
    return {
      onLink: function onLink(link) {
        for (var i = 0; i < plugins.length; i++) {
          var _onLink = plugins[i].onLink;

          if (typeof _onLink === "function") {
            _onLink({
              link: link,
              apolloClient: apolloClient
            });
          }
        }
      }
    };
  }, []);
  return /*#__PURE__*/React.createElement(RouterContext.Provider, {
    value: value
  }, children);
};
export var RouterConsumer = function RouterConsumer(_ref2) {
  var children = _ref2.children;
  return /*#__PURE__*/React.createElement(RouterContext.Consumer, null, function (props) {
    return /*#__PURE__*/React.cloneElement(children, props);
  });
};
//# sourceMappingURL=RouterContext.js.map