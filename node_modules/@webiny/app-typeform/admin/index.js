import React from "react";
import styled from "@emotion/styled";
import { Tab } from "@webiny/ui/Tabs";
import { Input } from "@webiny/ui/Input";
import { Grid, Cell } from "@webiny/ui/Grid";
import { ReactComponent as CodeIcon } from "@svgr/webpack!./round-text_format-24px.svg";
import { ReactComponent as TypeformLogo } from "@svgr/webpack!./typeform-logo.svg";
import { ElementRoot } from "@webiny/app-page-builder/render/components/ElementRoot";
import TypeFormEmbed from "./TypeFormEmbed";
import render from "./../render";
import { validation } from "@webiny/validation";
var PreviewBox = /*#__PURE__*/styled("div", {
  target: "e18zmefp0",
  label: "PreviewBox"
})({
  textAlign: "center",
  height: 150,
  svg: {
    height: 150,
    width: 150
  }
});
export default (function () {
  return [render(), {
    name: "pb-page-element-typeform",
    type: "pb-editor-page-element",
    elementType: "typeform",
    toolbar: {
      title: "Typeform",
      group: "pb-editor-element-group-form",
      preview: function preview() {
        return /*#__PURE__*/React.createElement(PreviewBox, null, /*#__PURE__*/React.createElement(TypeformLogo, null));
      }
    },
    settings: ["pb-editor-page-element-settings-delete", "", "pb-editor-page-element-settings-height"],
    target: ["column", "row", "list-item"],
    onCreate: "open-settings",
    render: function render(_ref) {
      var element = _ref.element;
      return /*#__PURE__*/React.createElement(ElementRoot, {
        element: element,
        className: "webiny-pb-page-element-typeform"
      }, /*#__PURE__*/React.createElement(TypeFormEmbed, {
        elementId: element.id
      }));
    },
    create: function create() {
      return {
        type: "typeform",
        elements: [],
        data: {},
        settings: {
          style: {
            height: "500px"
          }
        }
      };
    }
  }, {
    name: "pb-editor-page-element-advanced-settings-typeform",
    type: "pb-editor-page-element-advanced-settings",
    elementType: "typeform",
    render: function render(_ref2) {
      var Bind = _ref2.Bind;
      return /*#__PURE__*/React.createElement(Tab, {
        icon: /*#__PURE__*/React.createElement(CodeIcon, null),
        label: "Typeform"
      }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, /*#__PURE__*/React.createElement(Bind, {
        name: "source.url",
        validators: validation.create("required,url")
      }, /*#__PURE__*/React.createElement(Input, {
        label: "Typeform URL",
        description: "Enter a Typeform URL"
      })))));
    }
  }];
});
//# sourceMappingURL=index.js.map