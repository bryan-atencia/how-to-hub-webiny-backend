"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _shortHash = _interopRequireDefault(require("short-hash"));

/**
 * Searches for all declared namespaces.
 * Result contains an object with identifiers as keys, and namespaces they represent as values, for example:
 * {ns1: 'Webiny.Ns1', ns2: 'Webiny.Ns2', i18n: 'NewNamespace', t: 'Some.Other.Namespace'}
 * @param source
 */
const getNamespaces = source => {
  const regex = /([a-zA-Z0-9]+)[ ]+=[ ]+i18n.namespace\(['"`]([a-zA-Z0-9.]+)['"`]\)/g;
  let m;
  const results = {};

  while ((m = regex.exec(source)) !== null) {
    if (m.index === regex.lastIndex) {
      regex.lastIndex++;
    }

    results[m[1]] = m[2];
  }

  return results;
};

var _default = source => {
  const results = {};
  const allDeclaredNamespaces = getNamespaces(source);

  for (const variable in allDeclaredNamespaces) {
    const regex = new RegExp(variable + "`(.*?)`", "g");
    let m;

    while ((m = regex.exec(source)) !== null) {
      if (m.index === regex.lastIndex) {
        regex.lastIndex++;
      } // This is the key - namespace + hash of matched label.


      const matchedText = m[1];
      const key = allDeclaredNamespaces[variable] + "." + (0, _shortHash.default)(matchedText);
      results[key] = matchedText;
    }
  }

  return results;
};

exports.default = _default;
//# sourceMappingURL=extract.js.map