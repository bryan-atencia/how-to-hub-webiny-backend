import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useMemo } from "react";
import { Editable, withReact, Slate } from "slate-react";
import { createEditor } from "slate";
import { getPlugins } from "@webiny/plugins";
import { pluginsToProps } from "./pluginsToProps";

function getValue(valueObject) {
  if (!valueObject) {
    return "";
  }

  if (typeof valueObject === "string") {
    return valueObject;
  }

  if (Array.isArray(valueObject.values)) {
    var _valueObject$values = _slicedToArray(valueObject.values, 1),
        defaultLocaleValue = _valueObject$values[0];

    if (defaultLocaleValue && defaultLocaleValue.value) {
      return defaultLocaleValue.value;
    }

    return "";
  }

  return valueObject.value || "";
}

export function I18NValue(props) {
  var editor = useMemo(function () {
    return withReact(createEditor());
  }, []);

  if (!props) {
    return "";
  }

  var valueObject = props.value,
      defaultObject = props.default;
  var value;
  value = getValue(valueObject);

  if (!value) {
    value = getValue(defaultObject);
  }

  if (typeof value === "string") {
    return value;
  }

  var editorPlugins = getPlugins("i18n-value-rich-text-editor").map(function (item) {
    return item.plugin;
  }).filter(Boolean);

  if (Array.isArray(props.editorPlugins)) {
    editorPlugins = [].concat(_toConsumableArray(editorPlugins), _toConsumableArray(props.editorPlugins));
  }

  var _pluginsToProps = pluginsToProps(editorPlugins, {
    editor: editor
  }),
      renderEditor = _pluginsToProps.renderEditor,
      editorProps = _objectWithoutProperties(_pluginsToProps, ["renderEditor"]);

  return /*#__PURE__*/React.createElement(Slate, {
    editor: editor,
    value: value,
    onChange: null
  }, renderEditor( /*#__PURE__*/React.createElement(Editable, Object.assign({
    readOnly: true
  }, editorProps))));
}
export default I18NValue;
//# sourceMappingURL=I18NValue.js.map