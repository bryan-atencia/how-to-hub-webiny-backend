{"version":3,"sources":["../../src/components/I18NValue.tsx"],"names":["React","useMemo","Editable","withReact","Slate","createEditor","getPlugins","pluginsToProps","getValue","valueObject","Array","isArray","values","defaultLocaleValue","value","I18NValue","props","editor","defaultObject","default","editorPlugins","map","item","plugin","filter","Boolean","renderEditor","editorProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA2C,aAA3C;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAiBA,SAASC,QAAT,CAAkBC,WAAlB,EAAoF;AAChF,MAAI,CAACA,WAAL,EAAkB;AACd,WAAO,EAAP;AACH;;AAED,MAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACjC,WAAOA,WAAP;AACH;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcF,WAAW,CAACG,MAA1B,CAAJ,EAAuC;AAAA,6CACNH,WAAW,CAACG,MADN;AAAA,QAC5BC,kBAD4B;;AAEnC,QAAIA,kBAAkB,IAAIA,kBAAkB,CAACC,KAA7C,EAAoD;AAChD,aAAOD,kBAAkB,CAACC,KAA1B;AACH;;AACD,WAAO,EAAP;AACH;;AAED,SAAQL,WAAW,CAACK,KAAb,IAAiC,EAAxC;AACH;;AAED,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA+C;AAClD,MAAMC,MAAM,GAAGhB,OAAO,CAAC;AAAA,WAAME,SAAS,CAACE,YAAY,EAAb,CAAf;AAAA,GAAD,EAAkC,EAAlC,CAAtB;;AAEA,MAAI,CAACW,KAAL,EAAY;AACR,WAAO,EAAP;AACH;;AALiD,MAOnCP,WAPmC,GAOKO,KAPL,CAO1CF,KAP0C;AAAA,MAObI,aAPa,GAOKF,KAPL,CAOtBG,OAPsB;AASlD,MAAIL,KAAJ;AACAA,EAAAA,KAAK,GAAGN,QAAQ,CAACC,WAAD,CAAhB;;AACA,MAAI,CAACK,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAGN,QAAQ,CAACU,aAAD,CAAhB;AACH;;AAED,MAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAOA,KAAP;AACH;;AAED,MAAIM,aAAa,GAAGd,UAAU,CAAC,6BAAD,CAAV,CACfe,GADe,CACX,UAACC,IAAD;AAAA,WAAyCA,IAAI,CAACC,MAA9C;AAAA,GADW,EAEfC,MAFe,CAERC,OAFQ,CAApB;;AAIA,MAAIf,KAAK,CAACC,OAAN,CAAcK,KAAK,CAACI,aAApB,CAAJ,EAAwC;AACpCA,IAAAA,aAAa,gCAAOA,aAAP,sBAAyBJ,KAAK,CAACI,aAA/B,EAAb;AACH;;AAzBiD,wBA2BTb,cAAc,CAACa,aAAD,EAAgB;AAAEH,IAAAA,MAAM,EAANA;AAAF,GAAhB,CA3BL;AAAA,MA2B1CS,YA3B0C,mBA2B1CA,YA3B0C;AAAA,MA2BzBC,WA3ByB;;AA6BlD,sBACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,MAAf;AAAuB,IAAA,KAAK,EAAEH,KAA9B;AAAqC,IAAA,QAAQ,EAAE;AAA/C,KACKY,YAAY,eAAC,oBAAC,QAAD;AAAU,IAAA,QAAQ;AAAlB,KAAuBC,WAAvB,EAAD,CADjB,CADJ;AAKH;AAED,eAAeZ,SAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Editable, withReact, Slate } from \"slate-react\";\nimport { createEditor } from \"slate\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { pluginsToProps } from \"./pluginsToProps\";\nimport {\n    I18NStringValue,\n    I18NObjectValue,\n    I18NInputRichTextEditorPlugin\n} from \"@webiny/app-i18n/types\";\n\nexport type EditorPlugin = {\n    name: string;\n}; // Slate plugin.\n\nexport type I18NValueProps = {\n    value?: string | I18NStringValue | I18NObjectValue;\n    default?: string | I18NStringValue | I18NObjectValue;\n    editorPlugins?: Array<EditorPlugin>;\n};\n\nfunction getValue(valueObject?: string | I18NStringValue | I18NObjectValue): string {\n    if (!valueObject) {\n        return \"\";\n    }\n\n    if (typeof valueObject === \"string\") {\n        return valueObject;\n    }\n\n    if (Array.isArray(valueObject.values)) {\n        const [defaultLocaleValue] = valueObject.values;\n        if (defaultLocaleValue && defaultLocaleValue.value) {\n            return defaultLocaleValue.value;\n        }\n        return \"\";\n    }\n\n    return (valueObject.value as string) || \"\";\n}\n\nexport function I18NValue(props: I18NValueProps): any {\n    const editor = useMemo(() => withReact(createEditor()), []);\n\n    if (!props) {\n        return \"\";\n    }\n\n    const { value: valueObject, default: defaultObject } = props;\n\n    let value: string;\n    value = getValue(valueObject);\n    if (!value) {\n        value = getValue(defaultObject);\n    }\n\n    if (typeof value === \"string\") {\n        return value;\n    }\n\n    let editorPlugins = getPlugins(\"i18n-value-rich-text-editor\")\n        .map((item: I18NInputRichTextEditorPlugin) => item.plugin)\n        .filter(Boolean);\n\n    if (Array.isArray(props.editorPlugins)) {\n        editorPlugins = [...editorPlugins, ...props.editorPlugins];\n    }\n\n    const { renderEditor, ...editorProps } = pluginsToProps(editorPlugins, { editor });\n\n    return (\n        <Slate editor={editor} value={value} onChange={null}>\n            {renderEditor(<Editable readOnly {...editorProps} />)}\n        </Slate>\n    );\n}\n\nexport default I18NValue;\n"],"file":"I18NValue.js"}