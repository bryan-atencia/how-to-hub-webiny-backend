import React from "react";
import { ReactComponent as FormatItalicIcon } from "@svgr/webpack!@webiny/app-i18n/admin/assets/icons/format_italic.svg";
import { isKeyHotkey } from "is-hotkey";
import { css } from "emotion";
var isItalicHotkey = isKeyHotkey("mod+i");
var mark = "italic";
/* prettier-ignore */

var italicStyle = /*#__PURE__*/css("font-style:italic !important;label:italicStyle;");
var plugin = {
  name: "i18n-input-rich-text-editor-italic",
  type: "i18n-input-rich-text-editor",
  plugin: {
    name: "italic",
    editor: {
      onKeyDown: function onKeyDown(_ref, next) {
        var event = _ref.event,
            editor = _ref.editor;

        if (isItalicHotkey(event)) {
          event.preventDefault();
          editor.toggleMark(mark);
          return true;
        }

        return next();
      },
      renderLeaf: function renderLeaf(_ref2) {
        var leaf = _ref2.leaf,
            attributes = _ref2.attributes,
            children = _ref2.children;

        if (leaf[mark] === true) {
          return /*#__PURE__*/React.createElement("em", Object.assign({
            className: italicStyle
          }, attributes), children);
        }

        return children;
      }
    },
    menu: {
      render: function render(_ref3) {
        var MenuButton = _ref3.MenuButton,
            editor = _ref3.editor;
        return (
          /*#__PURE__*/
          // eslint-disable-next-line react/jsx-no-bind
          React.createElement(MenuButton, {
            onClick: function onClick() {
              return editor.toggleMark(mark);
            },
            active: editor.hasMark(mark)
          }, /*#__PURE__*/React.createElement(FormatItalicIcon, null))
        );
      }
    }
  }
};
export default plugin;
//# sourceMappingURL=index.js.map