import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Language Z-A"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Language A-Z"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Locales"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import * as React from "react";
import { i18n } from "@webiny/app/i18n";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { useCrud } from "@webiny/app-admin/hooks/useCrud";
import { useI18N } from "@webiny/app-i18n/hooks/useI18N";
import { DataList, ScrollList, ListItem, ListItemText, ListItemMeta, ListActions } from "@webiny/ui/List";
import { DeleteIcon } from "@webiny/ui/List/DataList/icons";
var t = i18n.ns("app-i18n/admin/locales/data-list");

var I18NLocalesDataList = function I18NLocalesDataList() {
  var _useCrud = useCrud(),
      actions = _useCrud.actions,
      list = _useCrud.list;

  var _useI18N = useI18N(),
      refetchLocales = _useI18N.refetchLocales;

  return /*#__PURE__*/React.createElement(DataList, Object.assign({}, list, {
    title: t(_templateObject()),
    sorters: [{
      label: t(_templateObject2()),
      sorters: {
        code: 1
      }
    }, {
      label: t(_templateObject3()),
      sorters: {
        code: -1
      }
    }]
  }), function (_ref) {
    var data = _ref.data,
        isSelected = _ref.isSelected,
        select = _ref.select;
    return /*#__PURE__*/React.createElement(ScrollList, null, data.map(function (item) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: item.id,
        selected: isSelected(item)
      }, /*#__PURE__*/React.createElement(ListItemText, {
        onClick: function onClick() {
          return select(item);
        }
      }, item.code), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(ConfirmationDialog, null, function (_ref2) {
        var showConfirmation = _ref2.showConfirmation;
        return /*#__PURE__*/React.createElement(DeleteIcon, {
          onClick: function onClick() {
            return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
              return _regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      _context.next = 2;
                      return actions.delete(item);

                    case 2:
                      refetchLocales();

                    case 3:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            })));
          }
        });
      }))));
    }));
  });
};

export default I18NLocalesDataList;
//# sourceMappingURL=I18NLocalesDataList.js.map