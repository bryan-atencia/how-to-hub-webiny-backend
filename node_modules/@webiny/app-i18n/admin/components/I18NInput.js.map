{"version":3,"sources":["../../../src/admin/components/I18NInput.tsx"],"names":["React","useState","useCallback","useMemo","Icon","Input","I18NInputLocalesOverlay","css","useI18N","Tooltip","classNames","cloneDeep","I18NRichTextEditor","style","i18nDialogIconButton","display","pointerEvents","cursor","zIndex","i18nRichEditorDialogIconButton","position","right","prepareII8NValues","locales","values","output","i","item","find","locale","id","push","value","length","I18NInput","richText","onChange","children","showTranslateIcon","inputProps","setValues","getLocale","getLocales","openDialog","newValues","Array","isArray","closeDialog","submitDialog","filter","inputValue","foundValue","inputOnChange","newValue","index","findIndex","translateMenuItem","name","menu","render","MenuButton","localesOverlay","className"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Input } from \"@webiny/ui/Input\";\nimport I18NInputLocalesOverlay from \"./I18NInputLocalesOverlay\";\nimport { ReactComponent as I18NIcon } from \"./icons/round-translate-24px.svg\";\nimport { css } from \"emotion\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport classNames from \"classnames\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport I18NRichTextEditor from \"./I18NRichTextEditor\";\n\nconst style = {\n    i18nDialogIconButton: css({\n        \".webiny-ui-tooltip\": {\n            display: \"block\"\n        },\n        \".webiny-ui-icon\": {\n            pointerEvents: \"all\",\n            cursor: \"pointer\",\n            zIndex: 1\n        }\n    }),\n    i18nRichEditorDialogIconButton: css({\n        position: \"absolute\",\n        right: 10\n    })\n};\n\nconst prepareII8NValues = ({ locales, values }) => {\n    const output = [];\n    for (let i = 0; i < locales.length; i++) {\n        const item = values.find(item => item.locale === locales[i].id);\n        if (item) {\n            output.push({ ...item });\n        } else {\n            output.push({\n                locale: locales[i].id,\n                value: \"\"\n            });\n        }\n    }\n    return output;\n};\n\ntype I18NInputProps = {\n    label?: string;\n    description?: string;\n    value?: any;\n    onChange?: (value: any) => void;\n    richText?: boolean;\n    children?: (params: { openDialog: () => void }) => React.ReactNode;\n    showTranslateIcon?: boolean;\n    [key: string]: any;\n};\n\nexport const I18NInput = ({\n    richText,\n    value,\n    onChange,\n    children,\n    showTranslateIcon,\n    ...inputProps\n}: I18NInputProps) => {\n    const [values, setValues] = useState(null);\n    const { getLocale, getLocales } = useI18N();\n\n    const openDialog = useCallback(() => {\n        const newValues = prepareII8NValues({\n            locales: getLocales(),\n            values: value && Array.isArray(value.values) ? value.values : []\n        });\n        setValues(newValues);\n    }, []);\n\n    const closeDialog = useCallback(() => {\n        setValues(null);\n    }, []);\n\n    const submitDialog = useCallback(async values => {\n        // Filter out redundant empty values.\n        typeof onChange === \"function\" &&\n            (await onChange({ ...value, values: values.filter(item => !!item.value) }));\n        closeDialog();\n    }, []);\n\n    let inputValue = \"\";\n    if (value && Array.isArray(value.values)) {\n        const foundValue = value.values.find(item => item.locale === getLocale().id);\n        if (foundValue) {\n            inputValue = foundValue.value;\n        }\n    }\n\n    const inputOnChange = inputValue => {\n        const newValue = cloneDeep({ values: [], ...value });\n        const index = value ? value.values.findIndex(item => item.locale === getLocale().id) : -1;\n        if (index >= 0) {\n            newValue.values[index].value = inputValue;\n        } else {\n            newValue.values.push({ locale: getLocale().id, value: inputValue });\n        }\n\n        // Filter out redundant empty values.\n        newValue.values = newValue.values.filter(item => !!item.value);\n        typeof onChange === 'function' &&  onChange(newValue);\n    };\n\n    const translateMenuItem = useMemo(() => {\n        if (showTranslateIcon === false) {\n            return null;\n        }\n\n        return {\n            name: \"i18NInputLocalesOverlay\",\n            menu: {\n                render({ MenuButton }) {\n                    return (\n                        <MenuButton\n                            right\n                            onClick={openDialog}\n                            className={style.i18nRichEditorDialogIconButton}\n                        >\n                            <I18NIcon />\n                        </MenuButton>\n                    );\n                }\n            }\n        };\n    }, []);\n\n    const localesOverlay = (\n        <I18NInputLocalesOverlay\n            richText={richText}\n            values={values}\n            open={!!values}\n            onClose={closeDialog}\n            onSubmit={submitDialog}\n        />\n    );\n\n    if (typeof children === \"function\") {\n        return (\n            <>\n                {children({ openDialog })}\n                {localesOverlay}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {richText ? (\n                <I18NRichTextEditor\n                    {...inputProps}\n                    value={inputValue}\n                    onChange={inputOnChange}\n                    plugins={showTranslateIcon !== false ? [translateMenuItem] : []}\n                />\n            ) : (\n                <Input\n                    {...inputProps}\n                    value={inputValue}\n                    onChange={inputOnChange}\n                    className={classNames(inputProps.className, style.i18nDialogIconButton)}\n                    trailingIcon={\n                        showTranslateIcon !== false && (\n                            <Tooltip content={<span>Set locale values</span>} placement={\"top\"}>\n                                <Icon icon={<I18NIcon />} onClick={openDialog} />\n                            </Tooltip>\n                        )\n                    }\n                />\n            )}\n            {localesOverlay}\n        </>\n    );\n};\n"],"file":"I18NInput.js"}