{"version":3,"sources":["../../../../src/admin/components/RichTextEditor/Menu.tsx"],"names":["React","styled","css","useSlate","classNames","MenuContainer","position","padding","borderBottom","display","alignItems","marginLeft","span","alignContent","height","MenuButton","className","onClick","active","children","onMouseDown","e","preventDefault","buttonStyle","cursor","color","Menu","props","editor","activePlugin","activatePlugin","deactivatePlugin","plugins","filter","pl","menu","map","item","cloneElement","render","key","name","renderDialog","open","plugin","closeDialog"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,IAAMC,aAAa,gBAAGJ,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAChCK,EAAAA,QAAQ,EAAE,UADsB;AAEhCC,EAAAA,OAAO,EAAE,iBAFuB;AAGhCC,EAAAA,YAAY,EAAE,0CAHkB;AAIhCC,EAAAA,OAAO,EAAE,MAJuB;AAKhCC,EAAAA,UAAU,EAAE,QALoB;AAMhC,WAAS;AACLD,IAAAA,OAAO,EAAE;AADJ,GANuB;AAShC,eAAa;AACTE,IAAAA,UAAU,EAAE;AADH,GATmB;AAYhCC,EAAAA,IAAI,EAAE;AACFH,IAAAA,OAAO,EAAE,MADP;AAEFI,IAAAA,YAAY,EAAE,QAFZ;AAGF,YAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ;AAHN;AAZ0B,CAAjB,CAAnB;AA6BA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAM/C;AAAA,MALFC,SAKE,QALFA,SAKE;AAAA,MAJFC,OAIE,QAJFA,OAIE;AAAA,MAHFC,MAGE,QAHFA,MAGE;AAAA,MAFFC,QAEE,QAFFA,QAEE;AAAA,8BADFC,WACE;AAAA,MADFA,WACE,iCADY,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,cAAF,EAAJ;AAAA,GACb;AACF,MAAMC,WAAW,gBAAGrB,GAAG,CAAC;AACpBsB,IAAAA,MAAM,EAAE,SADY;AAEpBC,IAAAA,KAAK,EAAEP,MAAM,GACP,0BADO,GAEP,+CAJc;AAKpB,eAAW;AACPO,MAAAA,KAAK,EAAE;AADA;AALS,GAAD,uBAAvB;AAUA,sBACI;AACI,IAAA,OAAO,EAAER,OADb;AAEI,IAAA,SAAS,EAAEb,UAAU,CAACY,SAAD,EAAYO,WAAZ,CAFzB;AAGI,IAAA,WAAW,EAAEH;AAHjB,KAKKD,QALL,CADJ;AASH,CA1BM;AAmCP,OAAO,IAAMO,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAsB;AACtC,MAAMC,MAAM,GAAGzB,QAAQ,EAAvB;AADsC,MAE9B0B,YAF8B,GAE8BF,KAF9B,CAE9BE,YAF8B;AAAA,MAEhBC,cAFgB,GAE8BH,KAF9B,CAEhBG,cAFgB;AAAA,MAEAC,gBAFA,GAE8BJ,KAF9B,CAEAI,gBAFA;AAAA,MAEkBC,OAFlB,GAE8BL,KAF9B,CAEkBK,OAFlB;AAItC,sBACI,oBAAC,aAAD,QACKA,OAAO,CACHC,MADJ,CACW,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,IAAP;AAAA,GADb,EAEIC,GAFJ,CAEQ,UAAAC,IAAI;AAAA,wBACLrC,KAAK,CAACsC,YAAN,CACID,IAAI,CAACF,IAAL,CAAUI,MAAV,CAAiB;AACbxB,MAAAA,UAAU,EAAVA,UADa;AAEba,MAAAA,MAAM,EAANA,MAFa;AAGbE,MAAAA,cAAc,EAAdA;AAHa,KAAjB,CADJ,EAMI;AACIU,MAAAA,GAAG,EAAEH,IAAI,CAACI;AADd,KANJ,CADK;AAAA,GAFZ,CADL,EAgBKT,OAAO,CACHC,MADJ,CACW,UAAAC,EAAE;AAAA,WAAIA,EAAE,CAACC,IAAH,IAAW,OAAOD,EAAE,CAACC,IAAH,CAAQO,YAAf,KAAgC,UAA/C;AAAA,GADb,EAEIN,GAFJ,CAEQ,UAAAF,EAAE,EAAI;AACP,QAAMP,KAAK,GAAG;AACVC,MAAAA,MAAM,EAANA,MADU;AAEVe,MAAAA,IAAI,EAAEd,YAAY,GAAGA,YAAY,CAACe,MAAb,KAAwBV,EAAE,CAACO,IAA9B,GAAqC,KAF7C;AAGVI,MAAAA,WAAW,EAAEd,gBAHH;AAIVF,MAAAA,YAAY,EAAZA,YAJU;AAKVC,MAAAA,cAAc,EAAdA;AALU,KAAd;AAOA,wBAAO9B,KAAK,CAACsC,YAAN,CAAmBJ,EAAE,CAACC,IAAH,CAAQO,YAAR,CAAqBf,KAArB,CAAnB,EAAgD;AAAEa,MAAAA,GAAG,EAAEN,EAAE,CAACO;AAAV,KAAhD,CAAP;AACH,GAXJ,CAhBL,CADJ;AA+BH,CAnCM","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { useSlate } from \"slate-react\";\nimport classNames from \"classnames\";\nimport { FormComponentProps } from \"@webiny/ui/types\";\n\nconst MenuContainer = styled(\"div\")({\n    position: \"relative\",\n    padding: \"10px 0 20px 1px\",\n    borderBottom: \"2px solid var(--mdc-theme-on-background)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& > *\": {\n        display: \"inline-block\"\n    },\n    \"& > * + *\": {\n        marginLeft: 10\n    },\n    span: {\n        display: \"flex\",\n        alignContent: \"center\",\n        \">svg\": {\n            height: 18\n        }\n    }\n});\n\nexport type MenuButtonProps = {\n    className?: string;\n    onClick?: (e: React.SyntheticEvent) => void;\n    active?: boolean;\n    children: React.ReactNode;\n    onMouseDown?: (e: React.SyntheticEvent) => void;\n};\n\nexport const MenuButton: React.FC<MenuButtonProps> = ({\n    className,\n    onClick,\n    active,\n    children,\n    onMouseDown = e => e.preventDefault()\n}) => {\n    const buttonStyle = css({\n        cursor: \"pointer\",\n        color: active\n            ? \"var(--mdc-theme-primary)\"\n            : \"var(--mdc-theme-text-secondary-on-background)\",\n        \"&:hover\": {\n            color: \"var(--mdc-theme-primary)\"\n        }\n    });\n\n    return (\n        <span\n            onClick={onClick}\n            className={classNames(className, buttonStyle)}\n            onMouseDown={onMouseDown}\n        >\n            {children}\n        </span>\n    );\n};\n\nexport type MenuProps = FormComponentProps & {\n    activePlugin?: { [key: string]: any };\n    activatePlugin: Function;\n    deactivatePlugin: Function;\n    plugins: { [key: string]: any }[];\n};\n\nexport const Menu = (props: MenuProps) => {\n    const editor = useSlate();\n    const { activePlugin, activatePlugin, deactivatePlugin, plugins } = props;\n\n    return (\n        <MenuContainer>\n            {plugins\n                .filter(pl => pl.menu)\n                .map(item =>\n                    React.cloneElement(\n                        item.menu.render({\n                            MenuButton,\n                            editor,\n                            activatePlugin\n                        }),\n                        {\n                            key: item.name\n                        }\n                    )\n                )}\n\n            {plugins\n                .filter(pl => pl.menu && typeof pl.menu.renderDialog === \"function\")\n                .map(pl => {\n                    const props = {\n                        editor,\n                        open: activePlugin ? activePlugin.plugin === pl.name : false,\n                        closeDialog: deactivatePlugin,\n                        activePlugin,\n                        activatePlugin\n                    };\n                    return React.cloneElement(pl.menu.renderDialog(props), { key: pl.name });\n                })}\n        </MenuContainer>\n    );\n};\n"],"file":"Menu.js"}