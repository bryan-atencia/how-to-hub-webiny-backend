import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import * as React from "react";

var defaultRenderElement = function defaultRenderElement(_ref) {
  var attributes = _ref.attributes,
      children = _ref.children;
  return /*#__PURE__*/React.createElement("p", attributes, children);
};

var defaultRenderLeaf = function defaultRenderLeaf(_ref2) {
  var attributes = _ref2.attributes,
      children = _ref2.children;
  return /*#__PURE__*/React.createElement("span", attributes, children);
};

var defaultRenderEditor = function defaultRenderEditor(_ref3) {
  var children = _ref3.children;
  return children;
};

export var pluginsToProps = function pluginsToProps(plugins, args) {
  var editorPlugins = plugins.map(function (pl) {
    return pl.editor;
  }).filter(Boolean);
  var renderElementFns = [];
  var renderLeafFns = [];
  var renderEditorFns = [];
  var otherProps = {};

  var _loop = function _loop(i) {
    var _editorPlugins$i = editorPlugins[i],
        renderEditor = _editorPlugins$i.renderEditor,
        renderElement = _editorPlugins$i.renderElement,
        renderLeaf = _editorPlugins$i.renderLeaf,
        other = _objectWithoutProperties(_editorPlugins$i, ["renderEditor", "renderElement", "renderLeaf"]);

    if (typeof renderEditor === "function") {
      renderEditorFns.push(renderEditor);
    }

    if (typeof renderElement === "function") {
      renderElementFns.push(renderElement);
    }

    if (typeof renderLeaf === "function") {
      renderLeafFns.push(renderLeaf);
    }

    Object.keys(other).forEach(function (key) {
      if (!otherProps[key]) {
        otherProps[key] = [];
      }

      otherProps[key].push(other[key]);
    });
  };

  for (var i = 0; i < editorPlugins.length; i++) {
    _loop(i);
  }

  renderEditorFns.push(defaultRenderEditor);
  renderElementFns.push(defaultRenderElement);
  renderLeafFns.push(defaultRenderLeaf);
  var renderEditorMw = createMiddleware(renderEditorFns);
  return _objectSpread({
    renderEditor: function renderEditor(children) {
      return renderEditorMw(_objectSpread({
        children: children
      }, args));
    },
    renderElement: createMiddleware(renderElementFns),
    renderLeaf: createLeafMiddleware(renderLeafFns)
  }, Object.keys(otherProps).reduce(function (acc, key) {
    var mw = createMiddleware(otherProps[key]);

    acc[key] = function (event) {
      return mw(_objectSpread({
        event: event
      }, args));
    };

    return acc;
  }, {}));
};

var createMiddleware = function createMiddleware(fns) {
  return function (args) {
    var i = 0;

    function next() {
      var fn = fns[i++];

      if (!fn) {
        return;
      }

      return fn(args, next);
    }

    return next();
  };
};

var createLeafMiddleware = function createLeafMiddleware(fns) {
  return function (args) {
    var i = 0;

    function next(_ref4) {
      var children = _ref4.children;
      var fn = fns[i++];

      if (!fn) {
        return children;
      }

      return next({
        children: fn(_objectSpread(_objectSpread({}, args), {}, {
          children: children
        }))
      });
    }

    return next(args);
  };
};
//# sourceMappingURL=pluginsToProps.js.map