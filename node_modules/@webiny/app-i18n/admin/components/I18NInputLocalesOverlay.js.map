{"version":3,"sources":["../../../src/admin/components/I18NInputLocalesOverlay.tsx"],"names":["React","ReactDOM","useHotkeys","Input","Grid","Cell","I18NRichTextEditor","OverlayLayout","Form","useI18N","SplitView","LeftPanel","RightPanel","List","ListItem","Typography","ButtonPrimary","ButtonIcon","SimpleForm","SimpleFormContent","SimpleFormHeader","listItem","ListItemTitle","listStyle","TitleContent","i18n","t","namespace","Content","richText","onClose","values","onSubmit","zIndex","keys","esc","event","stopPropagation","getLocales","useState","activeLocaleIndex","setActiveLocaleIndex","Bind","submit","map","locale","localeIndex","id","code","default","I18NInputLocalesOverlay","props","window","container","document","getElementById","createElement","setAttribute","body","appendChild","open","rest","createPortal","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useHotkeys } from \"react-hotkeyz\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport I18NRichTextEditor from \"./I18NRichTextEditor\";\nimport { OverlayLayout } from \"@webiny/app-admin/components/OverlayLayout\";\nimport { Form } from \"@webiny/form\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nimport { SplitView, LeftPanel, RightPanel } from \"@webiny/app-admin/components/SplitView\";\nimport { List, ListItem } from \"@webiny/ui/List\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ButtonPrimary, ButtonIcon } from \"@webiny/ui/Button\";\nimport { ReactComponent as DoneIcon } from \"./icons/baseline-done-24px.svg\";\n\nimport {\n    SimpleForm,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { listItem, ListItemTitle, listStyle, TitleContent } from \"./I18NInputLocalesOverlayStyled\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"@webiny/app-i18n/components/translations-overlay\");\n\ntype ContentProps = {\n    richText?: boolean;\n    onChange?: Function;\n    onClose?: Function;\n    onSubmit?: (data: { [key: string]: any }, form: Form) => void;\n    images?: boolean;\n    multiple?: boolean;\n    accept?: Array<string>;\n    maxSize?: string;\n    multipleMaxCount?: number;\n    multipleMaxSize?: string;\n    values?: any;\n};\n\nconst Content = ({ richText, onClose, values, onSubmit }: ContentProps) => {\n    useHotkeys({\n        zIndex: 121,\n        keys: {\n            esc: (event: KeyboardEvent) => {\n                event.stopPropagation();\n                onClose();\n            }\n        }\n    });\n    const { getLocales } = useI18N();\n    const [activeLocaleIndex, setActiveLocaleIndex] = React.useState(0);\n\n    /**\n     * In case the i18n dialog is triggered from another dialog, like in the form editor,\n     * OverlayLayout has to be displayed in front of the settings dialog which has a z-index of 20\n     */\n    return (\n        <Form submitOnEnter data={values} onSubmit={onSubmit}>\n            {({ Bind, submit }) => (\n                <OverlayLayout\n                    onExited={onClose}\n                    style={{ zIndex: 21 }}\n                    barRight={\n                        <ButtonPrimary onClick={submit}>\n                            <ButtonIcon icon={<DoneIcon />} />\n                            {t`Save all`}\n                        </ButtonPrimary>\n                    }\n                >\n                    <SplitView>\n                        <LeftPanel span={3}>\n                            <List twoLine className={listStyle}>\n                                {getLocales().map((locale, localeIndex) => (\n                                    <ListItem\n                                        key={locale.id}\n                                        className={listItem}\n                                        onClick={() => setActiveLocaleIndex(localeIndex)}\n                                    >\n                                        <TitleContent>\n                                            <ListItemTitle>{locale.code}</ListItemTitle>\n                                            <Typography use={\"subtitle2\"}>\n                                                {locale.default && t`Default locale.`}\n                                            </Typography>\n                                        </TitleContent>\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </LeftPanel>\n                        <RightPanel span={9}>\n                            <SimpleForm>\n                                <SimpleFormHeader\n                                    title={t`Translated text ({locale})`({\n                                        locale: getLocales()[activeLocaleIndex].code\n                                    })}\n                                />\n                                <SimpleFormContent>\n                                    <Grid>\n                                        <Cell span={12}>\n                                            {richText ? (\n                                                <Bind name={`${activeLocaleIndex}.value`}>\n                                                    <I18NRichTextEditor\n                                                        label={getLocales()[activeLocaleIndex].code}\n                                                    />\n                                                </Bind>\n                                            ) : (\n                                                <Bind name={`${activeLocaleIndex}.value`}>\n                                                    <Input\n                                                        rows={4}\n                                                        label={getLocales()[activeLocaleIndex].code}\n                                                    />\n                                                </Bind>\n                                            )}\n                                        </Cell>\n                                    </Grid>\n                                </SimpleFormContent>\n                            </SimpleForm>\n                        </RightPanel>\n                    </SplitView>\n                </OverlayLayout>\n            )}\n        </Form>\n    );\n};\n\nexport type I18NInputLocalesOverlayProps = ContentProps & {\n    open?: boolean;\n};\n\nclass I18NInputLocalesOverlay extends React.Component<I18NInputLocalesOverlayProps> {\n    container: HTMLElement;\n    constructor(props) {\n        super(props);\n\n        if (!window) {\n            return;\n        }\n\n        this.container = window.document.getElementById(\"i18n-input-locales-container\");\n\n        if (!this.container) {\n            this.container = document.createElement(\"div\");\n            this.container.setAttribute(\"id\", \"i18n-input-locales-container\");\n            const container = this.container;\n            document.body && document.body.appendChild(container);\n        }\n    }\n\n    render() {\n        const { open, ...rest } = this.props;\n        if (!open) {\n            return null;\n        }\n\n        return ReactDOM.createPortal(<Content {...rest} />, this.container);\n    }\n}\n\nexport default I18NInputLocalesOverlay;\n"],"file":"I18NInputLocalesOverlay.js"}