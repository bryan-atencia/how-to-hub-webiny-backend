import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Translated text ({locale})"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Default locale."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Save all"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import * as React from "react";
import ReactDOM from "react-dom";
import { useHotkeys } from "react-hotkeyz";
import { Input } from "@webiny/ui/Input";
import { Grid, Cell } from "@webiny/ui/Grid";
import I18NRichTextEditor from "./I18NRichTextEditor";
import { OverlayLayout } from "@webiny/app-admin/components/OverlayLayout";
import { Form } from "@webiny/form";
import { useI18N } from "@webiny/app-i18n/hooks/useI18N";
import { SplitView, LeftPanel, RightPanel } from "@webiny/app-admin/components/SplitView";
import { List, ListItem } from "@webiny/ui/List";
import { Typography } from "@webiny/ui/Typography";
import { ButtonPrimary, ButtonIcon } from "@webiny/ui/Button";
import { ReactComponent as DoneIcon } from "@svgr/webpack!./icons/baseline-done-24px.svg";
import { SimpleForm, SimpleFormContent, SimpleFormHeader } from "@webiny/app-admin/components/SimpleForm";
import { listItem, ListItemTitle, listStyle, TitleContent } from "./I18NInputLocalesOverlayStyled";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("@webiny/app-i18n/components/translations-overlay");

var Content = function Content(_ref) {
  var richText = _ref.richText,
      onClose = _ref.onClose,
      values = _ref.values,
      onSubmit = _ref.onSubmit;
  useHotkeys({
    zIndex: 121,
    keys: {
      esc: function esc(event) {
        event.stopPropagation();
        onClose();
      }
    }
  });

  var _useI18N = useI18N(),
      getLocales = _useI18N.getLocales;

  var _React$useState = React.useState(0),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      activeLocaleIndex = _React$useState2[0],
      setActiveLocaleIndex = _React$useState2[1];
  /**
   * In case the i18n dialog is triggered from another dialog, like in the form editor,
   * OverlayLayout has to be displayed in front of the settings dialog which has a z-index of 20
   */


  return /*#__PURE__*/React.createElement(Form, {
    submitOnEnter: true,
    data: values,
    onSubmit: onSubmit
  }, function (_ref2) {
    var Bind = _ref2.Bind,
        submit = _ref2.submit;
    return /*#__PURE__*/React.createElement(OverlayLayout, {
      onExited: onClose,
      style: {
        zIndex: 21
      },
      barRight: /*#__PURE__*/React.createElement(ButtonPrimary, {
        onClick: submit
      }, /*#__PURE__*/React.createElement(ButtonIcon, {
        icon: /*#__PURE__*/React.createElement(DoneIcon, null)
      }), t(_templateObject()))
    }, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {
      span: 3
    }, /*#__PURE__*/React.createElement(List, {
      twoLine: true,
      className: listStyle
    }, getLocales().map(function (locale, localeIndex) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: locale.id,
        className: listItem,
        onClick: function onClick() {
          return setActiveLocaleIndex(localeIndex);
        }
      }, /*#__PURE__*/React.createElement(TitleContent, null, /*#__PURE__*/React.createElement(ListItemTitle, null, locale.code), /*#__PURE__*/React.createElement(Typography, {
        use: "subtitle2"
      }, locale.default && t(_templateObject2()))));
    }))), /*#__PURE__*/React.createElement(RightPanel, {
      span: 9
    }, /*#__PURE__*/React.createElement(SimpleForm, null, /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: t(_templateObject3())({
        locale: getLocales()[activeLocaleIndex].code
      })
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, richText ? /*#__PURE__*/React.createElement(Bind, {
      name: "".concat(activeLocaleIndex, ".value")
    }, /*#__PURE__*/React.createElement(I18NRichTextEditor, {
      label: getLocales()[activeLocaleIndex].code
    })) : /*#__PURE__*/React.createElement(Bind, {
      name: "".concat(activeLocaleIndex, ".value")
    }, /*#__PURE__*/React.createElement(Input, {
      rows: 4,
      label: getLocales()[activeLocaleIndex].code
    })))))))));
  });
};

var I18NInputLocalesOverlay = /*#__PURE__*/function (_React$Component) {
  _inherits(I18NInputLocalesOverlay, _React$Component);

  var _super = _createSuper(I18NInputLocalesOverlay);

  function I18NInputLocalesOverlay(props) {
    var _this;

    _classCallCheck(this, I18NInputLocalesOverlay);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "container", void 0);

    if (!window) {
      return _possibleConstructorReturn(_this);
    }

    _this.container = window.document.getElementById("i18n-input-locales-container");

    if (!_this.container) {
      _this.container = document.createElement("div");

      _this.container.setAttribute("id", "i18n-input-locales-container");

      var container = _this.container;
      document.body && document.body.appendChild(container);
    }

    return _this;
  }

  _createClass(I18NInputLocalesOverlay, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          open = _this$props.open,
          rest = _objectWithoutProperties(_this$props, ["open"]);

      if (!open) {
        return null;
      }

      return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(Content, rest), this.container);
    }
  }]);

  return I18NInputLocalesOverlay;
}(React.Component);

export default I18NInputLocalesOverlay;
//# sourceMappingURL=I18NInputLocalesOverlay.js.map