import { useContext } from "react";
import { I18NContext } from "../contexts/I18N";
export function useI18N() {
  var context = useContext(I18NContext);

  if (!context) {
    return null;
  }

  var state = context.state,
      refetchLocales = context.refetchLocales;
  var self = {
    refetchLocales: refetchLocales,
    getDefaultLocale: function getDefaultLocale() {
      return state.locales.find(function (item) {
        return item.default === true;
      });
    },
    getLocale: function getLocale(id) {
      if (id) {
        return self.getLocales().find(function (item) {
          return item.id === id;
        });
      }

      return state.currentLocale;
    },
    getLocales: function getLocales() {
      return state.locales;
    },
    getValue: function getValue(valueObject) {
      if (!valueObject) {
        return "";
      }

      if (Array.isArray(valueObject.values)) {
        var output = valueObject.values.find(function (item) {
          return item.locale === self.getLocale().id;
        });
        return output ? output.value : "";
      }

      return valueObject.value || "";
    },
    state: state
  };
  return self;
}
//# sourceMappingURL=useI18N.js.map