import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import React from "react";
import { registerPlugins, getPlugins } from "@webiny/plugins";

var compose = function compose() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(void 0, arguments));
    };
  }, function (arg) {
    return arg;
  });
}; // TODO: replace with Routes component from `@webiny/app` package after merging


var Routes = function Routes() {
  var plugins = getPlugins("route");
  return /*#__PURE__*/React.createElement(React.Fragment, null, plugins.map(function (pl) {
    return /*#__PURE__*/React.cloneElement(pl.route, {
      key: pl.name,
      exact: true
    });
  }));
};

export function createTemplate(factory) {
  return function (opts) {
    var plugins = factory(opts);
    registerPlugins(plugins);
    getPlugins("webiny-init").forEach(function (plugin) {
      return plugin.init();
    });
    var renderers = getPlugins("app-template-renderer").map(function (pl) {
      return pl.render;
    });
    return function () {
      return compose.apply(void 0, _toConsumableArray(renderers))( /*#__PURE__*/React.createElement(Routes, null));
    };
  };
}
//# sourceMappingURL=createTemplate.js.map