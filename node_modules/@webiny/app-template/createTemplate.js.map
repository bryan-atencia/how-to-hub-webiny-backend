{"version":3,"sources":["../src/createTemplate.tsx"],"names":["React","registerPlugins","getPlugins","compose","funcs","reduce","a","b","arg","Routes","plugins","map","pl","cloneElement","route","key","name","exact","createTemplate","factory","opts","forEach","plugin","init","renderers","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,iBAA5C;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,oCAAIC,KAAJ;AAAIA,IAAAA,KAAJ;AAAA;;AAAA,SACZA,KAAK,CAACC,MAAN,CACI,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAU;AAAA,aAAaD,CAAC,CAACC,CAAC,MAAD,mBAAD,CAAd;AAAA,KAAV;AAAA,GADJ,EAEI,UAAAC,GAAG;AAAA,WAAIA,GAAJ;AAAA,GAFP,CADY;AAAA,CAAhB,C,CAMA;;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,MAAMC,OAAO,GAAGR,UAAU,CAAM,OAAN,CAA1B;AACA,sBAAO,0CAAGQ,OAAO,CAACC,GAAR,CAAY,UAAAC,EAAE;AAAA,wBAAIZ,KAAK,CAACa,YAAN,CAAmBD,EAAE,CAACE,KAAtB,EAA6B;AAAEC,MAAAA,GAAG,EAAEH,EAAE,CAACI,IAAV;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAA7B,CAAJ;AAAA,GAAd,CAAH,CAAP;AACH,CAHD;;AASA,OAAO,SAASC,cAAT,CAA2BC,OAA3B,EAAwD;AAC3D,SAAO,UAACC,IAAD,EAAa;AAChB,QAAMV,OAAO,GAAGS,OAAO,CAACC,IAAD,CAAvB;AACAnB,IAAAA,eAAe,CAACS,OAAD,CAAf;AAEAR,IAAAA,UAAU,CAAmB,aAAnB,CAAV,CAA4CmB,OAA5C,CAAoD,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAA1D;AAEA,QAAMC,SAAS,GAAGtB,UAAU,CAA4B,uBAA5B,CAAV,CAA+DS,GAA/D,CACd,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACa,MAAP;AAAA,KADY,CAAlB;AAGA,WAAO;AAAA,aAAMtB,OAAO,MAAP,4BAAWqB,SAAX,iBAAsB,oBAAC,MAAD,OAAtB,CAAN;AAAA,KAAP;AACH,GAVD;AAWH","sourcesContent":["import React from \"react\";\nimport { registerPlugins, getPlugins } from \"@webiny/plugins\";\nimport { AppTemplateRenderer, AppTemplateRendererPlugin } from \"./types\";\nimport { WebinyInitPlugin } from \"@webiny/app/types\";\n\nconst compose = (...funcs: AppTemplateRenderer[]) =>\n    funcs.reduce(\n        (a, b) => (...args) => a(b(...args)),\n        arg => arg\n    );\n\n// TODO: replace with Routes component from `@webiny/app` package after merging\nconst Routes = () => {\n    const plugins = getPlugins<any>(\"route\");\n    return <>{plugins.map(pl => React.cloneElement(pl.route, { key: pl.name, exact: true }))}</>;\n};\n\nexport interface TemplateFactory<T> {\n    (opts: T): any;\n}\n\nexport function createTemplate<T>(factory: TemplateFactory<T>) {\n    return (opts: T) => {\n        const plugins = factory(opts);\n        registerPlugins(plugins);\n\n        getPlugins<WebinyInitPlugin>(\"webiny-init\").forEach(plugin => plugin.init());\n\n        const renderers = getPlugins<AppTemplateRendererPlugin>(\"app-template-renderer\").map(\n            pl => pl.render\n        );\n        return () => compose(...renderers)(<Routes />);\n    };\n}\n"],"file":"createTemplate.js"}