{"version":3,"sources":["../../../src/admin/components/CookiePolicySettings.tsx"],"names":["React","get","Query","Mutation","Form","Grid","Cell","Switch","Input","ColorPicker","ButtonSecondary","ButtonPrimary","useSnackbar","RadioGroup","Radio","CircularProgress","graphql","showCookiePolicy","getDefaultCookiePolicySettings","validation","SimpleForm","SimpleFormFooter","SimpleFormContent","SimpleFormHeader","positionOptions","id","name","getFormData","settings","defaults","data","palette","content","position","CookiePolicySettings","showSnackbar","query","queryInProgress","loading","mutation","update","mutationInProgress","variables","Bind","form","enabled","submit","onChange","getValue","map","create","messagelink","dismissOnTimeout","cookie","expiryDays"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport get from \"lodash.get\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ColorPicker } from \"@webiny/ui/ColorPicker\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { RadioGroup, Radio } from \"@webiny/ui/Radio\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport graphql from \"./graphql\";\nimport showCookiePolicy from \"./../../utils/showCookiePolicy\";\nimport getDefaultCookiePolicySettings from \"./getDefaultCookiePolicySettings\";\nimport { validation } from \"@webiny/validation\";\n\nimport {\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\n\nconst positionOptions = [\n    { id: \"bottom\", name: \"Bottom\" },\n    { id: \"top\", name: \"Top\" },\n    { id: \"bottom-left\", name: \"Floating left\" },\n    { id: \"bottom-right\", name: \"Floating right\" }\n];\n\nconst getFormData = settings => {\n    const defaults = getDefaultCookiePolicySettings();\n    const data = { ...settings };\n    if (!data.palette) {\n        data.palette = defaults.palette;\n    }\n\n    if (!data.content) {\n        data.content = defaults.content;\n    }\n\n    if (!data.position) {\n        data.position = defaults.position;\n    }\n\n    return data;\n};\n\nconst CookiePolicySettings = () => {\n    const { showSnackbar } = useSnackbar();\n\n    return (\n        <Query query={graphql.query}>\n            {({ data, loading: queryInProgress }) => (\n                <Mutation mutation={graphql.mutation}>\n                    {(update, { loading: mutationInProgress }) => {\n                        const settings = get(data, \"cookiePolicy.getSettings.data\") || {};\n\n                        return (\n                            <Form\n                                data={getFormData(settings)}\n                                onSubmit={async data => {\n                                    await update({\n                                        variables: {\n                                            data\n                                        }\n                                    });\n                                    showSnackbar(\"Settings updated successfully.\");\n                                }}\n                            >\n                                {({ Bind, form, data }) => (\n                                    <SimpleForm>\n                                        {(queryInProgress || mutationInProgress) && (\n                                            <CircularProgress />\n                                        )}\n                                        <SimpleFormHeader title=\"Cookie Policy Settings\">\n                                            <Bind\n                                                name={\"enabled\"}\n                                                afterChange={enabled => {\n                                                    if (!enabled) {\n                                                        form.submit();\n                                                    }\n                                                }}\n                                            >\n                                                <Switch label=\"Enabled\" />\n                                            </Bind>\n                                        </SimpleFormHeader>\n                                        {data.enabled ? (\n                                            <>\n                                                <SimpleFormContent>\n                                                    <Grid>\n                                                        <Cell span={12}>\n                                                            <Grid>\n                                                                <Cell span={3}>\n                                                                    <Bind\n                                                                        name={\n                                                                            \"palette.popup.background\"\n                                                                        }\n                                                                    >\n                                                                        <ColorPicker label=\"Banner background color\" />\n                                                                    </Bind>\n                                                                </Cell>\n                                                                <Cell span={3}>\n                                                                    <Bind\n                                                                        name={\"palette.popup.text\"}\n                                                                    >\n                                                                        <ColorPicker label=\"Banner text color\" />\n                                                                    </Bind>\n                                                                </Cell>\n                                                                <Cell span={3}>\n                                                                    <Bind\n                                                                        name={\n                                                                            \"palette.button.background\"\n                                                                        }\n                                                                    >\n                                                                        <ColorPicker label=\"Button background color\" />\n                                                                    </Bind>\n                                                                </Cell>\n                                                                <Cell span={3}>\n                                                                    <Bind\n                                                                        name={\"palette.button.text\"}\n                                                                    >\n                                                                        <ColorPicker label=\"Button text color\" />\n                                                                    </Bind>\n                                                                </Cell>\n                                                            </Grid>\n                                                        </Cell>\n                                                    </Grid>\n                                                    <Grid>\n                                                        <Cell span={12}>\n                                                            <Grid>\n                                                                <Cell span={12}>\n                                                                    <Bind name={\"position\"}>\n                                                                        <RadioGroup label=\"Position\">\n                                                                            {({\n                                                                                onChange,\n                                                                                getValue\n                                                                            }) => (\n                                                                                <React.Fragment>\n                                                                                    {positionOptions.map(\n                                                                                        ({\n                                                                                            id,\n                                                                                            name\n                                                                                        }) => (\n                                                                                            <Radio\n                                                                                                key={\n                                                                                                    id\n                                                                                                }\n                                                                                                label={\n                                                                                                    name\n                                                                                                }\n                                                                                                value={getValue(\n                                                                                                    id\n                                                                                                )}\n                                                                                                onChange={onChange(\n                                                                                                    id\n                                                                                                )}\n                                                                                            />\n                                                                                        )\n                                                                                    )}\n                                                                                </React.Fragment>\n                                                                            )}\n                                                                        </RadioGroup>\n                                                                    </Bind>\n                                                                </Cell>\n\n                                                                <Cell span={12}>\n                                                                    <Bind name={\"content.message\"}>\n                                                                        <Input\n                                                                            label=\"Message\"\n                                                                            description={\n                                                                                \"Link to your own policy\\n\"\n                                                                            }\n                                                                        />\n                                                                    </Bind>\n                                                                </Cell>\n\n                                                                <Cell span={12}>\n                                                                    <Bind name={\"content.dismiss\"}>\n                                                                        <Input\n                                                                            label=\"Dismiss button text\"\n                                                                            description={\n                                                                                \"Link to your own policy\\n\"\n                                                                            }\n                                                                        />\n                                                                    </Bind>\n                                                                </Cell>\n\n                                                                <Cell span={6}>\n                                                                    <Bind\n                                                                        name={\"content.href\"}\n                                                                        validators={validation.create(\n                                                                            \"url\"\n                                                                        )}\n                                                                    >\n                                                                        <Input label=\"Policy link\" />\n                                                                    </Bind>\n                                                                </Cell>\n\n                                                                <Cell span={6}>\n                                                                    <Bind name={\"content.link\"}>\n                                                                        <Input label=\"Policy link title\" />\n                                                                    </Bind>\n                                                                </Cell>\n                                                            </Grid>\n                                                        </Cell>\n                                                    </Grid>\n                                                </SimpleFormContent>\n                                                <SimpleFormFooter>\n                                                    <ButtonSecondary\n                                                        onClick={() => {\n                                                            showCookiePolicy(\n                                                                {\n                                                                    ...data,\n                                                                    // Official bug fix.\n                                                                    messagelink:\n                                                                        '<span id=\"cookieconsent:desc\" class=\"cc-message\">{{message}} <a aria-label=\"learn more about cookies\" tabindex=\"0\" class=\"cc-link\" href=\"{{href}}\" target=\"_blank\">{{link}}</a></span>',\n                                                                    dismissOnTimeout: 5000,\n                                                                    cookie: {\n                                                                        expiryDays: 0.00000001\n                                                                    }\n                                                                },\n                                                                true\n                                                            );\n                                                        }}\n                                                    >\n                                                        Preview\n                                                    </ButtonSecondary>\n                                                    &nbsp;\n                                                    <ButtonPrimary onClick={form.submit}>\n                                                        Save\n                                                    </ButtonPrimary>\n                                                </SimpleFormFooter>\n                                            </>\n                                        ) : null}\n                                    </SimpleForm>\n                                )}\n                            </Form>\n                        );\n                    }}\n                </Mutation>\n            )}\n        </Query>\n    );\n};\n\nexport default CookiePolicySettings;\n"],"file":"CookiePolicySettings.js"}