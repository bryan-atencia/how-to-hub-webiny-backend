{"version":3,"sources":["../../../src/hooks/useDataList/useDataList.ts"],"names":["useState","useEffect","useRef","useCallback","useQuery","useRouter","prepareLoadListParams","getData","getError","getMeta","useDataList","params","multiSelectedItems","multiSelect","history","location","routerHook","getQueryOptions","variables","client","undefined","queryData","query","prevLoadParamsRef","dataListProps","data","meta","error","loading","init","refresh","refetch","__loadParams","setPerPage","perPage","preparedParams","limit","parseInt","after","before","setNextPage","cursor","setPreviousPage","setSearch","search","setWhere","where","setSorters","sort","items","value","Array","isArray","returnItems","forEach","item","includes","splice","indexOf","push","isSelected","URLSearchParams","get","id","select","set","toString","isMultiSelected","isNoneMultiSelected","length","getMultiSelected","multiSelectAll","isAllMultiSelected","prev","current"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useQuery } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { get, isEqual } from \"lodash\";\nimport { prepareLoadListParams } from \"./utils\";\nimport { getData, getError, getMeta } from \"./functions\";\n\nimport { DocumentNode } from \"graphql\";\nimport { ApolloClient } from \"apollo-client\";\n\nexport type UseDataListParams = {\n    useRouter?: boolean;\n    variables?: ((params: UseDataListParams) => any) | object;\n    client?: ApolloClient<any>;\n    query: DocumentNode;\n    getData?: (data: any) => any;\n    getMeta?: (data: any) => any;\n    getError?: (data: any) => any;\n};\n\nexport type ReturnProps = {\n    __loadParams: any;\n    refresh: (params?: any) => void;\n    data: any[];\n    meta: any;\n    error: any;\n    loading: boolean;\n    isSelected: (item: any) => boolean;\n    select: (item: any) => void;\n    isMultiSelected: (item: any) => boolean;\n    isNoneMultiSelected: () => boolean;\n    isAllMultiSelected: () => boolean;\n    multiSelectAll: (value: boolean) => void;\n    getMultiSelected: () => any[];\n    setSearch: (search: any) => void;\n    setWhere: (where: any) => void;\n    setSorters: (sort: any) => void;\n    setPerPage: (perPage: number) => void;\n    setPreviousPage: (cursor: string) => void;\n    setNextPage: (cursor: string) => void;\n    multiSelect: (items: string | string[], value?: boolean) => void;\n    init: () => void;\n};\n\nconst useDataList = (params: UseDataListParams) => {\n    const [multiSelectedItems, multiSelect] = useState([]);\n\n    let history = null;\n    let location = null;\n    const routerHook = useRouter();\n\n    if (params.useRouter !== false) {\n        history = routerHook.history;\n        location = routerHook.location;\n    }\n\n    const getQueryOptions = useCallback(() => {\n        let variables = params.variables;\n        if (typeof variables === \"function\") {\n            variables = variables(params);\n        }\n\n        return {\n            client: params.client,\n            variables: {\n                ...variables,\n                ...prepareLoadListParams(location)\n            }\n        };\n    }, undefined);\n\n    const queryData = useQuery(params.query, getQueryOptions());\n    const prevLoadParamsRef = useRef({});\n\n    const dataListProps: ReturnProps = {\n        data: get(params, \"getData\", getData)(queryData.data),\n        meta: get(params, \"getMeta\", getMeta)(queryData.data),\n        error: get(params, \"getError\", getError)(queryData.data),\n\n        loading: queryData.loading,\n        init() {\n            this.refresh();\n        },\n        refresh(params = null): void {\n            // Refresh multi select first.\n            multiSelect([]);\n\n            if (!params) {\n                queryData.refetch(dataListProps.__loadParams);\n                return;\n            }\n\n            // if (history) {\n            //     redirectToRouteWithQueryParams(params, { history, location });\n            //     return;\n            // }\n\n            queryData.refetch(params);\n        },\n        setPerPage(perPage: number): void {\n            const preparedParams = {\n                ...dataListProps.__loadParams,\n                limit: parseInt(\"\" + perPage),\n                after: undefined,\n                before: undefined\n            };\n            this.refresh(preparedParams);\n        },\n        setNextPage(cursor: string): void {\n            const preparedParams = {\n                ...dataListProps.__loadParams,\n                after: cursor,\n                before: undefined\n            };\n            this.refresh(preparedParams);\n        },\n        setPreviousPage(cursor: string): void {\n            const preparedParams = {\n                ...dataListProps.__loadParams,\n                after: undefined,\n                before: cursor\n            };\n            this.refresh(preparedParams);\n        },\n        setSearch(search): void {\n            const preparedParams = {\n                ...dataListProps.__loadParams,\n                search,\n                after: undefined,\n                before: undefined\n            };\n            this.refresh(preparedParams);\n        },\n        setWhere(where): void {\n            const preparedParams = {\n                ...dataListProps.__loadParams,\n                where,\n                after: undefined,\n                before: undefined\n            };\n            this.refresh(preparedParams);\n        },\n        setSorters(sort): void {\n            const preparedParams = {\n                ...dataListProps.__loadParams,\n                sort,\n                after: undefined,\n                before: undefined\n            };\n            this.refresh(preparedParams);\n        },\n        multiSelect(items, value): void {\n            if (!Array.isArray(items)) {\n                items = [items];\n            }\n\n            const returnItems = [...multiSelectedItems];\n\n            items.forEach(item => {\n                if (value === undefined) {\n                    returnItems.includes(item)\n                        ? returnItems.splice(returnItems.indexOf(item), 1)\n                        : returnItems.push(item);\n                } else {\n                    if (value === true) {\n                        !returnItems.includes(item) && returnItems.push(item);\n                    } else {\n                        returnItems.includes(item) &&\n                            returnItems.splice(returnItems.indexOf(item), 1);\n                    }\n                }\n            });\n\n            multiSelect(returnItems);\n        },\n        isSelected(item) {\n            const query = new URLSearchParams(location.search);\n            return query.get(\"id\") === item.id;\n        },\n        select(item) {\n            const query = new URLSearchParams(location.search);\n            query.set(\"id\", item.id);\n            history.push({ search: query.toString() });\n        },\n        isMultiSelected(item) {\n            if (!Array.isArray(multiSelectedItems)) {\n                return false;\n            }\n\n            return multiSelectedItems.includes(item);\n        },\n        isNoneMultiSelected() {\n            return multiSelectedItems.length === 0;\n        },\n        getMultiSelected() {\n            return multiSelectedItems;\n        },\n        multiSelectAll(value: boolean): void {\n            const { data } = dataListProps;\n            if (Array.isArray(data)) {\n                dataListProps.multiSelect(data, value);\n            } else {\n                dataListProps.multiSelect([], value);\n            }\n        },\n        isAllMultiSelected(): boolean {\n            const { data } = dataListProps;\n\n            return Array.isArray(data) && multiSelectedItems.length === data.length;\n        },\n\n        __loadParams: prepareLoadListParams(location)\n    };\n\n    useEffect(() => {\n        const params = {\n            prev: prevLoadParamsRef.current,\n            current: dataListProps.__loadParams\n        };\n\n        if (!isEqual(params.prev, params.current)) {\n            dataListProps.init();\n        }\n\n        prevLoadParamsRef.current = params.current;\n    });\n\n    return dataListProps;\n};\n\nexport { useDataList };\n"],"file":"useDataList.js"}