import { DocumentNode } from "graphql";
import { ApolloClient } from "apollo-client";
export declare type UseDataListParams = {
    useRouter?: boolean;
    variables?: ((params: UseDataListParams) => any) | object;
    client?: ApolloClient<any>;
    query: DocumentNode;
    getData?: (data: any) => any;
    getMeta?: (data: any) => any;
    getError?: (data: any) => any;
};
export declare type ReturnProps = {
    __loadParams: any;
    refresh: (params?: any) => void;
    data: any[];
    meta: any;
    error: any;
    loading: boolean;
    isSelected: (item: any) => boolean;
    select: (item: any) => void;
    isMultiSelected: (item: any) => boolean;
    isNoneMultiSelected: () => boolean;
    isAllMultiSelected: () => boolean;
    multiSelectAll: (value: boolean) => void;
    getMultiSelected: () => any[];
    setSearch: (search: any) => void;
    setWhere: (where: any) => void;
    setSorters: (sort: any) => void;
    setPerPage: (perPage: number) => void;
    setPreviousPage: (cursor: string) => void;
    setNextPage: (cursor: string) => void;
    multiSelect: (items: string | string[], value?: boolean) => void;
    init: () => void;
};
declare const useDataList: (params: UseDataListParams) => ReturnProps;
export { useDataList };
