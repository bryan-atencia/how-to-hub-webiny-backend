{"version":3,"sources":["../../../src/contexts/Ui/index.tsx"],"names":["React","UiContext","createContext","UiProvider","ui","setter","setState","state","value","setData","props","children","Component","UiConsumer","cloneElement"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS,GAAGD,KAAK,CAACE,aAAN,CAAoB,EAApB,CAAlB;AAqBP,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KADnB;;AAAA,8DAGc,UAACC,MAAD,EAAsB;AAC5B,aAAO,MAAKC,QAAL,CAAc,UAACC,KAAD,EAAkB;AACnC,eAAO;AAAEH,UAAAA,EAAE,kCAAOG,KAAK,CAACH,EAAb,GAAoBC,MAAM,CAACE,KAAK,CAACH,EAAP,CAA1B;AAAJ,SAAP;AACH,OAFM,CAAP;AAGH,KAPL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BASa;AACL,UAAMI,KAAqB,mCAAQ,KAAKD,KAAL,CAAWH,EAAnB;AAAuBE,QAAAA,QAAQ,EAAE,KAAKG;AAAtC,QAA3B;;AACA,0BAAO,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,KAAK,EAAED;AAA3B,SAAmC,KAAKE,KAAL,CAAWC,QAA9C,CAAP;AACH;AAZL;;AAAA;AAAA,EAAgCX,KAAK,CAACY,SAAtC;AAeA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA,MAAfF,QAAe,QAAfA,QAAe;AACxC,sBAAO,oBAAC,SAAD,CAAW,QAAX,QAAqB,UAAAP,EAAE;AAAA,wBAAIJ,KAAK,CAACc,YAAN,CAAmBH,QAAnB,EAA6B;AAAEP,MAAAA,EAAE,EAAFA;AAAF,KAA7B,CAAJ;AAAA,GAAvB,CAAP;AACH,CAFM","sourcesContent":["import React from \"react\";\n\nexport const UiContext = React.createContext({});\n\ntype Props = {};\n\ntype State = {\n    ui: { [key: string]: any };\n};\n\ninterface UiData {\n    [key: string]: any;\n}\n\ninterface UiDataSetter {\n    (ui: UiData): UiData;\n}\n\nexport interface UiContextValue {\n    setState: (setter: UiDataSetter) => void;\n    [key: string]: any;\n}\n\nexport class UiProvider extends React.Component<Props, State> {\n    state: State = { ui: {} };\n\n    setData = (setter: Function) => {\n        return this.setState((state: State) => {\n            return { ui: { ...state.ui, ...setter(state.ui) } };\n        });\n    };\n\n    render() {\n        const value: UiContextValue = { ...this.state.ui, setState: this.setData };\n        return <UiContext.Provider value={value}>{this.props.children}</UiContext.Provider>;\n    }\n}\n\nexport const UiConsumer = ({ children }) => {\n    return <UiContext.Consumer>{ui => React.cloneElement(children, { ui })}</UiContext.Consumer>;\n};\n"],"file":"index.js"}