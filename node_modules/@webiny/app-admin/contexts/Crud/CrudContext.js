import _regeneratorRuntime from "@babel/runtime/regenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _get from "lodash/get";

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Record saved successfully."]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Something unexpected happened"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Could not save record."]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["One or more fields are not valid!"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Record deleted successfully."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Could not delete record."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useState } from "react";
import { useMutation, useQuery } from "react-apollo";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useDialog } from "@webiny/app-admin/hooks/useDialog";
import { useDataList } from "@webiny/app/hooks/useDataList";
import { useRouter } from "@webiny/react-router";
import { getData, getError } from "./functions";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-admin/contexts");
export var CrudContext = React.createContext({}); // TODO: complete this type.

export var CrudProvider = function CrudProvider(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useDialog = useDialog(),
      showDialog = _useDialog.showDialog;

  var _useRouter = useRouter(),
      location = _useRouter.location,
      history = _useRouter.history;

  var list = useDataList({
    query: _get(props, "list.query", props.list),
    variables: _get(props, "list.variables"),
    client: _get(props, "list.options.client"),
    // "useDataList" will know how to handle no-handler-provided situations.
    getData: _get(props, "list.getData"),
    getMeta: _get(props, "list.getMeta"),
    getError: _get(props, "list.getError")
  });

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      mutationInProgress = _useState2[0],
      setMutationInProgress = _useState2[1];

  var _useState3 = useState({}),
      _useState4 = _slicedToArray(_useState3, 2),
      invalidFields = _useState4[0],
      setInvalidFields = _useState4[1];

  var urlSearchParams = new URLSearchParams(location.search);
  var id = urlSearchParams.get("id");

  var _useMutation = useMutation(props.create.mutation || props.create, props.create.options || null),
      _useMutation2 = _slicedToArray(_useMutation, 1),
      createMutation = _useMutation2[0];

  var _useMutation3 = useMutation(props.update.mutation || props.update, props.update.options || null),
      _useMutation4 = _slicedToArray(_useMutation3, 1),
      updateMutation = _useMutation4[0];

  var _useMutation5 = useMutation(props.delete.mutation || props.delete, props.delete.options || null),
      _useMutation6 = _slicedToArray(_useMutation5, 1),
      deleteMutation = _useMutation6[0];

  var readQuery = useQuery(props.read.query || props.read, _objectSpread(_objectSpread({}, props.read.options || {}), {}, {
    variables: {
      id: id
    },
    skip: !id,
    onCompleted: function onCompleted(data) {
      var error = _get(props, "read.getError", getError)(data);

      if (!error) {
        return;
      }

      var query = new URLSearchParams(location.search);
      query.delete("id");
      history.push({
        search: query.toString()
      });
      showSnackbar(error.message);
    }
  }));
  var actions = {
    delete: function () {
      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {
        var res, error, message, _message, query;

        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return deleteMutation({
                  variables: {
                    id: item.id
                  }
                });

              case 2:
                res = _context.sent;
                error = _get(props, "delete.getError", getError)(res);

                if (error) {
                  message = error.message || t(_templateObject());
                  showSnackbar(message, {
                    title: "Something unexpected happened"
                  });
                } else {
                  _message = _get(props, "delete.snackbar", t(_templateObject2()));

                  if (typeof _message === "function") {
                    _message = _message(item);
                  }

                  showSnackbar(_message);
                }

                if (item.id === id) {
                  query = new URLSearchParams(location.search);
                  query.delete("id");
                  history.push({
                    search: query.toString()
                  });
                }

                list.refresh();

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function _delete(_x) {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }(),
    save: function () {
      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {
        var action, variablesHandler, variables, operation;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                delete formData["id"];
                action = id ? "update" : "create";
                setMutationInProgress(true);
                setInvalidFields(null);
                variablesHandler = _get(props[action], "variables");
                variables = variablesHandler ? variablesHandler(formData) : {
                  data: formData
                };
                operation = action === "create" ? createMutation({
                  variables: variables
                }) : updateMutation({
                  variables: _objectSpread({
                    id: id
                  }, variables)
                });
                return _context2.abrupt("return", operation.then(function (response) {
                  var data = _get(props[action], "getData", getData)(response.data);

                  var error = _get(props[action], "getError", getError)(response.data);

                  if (error) {
                    if (error.code === "VALIDATION_FAILED_INVALID_FIELDS") {
                      showSnackbar(t(_templateObject3()));
                      setInvalidFields(error.data.invalidFields);
                    } else {
                      var _message2 = error.message || t(_templateObject4());

                      showDialog(_message2, {
                        title: t(_templateObject5())
                      });
                    }

                    setMutationInProgress(false);
                    return;
                  }

                  var message = _get(props[action], "snackbar", t(_templateObject6()));

                  if (typeof message === "function") {
                    message = message(data);
                  }

                  showSnackbar(message);
                  var query = new URLSearchParams(location.search);
                  query.set("id", data.id);
                  history.push({
                    search: query.toString()
                  });
                  !id && list.refresh();
                  setMutationInProgress(false);
                }));

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function save(_x2) {
        return _save.apply(this, arguments);
      }

      return save;
    }(),
    resetForm: function resetForm() {
      var query = new URLSearchParams(location.search);
      query.delete("id");
      history.push({
        search: query.toString()
      });
    }
  };
  var form = {
    data: props.read.getData ? props.read.getData(readQuery.data) : getData(readQuery.data),
    error: props.read.getError ? props.read.getError(readQuery.data) : getError(readQuery.data),
    onSubmit: actions.save,
    loading: mutationInProgress || readQuery.loading,
    id: id,
    invalidFields: invalidFields
  };

  if (!form.data) {
    form.data = {};
  }

  return /*#__PURE__*/React.createElement(CrudContext.Provider, {
    value: {
      form: form,
      list: list,
      actions: actions
    }
  }, /*#__PURE__*/React.isValidElement(children) ? children : children({
    form: form,
    list: list,
    actions: actions
  }));
};
//# sourceMappingURL=CrudContext.js.map