{"version":3,"sources":["../../../src/contexts/Theme/index.tsx"],"names":["React","store","observe","addPlugin","LOCAL_STORAGE_KEY","ThemeContext","createContext","ThemeProvider","dark","set","remove","get","theme","setState","Boolean","prevProps","prevState","state","window","document","body","classList","add","enableDarkMode","disableDarkMode","toggleDarkMode","props","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACAD,KAAK,CAACE,SAAN,CAAgBD,OAAhB;AAEA,IAAME,iBAAiB,GAAG,kBAA1B;AASA,OAAO,IAAMC,YAAY,GAAGL,KAAK,CAACM,aAAN,CAAoB,IAApB,CAArB;AAQP,WAAaC,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DACY;AACJC,MAAAA,IAAI,EAAE;AADF,KADZ;;AAAA,qEAuBqB,YAAM;AACnBP,MAAAA,KAAK,CAACQ,GAAN,CAAUL,iBAAV,EAA6B,CAA7B;AACH,KAzBL;;AAAA,sEA2BsB,YAAM;AACpBH,MAAAA,KAAK,CAACS,MAAN,CAAaN,iBAAb;AACH,KA7BL;;AAAA,qEA+BqB,YAAM;AACnB,UAAIH,KAAK,CAACU,GAAN,CAAUP,iBAAV,CAAJ,EAAkC;AAC9BH,QAAAA,KAAK,CAACS,MAAN,CAAaN,iBAAb;AACH,OAFD,MAEO;AACHH,QAAAA,KAAK,CAACQ,GAAN,CAAUL,iBAAV,EAA6B,CAA7B;AACH;AACJ,KArCL;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAKwB;AAAA;;AAChBH,MAAAA,KAAK,CAACC,OAAN,CAAcE,iBAAd,EAAiC,UAACQ,KAAD,EAAoB;AACjD,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEM,OAAO,CAACF,KAAD;AAAf,SAAd;AACH,OAFD;AAGH;AATL;AAAA;AAAA,uCAWuBG,SAXvB,EAWsDC,SAXtD,EAWqF;AAC7E,UAAI,KAAKC,KAAL,CAAWT,IAAX,KAAoBQ,SAAS,CAACR,IAAlC,EAAwC;AACpC;AACH;;AAED,UAAI,CAAC,KAAKS,KAAL,CAAWT,IAAhB,EAAsB;AAClBU,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+BX,MAA/B,CAAsC,YAAtC;AACH,OAFD,MAEO;AACHQ,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+BC,GAA/B,CAAmC,YAAnC;AACH;AACJ;AArBL;AAAA;AAAA,6BAuCa;AACL,UAAMV,KAAwB,GAAG;AAC7BW,QAAAA,cAAc,EAAE,KAAKA,cADQ;AAE7BC,QAAAA,eAAe,EAAE,KAAKA,eAFO;AAG7BC,QAAAA,cAAc,EAAE,KAAKA,cAHQ;AAI7Bb,QAAAA,KAAK,EAAE;AAAEJ,UAAAA,IAAI,EAAE,KAAKS,KAAL,CAAWT;AAAnB;AAJsB,OAAjC;AAMA,0BAAO,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAEI;AAA9B,SAAsC,KAAKc,KAAL,CAAWC,QAAjD,CAAP;AACH;AA/CL;;AAAA;AAAA,EAAmC3B,KAAK,CAAC4B,SAAzC","sourcesContent":["import React from \"react\";\nimport store from \"store\";\nimport observe from \"store/plugins/observe\";\nstore.addPlugin(observe);\n\nconst LOCAL_STORAGE_KEY = \"webiny_dark_mode\";\n\nexport interface ThemeContextValue {\n    enableDarkMode: () => void;\n    disableDarkMode: () => void;\n    toggleDarkMode: () => void;\n    theme: { dark: boolean };\n}\n\nexport const ThemeContext = React.createContext(null);\n\ntype ThemeProviderProps = {};\n\ntype ThemeProviderState = {\n    dark: boolean;\n};\n\nexport class ThemeProvider extends React.Component<ThemeProviderProps, ThemeProviderState> {\n    state = {\n        dark: false\n    };\n\n    componentDidMount() {\n        store.observe(LOCAL_STORAGE_KEY, (theme: boolean) => {\n            this.setState({ dark: Boolean(theme) });\n        });\n    }\n\n    componentDidUpdate(prevProps: ThemeProviderProps, prevState: ThemeProviderState) {\n        if (this.state.dark === prevState.dark) {\n            return;\n        }\n\n        if (!this.state.dark) {\n            window.document.body.classList.remove(\"dark-theme\");\n        } else {\n            window.document.body.classList.add(\"dark-theme\");\n        }\n    }\n\n    enableDarkMode = () => {\n        store.set(LOCAL_STORAGE_KEY, 1);\n    };\n\n    disableDarkMode = () => {\n        store.remove(LOCAL_STORAGE_KEY);\n    };\n\n    toggleDarkMode = () => {\n        if (store.get(LOCAL_STORAGE_KEY)) {\n            store.remove(LOCAL_STORAGE_KEY);\n        } else {\n            store.set(LOCAL_STORAGE_KEY, 1);\n        }\n    };\n\n    render() {\n        const theme: ThemeContextValue = {\n            enableDarkMode: this.enableDarkMode,\n            disableDarkMode: this.disableDarkMode,\n            toggleDarkMode: this.toggleDarkMode,\n            theme: { dark: this.state.dark }\n        };\n        return <ThemeContext.Provider value={theme}>{this.props.children}</ThemeContext.Provider>;\n    }\n}\n"],"file":"index.js"}