{"version":3,"sources":["../../../src/components/FileManager/File.tsx"],"names":["React","css","Ripple","LazyLoad","COMPONENT_WIDTH","COMPONENT_HEIGHT","styles","display","float","position","zIndex","margin","cursor","width","maxWidth","border","borderRadius","height","overflow","color","top","left","opacity","right","transition","textAlign","backgroundColor","padding","whiteSpace","textOverflow","fontSize","memo","File","props","file","selected","onSelect","children","showFileDetails","name","prev","next"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { ReactComponent as Checked } from \"./icons/round-check_box-24px.svg\";\nimport { ReactComponent as InfoIcon } from \"./icons/round-info-24px.svg\";\nimport { Ripple } from \"@webiny/ui/Ripple\";\nimport LazyLoad from \"react-lazy-load\";\n\nconst COMPONENT_WIDTH = 200;\nconst COMPONENT_HEIGHT = 200;\n\nconst styles = css({\n    display: \"inline-block\",\n    float: \"left\",\n    position: \"relative\",\n    zIndex: 1,\n    margin: 10,\n    cursor: \"pointer\",\n    width: \"100%\",\n    maxWidth: COMPONENT_WIDTH,\n    border: \"1px solid var(--mdc-theme-on-background)\",\n    borderRadius: 2,\n    \"> .body\": {\n        width: COMPONENT_WIDTH,\n        height: COMPONENT_HEIGHT,\n        overflow: \"hidden\",\n        \"--icon-color\": \"var(--mdc-theme-on-background)\",\n        \".checkedIcon\": {\n            color: \"var(--mdc-theme-secondary)\",\n            position: \"absolute\",\n            top: 4,\n            left: 4,\n            zIndex: 11\n        },\n        \".infoIcon\": {\n            opacity: 0,\n            color: \"var(--icon-color)\",\n            position: \"absolute\",\n            top: 4,\n            right: 4,\n            zIndex: 10,\n            transition: \"all 150ms ease-in\"\n        },\n        \".filePreview\": {\n            textAlign: \"center\",\n            position: \"relative\",\n            backgroundColor: \"#fff\",\n            width: \"100%\",\n            height: \"100%\",\n            \".clickableArea\": {\n                position: \"absolute\",\n                top: 30,\n                left: 0,\n                width: \"100%\",\n                height: 170,\n                zIndex: 2\n            }\n        },\n        \"&:hover .infoIcon\": {\n            opacity: 1,\n            \"--icon-color\": \"var(--mdc-theme-secondary)\"\n        }\n    },\n    \"> .label\": {\n        padding: \"15px 10px\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        fontSize: \"0.8rem\",\n        color: \"var(--mdc-theme-on-surface)\",\n        backgroundColor: \"var(--mdc-theme-on-background)\"\n    }\n});\n\ntype Props = {\n    file: { [key: string]: any };\n    selected: boolean;\n    uploadFile: Function;\n    onSelect: (event?: React.MouseEvent) => void;\n    onClick: (event?: React.MouseEvent) => void;\n    options?: Array<{ label: string; onClick: (file: Object) => void }>;\n    children: React.ReactNode;\n    showFileDetails: (event?: React.MouseEvent) => void;\n};\n\nexport default React.memo(\n    function File(props: Props) {\n        const { file, selected, onSelect, children, showFileDetails } = props;\n\n        return (\n            <div className={styles}>\n                <div className={\"body\"}>\n                    <div className={\"checkedIcon\"} onClick={onSelect}>\n                        {selected ? <Checked /> : null}\n                    </div>\n                    <div className={\"infoIcon\"}>\n                        <InfoIcon onClick={showFileDetails} />\n                    </div>\n                    <LazyLoad height={200} offsetVertical={300}>\n                        <Ripple>\n                            <div className={\"filePreview\"}>\n                                <div className=\"clickableArea\" onClick={onSelect} />\n                                {children}\n                            </div>\n                        </Ripple>\n                    </LazyLoad>\n                </div>\n                <div className={\"label\"} onClick={onSelect}>\n                    {file.name}\n                </div>\n            </div>\n        );\n    },\n    (prev, next) => {\n        if (prev.selected !== next.selected) {\n            return false;\n        }\n\n        if (prev.file.name !== next.file.name) {\n            return false;\n        }\n\n        return true;\n    }\n);\n"],"file":"File.js"}