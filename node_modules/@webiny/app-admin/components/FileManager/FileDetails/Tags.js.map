{"version":3,"sources":["../../../../src/components/FileManager/FileDetails/Tags.tsx"],"names":["React","useState","css","useApolloClient","Chips","Chip","Tags","TagsComponent","UPDATE_FILE","LIST_FILES","LIST_TAGS","useFileManager","Hotkeys","useSnackbar","style","editTag","cursor","display","file","client","editing","setEdit","saving","setSaving","initialTags","Array","isArray","tags","currentTags","setCurrentTags","showSnackbar","queryParams","esc","mutate","mutation","variables","id","data","refetchQueries","query","update","cache","updated","newFileData","readQuery","files","listFiles","forEach","item","key","writeQuery","then","map","tag","toLowerCase","length","index"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { css } from \"emotion\";\nimport { useApolloClient } from \"react-apollo\";\nimport { get, cloneDeep } from \"lodash\";\nimport { Chips, Chip } from \"@webiny/ui/Chips\";\nimport { Tags as TagsComponent } from \"@webiny/ui/Tags\";\nimport { UPDATE_FILE, LIST_FILES, LIST_TAGS } from \"./../graphql\";\nimport { ReactComponent as EditIcon } from \"./../icons/round-edit-24px.svg\";\nimport { useFileManager } from \"./../FileManagerContext\";\nimport { Hotkeys } from \"react-hotkeyz\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\n\nconst style = {\n    editTag: css({\n        cursor: \"pointer\",\n        display: \"inline-block\"\n    })\n};\n\nfunction Tags({ file }) {\n    const client = useApolloClient();\n\n    const [editing, setEdit] = useState(false);\n    const [saving, setSaving] = useState(false);\n    const initialTags = Array.isArray(file.tags) ? [...file.tags] : [];\n    const [currentTags, setCurrentTags] = useState(initialTags);\n    const { showSnackbar } = useSnackbar();\n\n    const { queryParams } = useFileManager();\n\n    if (editing) {\n        return (\n            <>\n                <Hotkeys\n                    disabled={!editing}\n                    zIndex={60}\n                    keys={{\n                        esc: () => {\n                            setSaving(true);\n                            client\n                                .mutate({\n                                    mutation: UPDATE_FILE,\n                                    variables: {\n                                        id: file.id,\n                                        data: { tags: currentTags }\n                                    },\n                                    refetchQueries: [{ query: LIST_TAGS }],\n                                    update: (cache, updated) => {\n                                        const newFileData = get(\n                                            updated,\n                                            \"data.files.updateFile.data\"\n                                        );\n\n                                        // 1. Update files list cache\n                                        let data: any = cloneDeep(\n                                            cache.readQuery({\n                                                query: LIST_FILES,\n                                                variables: queryParams\n                                            })\n                                        );\n\n                                        data.files.listFiles.data.forEach(item => {\n                                            if (item.key === newFileData.key) {\n                                                item.tags = newFileData.tags;\n                                            }\n                                        });\n\n                                        cache.writeQuery({\n                                            query: LIST_FILES,\n                                            variables: queryParams,\n                                            data\n                                        });\n                                    }\n                                })\n                                .then(() => {\n                                    setSaving(false);\n                                    setEdit(false);\n                                    showSnackbar(\"Tags successfully updated.\");\n                                });\n                        }\n                    }}\n                />\n                <TagsComponent\n                    disabled={saving}\n                    value={currentTags}\n                    onChange={tags => setCurrentTags(tags.map(tag => tag.toLowerCase()))}\n                    autoFocus\n                    placeholder={\"Enter a tag and press enter\"}\n                />\n            </>\n        );\n    }\n\n    return (\n        <>\n            {initialTags.length > 0 ? (\n                <Chips>\n                    {initialTags.map((tag, index) => (\n                        <Chip key={tag + index} label={tag} />\n                    ))}\n                </Chips>\n            ) : (\n                <div>No tags assigned.</div>\n            )}\n            <div className={style.editTag}>\n                <a onClick={() => setEdit(true)}>\n                    <EditIcon /> Edit\n                </a>\n            </div>\n        </>\n    );\n}\n\nexport default Tags;\n"],"file":"Tags.js"}