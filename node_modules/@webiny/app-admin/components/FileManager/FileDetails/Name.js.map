{"version":3,"sources":["../../../../src/components/FileManager/FileDetails/Name.tsx"],"names":["React","useState","useApolloClient","css","ButtonSecondary","ButtonPrimary","Input","Form","UPDATE_FILE","LIST_FILES","useSnackbar","useFileManager","style","editTag","cursor","display","Name","file","editing","setEdit","name","showSnackbar","client","queryParams","mutate","mutation","variables","id","data","update","cache","updated","newFileData","readQuery","query","files","listFiles","forEach","item","src","writeQuery","Bind","submit","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { get, cloneDeep } from \"lodash\";\nimport { useApolloClient } from \"react-apollo\";\nimport { css } from \"emotion\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Form } from \"@webiny/form\";\nimport { ReactComponent as EditIcon } from \"./../icons/round-edit-24px.svg\";\nimport { UPDATE_FILE, LIST_FILES } from \"./../graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useFileManager } from \"./../FileManagerContext\";\n\nconst style = {\n    editTag: css({\n        cursor: \"pointer\",\n        display: \"inline-block\"\n    })\n};\n\nfunction Name({ file }) {\n    const [editing, setEdit] = useState(false);\n    const name = file.name || \"\";\n\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    const { queryParams } = useFileManager();\n\n    if (editing) {\n        return (\n            <Form\n                data={{\n                    name\n                }}\n                onSubmit={async ({ name }) => {\n                    setEdit(false);\n                    await client.mutate({\n                        mutation: UPDATE_FILE,\n                        variables: {\n                            id: file.id,\n                            data: { name }\n                        },\n                        update: (cache, updated) => {\n                            const newFileData = get(updated, \"data.files.updateFile.data\");\n                            const data: any = cloneDeep(\n                                cache.readQuery({\n                                    query: LIST_FILES,\n                                    variables: queryParams\n                                })\n                            );\n\n                            data.files.listFiles.data.forEach(item => {\n                                if (item.src === newFileData.src) {\n                                    item.name = newFileData.name;\n                                }\n                            });\n\n                            cache.writeQuery({\n                                query: LIST_FILES,\n                                variables: queryParams,\n                                data: data\n                            });\n                        }\n                    });\n\n                    showSnackbar(\"Name successfully updated.\");\n                }}\n            >\n                {({ Bind, submit }) => (\n                    <>\n                        <Bind name={\"name\"}>\n                            <Input autoFocus placeholder={\"Enter name\"} />\n                        </Bind>\n                        <div style={{ marginTop: \"10px\" }}>\n                            <ButtonPrimary small onClick={submit}>\n                                Submit\n                            </ButtonPrimary>{\" \"}\n                            <ButtonSecondary small onClick={() => setEdit(false)}>\n                                Cancel\n                            </ButtonSecondary>\n                        </div>\n                    </>\n                )}\n            </Form>\n        );\n    }\n\n    return (\n        <>\n            <div className={style.editTag}>\n                {name}\n                <br />\n                <a onClick={() => setEdit(true)}>\n                    <EditIcon /> Edit\n                </a>\n            </div>\n        </>\n    );\n}\n\nexport default Name;\n"],"file":"Name.js"}