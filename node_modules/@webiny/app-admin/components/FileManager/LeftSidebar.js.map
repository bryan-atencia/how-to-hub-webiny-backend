{"version":3,"sources":["../../../src/components/FileManager/LeftSidebar.tsx"],"names":["React","Query","LIST_TAGS","css","Icon","styled","style","leftDrawer","float","display","width","height","backgroundColor","padding","noTagged","paddingTop","textAlign","color","TagList","flexDirection","Tag","alignItems","cursor","paddingLeft","svg","marginRight","LeftSidebar","toggleTag","tags","queryParams","activeTags","Array","isArray","data","list","length","map","item","index","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAGA,IAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,eAAEJ,GAAG,CAAC;AACZK,IAAAA,KAAK,EAAE,MADK;AAEZC,IAAAA,OAAO,EAAE,cAFG;AAGZC,IAAAA,KAAK,EAAE,GAHK;AAIZC,IAAAA,MAAM,EAAE,MAJI;AAKZC,IAAAA,eAAe,EAAE,0BALL;AAMZC,IAAAA,OAAO,EAAE;AANG,GAAD,sBADL;AASVC,EAAAA,QAAQ,eAAEX,GAAG,CAAC;AACVY,IAAAA,UAAU,EAAE,GADF;AAEVC,IAAAA,SAAS,EAAE,QAFD;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAAD;AATH,CAAd;AAgBA,IAAMC,OAAO,gBAAGb,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AAC1BI,EAAAA,OAAO,EAAE,MADiB;AAE1BU,EAAAA,aAAa,EAAE;AAFW,CAAjB,CAAb;AAKA,IAAMC,GAAG,gBAAGf,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AACtBI,EAAAA,OAAO,EAAE,MADa;AAEtBU,EAAAA,aAAa,EAAE,KAFO;AAGtBR,EAAAA,MAAM,EAAE,EAHc;AAItBU,EAAAA,UAAU,EAAE,QAJU;AAKtBC,EAAAA,MAAM,EAAE,SALc;AAMtBC,EAAAA,WAAW,EAAE,EANS;AAOtBN,EAAAA,KAAK,EAAE,6BAPe;AAQtBO,EAAAA,GAAG,EAAE;AACDP,IAAAA,KAAK,EAAE,6BADN;AAEDQ,IAAAA,WAAW,EAAE;AAFZ,GARiB;AAYtB,aAAW;AACPb,IAAAA,eAAe,EAAE;AADV,GAZW;AAetB,cAAY;AACRY,IAAAA,GAAG,EAAE;AACDP,MAAAA,KAAK,EAAE;AADN;AADG;AAfU,CAAjB,CAAT;;AAsBA,SAASS,WAAT,OAA2D;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAVC,IAAU,QAAzBC,WAAyB,CAAVD,IAAU;AACvD,MAAME,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcJ,IAAd,IAAsBA,IAAtB,GAA6B,EAAhD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEtB,KAAK,CAACC;AAAtB,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEL;AAAd,KACK,iBAAc;AAAA,QAAX+B,IAAW,SAAXA,IAAW;AACX,QAAMC,IAAI,GAAG,KAAID,IAAJ,EAAU,gBAAV,KAA+B,EAA5C;;AAEA,QAAI,CAACC,IAAI,CAACC,MAAV,EAAkB;AACd,0BACI;AAAK,QAAA,SAAS,EAAE7B,KAAK,CAACQ;AAAtB,kEADJ;AAKH;;AAED,wBACI,oBAAC,OAAD,QACKoB,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;AAAA,0BACN,oBAAC,GAAD;AACI,QAAA,SAAS,EAAER,UAAU,CAACS,QAAX,CAAoBF,IAApB,KAA6B,QAD5C;AAEI,QAAA,GAAG,EAAEA,IAAI,GAAGC,KAFhB;AAGI,QAAA,OAAO,EAAE;AAAA,iBAAMX,SAAS,CAACU,IAAD,CAAf;AAAA;AAHb,sBAKI,oBAAC,IAAD;AAAM,QAAA,IAAI,eAAE,oBAAC,OAAD;AAAZ,QALJ,OAKiCA,IALjC,CADM;AAAA,KAAT,CADL,CADJ;AAaH,GAzBL,CADJ,CADJ;AA+BH;;AAED,eAAeX,WAAf","sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { LIST_TAGS } from \"./graphql\";\nimport { get } from \"lodash\";\nimport { css } from \"emotion\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport styled from \"@emotion/styled\";\nimport { ReactComponent as TagIcon } from \"./icons/round-label-24px.svg\";\n\nconst style = {\n    leftDrawer: css({\n        float: \"left\",\n        display: \"inline-block\",\n        width: 250,\n        height: \"100%\",\n        backgroundColor: \"var(--mdc-theme-surface)\",\n        padding: 10\n    }),\n    noTagged: css({\n        paddingTop: 100,\n        textAlign: \"center\",\n        color: \"var(--mdc-theme-on-surface)\"\n    })\n};\n\nconst TagList = styled(\"div\")({\n    display: \"flex\",\n    flexDirection: \"column\"\n});\n\nconst Tag = styled(\"div\")({\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: 40,\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    paddingLeft: 15,\n    color: \"var(--mdc-theme-on-surface)\",\n    svg: {\n        color: \"var(--mdc-theme-on-surface)\",\n        marginRight: 10\n    },\n    \"&:hover\": {\n        backgroundColor: \"var(--mdc-theme-background)\"\n    },\n    \"&.active\": {\n        svg: {\n            color: \"var(--mdc-theme-secondary)\"\n        }\n    }\n});\n\nfunction LeftSidebar({ toggleTag, queryParams: { tags } }) {\n    const activeTags = Array.isArray(tags) ? tags : [];\n\n    return (\n        <div className={style.leftDrawer}>\n            <Query query={LIST_TAGS}>\n                {({ data }) => {\n                    const list = get(data, \"files.listTags\") || [];\n\n                    if (!list.length) {\n                        return (\n                            <div className={style.noTagged}>\n                                Once you tag an image, the tag will be displayed here.\n                            </div>\n                        );\n                    }\n\n                    return (\n                        <TagList>\n                            {list.map((item, index) => (\n                                <Tag\n                                    className={activeTags.includes(item) && \"active\"}\n                                    key={item + index}\n                                    onClick={() => toggleTag(item)}\n                                >\n                                    <Icon icon={<TagIcon />} /> {item}\n                                </Tag>\n                            ))}\n                        </TagList>\n                    );\n                }}\n            </Query>\n        </div>\n    );\n}\n\nexport default LeftSidebar;\n"],"file":"LeftSidebar.js"}