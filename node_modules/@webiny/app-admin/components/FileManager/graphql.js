import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n    query getSettings {\n        files {\n            getSettings {\n                data {\n                    uploadMinFileSize\n                    uploadMaxFileSize\n                }\n            }\n        }\n    }\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n    mutation deleteFile($id: ID!) {\n        files {\n            deleteFile(id: $id) {\n                data\n            }\n        }\n    }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n    mutation UpdateFile($id: ID!, $data: FileInput!) {\n        files {\n            updateFile(id: $id, data: $data) {\n                data {\n                    id\n                    src\n                    name\n                    tags\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n    mutation CreateFile($data: FileInput!) {\n        files {\n            createFile(data: $data) {\n                error {\n                    message\n                }\n                data ", "\n            }\n        }\n    }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    query ListTags {\n        files {\n            listTags\n        }\n    }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n     query ListFiles($types: [String], $tags: [String], $limit: Int, $search: String, $after: String, $before: String) {\n        files {\n            listFiles(types: $types, limit: $limit, search: $search, tags: $tags, after: $after, before: $before) {\n                data ", "\n                meta {\n                    cursors {\n                        next\n                        previous\n                    }\n                    hasNextPage\n                    hasPreviousPage\n                    totalCount\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import gql from "graphql-tag";
var fileFields =
/* GraphQL */
"\n    {\n        __typename\n        id\n        name\n        key\n        src\n        size\n        type\n        tags\n        createdOn\n    }\n";
export var LIST_FILES = gql(_templateObject(), fileFields);
export var LIST_TAGS = gql(_templateObject2());
export var CREATE_FILE = gql(_templateObject3(), fileFields);
export var UPDATE_FILE = gql(_templateObject4());
export var DELETE_FILE = gql(_templateObject5());
export var GET_FILE_SETTINGS = gql(_templateObject6());
//# sourceMappingURL=graphql.js.map