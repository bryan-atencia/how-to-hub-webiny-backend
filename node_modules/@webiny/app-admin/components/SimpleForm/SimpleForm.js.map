{"version":3,"sources":["../../../src/components/SimpleForm/SimpleForm.tsx"],"names":["React","Cell","Grid","Typography","Elevation","styled","css","Icon","SimpleFormContainer","position","margin","header","borderBottom","color","title","display","alignItems","actions","justifyContent","icon","marginRight","footer","borderTop","textAlign","padding","SimpleForm","props","noElevation","children","SimpleFormHeader","SimpleFormFooter","SimpleFormContent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { Icon } from \"@webiny/ui/Icon\";\n\nconst SimpleFormContainer = styled(\"div\")({\n    position: \"relative\",\n    margin: \"17px 50px\"\n});\n\nconst header = css({\n    borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n    color: \"var(--mdc-theme-text-primary-on-background)\"\n});\n\nconst title = css({\n    display: \"flex\",\n    alignItems: \"center\"\n});\n\nconst actions = css({\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n});\n\nconst icon = css({\n    marginRight: 15,\n    color: \"var(--mdc-theme-text-primary-on-background)\"\n});\n\nconst footer = css({\n    borderTop: \"1px solid var(--mdc-theme-on-background)\",\n    color: \"var(--mdc-theme-text-primary-on-background)\",\n    textAlign: \"right\",\n    \"&.mdc-layout-grid\": {\n        padding: 25 // \"25px 50px\"\n    }\n});\n\nexport const SimpleForm = (props: {\n    \"data-testid\"?: string;\n    children: React.ReactNode;\n    noElevation?: boolean;\n}) => {\n    return (\n        <SimpleFormContainer className={\"webiny-data-list\"} data-testid={props[\"data-testid\"]}>\n            {props.noElevation ? props.children : <Elevation z={1}>{props.children}</Elevation>}\n        </SimpleFormContainer>\n    );\n};\n\nexport const SimpleFormHeader = (props: {\n    title: React.ReactNode;\n    icon?: React.ReactElement<any>;\n    children?: React.ReactNode;\n}) => {\n    return (\n        <Grid className={header}>\n            <Cell span={6} className={title}>\n                <React.Fragment>\n                    {props.icon && <Icon className={icon} icon={props.icon} />}\n                    <Typography use=\"headline5\">{props.title}</Typography>\n                </React.Fragment>\n            </Cell>\n            <Cell span={6} className={actions}>\n                {props.children}\n            </Cell>\n        </Grid>\n    );\n};\n\nexport const SimpleFormFooter = (props: { children: React.ReactNode }) => {\n    return (\n        <Grid className={footer}>\n            <Cell span={12}>{props.children}</Cell>\n        </Grid>\n    );\n};\n\nexport const SimpleFormContent = (props: { children: any }): any => {\n    return props.children;\n};\n"],"file":"SimpleForm.js"}