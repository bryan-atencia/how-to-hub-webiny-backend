{"version":3,"sources":["../../../src/components/Install/useInstaller.ts"],"names":["useCallback","useReducer","useEffect","Graph","alg","useApolloClient","getPlugins","useInstaller","prev","next","loading","installers","installerIndex","showLogin","setState","client","validateGraph","graph","isAcyclic","cycles","findCycles","msg","forEach","cycle","index","fromAToB","join","fromBToA","reverse","padLength","length","push","padStart","Error","createGraph","plugin","setNode","name","pl","Array","isArray","dependencies","dep","setEdge","getInstallers","list","leaf","sinks","installer","find","inst","removeNode","installed","onUser","showNextInstaller","prevInstaller","nextIndex","nextInstaller","prevSecure","secure","nextSecure","allInstallers","Promise","all","map","isInstalled"],"mappings":"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","sourcesContent":["import { useCallback, useReducer, useEffect } from \"react\";\nimport { Graph, alg } from \"graphlib\";\nimport { useApolloClient } from \"react-apollo\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { AdminInstallationPlugin } from \"@webiny/app-admin/types\";\n\nexport const useInstaller = () => {\n    const [{ loading, installers, installerIndex, showLogin }, setState] = useReducer(\n        (prev, next) => ({ ...prev, ...next }),\n        {\n            loading: true,\n            installers: [],\n            installerIndex: -1,\n            showLogin: false\n        }\n    );\n\n    const client = useApolloClient();\n\n    const validateGraph = graph => {\n        const isAcyclic = alg.isAcyclic(graph);\n        if (!isAcyclic) {\n            const cycles = alg.findCycles(graph);\n            const msg = [\"Your installers have circular dependencies:\"];\n            cycles.forEach((cycle, index) => {\n                let fromAToB = cycle.join(\" --> \");\n                fromAToB = `${index + 1}. ${fromAToB}`;\n                const fromBToA = cycle.reverse().join(\" <-- \");\n                const padLength = fromAToB.length + 4;\n                msg.push(fromAToB.padStart(padLength));\n                msg.push(fromBToA.padStart(padLength));\n            }, cycles);\n            throw new Error(msg.join(\"\\n\"));\n        }\n    };\n\n    const createGraph = installers => {\n        const graph = new Graph();\n        installers.forEach(({ plugin }) => {\n            graph.setNode(plugin.name, plugin);\n        });\n\n        installers.forEach(({ plugin: pl }) => {\n            if (Array.isArray(pl.dependencies)) {\n                pl.dependencies.forEach(dep => {\n                    graph.setEdge(pl.name, dep);\n                });\n            }\n        });\n\n        validateGraph(graph);\n\n        return graph;\n    };\n\n    const getInstallers = useCallback((installers, graph, list = []) => {\n        const leaf = graph.sinks()[0];\n        if (leaf) {\n            const installer = installers.find(inst => inst.plugin.name === leaf);\n            graph.removeNode(leaf);\n            if (!installer.installed) {\n                list.push(installer);\n            }\n            return getInstallers(installers, graph, list);\n        }\n        return list;\n    }, []);\n\n    const onUser = () => {\n        setState({ showLogin: false });\n    };\n\n    const showNextInstaller = () => {\n        const prevInstaller = installers[installerIndex];\n\n        installers[installerIndex].installed = true;\n        setState({ installers });\n\n        if (installers.length < installerIndex + 1) {\n            setState({ installerIndex: null });\n            return;\n        }\n\n        const nextIndex = installerIndex + 1;\n\n        let showLogin = false;\n        const nextInstaller = installers[nextIndex];\n\n        const prevSecure = prevInstaller && prevInstaller.plugin.secure;\n        const nextSecure = nextInstaller && nextInstaller.plugin.secure;\n        if (!prevSecure && nextSecure) {\n            showLogin = true;\n        }\n        setState({ installerIndex: nextIndex, showLogin });\n    };\n\n    useEffect(() => {\n        (async () => {\n            const allInstallers = [];\n            await Promise.all(\n                getPlugins<AdminInstallationPlugin>(\"admin-installation\").map(async pl => {\n                    const installed = await pl.isInstalled({ client });\n                    allInstallers.push({ plugin: pl, installed });\n                })\n            );\n\n            const graph = createGraph(allInstallers);\n            const installers = getInstallers(allInstallers, graph);\n            setState({ installers, installerIndex: 0, loading: false });\n        })();\n    }, []);\n\n    return {\n        loading,\n        installers,\n        installer: installers[installerIndex],\n        showNextInstaller,\n        showLogin,\n        onUser\n    };\n};\n"],"file":"useInstaller.js"}