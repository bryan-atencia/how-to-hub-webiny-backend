{"version":3,"sources":["../../../src/components/Install/Sidebar.tsx"],"names":["React","styled","Typography","classSet","SidebarWrapper","Logo","padding","borderBottom","img","width","height","List","li","display","alignItems","borderRadius","marginRight","textAlign","lineHeight","fontSize","paddingTop","color","backgroundColor","fontWeight","Note","Sidebar","allInstallers","installer","showLogin","renderList","loginItem","signInDivider","items","i","length","plugin","installed","prev","secure","push","active","name","pending","title","webinyLogo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport classSet from \"classnames\";\n\nimport webinyLogo from \"../../assets/images/webiny-orange-logo.svg\";\nimport signInDivider from \"./assets/sign-in-divider.svg\";\n\nconst SidebarWrapper = styled(\"div\")({});\n\nconst Logo = styled(\"div\")({\n    padding: 15,\n    borderBottom: \"1px solid var(--mdc-theme-background)\",\n    img: {\n        width: \"100px\",\n        height: \"auto\"\n    }\n});\n\nconst List = styled(\"ul\")({\n    li: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"15px 15px\",\n        \".status\": {\n            borderRadius: \"50%\",\n            display: \"inline-block\",\n            height: 20,\n            width: 20,\n            marginRight: 15\n        },\n        \"&.sign-in\": {\n            display: \"block\",\n            textAlign: \"center\",\n            \".note\": {\n                display: \"inline-block\",\n                lineHeight: \"150%\",\n                fontSize: 10,\n                paddingTop: 10,\n                color: \"var(--mdc-theme-text-icon-on-background)\"\n            },\n            img: {\n                width: \"100%\"\n            }\n        },\n        \"&.active\": {\n            backgroundColor: \"var(--mdc-theme-background)\",\n            fontWeight: 600,\n            \".status\": {\n                backgroundColor: \"var(--mdc-theme-primary)\"\n            }\n        },\n        \"&.pending\": {\n            \".status\": {\n                backgroundColor: \"var(--mdc-theme-on-surface)\"\n            }\n        },\n        \"&.installed\": {\n            \".status\": {\n                backgroundColor: \"var(--mdc-theme-secondary)\"\n            }\n        }\n    }\n});\n\nconst Note = styled(\"div\")({\n    padding: 15\n});\n\nconst Sidebar = ({ allInstallers, installer, showLogin }) => {\n    const renderList = () => {\n        const loginItem = (\n            <li key={\"login\"} className={\"sign-in\"}>\n                <img src={signInDivider} />\n                <Typography use={\"overline\"} className={\"note\"}>\n                    TO CONTINUE THE INSTALLATION AFTER THIS POINT YOUâ€™LL NEED TO SIGN IN\n                </Typography>\n            </li>\n        );\n\n        const items = [];\n        for (let i = 0; i < allInstallers.length; i++) {\n            const { plugin, installed } = allInstallers[i];\n            const prev = i === 0 ? null : allInstallers[i - 1].plugin;\n            if ((!prev || !prev.secure) && plugin.secure) {\n                items.push(loginItem);\n            }\n\n            const active = installer && !showLogin && plugin.name === installer.plugin.name;\n\n            items.push(\n                <li\n                    key={plugin.name}\n                    className={classSet(\n                        { installed: installed },\n                        { active: active },\n                        { pending: !installed && !active }\n                    )}\n                >\n                    <span className={\"status\"} />\n                    <span className={\"title\"}>{plugin.title}</span>\n                </li>\n            );\n        }\n        return items;\n    };\n\n    return (\n        <SidebarWrapper>\n            <Logo>\n                <img src={webinyLogo} alt=\"Webiny CMS\" />\n            </Logo>\n            <Note>\n                <Typography use={\"body1\"}>\n                    The following apps will be installed and configured:\n                </Typography>\n            </Note>\n            <List>{renderList()}</List>\n        </SidebarWrapper>\n    );\n};\nexport default Sidebar;\n"],"file":"Sidebar.js"}