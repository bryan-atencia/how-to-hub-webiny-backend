import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import { Transition } from "react-transition-group";
import styled from "@emotion/styled";
import { css } from "emotion";
import { TopAppBarSecondary, TopAppBarSection } from "@webiny/ui/TopAppBar";
import { IconButton } from "@webiny/ui/Button";
import noop from "lodash/noop";
import { ReactComponent as CloseIcon } from "@svgr/webpack!./icons/close.svg";
var OverlayLayoutWrapper = /*#__PURE__*/styled("div", {
  target: "e1inqa580",
  label: "OverlayLayoutWrapper"
})({
  position: "fixed",
  width: "100%",
  height: "100vh",
  backgroundColor: "var(--mdc-theme-background)",
  zIndex: 9,
  // has to be higher than 5 so it's above advanced settings dialog, and below 10, so the image editor can be displayed above
  paddingTop: 65,
  top: 0,
  left: 0
});
var noScroll = /*#__PURE__*/css({
  overflow: "hidden",
  height: "100vh"
}, "label:noScroll;");
var defaultStyle = {
  transform: "translateY(75vh)",
  opacity: 0,
  transitionProperty: "transform, opacity",
  transitionTimingFunction: "cubic-bezier(0, 0, .2, 1)",
  transitionDuration: "225ms",
  willChange: "opacity, transform"
};
var transitionStyles = {
  entering: {
    transform: "translateY(75vh)",
    opacity: 0
  },
  entered: {
    transform: "translateY(0px)",
    opacity: 1
  }
};
export var OverlayLayout = /*#__PURE__*/function (_React$Component) {
  _inherits(OverlayLayout, _React$Component);

  var _super = _createSuper(OverlayLayout);

  function OverlayLayout(props) {
    var _this;

    _classCallCheck(this, OverlayLayout);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "state", {
      isVisible: true
    });

    _defineProperty(_assertThisInitialized(_this), "hideComponent", function () {
      _this.setState({
        isVisible: false
      });

      document.body.classList.remove(noScroll);
    });

    document.body.classList.add(noScroll);
    return _this;
  }

  _createClass(OverlayLayout, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.body.classList.remove(noScroll);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          onExited = _this$props.onExited,
          barLeft = _this$props.barLeft,
          barMiddle = _this$props.barMiddle,
          barRight = _this$props.barRight,
          children = _this$props.children,
          style = _this$props.style,
          rest = _objectWithoutProperties(_this$props, ["onExited", "barLeft", "barMiddle", "barRight", "children", "style"]);

      return /*#__PURE__*/React.createElement(Transition, {
        in: this.state.isVisible,
        timeout: 100,
        appear: true,
        onExited: onExited
      }, function (state) {
        return /*#__PURE__*/React.createElement(OverlayLayoutWrapper, Object.assign({}, rest, {
          style: _objectSpread(_objectSpread(_objectSpread({}, defaultStyle), style), transitionStyles[state])
        }), /*#__PURE__*/React.createElement(TopAppBarSecondary, {
          fixed: true,
          style: {
            top: 0
          }
        }, /*#__PURE__*/React.createElement(TopAppBarSection, {
          style: {
            width: "33%"
          },
          alignStart: true
        }, barLeft), /*#__PURE__*/React.createElement(TopAppBarSection, {
          style: {
            width: "33%"
          }
        }, barMiddle), /*#__PURE__*/React.createElement(TopAppBarSection, {
          style: {
            width: "33%"
          },
          alignEnd: true
        }, barRight, /*#__PURE__*/React.createElement(IconButton, {
          ripple: false,
          onClick: _this2.hideComponent,
          icon: /*#__PURE__*/React.createElement(CloseIcon, {
            style: {
              width: 24,
              height: 24
            }
          })
        }))), children);
      });
    }
  }]);

  return OverlayLayout;
}(React.Component);

_defineProperty(OverlayLayout, "defaultProps", {
  onExited: noop
});
//# sourceMappingURL=OverlayLayout.js.map