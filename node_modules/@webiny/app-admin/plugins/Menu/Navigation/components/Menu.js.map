{"version":3,"sources":["../../../../../src/plugins/Menu/Navigation/components/Menu.tsx"],"names":["React","List","ListItem","ListItemGraphic","ListItemMeta","Transition","IconButton","useNavigation","classNames","css","defaultStyle","transform","opacity","transitionProperty","transitionTimingFunction","transitionDuration","willChange","transitionStyles","entering","entered","menuTitle","borderBottom","padding","margin","height","width","fontWeight","boxSizing","menuTitleActive","backgroundColor","Menu","props","name","onClick","sectionIsExpanded","toggleSection","sectionExpanded","icon","label","state","children"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { List, ListItem, ListItemGraphic, ListItemMeta } from \"@webiny/ui/List\";\nimport { Transition } from \"react-transition-group\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { ReactComponent as DownIcon } from \"@webiny/app-admin/assets/icons/round-keyboard_arrow_down-24px.svg\";\nimport { ReactComponent as UpIcon } from \"@webiny/app-admin/assets/icons/round-keyboard_arrow_up-24px.svg\";\nimport useNavigation from \"./useNavigation\";\nimport classNames from \"classnames\";\nimport { css } from \"emotion\";\n\nconst defaultStyle = {\n    transform: \"translateY(-20px)\",\n    opacity: 0,\n    transitionProperty: \"transform, opacity\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, .2, 1)\",\n    transitionDuration: \"100ms\",\n    willChange: \"opacity, transform\"\n};\n\nconst transitionStyles = {\n    entering: { transform: \"translateY(-20px)\", opacity: 0 },\n    entered: { transform: \"translateY(0px)\", opacity: 1 }\n};\n\nconst menuTitle = css({\n    \".mdc-drawer &.mdc-list\": {\n        borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n        padding: 0,\n        \".mdc-list-item\": {\n            margin: 0,\n            padding: \"0 15px\",\n            height: \"auto\",\n            width: \"100%\",\n            fontWeight: 600,\n            boxSizing: \"border-box\"\n        }\n    }\n});\n\nconst menuTitleActive = css({\n    backgroundColor: \"var(--mdc-theme-background)\"\n});\n\nexport type MenuProps = {\n    name: string;\n    label: React.ReactNode;\n    icon: React.ReactNode;\n    children: React.ReactNode;\n    onClick?: (toggleSection: () => void) => void;\n};\n\nexport default function Menu(props: MenuProps) {\n    const { name, onClick } = props;\n    const { sectionIsExpanded, toggleSection } = useNavigation();\n\n    const sectionExpanded = sectionIsExpanded(name);\n\n    return (\n        <>\n            <List className={classNames(menuTitle, { [menuTitleActive]: sectionExpanded })}>\n                <ListItem\n                    onClick={() => {\n                        if (typeof onClick === \"function\") {\n                            onClick(() => toggleSection(name));\n                        } else {\n                            toggleSection(name);\n                        }\n                    }}\n                >\n                    {props.icon && (\n                        <ListItemGraphic>\n                            <IconButton icon={props.icon} />\n                        </ListItemGraphic>\n                    )}\n\n                    {props.label}\n                    <ListItemMeta>\n                        <IconButton icon={sectionExpanded ? <UpIcon /> : <DownIcon />} />\n                    </ListItemMeta>\n                </ListItem>\n            </List>\n            <Transition in={sectionExpanded} timeout={100} appear unmountOnExit>\n                {state => (\n                    <div style={{ ...defaultStyle, ...transitionStyles[state] }}>\n                        {props.children}\n                    </div>\n                )}\n            </Transition>\n        </>\n    );\n}\n"],"file":"Menu.js"}