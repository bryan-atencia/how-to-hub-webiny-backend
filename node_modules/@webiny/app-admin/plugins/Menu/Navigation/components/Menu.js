import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import { List, ListItem, ListItemGraphic, ListItemMeta } from "@webiny/ui/List";
import { Transition } from "react-transition-group";
import { IconButton } from "@webiny/ui/Button";
import { ReactComponent as DownIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/round-keyboard_arrow_down-24px.svg";
import { ReactComponent as UpIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/round-keyboard_arrow_up-24px.svg";
import useNavigation from "./useNavigation";
import classNames from "classnames";
import { css } from "emotion";
var defaultStyle = {
  transform: "translateY(-20px)",
  opacity: 0,
  transitionProperty: "transform, opacity",
  transitionTimingFunction: "cubic-bezier(0, 0, .2, 1)",
  transitionDuration: "100ms",
  willChange: "opacity, transform"
};
var transitionStyles = {
  entering: {
    transform: "translateY(-20px)",
    opacity: 0
  },
  entered: {
    transform: "translateY(0px)",
    opacity: 1
  }
};
var menuTitle = /*#__PURE__*/css({
  ".mdc-drawer &.mdc-list": {
    borderBottom: "1px solid var(--mdc-theme-on-background)",
    padding: 0,
    ".mdc-list-item": {
      margin: 0,
      padding: "0 15px",
      height: "auto",
      width: "100%",
      fontWeight: 600,
      boxSizing: "border-box"
    }
  }
}, "label:menuTitle;");
var menuTitleActive = /*#__PURE__*/css({
  backgroundColor: "var(--mdc-theme-background)"
}, "label:menuTitleActive;");
export default function Menu(props) {
  var name = props.name,
      _onClick = props.onClick;

  var _useNavigation = useNavigation(),
      sectionIsExpanded = _useNavigation.sectionIsExpanded,
      toggleSection = _useNavigation.toggleSection;

  var sectionExpanded = sectionIsExpanded(name);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {
    className: classNames(menuTitle, _defineProperty({}, menuTitleActive, sectionExpanded))
  }, /*#__PURE__*/React.createElement(ListItem, {
    onClick: function onClick() {
      if (typeof _onClick === "function") {
        _onClick(function () {
          return toggleSection(name);
        });
      } else {
        toggleSection(name);
      }
    }
  }, props.icon && /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(IconButton, {
    icon: props.icon
  })), props.label, /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(IconButton, {
    icon: sectionExpanded ? /*#__PURE__*/React.createElement(UpIcon, null) : /*#__PURE__*/React.createElement(DownIcon, null)
  })))), /*#__PURE__*/React.createElement(Transition, {
    in: sectionExpanded,
    timeout: 100,
    appear: true,
    unmountOnExit: true
  }, function (state) {
    return /*#__PURE__*/React.createElement("div", {
      style: _objectSpread(_objectSpread({}, defaultStyle), transitionStyles[state])
    }, props.children);
  }));
}
//# sourceMappingURL=Menu.js.map