{"version":3,"sources":["../../../src/plugins/Menu/Hamburger.tsx"],"names":["React","useCallback","ReactDOM","get","set","useUi","IconButton","Navigation","el","getElement","document","createElement","id","body","appendChild","Hamburger","ui","toggleMenu","setState","color","createPortal"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAIC,EAAE,GAAG,IAAT;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAI,CAACD,EAAL,EAAS;AACLA,IAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAL;AACAH,IAAAA,EAAE,CAACI,EAAH,GAAQ,mBAAR;AACAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BN,EAA1B;AACH;;AAED,SAAOA,EAAP;AACH,CARD;;AAUA,IAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMC,EAAE,GAAGX,KAAK,EAAhB;AAEA,MAAMY,UAAU,GAAGhB,WAAW,CAAC,YAAM;AACjCe,IAAAA,EAAE,CAACE,QAAH,CAAY,UAAAF,EAAE;AAAA,aAAIZ,GAAG,CAACY,EAAD,EAAK,eAAL,EAAsB,EAAEb,GAAG,CAACa,EAAD,EAAK,eAAL,CAAH,IAA4B,KAA9B,CAAtB,CAAP;AAAA,KAAd;AACH,GAF6B,EAE3B,CAACA,EAAD,CAF2B,CAA9B;AAIA,sBACI,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,UAAD;AAAY,IAAA,IAAI,eAAE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT;AAAjB,MAAlB;AAA2D,IAAA,OAAO,EAAEF;AAApE,IADJ,eAEKf,QAAQ,CAACkB,YAAT,eAAsB,oBAAC,UAAD,OAAtB,EAAsCX,UAAU,EAAhD,CAFL,CADJ;AAMH,CAbD;;AAeA,eAAeM,SAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { get, set } from \"dot-prop-immutable\";\nimport { useUi } from \"@webiny/app/hooks/useUi\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { ReactComponent as MenuIcon } from \"@webiny/app-admin/assets/icons/baseline-menu-24px.svg\";\nimport Navigation from \"./Navigation\";\n\nlet el = null;\nconst getElement = () => {\n    if (!el) {\n        el = document.createElement(\"div\");\n        el.id = \"navigation-drawer\";\n        document.body.appendChild(el);\n    }\n\n    return el;\n};\n\nconst Hamburger = () => {\n    const ui = useUi();\n\n    const toggleMenu = useCallback(() => {\n        ui.setState(ui => set(ui, \"appsMenu.show\", !(get(ui, \"appsMenu.show\") || false)));\n    }, [ui]);\n\n    return (\n        <React.Fragment>\n            <IconButton icon={<MenuIcon style={{ color: \"white\" }} />} onClick={toggleMenu} />\n            {ReactDOM.createPortal(<Navigation />, getElement())}\n        </React.Fragment>\n    );\n};\n\nexport default Hamburger;\n"],"file":"Hamburger.js"}