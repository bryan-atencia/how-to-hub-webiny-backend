import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _isEqual from "lodash/isEqual";
import React from "react";
import { ReactComponent as WebinyLogo } from "@svgr/webpack!@webiny/app-admin/assets/images/webiny-logo.svg";

var Logo = /*#__PURE__*/function (_React$Component) {
  _inherits(Logo, _React$Component);

  var _super = _createSuper(Logo);

  function Logo() {
    var _this;

    _classCallCheck(this, Logo);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "checkDisplayInterval", null);

    _defineProperty(_assertThisInitialized(_this), "state", {
      display: "desktop"
    });

    return _this;
  }

  _createClass(Logo, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(props, state) {
      return !_isEqual(state, this.state);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.checkDisplayInterval = setInterval(function () {
        _this2.setState({
          display: window.outerWidth > 768 ? "desktop" : "mobile"
        });
      }, 500);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      clearInterval(this.checkDisplayInterval);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          altText = _this$props.altText;
      var style = {
        width: this.props.width,
        height: this.props.height,
        display: this.props.display,
        marginTop: 12
      };

      if (this.state.display !== "desktop") {
        style.width = this.props.mobileWidth;
        style.height = this.props.mobileHeight;
      }

      return /*#__PURE__*/React.createElement(WebinyLogo, {
        className: ["webiny-logo", className].join(" "),
        style: style,
        alt: altText
      });
    }
  }]);

  return Logo;
}(React.Component);

_defineProperty(Logo, "defaultProps", {
  width: 100,
  height: 30,
  mobileWidth: 100,
  mobileHeight: 36,
  altText: "Webiny",
  className: ""
});

export default Logo;
//# sourceMappingURL=Logo.js.map