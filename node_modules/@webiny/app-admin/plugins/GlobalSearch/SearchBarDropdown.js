import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import * as React from "react";
import classnames from "classnames";
import { List, ListItem, ListItemGraphic, ListItemText, ListItemMeta } from "@webiny/ui/List";
import { searchBarDropdown, iconSearchType } from "./styled";
import { Elevation } from "@webiny/ui/Elevation";
import { Icon } from "@webiny/ui/Icon";
import { ReactComponent as SearchIcon } from "@svgr/webpack!./icons/round-search-24px.svg";

var SearchBarDropdown = /*#__PURE__*/function (_React$Component) {
  _inherits(SearchBarDropdown, _React$Component);

  var _super = _createSuper(SearchBarDropdown);

  function SearchBarDropdown() {
    _classCallCheck(this, SearchBarDropdown);

    return _super.apply(this, arguments);
  }

  _createClass(SearchBarDropdown, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props$context = this.props.context,
          downshift = _this$props$context.downshift.current,
          plugins = _this$props$context.state.plugins;
      downshift.selectItem(plugins.current);
      downshift.setHighlightedIndex(plugins.list.indexOf(plugins.current));
      downshift.openMenu();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$context2 = this.props.context,
          downshift = _this$props$context2.downshift.current,
          submitSearchTerm = _this$props$context2.submitSearchTerm,
          _this$props$context2$ = _this$props$context2.state,
          plugins = _this$props$context2$.plugins,
          searchTerm = _this$props$context2$.searchTerm;
      var getMenuProps = downshift.getMenuProps,
          getItemProps = downshift.getItemProps,
          _downshift$state = downshift.state,
          selectedItem = _downshift$state.selectedItem,
          highlightedIndex = _downshift$state.highlightedIndex;
      return /*#__PURE__*/React.createElement(Elevation, {
        z: 2,
        className: searchBarDropdown
      }, /*#__PURE__*/React.createElement(List, getMenuProps(), plugins.list.map(function (item, index) {
        // Base classes.
        var itemClassNames = {
          highlighted: highlightedIndex === index,
          selected: false
        }; // Add "selected" class if the item is selected.

        if (selectedItem && selectedItem === item) {
          itemClassNames.selected = true;
        }

        return /*#__PURE__*/React.createElement(ListItem, Object.assign({
          key: item.route
        }, getItemProps({
          index: index,
          item: item,
          className: classnames(itemClassNames),
          onClick: function onClick() {
            return submitSearchTerm(item);
          }
        })), /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
          className: iconSearchType,
          icon: /*#__PURE__*/React.createElement(SearchIcon, null)
        })), /*#__PURE__*/React.createElement(ListItemText, null, searchTerm.current || "Search for all..."), /*#__PURE__*/React.createElement(ListItemMeta, null, "in ", item.label));
      })));
    }
  }]);

  return SearchBarDropdown;
}(React.Component);

export { SearchBarDropdown as default };
//# sourceMappingURL=SearchBarDropdown.js.map