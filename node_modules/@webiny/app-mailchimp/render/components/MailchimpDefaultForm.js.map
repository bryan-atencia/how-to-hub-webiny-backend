{"version":3,"sources":["../../../src/render/components/MailchimpDefaultForm.tsx"],"names":["React","css","validation","style","position","top","right","padding","MailchimpDefaultForm","error","success","props","Bind","submit","processing","create","value","onChange","e","target","isValid","message","state","setState","onSuccess","onError","Component"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,IAAMC,KAAK,gBAAGF,GAAG,CAAC;AACd,qDAAmD;AAC/CG,IAAAA,QAAQ,EAAE,UADqC;AAE/C,6DAAyD;AACrDA,MAAAA,QAAQ,EAAE,UAD2C;AAErDC,MAAAA,GAAG,EAAE,CAFgD;AAGrDC,MAAAA,KAAK,EAAE;AAH8C,KAFV;AAO/C,+DAA2D;AACvDC,MAAAA,OAAO,EAAE;AAD8C;AAPZ;AADrC,CAAD,iBAAjB;;IAgBMC,oB;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;;;;;;6BAKC;AAAA;;AAAA,wBACgC,KAAKC,KADrC;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,MADT,eACSA,MADT;AAAA,UACiBC,UADjB,eACiBA,UADjB;AAEL,0BACI;AAAK,QAAA,SAAS,EAAE,2CAA2CX;AAA3D,sBACI;AAAK,QAAA,SAAS,EAAE;AAAhB,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,OAAZ;AAAqB,QAAA,UAAU,EAAED,UAAU,CAACa,MAAX,CAAkB,gBAAlB;AAAjC,SACK;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,YAAUC,SAAV,QAAUA,QAAV;AAAA,YAAoBf,UAApB,QAAoBA,UAApB;AAAA,4BACG;AAAK,UAAA,SAAS,EAAC;AAAf,wBACI;AACI,UAAA,QAAQ,EAAE,kBAAAgB,CAAC;AAAA,mBAAID,SAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CAAZ;AAAA,WADf;AAEI,UAAA,QAAQ,EAAEF,UAFd;AAGI,UAAA,SAAS,EACL,4FAJR;AAMI,UAAA,KAAK,EAAEE,KANX;AAOI,UAAA,WAAW,EAAE;AAPjB,UADJ,eAUI;AAAK,UAAA,SAAS,EAAC;AAAf,WACKd,UAAU,CAACkB,OAAX,KAAuB,KAAvB,IAAgClB,UAAU,CAACmB,OADhD,CAVJ,EAcK,MAAI,CAACC,KAAL,CAAWb,KAAX,iBACG;AACI,UAAA,SAAS,EACL;AAFR,sBAKY,MAAI,CAACa,KAAL,CAAWb,KALvB,CAfR,EAuBK,MAAI,CAACa,KAAL,CAAWZ,OAAX,iBACG;AACI,UAAA,SAAS,EACL;AAFR,6CAxBR,CADH;AAAA,OADL,CADJ,eAsCI;AACI,QAAA,SAAS,EACL,2HAFR;AAII,QAAA,QAAQ,EAAEI,UAJd;AAKI,QAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AACL,kBAAA,MAAI,CAACS,QAAL,CAAc;AAAEb,oBAAAA,OAAO,EAAE,KAAX;AAAkBD,oBAAAA,KAAK,EAAE;AAAzB,mBAAd;;AADK;AAAA,yBAGCI,MAAM,CAAC;AACTW,oBAAAA,SAAS,EAAE,qBAAM;AACb,sBAAA,MAAI,CAACD,QAAL,CAAc;AAAEb,wBAAAA,OAAO,EAAE;AAAX,uBAAd;AACH,qBAHQ;AAITe,oBAAAA,OAAO,EAAE,iBAAAhB,KAAK,EAAI;AACd,sBAAA,MAAI,CAACc,QAAL,CAAc;AAAEd,wBAAAA,KAAK,EAALA;AAAF,uBAAd;AACH;AANQ,mBAAD,CAHP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;AALX,qBAtCJ,CADJ,CADJ;AA+DH;;;;EAvE8BT,KAAK,CAAC0B,S;;AA0EzC,eAAelB,oBAAf","sourcesContent":["import * as React from \"react\";\nimport { css } from \"emotion\";\nimport { validation } from \"@webiny/validation\";\nconst style = css({\n    \".webiny-pb-page-element-mailchimp-form__wrapper\": {\n        position: \"relative\",\n        \".webiny-pb-page-element-mailchimp-form__subscribe_btn\": {\n            position: \"absolute\",\n            top: 5,\n            right: 5\n        },\n        \".webiny-pb-page-element-mailchimp-form__subscribe_input\": {\n            padding: 15\n        }\n    }\n});\n\ntype State = { success: boolean; error?: string };\n\nclass MailchimpDefaultForm extends React.Component<any, State> {\n    state = {\n        error: null,\n        success: false\n    };\n\n    render() {\n        const { Bind, submit, processing } = this.props;\n        return (\n            <div className={\"webiny-pb-page-element-mailchimp-form \" + style}>\n                <div className={\"webiny-pb-page-element-mailchimp-form__wrapper\"}>\n                    <Bind name={\"email\"} validators={validation.create(\"required,email\")}>\n                        {({ value, onChange, validation }) => (\n                            <div className=\"webiny-pb-page-element-input\">\n                                <input\n                                    onChange={e => onChange(e.target.value)}\n                                    disabled={processing}\n                                    className={\n                                        \"webiny-pb-page-element-mailchimp-form__subscribe_input webiny-pb-page-element-input__field\"\n                                    }\n                                    value={value}\n                                    placeholder={\"Your e-mail\"}\n                                />\n                                <div className=\"webiny-pb-page-element-mailchimp-form__msg webiny-pb-page-element-input__helper-text\">\n                                    {validation.isValid === false && validation.message}\n                                </div>\n\n                                {this.state.error && (\n                                    <div\n                                        className={\n                                            \"webiny-pb-page-element-mailchimp-form__msg webiny-pb-page-element-input__helper-text\"\n                                        }\n                                    >\n                                        Error: {this.state.error}\n                                    </div>\n                                )}\n                                {this.state.success && (\n                                    <div\n                                        className={\n                                            \"webiny-pb-page-element-mailchimp-form__msg webiny-pb-page-element-input__helper-text\"\n                                        }\n                                    >\n                                        You are on the list. Thank you!\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </Bind>\n                    <button\n                        className={\n                            \"webiny-pb-page-element-mailchimp-form__subscribe_btn webiny-pb-page-element-button webiny-pb-page-element-button--primary\"\n                        }\n                        disabled={processing}\n                        onClick={async () => {\n                            this.setState({ success: false, error: null });\n\n                            await submit({\n                                onSuccess: () => {\n                                    this.setState({ success: true });\n                                },\n                                onError: error => {\n                                    this.setState({ error });\n                                }\n                            });\n                        }}\n                    >\n                        Subscribe\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MailchimpDefaultForm;\n"],"file":"MailchimpDefaultForm.js"}