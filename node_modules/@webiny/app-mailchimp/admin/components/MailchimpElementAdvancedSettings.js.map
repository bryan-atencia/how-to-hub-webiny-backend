{"version":3,"sources":["../../../src/admin/components/MailchimpElementAdvancedSettings.tsx"],"names":["React","useState","useApolloClient","Query","gql","css","Grid","Cell","Typography","useHandler","useSnackbar","AutoComplete","getPlugins","Form","Input","ButtonPrimary","CircularProgress","MailchimpElement","settingsGql","validation","formPreview","padding","border","overflow","saveApiKeyButtonWrapper","textAlign","marginTop","enableMailchimpLink","cursor","MAILCHIMP_SETTINGS","MailchimpElementAdvancedSettings","Bind","loading","setLoading","showSnackbar","client","submitApiKeyForm","data","settingsLists","mutate","mutation","variables","enabled","response","error","message","refetch","apiKey","create","id","value","onChange","rest","options","map","name","find","item","componentName","title","settings","submit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { get } from \"lodash\";\nimport { css } from \"emotion\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { AutoComplete } from \"@webiny/ui/AutoComplete\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport MailchimpElement from \"./MailchimpElement\";\nimport settingsGql from \"./graphql\";\nimport { validation } from \"@webiny/validation\";\nimport { PbPageElementMailchimpComponentPlugin } from \"../../types\";\n\nconst formPreview = css({\n    padding: 25,\n    border: \"1px solid var(--mdc-theme-background)\",\n    overflow: \"scroll\"\n});\n\nconst saveApiKeyButtonWrapper = css({\n    textAlign: \"right\",\n    marginTop: 10\n});\n\nconst enableMailchimpLink = css({\n    cursor: \"pointer\"\n});\n\nconst MAILCHIMP_SETTINGS = gql`\n    {\n        mailchimp {\n            getSettings {\n                data {\n                    enabled\n                    apiKey\n                }\n            }\n            listLists {\n                data {\n                    id\n                    name\n                }\n            }\n        }\n    }\n`;\n\nconst MailchimpElementAdvancedSettings = ({ Bind }) => {\n    const [loading, setLoading] = useState(false);\n    const { showSnackbar } = useSnackbar();\n    const client = useApolloClient();\n\n    const submitApiKeyForm = useHandler({}, () => async ({ data = {}, settingsLists }) => {\n        setLoading(true);\n        const response = await client.mutate({\n            mutation: settingsGql.mutation,\n            variables: { data: { ...data, enabled: true } }\n        });\n        setLoading(false);\n        const error = get(response, \"data.mailchimp.updateSettings.error\");\n        if (error) {\n            showSnackbar(error.message);\n        } else {\n            showSnackbar(\"Settings updated successfully.\");\n            settingsLists.refetch();\n        }\n    });\n\n    return (\n        <Query query={MAILCHIMP_SETTINGS}>\n            {settingsLists => {\n                const { apiKey, enabled } =\n                    get(settingsLists.data, \"mailchimp.getSettings.data\") || {};\n\n                return (\n                    <>\n                        <Grid>\n                            {(loading || settingsLists.loading) && <CircularProgress />}\n                            {apiKey && enabled ? (\n                                <>\n                                    <Cell span={12}>\n                                        <Bind\n                                            name={\"settings.list\"}\n                                            validators={validation.create(\"required\")}\n                                        >\n                                            {({ value: id, onChange, ...rest }) => {\n                                                const options = (\n                                                    get(\n                                                        settingsLists.data,\n                                                        \"mailchimp.listLists.data\"\n                                                    ) || []\n                                                ).map(({ id, name }) => ({ id, name }));\n\n                                                const value = options.find(item => item.id === id);\n\n                                                return (\n                                                    <AutoComplete\n                                                        disabled={!apiKey}\n                                                        options={options}\n                                                        value={value}\n                                                        onChange={onChange}\n                                                        label={\"Mailchimp list\"}\n                                                        {...rest}\n                                                    />\n                                                );\n                                            }}\n                                        </Bind>\n                                    </Cell>\n                                    <Cell span={12}>\n                                        <Bind\n                                            name={\"settings.component\"}\n                                            validators={validation.create(\"required\")}\n                                        >\n                                            {({ onChange, value: name, ...rest }) => {\n                                                const options = getPlugins<\n                                                    PbPageElementMailchimpComponentPlugin\n                                                >(\"pb-page-element-mailchimp-component\").map(\n                                                    ({ componentName, title }) => {\n                                                        return {\n                                                            name: componentName,\n                                                            title\n                                                        };\n                                                    }\n                                                );\n\n                                                const value = options.find(\n                                                    item => item.name === name\n                                                );\n\n                                                return (\n                                                    <AutoComplete\n                                                        disabled={!apiKey}\n                                                        value={value}\n                                                        options={options}\n                                                        onChange={onChange}\n                                                        textProp=\"title\"\n                                                        valueProp=\"name\"\n                                                        label=\"Mailchimp component\"\n                                                        description=\"Select a component that renders the signup form.\"\n                                                        {...rest}\n                                                    />\n                                                );\n                                            }}\n                                        </Bind>\n                                    </Cell>\n                                    <Cell span={12} className={formPreview}>\n                                        <span>\n                                            <Typography use={\"overline\"}>Form preview</Typography>\n                                        </span>\n                                        <Bind name={\"settings\"}>\n                                            {({ value }) => (\n                                                <div>\n                                                    <MailchimpElement\n                                                        element={{ settings: value }}\n                                                    />\n                                                </div>\n                                            )}\n                                        </Bind>\n                                    </Cell>\n                                </>\n                            ) : (\n                                <>\n                                    {!apiKey ? (\n                                        <>\n                                            <Cell span={12}>\n                                                Before continuing, please enter a{\" \"}\n                                                <a\n                                                    target={\"_blank\"}\n                                                    rel=\"noopener noreferrer\"\n                                                    href=\"https://mailchimp.com/help/about-api-keys/\"\n                                                >\n                                                    Mailchimp API key\n                                                </a>\n                                                .\n                                            </Cell>\n                                            <Cell span={12}>\n                                                <Form\n                                                    onSubmit={data =>\n                                                        submitApiKeyForm({\n                                                            data,\n                                                            settingsLists\n                                                        })\n                                                    }\n                                                >\n                                                    {({ Bind, submit }) => (\n                                                        <>\n                                                            <Cell span={12}>\n                                                                <Bind\n                                                                    validators={validation.create(\n                                                                        \"required\"\n                                                                    )}\n                                                                    name={\"apiKey\"}\n                                                                >\n                                                                    <Input label=\"API key\" />\n                                                                </Bind>\n                                                            </Cell>\n                                                            <Cell\n                                                                span={12}\n                                                                className={saveApiKeyButtonWrapper}\n                                                            >\n                                                                <ButtonPrimary onClick={submit}>\n                                                                    Save API key\n                                                                </ButtonPrimary>\n                                                            </Cell>\n                                                        </>\n                                                    )}\n                                                </Form>\n                                            </Cell>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <Cell span={12}>\n                                                Before continuing, please{\" \"}\n                                                <a\n                                                    className={enableMailchimpLink}\n                                                    onClick={() =>\n                                                        submitApiKeyForm({\n                                                            settingsLists\n                                                        })\n                                                    }\n                                                >\n                                                    enable\n                                                </a>{\" \"}\n                                                the Mailchimp integration.\n                                            </Cell>\n                                        </>\n                                    )}\n                                </>\n                            )}\n                        </Grid>\n                    </>\n                );\n            }}\n        </Query>\n    );\n};\n\nexport default MailchimpElementAdvancedSettings;\n"],"file":"MailchimpElementAdvancedSettings.js"}