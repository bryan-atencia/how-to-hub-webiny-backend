{"version":3,"sources":["../../../../src/admin/views/Content/ContentDetails.tsx"],"names":["React","useCallback","useMemo","useState","useRouter","styled","renderPlugins","useSnackbar","useQuery","createReadQuery","createListRevisionsQuery","useI18N","DetailsContainer","overflow","position","nav","backgroundColor","ContentDetails","contentModel","dataList","history","location","showSnackbar","state","setState","i18n","getLocale","id","locale","setLocale","loading","setLoading","query","URLSearchParams","search","contentId","get","READ_CONTENT","LIST_REVISIONS","modelId","variables","skip","onCompleted","data","error","delete","push","toString","readQueryLoading","getLoading","content","contentParent","revisionsList"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from \"react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport styled from \"@emotion/styled\";\nimport { renderPlugins } from \"@webiny/app/plugins\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { get } from \"lodash\";\nimport { useQuery } from \"@webiny/app-headless-cms/admin/hooks\";\nimport {\n    createReadQuery,\n    createListRevisionsQuery\n} from \"@webiny/app-headless-cms/admin/components/ContentModelForm/graphql\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\n\nconst DetailsContainer = styled(\"div\")({\n    overflow: \"hidden\",\n    position: \"relative\",\n    nav: {\n        backgroundColor: \"var(--mdc-theme-surface)\"\n    }\n});\n\ndeclare global {\n    // eslint-disable-next-line\n    namespace JSX {\n        interface IntrinsicElements {\n            \"test-id\": {\n                children?: React.ReactNode;\n            };\n        }\n    }\n}\nconst ContentDetails = ({ contentModel, dataList }) => {\n    const { history, location } = useRouter();\n    const { showSnackbar } = useSnackbar();\n    const [state, setState] = useState({});\n\n    const i18n = useI18N();\n    const [locale, setLocale] = useState(i18n.getLocale().id);\n    const [loading, setLoading] = useState(false);\n\n    const query = new URLSearchParams(location.search);\n    const contentId = query.get(\"id\");\n\n    const { READ_CONTENT, LIST_REVISIONS } = useMemo(() => {\n        return {\n            READ_CONTENT: createReadQuery(contentModel),\n            LIST_REVISIONS: createListRevisionsQuery(contentModel)\n        };\n    }, [contentModel.modelId]);\n\n    const { data, loading: readQueryLoading } = useQuery(READ_CONTENT, {\n        variables: { id: contentId },\n        skip: !contentId,\n        onCompleted: data => {\n            const error = get(data, `content.error.message`);\n            if (error) {\n                query.delete(\"id\");\n                history.push({ search: query.toString() });\n                showSnackbar(error);\n            }\n        }\n    });\n\n    const getLocale = useCallback(() => locale, [locale]);\n    const getLoading = useCallback(() => readQueryLoading || loading, [loading, readQueryLoading]);\n\n    const content = get(data, \"content.data\") || {};\n\n    const contentParent = get(content, \"meta.parent\");\n    const revisionsList = useQuery(LIST_REVISIONS, {\n        skip: !contentParent,\n        variables: { id: contentParent }\n    });\n\n    return (\n        <DetailsContainer>\n            <test-id data-testid=\"cms-content-details\">\n                {renderPlugins(\"cms-content-details\", {\n                    getLocale,\n                    setLocale,\n                    setLoading,\n                    getLoading,\n                    dataList,\n                    content,\n                    contentModel,\n                    revisionsList,\n                    state,\n                    setState\n                })}\n            </test-id>\n        </DetailsContainer>\n    );\n};\n\nexport default ContentDetails;\n"],"file":"ContentDetails.js"}