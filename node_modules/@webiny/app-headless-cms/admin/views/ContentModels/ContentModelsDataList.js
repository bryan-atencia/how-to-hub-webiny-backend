import _regeneratorRuntime from "@babel/runtime/regenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";

function _templateObject13() {
  var data = _taggedTemplateLiteral(["Delete content model"]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = _taggedTemplateLiteral(["Edit content model"]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = _taggedTemplateLiteral(["View entries"]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = _taggedTemplateLiteral(["View content"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["Last modified: {time}."]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["Created by: {user}."]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Title Z-A"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Title A-Z"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Oldest to newest"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Newest to oldest"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Content Models"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Something unexpected happened."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Content model {name} deleted."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useCallback, useRef } from "react";
import TimeAgo from "timeago-react";
import { useRouter } from "@webiny/react-router";
import { css } from "emotion";
import get from "lodash/get";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { DeleteIcon, EditIcon } from "@webiny/ui/List/DataList/icons";
import { ReactComponent as ViewListIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/view_list.svg";
import { DELETE_CONTENT_MODEL } from "../../viewsGraphql";
import { useApolloClient } from "@webiny/app-headless-cms/admin/hooks";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import CurrentEnvironmentLabel from "./../../components/CurrentEnvironmentLabel";
import { DataList, List, ListItem, ListItemText, ListItemTextSecondary, ListItemMeta, ListActions } from "@webiny/ui/List";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
import { i18n } from "@webiny/app/i18n";
var t = i18n.namespace("FormsApp.ContentModelsDataList");
var rightAlign = /*#__PURE__*/css({
  alignItems: "flex-end !important",
  justifyContent: "center !important"
}, "label:rightAlign;");
var listItemMinHeight = /*#__PURE__*/css({
  minHeight: "66px !important"
}, "label:listItemMinHeight;");
var viewEntriesIconStyles = /*#__PURE__*/css({
  color: "var(--mdc-theme-text-secondary-on-background)"
}, "label:viewEntriesIconStyles;");

var ContentModelsDataList = function ContentModelsDataList(props) {
  var dataList = props.dataList;

  var _useRouter = useRouter(),
      location = _useRouter.location,
      history = _useRouter.history;

  var client = useApolloClient();

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var deleteRecord = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {
      var res, _get, data, error, query;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return client.mutate({
                mutation: DELETE_CONTENT_MODEL,
                variables: {
                  id: item.id
                },
                awaitRefetchQueries: true,
                refetchQueries: ["HeadlessCmsListContentModels", "HeadlessCmsListMenuContentGroupsModels"]
              });

            case 2:
              res = _context.sent;
              _get = get(res, "data.deleteContentModel"), data = _get.data, error = _get.error;

              if (data) {
                showSnackbar(t(_templateObject())({
                  name: item.name
                }));
              } else {
                showSnackbar(error.message, {
                  title: t(_templateObject2())
                });
              }

              if (item.id === props.id) {
                query = new URLSearchParams(location.search);
                query.delete("id");
                history.push({
                  search: query.toString()
                });
              }

              dataList.refresh();

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function deleteRecord(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var editHandlers = useRef({});
  var editRecord = useCallback(function (contentModel) {
    if (!editHandlers.current[contentModel.id]) {
      editHandlers.current[contentModel.id] = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                history.push("/cms/content-models/" + contentModel.id);

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
    }

    return editHandlers.current[contentModel.id];
  }, undefined);
  var viewContentEntries = useCallback(function (contentModel) {
    return function () {
      return history.push("/cms/content-models/manage/" + contentModel.modelId);
    };
  }, undefined);
  return /*#__PURE__*/React.createElement(DataList, Object.assign({}, dataList, {
    title: t(_templateObject3()),
    actions: /*#__PURE__*/React.createElement(CurrentEnvironmentLabel, {
      style: {
        justifyContent: "flex-end"
      }
    }),
    sorters: [{
      label: t(_templateObject4()),
      sorters: {
        createdOn: -1
      }
    }, {
      label: t(_templateObject5()),
      sorters: {
        createdOn: 1
      }
    }, {
      label: t(_templateObject6()),
      sorters: {
        name: 1
      }
    }, {
      label: t(_templateObject7()),
      sorters: {
        name: -1
      }
    }]
  }), function (_ref3) {
    var _ref3$data = _ref3.data,
        data = _ref3$data === void 0 ? [] : _ref3$data;
    return /*#__PURE__*/React.createElement(List, {
      "data-testid": "default-data-list"
    }, data.map(function (contentModel) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: contentModel.id,
        className: listItemMinHeight
      }, /*#__PURE__*/React.createElement(ListItemText, null, contentModel.name, contentModel.createdBy && /*#__PURE__*/React.createElement(ListItemTextSecondary, null, contentModel.createdBy.firstName && /*#__PURE__*/React.createElement(React.Fragment, null, t(_templateObject8())({
        user: contentModel.createdBy.firstName
      }), " "), t(_templateObject9())({
        time: /*#__PURE__*/React.createElement(TimeAgo, {
          datetime: contentModel.savedOn
        })
      }))), /*#__PURE__*/React.createElement(ListItemMeta, {
        className: rightAlign
      }, /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(Tooltip, {
        content: t(_templateObject10()),
        placement: "top"
      }, /*#__PURE__*/React.createElement(IconButton, {
        icon: /*#__PURE__*/React.createElement(ViewListIcon, {
          className: viewEntriesIconStyles
        }),
        label: t(_templateObject11()),
        onClick: viewContentEntries(contentModel)
      })), /*#__PURE__*/React.createElement(Tooltip, {
        content: t(_templateObject12()),
        placement: "top"
      }, /*#__PURE__*/React.createElement(EditIcon, {
        onClick: editRecord(contentModel)
      })), /*#__PURE__*/React.createElement(ConfirmationDialog, null, function (_ref4) {
        var showConfirmation = _ref4.showConfirmation;
        return /*#__PURE__*/React.createElement(Tooltip, {
          content: t(_templateObject13()),
          placement: "top"
        }, /*#__PURE__*/React.createElement(DeleteIcon, {
          onClick: function onClick() {
            return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
              return _regeneratorRuntime.wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      return _context3.abrupt("return", deleteRecord(contentModel));

                    case 1:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3);
            })));
          }
        }));
      }))));
    }));
  });
};

export default ContentModelsDataList;
//# sourceMappingURL=ContentModelsDataList.js.map