{"version":3,"sources":["../../../../src/admin/views/ContentModels/ContentModelsDataList.tsx"],"names":["React","useCallback","useRef","TimeAgo","useRouter","css","get","ConfirmationDialog","DeleteIcon","EditIcon","DELETE_CONTENT_MODEL","useApolloClient","useSnackbar","CurrentEnvironmentLabel","DataList","List","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListActions","IconButton","Tooltip","i18n","t","namespace","rightAlign","alignItems","justifyContent","listItemMinHeight","minHeight","viewEntriesIconStyles","color","ContentModelsDataList","props","dataList","location","history","client","showSnackbar","deleteRecord","item","mutate","mutation","variables","id","awaitRefetchQueries","refetchQueries","res","data","error","name","message","title","query","URLSearchParams","search","delete","push","toString","refresh","editHandlers","editRecord","contentModel","current","undefined","viewContentEntries","modelId","label","sorters","createdOn","map","createdBy","firstName","user","time","savedOn","showConfirmation"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef } from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { css } from \"emotion\";\nimport get from \"lodash/get\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { DeleteIcon, EditIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { ReactComponent as ViewListIcon } from \"@webiny/app-headless-cms/admin/icons/view_list.svg\";\nimport { DELETE_CONTENT_MODEL } from \"../../viewsGraphql\";\nimport { useApolloClient } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport CurrentEnvironmentLabel from \"./../../components/CurrentEnvironmentLabel\";\n\nimport {\n    DataList,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListActions\n} from \"@webiny/ui/List\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.namespace(\"FormsApp.ContentModelsDataList\");\n\nconst rightAlign = css({\n    alignItems: \"flex-end !important\",\n    justifyContent: \"center !important\"\n});\n\nconst listItemMinHeight = css({\n    minHeight: \"66px !important\"\n});\n\nconst viewEntriesIconStyles = css({\n    color: \"var(--mdc-theme-text-secondary-on-background)\"\n});\n\nexport type ContentModelsDataListProps = {\n    id?: any;\n    dataList: any;\n};\n\nconst ContentModelsDataList = (props: ContentModelsDataListProps) => {\n    const { dataList } = props;\n\n    const { location, history } = useRouter();\n    const client = useApolloClient();\n    const { showSnackbar } = useSnackbar();\n\n    const deleteRecord = async item => {\n        const res = await client.mutate({\n            mutation: DELETE_CONTENT_MODEL,\n            variables: { id: item.id },\n            awaitRefetchQueries: true,\n            refetchQueries: [\n                \"HeadlessCmsListContentModels\",\n                \"HeadlessCmsListMenuContentGroupsModels\"\n            ]\n        });\n\n        const { data, error } = get(res, \"data.deleteContentModel\");\n\n        if (data) {\n            showSnackbar(t`Content model {name} deleted.`({ name: item.name }));\n        } else {\n            showSnackbar(error.message, {\n                title: t`Something unexpected happened.`\n            });\n        }\n\n        if (item.id === props.id) {\n            const query = new URLSearchParams(location.search);\n            query.delete(\"id\");\n            history.push({ search: query.toString() });\n        }\n\n        dataList.refresh();\n    };\n\n    const editHandlers = useRef({});\n    const editRecord = useCallback(contentModel => {\n        if (!editHandlers.current[contentModel.id]) {\n            editHandlers.current[contentModel.id] = async () => {\n                history.push(\"/cms/content-models/\" + contentModel.id);\n            };\n        }\n\n        return editHandlers.current[contentModel.id];\n    }, undefined);\n\n    const viewContentEntries = useCallback(contentModel => {\n        return () => history.push(\"/cms/content-models/manage/\" + contentModel.modelId);\n    }, undefined);\n\n    return (\n        <DataList\n            {...dataList}\n            title={t`Content Models`}\n            actions={<CurrentEnvironmentLabel style={{ justifyContent: \"flex-end\" }} />}\n            sorters={[\n                {\n                    label: t`Newest to oldest`,\n                    sorters: { createdOn: -1 }\n                },\n                {\n                    label: t`Oldest to newest`,\n                    sorters: { createdOn: 1 }\n                },\n                {\n                    label: t`Title A-Z`,\n                    sorters: { name: 1 }\n                },\n                {\n                    label: t`Title Z-A`,\n                    sorters: { name: -1 }\n                }\n            ]}\n        >\n            {({ data = [] }) => (\n                <List data-testid=\"default-data-list\">\n                    {data.map(contentModel => (\n                        <ListItem key={contentModel.id} className={listItemMinHeight}>\n                            <ListItemText>\n                                {contentModel.name}\n                                {contentModel.createdBy && (\n                                    <ListItemTextSecondary>\n                                        {contentModel.createdBy.firstName && (\n                                            <>\n                                                {t`Created by: {user}.`({\n                                                    user: contentModel.createdBy.firstName\n                                                })}{\" \"}\n                                            </>\n                                        )}\n\n                                        {t`Last modified: {time}.`({\n                                            time: <TimeAgo datetime={contentModel.savedOn} />\n                                        })}\n                                    </ListItemTextSecondary>\n                                )}\n                            </ListItemText>\n                            <ListItemMeta className={rightAlign}>\n                                <ListActions>\n                                    <Tooltip content={t`View content`} placement={\"top\"}>\n                                        <IconButton\n                                            icon={\n                                                <ViewListIcon className={viewEntriesIconStyles} />\n                                            }\n                                            label={t`View entries`}\n                                            onClick={viewContentEntries(contentModel)}\n                                        />\n                                    </Tooltip>\n                                    <Tooltip content={t`Edit content model`} placement={\"top\"}>\n                                        <EditIcon onClick={editRecord(contentModel)} />\n                                    </Tooltip>\n                                    <ConfirmationDialog>\n                                        {({ showConfirmation }) => (\n                                            <Tooltip\n                                                content={t`Delete content model`}\n                                                placement={\"top\"}\n                                            >\n                                                <DeleteIcon\n                                                    onClick={() =>\n                                                        showConfirmation(async () =>\n                                                            deleteRecord(contentModel)\n                                                        )\n                                                    }\n                                                />\n                                            </Tooltip>\n                                        )}\n                                    </ConfirmationDialog>\n                                </ListActions>\n                            </ListItemMeta>\n                        </ListItem>\n                    ))}\n                </List>\n            )}\n        </DataList>\n    );\n};\n\nexport default ContentModelsDataList;\n"],"file":"ContentModelsDataList.js"}