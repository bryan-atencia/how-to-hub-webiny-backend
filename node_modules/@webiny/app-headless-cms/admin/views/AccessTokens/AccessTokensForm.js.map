{"version":3,"sources":["../../../../src/admin/views/AccessTokens/AccessTokensForm.tsx"],"names":["React","Form","Grid","Cell","Input","CopyButton","ButtonPrimary","CircularProgress","useCrud","i18n","CheckboxGroup","Checkbox","useCms","SimpleFormHeader","SimpleForm","SimpleFormFooter","SimpleFormContent","validation","FormElementMessage","webinyCheckboxTitle","useSnackbar","t","ns","EnvironmentAliasesForm","showSnackbar","crudForm","form","environments","data","Bind","loading","name","create","props","token","background","padding","paddingLeft","lineHeight","verticalAlign","position","right","map","env","id","onChange","getValue","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { CopyButton } from \"@webiny/ui/Button\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CheckboxGroup, Checkbox } from \"@webiny/ui/Checkbox\";\n\nimport { useCms } from \"@webiny/app-headless-cms/admin/hooks\";\n\nimport {\n    SimpleFormHeader,\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { validation } from \"@webiny/validation\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\nimport { webinyCheckboxTitle } from \"@webiny/ui/Checkbox/Checkbox.styles\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/accessTokens/form\");\n\nfunction EnvironmentAliasesForm() {\n    const { showSnackbar } = useSnackbar();\n    const { form: crudForm } = useCrud();\n    const environments = useCms().environments.environments;\n\n    return (\n        <Form {...crudForm}>\n            {({ data, form, Bind }) => (\n                <SimpleForm data-testid={\"pb-environmentAliases-form\"}>\n                    {crudForm.loading && <CircularProgress />}\n                    <SimpleFormHeader title={data.name ? data.name : t`New Access Token`} />\n                    <SimpleFormContent>\n                        <Grid>\n                            <Cell span={12}>\n                                <Bind\n                                    name=\"name\"\n                                    validators={validation.create(\"required,maxLength:100\")}\n                                >\n                                    <Input label={t`Name`} />\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind name=\"description\">\n                                    {props => (\n                                        <Input\n                                            {...props}\n                                            rows={4}\n                                            maxLength={100}\n                                            characterCount\n                                            label={t`Description`}\n                                        />\n                                    )}\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind name=\"token\">\n                                    <div>\n                                        <div\n                                            className={\n                                                \"mdc-text-field-helper-text mdc-text-field-helper-text--persistent \" +\n                                                webinyCheckboxTitle\n                                            }\n                                        >\n                                            Token\n                                        </div>\n                                        {data.token ? (\n                                            <div\n                                                style={{\n                                                    background: \"var(--mdc-theme-background)\",\n                                                    padding: \"8px\",\n                                                    paddingLeft: \"16px\"\n                                                }}\n                                            >\n                                                <span\n                                                    style={{\n                                                        lineHeight: \"48px\",\n                                                        verticalAlign: \"middle\"\n                                                    }}\n                                                >\n                                                    {data.token}\n                                                </span>\n                                                <span\n                                                    style={{ position: \"absolute\", right: \"32px\" }}\n                                                >\n                                                    <CopyButton\n                                                        value={data.token}\n                                                        onCopy={() =>\n                                                            showSnackbar(\"Succesfully copied!\")\n                                                        }\n                                                    />\n                                                </span>\n                                            </div>\n                                        ) : (\n                                            <FormElementMessage>\n                                                Your Token will be shown once you save the form\n                                            </FormElementMessage>\n                                        )}\n                                    </div>\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind\n                                    name=\"selectedEnvironmentIds\"\n                                    defaultValue={(data.environments || []).map(env => env.id)}\n                                >\n                                    <CheckboxGroup\n                                        label=\"Environments\"\n                                        description={\n                                            \"Select the environments this token will be allowed to access.\"\n                                        }\n                                    >\n                                        {({ onChange, getValue }) => (\n                                            <React.Fragment>\n                                                {environments.map(({ id, name }) => (\n                                                    <div key={`access-token-environment-${id}`}>\n                                                        <Checkbox\n                                                            label={name}\n                                                            value={getValue(id)}\n                                                            onChange={onChange(id)}\n                                                        />\n                                                    </div>\n                                                ))}\n                                            </React.Fragment>\n                                        )}\n                                    </CheckboxGroup>\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    </SimpleFormContent>\n                    <SimpleFormFooter>\n                        <ButtonPrimary onClick={form.submit}>{t`Save Access Token`}</ButtonPrimary>\n                    </SimpleFormFooter>\n                </SimpleForm>\n            )}\n        </Form>\n    );\n}\n\nexport default EnvironmentAliasesForm;\n"],"file":"AccessTokensForm.js"}