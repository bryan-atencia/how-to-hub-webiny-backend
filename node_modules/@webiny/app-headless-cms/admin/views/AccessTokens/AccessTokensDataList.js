import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject8() {
  var data = _taggedTemplateLiteral(["No environment."]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Assigned to: {environments}"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["(default)"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Name Z-A"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Name A-Z"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Oldest to newest"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Newest to oldest"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Access Tokens"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { i18n } from "@webiny/app/i18n";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { DeleteIcon } from "@webiny/ui/List/DataList/icons";
import { useCrud } from "@webiny/app-admin/hooks/useCrud";
import { Typography } from "@webiny/ui/Typography";
import { DataList, List, ListItem, ListItemText, ListItemTextSecondary, ListItemMeta, ListActions } from "@webiny/ui/List";
import { Link } from "@webiny/react-router";
var t = i18n.ns("app-headless-cms/admin/environmentAliases/data-list");

var EnvironmentAliasesDataList = function EnvironmentAliasesDataList() {
  var _useCrud = useCrud(),
      actions = _useCrud.actions,
      list = _useCrud.list;

  return /*#__PURE__*/React.createElement(DataList, Object.assign({}, list, {
    title: t(_templateObject()),
    sorters: [{
      label: t(_templateObject2()),
      sorters: {
        createdOn: -1
      }
    }, {
      label: t(_templateObject3()),
      sorters: {
        createdOn: 1
      }
    }, {
      label: t(_templateObject4()),
      sorters: {
        name: 1
      }
    }, {
      label: t(_templateObject5()),
      sorters: {
        name: -1
      }
    }]
  }), function (_ref) {
    var data = _ref.data,
        isSelected = _ref.isSelected,
        select = _ref.select;
    return /*#__PURE__*/React.createElement(List, {
      "data-testid": "default-data-list"
    }, data.map(function (item) {
      return /*#__PURE__*/React.createElement(ListItem, {
        key: item.id,
        selected: isSelected(item)
      }, /*#__PURE__*/React.createElement(ListItemText, {
        onClick: function onClick() {
          return select(item);
        }
      }, item.name, " ", item.default && /*#__PURE__*/React.createElement(Typography, {
        use: "overline"
      }, t(_templateObject6())), /*#__PURE__*/React.createElement(ListItemTextSecondary, null, item.environments.length ? t(_templateObject7())({
        environments: /*#__PURE__*/React.createElement(React.Fragment, null, item.environments.map(function (env) {
          return /*#__PURE__*/React.createElement(Link, {
            key: env.id,
            onClick: function onClick(e) {
              return e.stopPropagation();
            },
            to: "/settings/cms/environments?id=".concat(env.id)
          }, env.name);
        }).reduce(function (acc, crtLink) {
          return [acc, ", ", crtLink];
        }))
      }) : t(_templateObject8()))), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(ConfirmationDialog, null, function (_ref2) {
        var showConfirmation = _ref2.showConfirmation;
        return /*#__PURE__*/React.createElement(DeleteIcon, {
          onClick: function onClick() {
            showConfirmation(function () {
              return actions.delete(item);
            });
          }
        });
      }))));
    }));
  });
};

export default EnvironmentAliasesDataList;
//# sourceMappingURL=AccessTokensDataList.js.map