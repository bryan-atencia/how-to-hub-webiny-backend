import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Save Access Token"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Description"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Name"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["New Access Token"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { Form } from "@webiny/form";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Input } from "@webiny/ui/Input";
import { CopyButton } from "@webiny/ui/Button";
import { ButtonPrimary } from "@webiny/ui/Button";
import { CircularProgress } from "@webiny/ui/Progress";
import { useCrud } from "@webiny/app-admin/hooks/useCrud";
import { i18n } from "@webiny/app/i18n";
import { CheckboxGroup, Checkbox } from "@webiny/ui/Checkbox";
import { useCms } from "@webiny/app-headless-cms/admin/hooks";
import { SimpleFormHeader, SimpleForm, SimpleFormFooter, SimpleFormContent } from "@webiny/app-admin/components/SimpleForm";
import { validation } from "@webiny/validation";
import { FormElementMessage } from "@webiny/ui/FormElementMessage";
import { webinyCheckboxTitle } from "@webiny/ui/Checkbox/Checkbox.styles";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
var t = i18n.ns("app-headless-cms/admin/accessTokens/form");

function EnvironmentAliasesForm() {
  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var _useCrud = useCrud(),
      crudForm = _useCrud.form;

  var environments = useCms().environments.environments;
  return /*#__PURE__*/React.createElement(Form, crudForm, function (_ref) {
    var data = _ref.data,
        form = _ref.form,
        Bind = _ref.Bind;
    return /*#__PURE__*/React.createElement(SimpleForm, {
      "data-testid": "pb-environmentAliases-form"
    }, crudForm.loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {
      title: data.name ? data.name : t(_templateObject())
    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "name",
      validators: validation.create("required,maxLength:100")
    }, /*#__PURE__*/React.createElement(Input, {
      label: t(_templateObject2())
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "description"
    }, function (props) {
      return /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {
        rows: 4,
        maxLength: 100,
        characterCount: true,
        label: t(_templateObject3())
      }));
    })), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "token"
    }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      className: "mdc-text-field-helper-text mdc-text-field-helper-text--persistent " + webinyCheckboxTitle
    }, "Token"), data.token ? /*#__PURE__*/React.createElement("div", {
      style: {
        background: "var(--mdc-theme-background)",
        padding: "8px",
        paddingLeft: "16px"
      }
    }, /*#__PURE__*/React.createElement("span", {
      style: {
        lineHeight: "48px",
        verticalAlign: "middle"
      }
    }, data.token), /*#__PURE__*/React.createElement("span", {
      style: {
        position: "absolute",
        right: "32px"
      }
    }, /*#__PURE__*/React.createElement(CopyButton, {
      value: data.token,
      onCopy: function onCopy() {
        return showSnackbar("Succesfully copied!");
      }
    }))) : /*#__PURE__*/React.createElement(FormElementMessage, null, "Your Token will be shown once you save the form")))), /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Bind, {
      name: "selectedEnvironmentIds",
      defaultValue: (data.environments || []).map(function (env) {
        return env.id;
      })
    }, /*#__PURE__*/React.createElement(CheckboxGroup, {
      label: "Environments",
      description: "Select the environments this token will be allowed to access."
    }, function (_ref2) {
      var onChange = _ref2.onChange,
          getValue = _ref2.getValue;
      return /*#__PURE__*/React.createElement(React.Fragment, null, environments.map(function (_ref3) {
        var id = _ref3.id,
            name = _ref3.name;
        return /*#__PURE__*/React.createElement("div", {
          key: "access-token-environment-".concat(id)
        }, /*#__PURE__*/React.createElement(Checkbox, {
          label: name,
          value: getValue(id),
          onChange: onChange(id)
        }));
      }));
    }))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {
      onClick: form.submit
    }, t(_templateObject4()))));
  });
}

export default EnvironmentAliasesForm;
//# sourceMappingURL=AccessTokensForm.js.map