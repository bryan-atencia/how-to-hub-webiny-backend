import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n    mutation deleteEnvironment($id: ID!) {\n        cms {\n            deleteEnvironment(id: $id) {\n                data\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n    mutation updateEnvironment($id: ID!, $data: CmsEnvironmentInput!){\n        cms {\n            environment: updateEnvironment(id: $id, data: $data) {\n                data {\n                    ", "\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n    mutation createEnvironment($data: CmsEnvironmentInput!){\n        cms {\n            environment: createEnvironment(data: $data) {\n                data {\n                    ", "\n                }\n                error {\n                    code\n                    message\n                    data\n                }\n            }\n        }\n    }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    query getEnvironment($id: ID!) {\n        cms {\n            environment: getEnvironment(id: $id){\n                data {\n                    ", "\n                }\n                error {\n                    code\n                    message\n                }\n            }\n        }\n    }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    query listEnvironments(\n        $where: JSON\n        $sort: JSON\n        $search: CmsSearchInput\n        $limit: Int\n        $after: String\n        $before: String\n    ) {\n        cms {\n            environments: listEnvironments(\n                where: $where\n                sort: $sort\n                search: $search\n                limit: $limit\n                after: $after\n                before: $before\n            ) {\n                data {\n                    id\n                    name\n                    isProduction\n                    createdOn\n                    environmentAlias {\n                        id\n                        name\n                    }\n                }\n                meta {\n                    cursors {\n                        next\n                        previous\n                    }\n                    hasNextPage\n                    hasPreviousPage\n                    totalCount\n                }\n            }\n        }\n    }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import gql from "graphql-tag";
var fields = "\n    id\n    name\n    description\n    createdFrom {\n        id\n        name\n    }\n";
export var LIST_ENVIRONMENTS = gql(_templateObject());
export var READ_ENVIRONMENT = gql(_templateObject2(), fields);
export var CREATE_ENVIRONMENT = gql(_templateObject3(), fields);
export var UPDATE_ENVIRONMENT = gql(_templateObject4(), fields);
export var DELETE_ENVIRONMENT = gql(_templateObject5());
//# sourceMappingURL=graphql.js.map