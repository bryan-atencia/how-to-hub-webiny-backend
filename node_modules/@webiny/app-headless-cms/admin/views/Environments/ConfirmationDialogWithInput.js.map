{"version":3,"sources":["../../../../src/admin/views/Environments/ConfirmationDialogWithInput.tsx"],"names":["React","css","noop","Dialog","DialogButton","DialogCancel","DialogActions","DialogTitle","DialogContent","Typography","Input","CircularProgress","Alert","i18n","t","ns","messageStyle","maxWidth","span","display","marginBottom","b","fontWeight","alignItems","width","marginLeft","confirmButtonStyles","backgroundColor","color","opacity","inputStyles","margin","ConfirmationDialogWithInput","onAccept","onCancel","show","loading","name","disableConfirm","callbacks","setState","__isMounted","value","prevProps","prevState","state","props","resourceName","hideConfirmation","title","message","handleOnchange","children","showConfirmation","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport noop from \"lodash/noop\";\nimport {\n    Dialog,\n    DialogButton,\n    DialogCancel,\n    DialogActions,\n    DialogTitle,\n    DialogContent\n} from \"@webiny/ui/Dialog\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { i18n } from \"@webiny/app/i18n\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/environments/data-list-utils\");\n\nconst messageStyle = css({\n    \"& .mdc-dialog__surface\": {\n        maxWidth: \"540px !important\"\n    },\n    \"& .mdc-dialog__content\": {\n        span: {\n            display: \"inline-block\",\n            marginBottom: 16\n        },\n        b: {\n            fontWeight: \"bold\"\n        }\n    },\n    \"& .mdc-dialog__actions\": {\n        alignItems: \"center !important\"\n    },\n    \"& .mdc-dialog__button\": {\n        width: \"100%\",\n        \"&:nth-child(2)\": {\n            marginLeft: \"0px !important\"\n        }\n    }\n});\n\nconst confirmButtonStyles = css({\n    backgroundColor: \"#FED7D7 !important\",\n    color: \"#9B2C2C !important\",\n    \"&:disabled\": {\n        opacity: 0.4\n    }\n});\n\nconst inputStyles = css({\n    margin: \"16px 0px\"\n});\n\ninterface ChildrenRenderProp {\n    showConfirmation: (onAccept?: Function, onCancel?: Function) => any;\n}\n\ninterface ConfirmationCallbacks {\n    onAccept: Function;\n    onCancel: Function;\n}\n\ntype Props = {\n    // Title of confirmation dialog.\n    title?: React.ReactNode;\n\n    // Message of confirmation dialog.\n    message?: React.ReactNode;\n\n    // This element will be rendered during loading\n    loading?: React.ReactNode;\n\n    // For testing purposes.\n    \"data-testid\"?: string;\n\n    // An element that will trigger the confirmation dialog.\n    children: (props: ChildrenRenderProp) => React.ReactNode;\n\n    // Is `Confirm` button disabled\n    resourceName?: string;\n};\n\ntype State = {\n    show: boolean;\n    loading: boolean;\n    name: string;\n    disableConfirm: boolean;\n};\n\n/**\n * Use ConfirmationDialog component to display a list of choices, once the handler is triggered.\n */\nclass ConfirmationDialogWithInput extends React.Component<Props, State> {\n    static defaultProps = {\n        title: \"Confirmation\",\n        message: \"Are you sure you want to continue?\",\n        loading: <CircularProgress />,\n        resourceName: null\n    };\n\n    __isMounted = false;\n\n    callbacks: ConfirmationCallbacks = {\n        onAccept: noop,\n        onCancel: noop\n    };\n\n    state = {\n        show: false,\n        loading: false,\n        name: \"\",\n        disableConfirm: true\n    };\n\n    componentDidMount() {\n        this.__isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this.__isMounted = false;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.name === this.state.name) {\n            return;\n        }\n\n        if (this.state.disableConfirm && this.state.name === this.props.resourceName) {\n            this.setState({ disableConfirm: false });\n        } else {\n            this.setState({ disableConfirm: true });\n        }\n    }\n\n    showConfirmation = (onAccept?: Function, onCancel?: Function) => {\n        this.callbacks = { onAccept, onCancel };\n        this.setState({ show: true });\n    };\n\n    hideConfirmation = () => {\n        this.setState({ show: false });\n    };\n\n    onAccept = async () => {\n        const { onAccept } = this.callbacks;\n        if (typeof onAccept === \"function\") {\n            this.setState({ loading: true });\n            await onAccept();\n            if (this.__isMounted) {\n                this.setState({ loading: false, show: false });\n            }\n        }\n    };\n\n    onCancel = async () => {\n        const { onCancel } = this.callbacks;\n        if (typeof onCancel === \"function\") {\n            await onCancel();\n        }\n    };\n\n    handleOnchange = value => {\n        this.setState({ name: value });\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Dialog\n                    className={messageStyle}\n                    open={this.state.show}\n                    onClose={this.hideConfirmation}\n                    data-testid={this.props[\"data-testid\"]}\n                >\n                    {this.state.loading ? this.props.loading : null}\n                    <DialogTitle>{this.props.title}</DialogTitle>\n                    <DialogContent>\n                        <Alert\n                            title={\"Wait! Let's review what you're about to do.\"}\n                            type={\"warning\"}\n                        />\n                        <Typography use={\"body1\"}>{this.props.message}</Typography> <br />\n                        <Typography use={\"body1\"}>\n                            {t`Please type {resourceName} to confirm.`({\n                                resourceName: <b>{this.props.resourceName}</b>\n                            })}\n                        </Typography>\n                        <Input\n                            className={inputStyles}\n                            value={this.state.name}\n                            onChange={this.handleOnchange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <DialogCancel onClick={this.onCancel}>Cancel</DialogCancel>\n                        <DialogButton\n                            className={confirmButtonStyles}\n                            data-testid=\"confirmationdialog-confirm-action\"\n                            onClick={this.onAccept}\n                            disabled={this.state.disableConfirm}\n                        >\n                            I understand the consequences, delete this environment\n                        </DialogButton>\n                    </DialogActions>\n                </Dialog>\n                {this.props.children({\n                    showConfirmation: this.showConfirmation\n                })}\n            </React.Fragment>\n        );\n    }\n}\n\nexport { ConfirmationDialogWithInput };\n"],"file":"ConfirmationDialogWithInput.js"}