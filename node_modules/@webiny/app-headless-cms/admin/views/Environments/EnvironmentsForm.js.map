{"version":3,"sources":["../../../../src/admin/views/Environments/EnvironmentsForm.tsx"],"names":["React","Form","Grid","Cell","Input","ButtonPrimary","CircularProgress","useCrud","i18n","validation","SimpleForm","SimpleFormFooter","SimpleFormContent","SimpleFormHeader","AutoComplete","t","ns","useCms","EnvironmentsForm","crudForm","form","createdFromOptions","environments","data","Bind","loading","name","create","props","id","submit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,iCAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SACIC,UADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,EAIIC,gBAJJ,QAKO,yCALP;AAMA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,IAAMC,CAAC,GAAGP,IAAI,CAACQ,EAAL,CAAQ,0CAAR,CAAV;AAEA,SAASC,MAAT,QAAuB,sCAAvB;;AAEA,SAASC,gBAAT,GAA4B;AAAA,iBACGX,OAAO,EADV;AAAA,MACVY,QADU,YAChBC,IADgB;;AAAA,gBAKpBH,MAAM,EALc;AAAA,MAIUI,kBAJV,WAIpBC,YAJoB,CAIJA,YAJI;;AAOxB,sBACI,oBAAC,IAAD,EAAUH,QAAV,EACK;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASG,IAAT,QAASA,IAAT;AAAA,QAAeC,IAAf,QAAeA,IAAf;AAAA,wBACG,oBAAC,UAAD;AAAY,qBAAa;AAAzB,OACKL,QAAQ,CAACM,OAAT,iBAAoB,oBAAC,gBAAD,OADzB,eAEI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEF,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACG,IAAjB,GAAwBX,CAAxB;AAAzB,MAFJ,eAGI,oBAAC,iBAAD,qBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,UAAU,EAAEN,UAAU,CAACkB,MAAX,CAAkB,wBAAlB;AAFhB,oBAII,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEZ,CAAF;AAAZ,MAJJ,CADJ,CADJ,eASI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACK,UAAAa,KAAK;AAAA,0BACF,oBAAC,KAAD,oBACQA,KADR;AAEI,QAAA,IAAI,EAAE,CAFV;AAGI,QAAA,SAAS,EAAE,GAHf;AAII,QAAA,cAAc,MAJlB;AAKI,QAAA,KAAK,EAAEb,CAAF;AALT,SADE;AAAA,KADV,CADJ,CATJ,eAuBI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,oBACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,UAAU,EAAE,CAACQ,IAAI,CAACM,EAAN,IAAYpB,UAAU,CAACkB,MAAX,CAAkB,UAAlB;AAF5B,OAIK,UAAAC,KAAK;AAAA,0BACF,oBAAC,YAAD,oBACQA,KADR;AAEI,QAAA,QAAQ,EAAE,CAAC,CAACL,IAAI,CAACM,EAFrB;AAGI,QAAA,KAAK,EAAEN,IAAI,CAACM,EAAL,GAAUd,CAAV,uBAA4BA,CAA5B,oBAHX;AAII,QAAA,OAAO,EAAEM,kBAJb;AAKI,QAAA,WAAW,EACPE,IAAI,CAACM,EAAL,GACMd,CADN,uBAEMA,CAFN;AANR,SADE;AAAA,KAJV,CADJ,CAvBJ,CADJ,CAHJ,eAiDI,oBAAC,gBAAD,qBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEK,IAAI,CAACU;AAA7B,OAAsCf,CAAtC,qBADJ,CAjDJ,CADH;AAAA,GADL,CADJ;AA2DH;;AAED,eAAeG,gBAAf","sourcesContent":["import React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { validation } from \"@webiny/validation\";\nimport {\n    SimpleForm,\n    SimpleFormFooter,\n    SimpleFormContent,\n    SimpleFormHeader\n} from \"@webiny/app-admin/components/SimpleForm\";\nimport { AutoComplete } from \"@webiny/ui/AutoComplete\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/environments/form\");\n\nimport { useCms } from \"@webiny/app-headless-cms/admin/hooks\";\n\nfunction EnvironmentsForm() {\n    const { form: crudForm } = useCrud();\n\n    const {\n        environments: { environments: createdFromOptions }\n    } = useCms();\n\n    return (\n        <Form {...crudForm}>\n            {({ form, data, Bind }) => (\n                <SimpleForm data-testid={\"pb-environments-form\"}>\n                    {crudForm.loading && <CircularProgress />}\n                    <SimpleFormHeader title={data.name ? data.name : t`New environment`} />\n                    <SimpleFormContent>\n                        <Grid>\n                            <Cell span={12}>\n                                <Bind\n                                    name=\"name\"\n                                    validators={validation.create(\"required,maxLength:100\")}\n                                >\n                                    <Input label={t`Name`} />\n                                </Bind>\n                            </Cell>\n                            <Cell span={12}>\n                                <Bind name=\"description\">\n                                    {props => (\n                                        <Input\n                                            {...props}\n                                            rows={4}\n                                            maxLength={200}\n                                            characterCount\n                                            label={t`Description`}\n                                        />\n                                    )}\n                                </Bind>\n                            </Cell>\n\n                            <Cell span={12}>\n                                <Bind\n                                    name=\"createdFrom\"\n                                    validators={!data.id && validation.create(\"required\")}\n                                >\n                                    {props => (\n                                        <AutoComplete\n                                            {...props}\n                                            disabled={!!data.id}\n                                            label={data.id ? t`Created from` : t`Base environment`}\n                                            options={createdFromOptions}\n                                            description={\n                                                data.id\n                                                    ? t`A base environment from which this one was created.`\n                                                    : t`A base environment from which the new one will be created.`\n                                            }\n                                        />\n                                    )}\n                                </Bind>\n                            </Cell>\n                        </Grid>\n                    </SimpleFormContent>\n                    <SimpleFormFooter>\n                        <ButtonPrimary onClick={form.submit}>{t`Save environment`}</ButtonPrimary>\n                    </SimpleFormFooter>\n                </SimpleForm>\n            )}\n        </Form>\n    );\n}\n\nexport default EnvironmentsForm;\n"],"file":"EnvironmentsForm.js"}