{"version":3,"sources":["../../../src/admin/components/EnvironmentSelectorDialog.tsx"],"names":["React","css","i18n","Dialog","DialogTitle","DialogContent","useCms","ButtonDefault","ButtonIcon","useRouter","List","ListItem","ListItemText","ListItemTextPrimary","ListItemTextSecondary","ListItemGraphic","t","ns","narrowDialog","width","minWidth","centeredBottomButton","textAlign","listWrapper","marginBottom","display","flexDirection","borderBottom","NewContentModelDialog","open","onClose","onSelectViewAll","onSelectEnvironment","environments","currentEnvironment","selectEnvironment","history","map","item","selected","id","color","name","environmentAlias","redirect","push","setTimeout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Dialog, DialogTitle, DialogContent } from \"@webiny/ui/Dialog\";\nimport { useCms } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { ButtonDefault, ButtonIcon } from \"@webiny/ui/Button\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { ReactComponent as DoneIcon } from \"@webiny/app-headless-cms/admin/icons/done-24px.svg\";\nimport { ReactComponent as ForwardIcon } from \"@webiny/app-headless-cms/admin/icons/arrow_forward-24px.svg\";\n\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextPrimary,\n    ListItemTextSecondary,\n    ListItemGraphic\n} from \"@webiny/ui/List\";\n\nexport type NewContentModelDialogProps = {\n    open: boolean;\n    onClose: () => void;\n    onSelectViewAll?: (args: { onClose: () => void; redirect: () => void }) => void;\n    onSelectEnvironment?: (args: { onClose: () => void }) => void;\n};\n\nconst t = i18n.ns(\"app-headless-cms/admin/components/environment-selector-dialog\");\n\nconst narrowDialog = css({\n    \".mdc-dialog__surface\": {\n        width: 400,\n        minWidth: 400\n    }\n});\n\nconst centeredBottomButton = css({\n    textAlign: \"center\",\n    width: \"100%\"\n});\n\nconst listWrapper = css({\n    marginBottom: 10,\n    display: \"flex\",\n    flexDirection: \"column\",\n    \".mdc-list .mdc-list-item\": {\n        borderBottom: \"1px solid var(--mdc-theme-on-background)\"\n    },\n    \".mdc-list .mdc-list-item:last-child\": {\n        borderBottom: \"none\"\n    }\n});\n\nconst NewContentModelDialog: React.FC<NewContentModelDialogProps> = ({\n    open,\n    onClose,\n    onSelectViewAll,\n    onSelectEnvironment\n}) => {\n    const {\n        environments: { currentEnvironment, environments, selectEnvironment }\n    } = useCms();\n\n    const { history } = useRouter();\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            className={narrowDialog}\n            data-testid=\"environment-selector-modal\"\n        >\n            <DialogTitle>{t`Change environment`}</DialogTitle>\n            <DialogContent>\n                <div className={listWrapper}>\n                    <List twoLine>\n                        {environments.map(item => {\n                            const selected =\n                                currentEnvironment && item.id === currentEnvironment.id;\n                            return (\n                                <ListItem\n                                    key={item.id}\n                                    onClick={() => {\n                                        if (selected) {\n                                            return;\n                                        }\n\n                                        if (typeof onSelectEnvironment === \"function\") {\n                                            onSelectEnvironment({\n                                                onClose\n                                            });\n                                        } else {\n                                            selectEnvironment(item);\n                                            onClose();\n                                        }\n                                    }}\n                                >\n                                    <ListItemGraphic>\n                                        {selected && (\n                                            <DoneIcon\n                                                style={{ color: \"var(--mdc-theme-primary)\" }}\n                                            />\n                                        )}\n                                    </ListItemGraphic>\n                                    <ListItemText>\n                                        <ListItemTextPrimary>{item.name}</ListItemTextPrimary>\n                                        <ListItemTextSecondary>\n                                            Alias:{\" \"}\n                                            {item.environmentAlias\n                                                ? item.environmentAlias.name\n                                                : t`None`}\n                                        </ListItemTextSecondary>\n                                    </ListItemText>\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </div>\n\n                <div className={centeredBottomButton}>\n                    <ButtonDefault\n                        onClick={() => {\n                            if (typeof onSelectViewAll === \"function\") {\n                                onSelectViewAll({\n                                    onClose,\n                                    redirect: () => history.push(\"/settings/cms/environments\")\n                                });\n                            } else {\n                                onClose();\n                                // Give the dialog a chance to close properly.\n                                setTimeout(() => history.push(\"/settings/cms/environments\"), 250);\n                            }\n                        }}\n                    >\n                        <ButtonIcon icon={<ForwardIcon />} />\n                        {t`Manage environments`}\n                    </ButtonDefault>\n                </div>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default NewContentModelDialog;\n"],"file":"EnvironmentSelectorDialog.js"}