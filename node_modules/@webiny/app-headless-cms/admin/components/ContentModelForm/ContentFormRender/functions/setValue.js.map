{"version":3,"sources":["../../../../../../src/admin/components/ContentModelForm/ContentFormRender/functions/setValue.ts"],"names":["cloneDeep","setValue","value","bind","locale","field","index","newValue","values","valueLocaleIndex","findIndex","item","multipleValues","Array","isArray","push","length","filter","onChange"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,kBAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA2C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACxD,MAAMC,QAAQ,GAAGP,SAAS;AAAGQ,IAAAA,MAAM,EAAE;AAAX,KAAkBL,IAAI,CAACD,KAAvB,EAA1B;AAEA,MAAIO,gBAAgB,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,SAAhB,CAA0B,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACP,MAAL,KAAgBA,MAApB;AAAA,GAA9B,CAAvB;;AAEA,MAAIC,KAAK,CAACO,cAAV,EAA0B;AACtB,QAAIH,gBAAgB,IAAI,CAAxB,EAA2B;AACvB,UAAI,CAACI,KAAK,CAACC,OAAN,CAAcP,QAAQ,CAACC,MAAT,CAAgBC,gBAAhB,EAAkCP,KAAhD,CAAL,EAA6D;AACzDK,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,gBAAhB,EAAkCP,KAAlC,GAA0C,EAA1C;AACH;AACJ,KAJD,MAIO;AACHK,MAAAA,QAAQ,CAACC,MAAT,CAAgBO,IAAhB,CAAqB;AAAEX,QAAAA,MAAM,EAANA,MAAF;AAAUF,QAAAA,KAAK,EAAE;AAAjB,OAArB;AACAO,MAAAA,gBAAgB,GAAGF,QAAQ,CAACC,MAAT,CAAgBQ,MAAhB,GAAyB,CAA5C;AACH;;AAED,QAAIV,KAAK,IAAI,CAAb,EAAgB;AACZC,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,gBAAhB,EAAkCP,KAAlC,CAAwCI,KAAxC,IAAiDJ,KAAjD;AACH,KAFD,MAEO;AACHK,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,gBAAhB,EAAkCP,KAAlC,GAA0CA,KAA1C;AACH;AACJ,GAfD,MAeO;AACH,QAAIO,gBAAgB,IAAI,CAAxB,EAA2B;AACvBF,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,gBAAhB,EAAkCP,KAAlC,GAA0CA,KAA1C;AACH,KAFD,MAEO;AACHK,MAAAA,QAAQ,CAACC,MAAT,CAAgBO,IAAhB,CAAqB;AAAEX,QAAAA,MAAM,EAANA,MAAF;AAAUF,QAAAA,KAAK,EAALA;AAAV,OAArB;AACH;AACJ,GA1BuD,CA4BxD;;;AACAK,EAAAA,QAAQ,CAACC,MAAT,GAAkBD,QAAQ,CAACC,MAAT,CAAgBS,MAAhB,CAAuB,UAAAN,IAAI;AAAA,WAAI,CAAC,CAACA,IAAI,CAACT,KAAX;AAAA,GAA3B,CAAlB;AACAC,EAAAA,IAAI,CAACe,QAAL,CAAcX,QAAd;AACH,CA/BD;;AAiCA,eAAeN,QAAf","sourcesContent":["import cloneDeep from \"lodash/cloneDeep\";\n\nconst setValue = ({ value, bind, locale, field, index }) => {\n    const newValue = cloneDeep({ values: [], ...bind.value });\n\n    let valueLocaleIndex = newValue.values.findIndex(item => item.locale === locale);\n\n    if (field.multipleValues) {\n        if (valueLocaleIndex >= 0) {\n            if (!Array.isArray(newValue.values[valueLocaleIndex].value)) {\n                newValue.values[valueLocaleIndex].value = [];\n            }\n        } else {\n            newValue.values.push({ locale, value: [] });\n            valueLocaleIndex = newValue.values.length - 1;\n        }\n\n        if (index >= 0) {\n            newValue.values[valueLocaleIndex].value[index] = value;\n        } else {\n            newValue.values[valueLocaleIndex].value = value;\n        }\n    } else {\n        if (valueLocaleIndex >= 0) {\n            newValue.values[valueLocaleIndex].value = value;\n        } else {\n            newValue.values.push({ locale, value });\n        }\n    }\n\n    // Filter out redundant empty values.\n    newValue.values = newValue.values.filter(item => !!item.value);\n    bind.onChange(newValue);\n};\n\nexport default setValue;\n"],"file":"setValue.js"}