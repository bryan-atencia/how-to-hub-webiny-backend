import React, { useEffect, useRef, useMemo } from "react";
import { Form } from "@webiny/form";
import { Grid, Cell } from "@webiny/ui/Grid";
import { CircularProgress } from "@webiny/ui/Progress";
import { getPlugins } from "@webiny/plugins";
import RenderFieldElement from "./ContentFormRender/RenderFieldElement";
import styled from "@emotion/styled";
var FormWrapper = /*#__PURE__*/styled("div", {
  target: "e1jm1wcw0",
  label: "FormWrapper"
})({
  height: "70vh",
  overflow: "auto"
});
export var ContentFormRender = function ContentFormRender(_ref) {
  var getFields = _ref.getFields,
      getDefaultValues = _ref.getDefaultValues,
      _ref$loading = _ref.loading,
      loading = _ref$loading === void 0 ? false : _ref$loading,
      content = _ref.content,
      contentModel = _ref.contentModel,
      onSubmit = _ref.onSubmit,
      onChange = _ref.onChange,
      locale = _ref.locale,
      _ref$onForm = _ref.onForm,
      onForm = _ref$onForm === void 0 ? null : _ref$onForm;
  // All form fields - an array of rows where each row is an array that contain fields.
  var fields = getFields();
  var ref = useRef(null);
  useEffect(function () {
    typeof onForm === "function" && onForm(ref.current);
  }, []);
  var renderPlugins = useMemo(function () {
    return getPlugins("cms-editor-field-renderer");
  }, []);
  return /*#__PURE__*/React.createElement(Form, {
    onChange: onChange,
    onSubmit: onSubmit,
    data: content ? content : getDefaultValues(),
    ref: ref
  }, function (_ref2) {
    var Bind = _ref2.Bind;
    return /*#__PURE__*/React.createElement(FormWrapper, {
      "data-testid": "cms-content-form"
    }, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(Grid, null, fields.map(function (row, rowIndex) {
      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: rowIndex
      }, row.map(function (field) {
        return /*#__PURE__*/React.createElement(Cell, {
          span: Math.floor(12 / row.length),
          key: field._id
        }, /*#__PURE__*/React.createElement(RenderFieldElement, {
          field: field,
          Bind: Bind,
          locale: locale,
          renderPlugins: renderPlugins,
          contentModel: contentModel
        }));
      }));
    })));
  });
};
//# sourceMappingURL=ContentFormRender.js.map