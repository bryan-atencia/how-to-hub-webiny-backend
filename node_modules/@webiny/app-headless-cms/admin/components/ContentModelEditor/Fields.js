import React from "react";
import { getPlugins } from "@webiny/plugins";
import styled from "@emotion/styled";
import { Icon } from "@webiny/ui/Icon";
import Draggable from "./Draggable";
var FieldContainer = /*#__PURE__*/styled("div", {
  target: "e1l5uh720",
  label: "FieldContainer"
})({
  padding: "10px 15px",
  marginBottom: 20,
  display: "flex",
  width: "100%",
  backgroundColor: "var(--mdc-theme-on-background)",
  borderRadius: 15,
  boxSizing: "border-box",
  cursor: "grab",
  opacity: 1,
  transition: "opacity 225ms",
  "&:hover": {
    opacity: 0.8
  },
  "&:last-child": {
    marginBottom: 0
  }
});
var FileInfo = /*#__PURE__*/styled("div", {
  target: "e1l5uh721",
  label: "FileInfo"
})({});
var FieldLabel = /*#__PURE__*/styled("div", {
  target: "e1l5uh722",
  label: "FieldLabel"
})({
  textTransform: "uppercase",
  lineHeight: "145%",
  color: "var(--mdc-theme-on-surface)"
});
var FieldDescription = /*#__PURE__*/styled("div", {
  target: "e1l5uh723",
  label: "FieldDescription"
})({
  fontSize: 14,
  color: "var(--mdc-theme-text-secondary-on-background)"
});
var FieldHandle = /*#__PURE__*/styled("div", {
  target: "e1l5uh724",
  label: "FieldHandle"
})({
  marginRight: 15,
  color: "var(--mdc-theme-on-surface)"
});

var Field = function Field(_ref) {
  var onFieldDragStart = _ref.onFieldDragStart,
      _ref$fieldType = _ref.fieldType,
      type = _ref$fieldType.type,
      label = _ref$fieldType.label,
      icon = _ref$fieldType.icon,
      description = _ref$fieldType.description;
  return /*#__PURE__*/React.createElement(Draggable, {
    beginDrag: {
      ui: "field",
      type: type
    }
  }, function (_ref2) {
    var drag = _ref2.drag;
    return /*#__PURE__*/React.createElement("div", {
      ref: drag,
      style: {
        marginBottom: 10
      },
      onDragStart: onFieldDragStart
    }, /*#__PURE__*/React.createElement(FieldContainer, null, /*#__PURE__*/React.createElement(FieldHandle, null, /*#__PURE__*/React.createElement(Icon, {
      icon: icon
    })), /*#__PURE__*/React.createElement(FileInfo, null, /*#__PURE__*/React.createElement(FieldLabel, null, label), /*#__PURE__*/React.createElement(FieldDescription, null, description))));
  });
};

export var Fields = function Fields(_ref3) {
  var onFieldDragStart = _ref3.onFieldDragStart;
  var fieldTypePlugin = getPlugins("cms-editor-field-type");
  return /*#__PURE__*/React.createElement(React.Fragment, null, fieldTypePlugin.map(function (fieldPlugin) {
    return /*#__PURE__*/React.createElement(Field, {
      key: fieldPlugin.field.type,
      fieldType: fieldPlugin.field,
      onFieldDragStart: onFieldDragStart
    });
  }));
};
//# sourceMappingURL=Fields.js.map