import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

function _templateObject8() {
  var data = _taggedTemplateLiteral(["Before creating an index, please add at least one field to the content model."]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Index removed. To apply the changes, please save the content model."]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["You are about to remove the {index} index. Are you sure you want to continue?"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Confirm index removal"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["The index for the \"id\" field cannot be deleted."]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["N/A"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Created: {time}"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Add index"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useCallback, useState } from "react";
import { css } from "emotion";
import { useContentModelEditor } from "@webiny/app-headless-cms/admin/components/ContentModelEditor/Context";
import { Elevation } from "@webiny/ui/Elevation";
import { List, ListActions, ListItem, ListItemMeta, ListItemText, ListItemTextPrimary, ListItemTextSecondary } from "@webiny/ui/List";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { DeleteIcon } from "@webiny/ui/List/DataList/icons";
import { ButtonDefault, ButtonIcon } from "@webiny/ui/Button";
import { ReactComponent as AddIcon } from "@svgr/webpack!@webiny/app-admin/assets/icons/round-add-24px.svg";
import NewIndexDialog from "./NewIndexDialog";
import { i18n } from "@webiny/app/i18n";
import TimeAgo from "timeago-react";
import { Tooltip } from "@webiny/ui/Tooltip";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
var t = i18n.ns("app-headless-cms/admin/components/editor/tabs/indexes");
var style = {
  previewWrapper: /*#__PURE__*/css({
    padding: 40,
    backgroundColor: "var(--webiny-theme-color-surface, #fff) !important",
    margin: 40,
    boxSizing: "border-box"
  }, "label:previewWrapper;"),
  listWrapper: /*#__PURE__*/css({
    marginBottom: 10,
    display: "flex",
    flexDirection: "column",
    ".mdc-list .mdc-list-item": {
      borderBottom: "1px solid var(--mdc-theme-on-background)"
    },
    ".mdc-list .mdc-list-item:last-child": {
      borderBottom: "none"
    }
  }, "label:listWrapper;"),
  addIndexButton: /*#__PURE__*/css({
    textAlign: "center",
    width: "100%"
  }, "label:addIndexButton;"),
  noFieldsMessage: /*#__PURE__*/css({
    textAlign: "center"
  }, "label:noFieldsMessage;")
};
export var IndexesTab = function IndexesTab() {
  var _useContentModelEdito = useContentModelEditor(),
      data = _useContentModelEdito.data,
      setData = _useContentModelEdito.setData;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      dialogOpen = _useState2[0],
      setDialogOpen = _useState2[1];

  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var indexes = data.indexes,
      fields = data.fields;
  var isDefaultIdIndex = useCallback(function (index) {
    return index.fields.length === 1 && index.fields[0] === "id";
  }, []);
  return /*#__PURE__*/React.createElement(Elevation, {
    z: 1,
    className: style.previewWrapper
  }, fields && fields.length ? /*#__PURE__*/React.createElement("div", {
    className: style.listWrapper
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: style.addIndexButton
  }, /*#__PURE__*/React.createElement(ButtonDefault, {
    onClick: function onClick() {
      return setDialogOpen(true);
    }
  }, /*#__PURE__*/React.createElement(ButtonIcon, {
    icon: /*#__PURE__*/React.createElement(AddIcon, null)
  }), t(_templateObject())), /*#__PURE__*/React.createElement(NewIndexDialog, {
    open: dialogOpen,
    onClose: function onClose() {
      return setDialogOpen(false);
    }
  })), /*#__PURE__*/React.createElement(List, {
    twoLine: true
  }, indexes.map(function (item) {
    var fieldsList = item.fields.join(", ");
    return /*#__PURE__*/React.createElement(ListItem, {
      key: fieldsList
    }, /*#__PURE__*/React.createElement(ListItemText, null, /*#__PURE__*/React.createElement(ListItemTextPrimary, null, fieldsList), /*#__PURE__*/React.createElement(ListItemTextSecondary, null, item.createdOn ? t(_templateObject2())({
      time: /*#__PURE__*/React.createElement(TimeAgo, {
        datetime: item.createdOn
      })
    }) : t(_templateObject3()))), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(ListActions, null, isDefaultIdIndex(item) ? /*#__PURE__*/React.createElement(Tooltip, {
      placement: "bottom",
      content: /*#__PURE__*/React.createElement("span", null, t(_templateObject4()))
    }, /*#__PURE__*/React.createElement(DeleteIcon, {
      disabled: true
    })) : /*#__PURE__*/React.createElement(ConfirmationDialog, {
      title: t(_templateObject5()),
      message: t(_templateObject6())({
        index: /*#__PURE__*/React.createElement("strong", null, item.fields.join(", "))
      })
    }, function (_ref) {
      var showConfirmation = _ref.showConfirmation;
      return /*#__PURE__*/React.createElement(DeleteIcon, {
        onClick: function onClick() {
          showConfirmation(function () {
            setData(function (data) {
              var itemHash = item.fields.sort().join();
              var index = data.indexes.findIndex(function (current) {
                var currentHash = current.fields.sort().join();
                return itemHash === currentHash;
              });
              data.indexes.splice(index, 1);
              return data;
            });
            showSnackbar(t(_templateObject7()));
          });
        }
      });
    }))));
  })))) : /*#__PURE__*/React.createElement("div", {
    className: style.noFieldsMessage
  }, t(_templateObject8())));
};
//# sourceMappingURL=IndexesTab.js.map