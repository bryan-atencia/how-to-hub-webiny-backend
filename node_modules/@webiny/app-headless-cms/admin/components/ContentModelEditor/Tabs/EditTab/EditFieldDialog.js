import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _cloneDeep from "lodash/cloneDeep";

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Save"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Cancel"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Appearance"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Predefined Values"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["General"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Field Settings - {fieldTypeLabel}"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Field Settings"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useState, useEffect, useCallback } from "react";
import { css } from "emotion";
import { Dialog, DialogContent, DialogTitle, DialogActions, DialogButton } from "@webiny/ui/Dialog";
import { Form } from "@webiny/form";
import { Tabs, Tab } from "@webiny/ui/Tabs";
import GeneralTab from "./EditFieldDialog/GeneralTab";
import AppearanceTab from "./EditFieldDialog/AppearanceTab";
import PredefinedValuesTab from "./EditFieldDialog/PredefinedValuesTab";
import { i18n } from "@webiny/app/i18n";
import { useContentModelEditor } from "@webiny/app-headless-cms/admin/components/ContentModelEditor/Context";
import { getPlugins } from "@webiny/plugins";
var t = i18n.namespace("app-headless-cms/admin/components/editor");
var dialogBody = /*#__PURE__*/css({
  "&.webiny-ui-dialog__content": {
    width: 875,
    height: 450
  }
}, "label:dialogBody;");

var EditFieldDialog = function EditFieldDialog(_ref) {
  var field = _ref.field,
      onSubmit = _ref.onSubmit,
      props = _objectWithoutProperties(_ref, ["field", "onSubmit"]);

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      current = _useState2[0],
      setCurrent = _useState2[1];

  var _useContentModelEdito = useContentModelEditor(),
      getFieldPlugin = _useContentModelEdito.getFieldPlugin;

  useEffect(function () {
    if (!field) {
      return setCurrent(field);
    }

    var clonedField = _cloneDeep(field);

    if (!clonedField.renderer || !clonedField.renderer.name) {
      var _getPlugins$filter = getPlugins("cms-editor-field-renderer").filter(function (item) {
        return item.renderer.canUse({
          field: field
        });
      }),
          _getPlugins$filter2 = _slicedToArray(_getPlugins$filter, 1),
          renderPlugin = _getPlugins$filter2[0];

      if (renderPlugin) {
        clonedField.renderer = {
          name: renderPlugin.renderer.rendererName
        };
      }
    }

    setCurrent(clonedField);
  }, [field]);
  var onClose = useCallback(function () {
    setCurrent(null);
    props.onClose();
  }, undefined);
  var render = null;
  var headerTitle = t(_templateObject());

  if (current) {
    var fieldPlugin = getFieldPlugin({
      type: current.type
    });

    if (fieldPlugin) {
      headerTitle = t(_templateObject2())({
        fieldTypeLabel: fieldPlugin.field.label
      });
    }

    render = /*#__PURE__*/React.createElement(Form, {
      data: current,
      onSubmit: onSubmit
    }, function (form) {
      var predefinedValuesTabEnabled = fieldPlugin.field.allowPredefinedValues && form.data.predefinedValues && form.data.predefinedValues.enabled;
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogContent, {
        className: dialogBody
      }, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {
        label: t(_templateObject3())
      }, /*#__PURE__*/React.createElement(GeneralTab, {
        form: form,
        field: form.data,
        fieldPlugin: fieldPlugin
      })), /*#__PURE__*/React.createElement(Tab, {
        label: t(_templateObject4()),
        disabled: !predefinedValuesTabEnabled
      }, predefinedValuesTabEnabled && /*#__PURE__*/React.createElement(PredefinedValuesTab, {
        form: form,
        field: form.data,
        fieldPlugin: fieldPlugin
      })), /*#__PURE__*/React.createElement(Tab, {
        label: t(_templateObject5())
      }, /*#__PURE__*/React.createElement(AppearanceTab, {
        form: form,
        field: form.data,
        fieldPlugin: fieldPlugin
      })))), /*#__PURE__*/React.createElement(DialogActions, {
        style: {
          justifyContent: "flex-end"
        }
      }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(DialogButton, {
        onClick: onClose
      }, t(_templateObject6())), /*#__PURE__*/React.createElement(DialogButton, {
        onClick: form.submit
      }, t(_templateObject7())))));
    });
  }

  return /*#__PURE__*/React.createElement(Dialog, {
    preventOutsideDismiss: true,
    open: !!current,
    onClose: onClose
  }, /*#__PURE__*/React.createElement(DialogTitle, null, headerTitle), render);
};

export default EditFieldDialog;
//# sourceMappingURL=EditFieldDialog.js.map