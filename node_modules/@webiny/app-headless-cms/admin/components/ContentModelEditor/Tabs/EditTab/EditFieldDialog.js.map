{"version":3,"sources":["../../../../../../src/admin/components/ContentModelEditor/Tabs/EditTab/EditFieldDialog.tsx"],"names":["React","useState","useEffect","useCallback","css","Dialog","DialogContent","DialogTitle","DialogActions","DialogButton","Form","Tabs","Tab","GeneralTab","AppearanceTab","PredefinedValuesTab","i18n","useContentModelEditor","getPlugins","t","namespace","dialogBody","width","height","EditFieldDialog","field","onSubmit","props","current","setCurrent","getFieldPlugin","clonedField","renderer","name","filter","item","canUse","renderPlugin","rendererName","onClose","undefined","render","headerTitle","fieldPlugin","type","fieldTypeLabel","label","form","predefinedValuesTabEnabled","allowPredefinedValues","data","predefinedValues","enabled","justifyContent","submit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,WAAhC,EAA6CC,aAA7C,EAA4DC,YAA5D,QAAgF,mBAAhF;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,qBAAT,QAAsC,sEAAtC;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,IAAMC,CAAC,GAAGH,IAAI,CAACI,SAAL,CAAe,0CAAf,CAAV;AAEA,IAAMC,UAAU,gBAAGjB,GAAG,CAAC;AACnB,iCAA+B;AAC3BkB,IAAAA,KAAK,EAAE,GADoB;AAE3BC,IAAAA,MAAM,EAAE;AAFmB;AADZ,CAAD,sBAAtB;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAyD;AAAA,MAAtDC,KAAsD,QAAtDA,KAAsD;AAAA,MAA/CC,QAA+C,QAA/CA,QAA+C;AAAA,MAAlCC,KAAkC;;AAAA,kBAC/C1B,QAAQ,CAAC,IAAD,CADuC;AAAA;AAAA,MACtE2B,OADsE;AAAA,MAC7DC,UAD6D;;AAAA,8BAGlDZ,qBAAqB,EAH6B;AAAA,MAGrEa,cAHqE,yBAGrEA,cAHqE;;AAK7E5B,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACuB,KAAL,EAAY;AACR,aAAOI,UAAU,CAACJ,KAAD,CAAjB;AACH;;AAED,QAAMM,WAAW,GAAG,WAAUN,KAAV,CAApB;;AAEA,QAAI,CAACM,WAAW,CAACC,QAAb,IAAyB,CAACD,WAAW,CAACC,QAAZ,CAAqBC,IAAnD,EAAyD;AAAA,+BAC9Bf,UAAU,CAC7B,2BAD6B,CAAV,CAErBgB,MAFqB,CAEd,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACH,QAAL,CAAcI,MAAd,CAAqB;AAAEX,UAAAA,KAAK,EAALA;AAAF,SAArB,CAAJ;AAAA,OAFU,CAD8B;AAAA;AAAA,UAC9CY,YAD8C;;AAKrD,UAAIA,YAAJ,EAAkB;AACdN,QAAAA,WAAW,CAACC,QAAZ,GAAuB;AAAEC,UAAAA,IAAI,EAAEI,YAAY,CAACL,QAAb,CAAsBM;AAA9B,SAAvB;AACH;AACJ;;AAEDT,IAAAA,UAAU,CAACE,WAAD,CAAV;AACH,GAlBQ,EAkBN,CAACN,KAAD,CAlBM,CAAT;AAoBA,MAAMc,OAAO,GAAGpC,WAAW,CAAC,YAAM;AAC9B0B,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,KAAK,CAACY,OAAN;AACH,GAH0B,EAGxBC,SAHwB,CAA3B;AAKA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,WAAW,GAAGvB,CAAH,mBAAf;;AAEA,MAAIS,OAAJ,EAAa;AACT,QAAMe,WAAW,GAAGb,cAAc,CAAC;AAAEc,MAAAA,IAAI,EAAEhB,OAAO,CAACgB;AAAhB,KAAD,CAAlC;;AACA,QAAID,WAAJ,EAAiB;AACbD,MAAAA,WAAW,GAAGvB,CAAC,oBAAD,CAAqC;AAC/C0B,QAAAA,cAAc,EAAEF,WAAW,CAAClB,KAAZ,CAAkBqB;AADa,OAArC,CAAd;AAGH;;AAEDL,IAAAA,MAAM,gBACF,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEb,OAAZ;AAAqB,MAAA,QAAQ,EAAEF;AAA/B,OACK,UAAAqB,IAAI,EAAI;AACL,UAAMC,0BAA0B,GAC5BL,WAAW,CAAClB,KAAZ,CAAkBwB,qBAAlB,IACAF,IAAI,CAACG,IAAL,CAAUC,gBADV,IAEAJ,IAAI,CAACG,IAAL,CAAUC,gBAAV,CAA2BC,OAH/B;AAKA,0BACI,uDACI,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAE/B;AAA1B,sBACI,oBAAC,IAAD,qBACI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEF,CAAF;AAAV,sBACI,oBAAC,UAAD;AACI,QAAA,IAAI,EAAE4B,IADV;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACG,IAFhB;AAGI,QAAA,WAAW,EAAEP;AAHjB,QADJ,CADJ,eAQI,oBAAC,GAAD;AACI,QAAA,KAAK,EAAExB,CAAF,oBADT;AAEI,QAAA,QAAQ,EAAE,CAAC6B;AAFf,SAIKA,0BAA0B,iBACvB,oBAAC,mBAAD;AACI,QAAA,IAAI,EAAED,IADV;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACG,IAFhB;AAGI,QAAA,WAAW,EAAEP;AAHjB,QALR,CARJ,eAgCI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAExB,CAAF;AAAV,sBACI,oBAAC,aAAD;AACI,QAAA,IAAI,EAAE4B,IADV;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACG,IAFhB;AAGI,QAAA,WAAW,EAAEP;AAHjB,QADJ,CAhCJ,CADJ,CADJ,eA2CI,oBAAC,aAAD;AACI,QAAA,KAAK,EAAE;AACHU,UAAAA,cAAc,EAAE;AADb;AADX,sBAKI,8CACI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEd;AAAvB,SAAiCpB,CAAjC,qBADJ,eAEI,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE4B,IAAI,CAACO;AAA5B,SAAqCnC,CAArC,qBAFJ,CALJ,CA3CJ,CADJ;AAwDH,KA/DL,CADJ;AAmEH;;AAED,sBACI,oBAAC,MAAD;AAAQ,IAAA,qBAAqB,MAA7B;AAA8B,IAAA,IAAI,EAAE,CAAC,CAACS,OAAtC;AAA+C,IAAA,OAAO,EAAEW;AAAxD,kBACI,oBAAC,WAAD,QAAcG,WAAd,CADJ,EAEKD,MAFL,CADJ;AAMH,CApHD;;AAsHA,eAAejB,eAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { css } from \"emotion\";\nimport { Dialog, DialogContent, DialogTitle, DialogActions, DialogButton } from \"@webiny/ui/Dialog\";\nimport { Form } from \"@webiny/form\";\nimport { Tabs, Tab } from \"@webiny/ui/Tabs\";\nimport GeneralTab from \"./EditFieldDialog/GeneralTab\";\nimport ValidatorsTab from \"./EditFieldDialog/ValidatorsTab\";\nimport AppearanceTab from \"./EditFieldDialog/AppearanceTab\";\nimport PredefinedValuesTab from \"./EditFieldDialog/PredefinedValuesTab\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { useContentModelEditor } from \"@webiny/app-headless-cms/admin/components/ContentModelEditor/Context\";\nimport { CmsEditorField, CmsEditorFieldRendererPlugin } from \"@webiny/app-headless-cms/types\";\nimport { getPlugins } from \"@webiny/plugins\";\nconst t = i18n.namespace(\"app-headless-cms/admin/components/editor\");\n\nconst dialogBody = css({\n    \"&.webiny-ui-dialog__content\": {\n        width: 875,\n        height: 450\n    }\n});\n\ntype EditFieldDialogProps = {\n    field: CmsEditorField;\n    onClose: Function;\n    onSubmit: (data: any) => void;\n};\n\nconst EditFieldDialog = ({ field, onSubmit, ...props }: EditFieldDialogProps) => {\n    const [current, setCurrent] = useState(null);\n\n    const { getFieldPlugin } = useContentModelEditor();\n\n    useEffect(() => {\n        if (!field) {\n            return setCurrent(field);\n        }\n\n        const clonedField = cloneDeep(field);\n\n        if (!clonedField.renderer || !clonedField.renderer.name) {\n            const [renderPlugin] = getPlugins<CmsEditorFieldRendererPlugin>(\n                \"cms-editor-field-renderer\"\n            ).filter(item => item.renderer.canUse({ field }));\n\n            if (renderPlugin) {\n                clonedField.renderer = { name: renderPlugin.renderer.rendererName };\n            }\n        }\n\n        setCurrent(clonedField);\n    }, [field]);\n\n    const onClose = useCallback(() => {\n        setCurrent(null);\n        props.onClose();\n    }, undefined);\n\n    let render = null;\n    let headerTitle = t`Field Settings`;\n\n    if (current) {\n        const fieldPlugin = getFieldPlugin({ type: current.type });\n        if (fieldPlugin) {\n            headerTitle = t`Field Settings - {fieldTypeLabel}`({\n                fieldTypeLabel: fieldPlugin.field.label\n            });\n        }\n\n        render = (\n            <Form data={current} onSubmit={onSubmit}>\n                {form => {\n                    const predefinedValuesTabEnabled =\n                        fieldPlugin.field.allowPredefinedValues &&\n                        form.data.predefinedValues &&\n                        form.data.predefinedValues.enabled;\n\n                    return (\n                        <>\n                            <DialogContent className={dialogBody}>\n                                <Tabs>\n                                    <Tab label={t`General`}>\n                                        <GeneralTab\n                                            form={form}\n                                            field={form.data as CmsEditorField}\n                                            fieldPlugin={fieldPlugin}\n                                        />\n                                    </Tab>\n                                    <Tab\n                                        label={t`Predefined Values`}\n                                        disabled={!predefinedValuesTabEnabled}\n                                    >\n                                        {predefinedValuesTabEnabled && (\n                                            <PredefinedValuesTab\n                                                form={form}\n                                                field={form.data as CmsEditorField}\n                                                fieldPlugin={fieldPlugin}\n                                            />\n                                        )}\n                                    </Tab>\n\n                                    {/* TODO: Add validators functionality.\n                                {Array.isArray(fieldPlugin.field.validators) &&\n                                    fieldPlugin.field.validators.length > 0 && (\n                                        <Tab label={\"Validators\"}>\n                                            <ValidatorsTab\n                                                form={form}\n                                                field={current}\n                                                fieldPlugin={fieldPlugin}\n                                            />\n                                        </Tab>\n                                    )}*/}\n                                    <Tab label={t`Appearance`}>\n                                        <AppearanceTab\n                                            form={form}\n                                            field={form.data as CmsEditorField}\n                                            fieldPlugin={fieldPlugin}\n                                        />\n                                    </Tab>\n                                </Tabs>\n                            </DialogContent>\n                            <DialogActions\n                                style={{\n                                    justifyContent: \"flex-end\"\n                                }}\n                            >\n                                <div>\n                                    <DialogButton onClick={onClose}>{t`Cancel`}</DialogButton>\n                                    <DialogButton onClick={form.submit}>{t`Save`}</DialogButton>\n                                </div>\n                            </DialogActions>\n                        </>\n                    );\n                }}\n            </Form>\n        );\n    }\n\n    return (\n        <Dialog preventOutsideDismiss open={!!current} onClose={onClose}>\n            <DialogTitle>{headerTitle}</DialogTitle>\n            {render}\n        </Dialog>\n    );\n};\n\nexport default EditFieldDialog;\n"],"file":"EditFieldDialog.js"}