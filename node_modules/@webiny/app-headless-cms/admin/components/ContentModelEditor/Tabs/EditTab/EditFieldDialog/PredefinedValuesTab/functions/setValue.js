import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import cloneDeep from "lodash/cloneDeep";
import set from "lodash/set";

var setValue = function setValue(_ref) {
  var value = _ref.value,
      bind = _ref.bind,
      locale = _ref.locale,
      index = _ref.index,
      name = _ref.name;
  var newValue = cloneDeep(_objectSpread({
    values: []
  }, bind.value));
  var valueLocaleIndex = newValue.values.findIndex(function (item) {
    return item.locale === locale;
  });

  if (index >= 0) {
    if (valueLocaleIndex >= 0) {
      if (!Array.isArray(newValue.values[valueLocaleIndex].value)) {
        newValue.values[valueLocaleIndex].value = [];
      }
    } else {
      newValue.values.push({
        locale: locale,
        value: []
      });
      valueLocaleIndex = newValue.values.length - 1;
    }

    set(newValue, "values.".concat(valueLocaleIndex, ".value.").concat(index, ".").concat(name), value);
  } else {
    if (valueLocaleIndex >= 0) {
      newValue.values[valueLocaleIndex].value = value;
    } else {
      newValue.values.push({
        locale: locale,
        value: value
      });
    }
  } // Filter out redundant empty values.


  newValue.values = newValue.values.filter(function (item) {
    return !!item.value;
  });
  bind.onChange(newValue);
};

export default setValue;
//# sourceMappingURL=setValue.js.map