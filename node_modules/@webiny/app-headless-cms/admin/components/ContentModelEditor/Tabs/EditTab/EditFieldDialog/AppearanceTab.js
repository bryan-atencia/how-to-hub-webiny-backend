import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Choose a component that will render the field:"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["There are no component that can render this field."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useEffect } from "react";
import { getPlugins } from "@webiny/plugins";
import { Grid, Cell } from "@webiny/ui/Grid";
import { i18n } from "@webiny/app/i18n";
import { Radio, RadioGroup } from "@webiny/ui/Radio";
import { Typography } from "@webiny/ui/Typography";
import { css } from "emotion";
import { validation } from "@webiny/validation";
var t = i18n.ns("app-headless-cms/admin/components/editor/tabs/edit-field-dialog/appearance-tab");
var style = {
  topLabel: /*#__PURE__*/css({
    marginBottom: 25
  }, "label:topLabel;"),
  noComponentsMessage: /*#__PURE__*/css({
    textAlign: "center",
    padding: 25
  }, "label:noComponentsMessage;"),
  radioContainer: /*#__PURE__*/css({
    marginBottom: 10
  }, "label:radioContainer;")
};

var AppearanceTab = function AppearanceTab(props) {
  var field = props.field,
      form = props.form;
  var renderPlugins = getPlugins("cms-editor-field-renderer").filter(function (item) {
    return item.renderer.canUse({
      field: field
    });
  });
  useEffect(function () {
    // If the currently selected render plugin is no longer available, select the first available one.
    var currentlySelectedRenderAvailable = renderPlugins.find(function (item) {
      return item.renderer.rendererName === field.renderer.name;
    });

    if (!currentlySelectedRenderAvailable) {
      if (renderPlugins[0]) {
        form.setValue("renderer.name", renderPlugins[0].renderer.rendererName);
      } else {
        console.log("No renderers for field ".concat(field.fieldId, " found."), field);
      }
    }
  });

  if (renderPlugins.length === 0) {
    return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12,
      className: style.noComponentsMessage
    }, t(_templateObject())));
  }

  var Bind = form.Bind;
  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
    span: 12
  }, /*#__PURE__*/React.createElement("div", {
    className: style.topLabel
  }, t(_templateObject2())), /*#__PURE__*/React.createElement(Bind, {
    name: "renderer.name",
    validate: validation.create("required")
  }, /*#__PURE__*/React.createElement(RadioGroup, null, function (_ref) {
    var onChange = _ref.onChange,
        getValue = _ref.getValue;
    return /*#__PURE__*/React.createElement(React.Fragment, null, renderPlugins.map(function (item) {
      return /*#__PURE__*/React.createElement("div", {
        key: item.name,
        className: style.radioContainer
      }, /*#__PURE__*/React.createElement(Radio, {
        value: getValue(item.renderer.rendererName),
        onChange: onChange(item.renderer.rendererName),
        label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", null, item.renderer.name), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Typography, {
          use: "caption"
        }, item.renderer.description)))
      }));
    }));
  }))));
};

export default AppearanceTab;
//# sourceMappingURL=AppearanceTab.js.map