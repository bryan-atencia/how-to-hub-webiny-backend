{"version":3,"sources":["../../../../../../../src/admin/components/ContentModelEditor/Tabs/EditTab/EditFieldDialog/GeneralTab.tsx"],"names":["React","useEffect","useCallback","useRef","useMemo","Input","Switch","Grid","Cell","useContentModelEditor","I18NInput","useI18N","validation","GeneralTab","field","form","fieldPlugin","Bind","setValue","inputRef","getField","getValue","setTimeout","current","focus","afterChangeLabel","value","uniqueFieldIdValidator","fieldId","existingField","_id","Error","undefined","additionalSettings","renderSettings","predefinedValuesEnabled","allowPredefinedValues","renderPredefinedValues","create","multipleValuesLabel","allowMultipleValues"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useRef, useMemo } from \"react\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { camelCase } from \"lodash\";\nimport { useContentModelEditor } from \"@webiny/app-headless-cms/admin/components/ContentModelEditor/Context\";\nimport { I18NInput } from \"@webiny/app-i18n/admin/components\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nimport { validation } from \"@webiny/validation\";\nimport { CmsEditorField, CmsEditorFieldTypePlugin } from \"@webiny/app-headless-cms/types\";\nimport { FormChildrenFunctionParams } from \"@webiny/form/Form\";\n\ntype GeneralTabProps = {\n    field: CmsEditorField;\n    form: FormChildrenFunctionParams;\n    fieldPlugin: CmsEditorFieldTypePlugin;\n};\n\nconst GeneralTab = ({ field, form, fieldPlugin }: GeneralTabProps) => {\n    const { Bind, setValue } = form;\n    const inputRef = useRef(null);\n    const { getField } = useContentModelEditor();\n    const { getValue } = useI18N();\n\n    // Had problems with auto-focusing the \"label\" field. A couple of comments on this.\n    // 1. It's probably caused by the Tabs component which wraps this component.\n    // 2. It seems that the \"autoFocus\" prop on the Input does'nt work. I can't see it attached in the actual DOM.\n    // 3. This works, but it's not 100%. Visually, the cursor is frozen, and that's probably caused by a bug / design\n    //    in the RMWC / Material library. If you were to click somewhere on screen, and then apply focus, then\n    //    it seems it's behaving correctly. ¯\\_(ツ)_/¯\n    useEffect(() => {\n        setTimeout(() => {\n            inputRef.current && inputRef.current.focus();\n        }, 200);\n    }, []);\n\n    const afterChangeLabel = useCallback(value => {\n        setValue(\"fieldId\", camelCase(getValue(value)));\n    }, []);\n\n    const uniqueFieldIdValidator = useCallback(fieldId => {\n        const existingField = getField({ fieldId });\n        if (!existingField) {\n            return;\n        }\n\n        if (existingField._id === field._id) {\n            return true;\n        }\n        throw new Error(\"Please enter a unique Field ID\");\n    }, undefined);\n\n    let additionalSettings = null;\n    if (typeof fieldPlugin.field.renderSettings === \"function\") {\n        additionalSettings = fieldPlugin.field.renderSettings({\n            form,\n            afterChangeLabel,\n            uniqueFieldIdValidator\n        });\n    }\n\n    const predefinedValuesEnabled = useMemo(\n        () =>\n            fieldPlugin.field.allowPredefinedValues &&\n            typeof fieldPlugin.field.renderPredefinedValues === \"function\",\n        [field.fieldId]\n    );\n\n    return (\n        <>\n            <Grid>\n                <Cell span={6}>\n                    <Bind\n                        name={\"label\"}\n                        validators={validation.create(\"required\")}\n                        afterChange={!field._id && afterChangeLabel}\n                    >\n                        <I18NInput label={\"Label\"} inputRef={inputRef} />\n                    </Bind>\n                </Cell>\n                <Cell span={6}>\n                    <Bind\n                        name={\"fieldId\"}\n                        validators={[validation.create(\"required\"), uniqueFieldIdValidator]}\n                    >\n                        <Input label={\"Field ID\"} disabled={!!field._id} />\n                    </Bind>\n                </Cell>\n\n                <Cell span={6}>\n                    <Bind name={\"multipleValues\"}>\n                        <Switch\n                            label={fieldPlugin.field.multipleValuesLabel}\n                            disabled={!fieldPlugin.field.allowMultipleValues}\n                        />\n                    </Bind>\n                </Cell>\n                <Cell span={6}>\n                    <Bind name={\"predefinedValues.enabled\"}>\n                        <Switch\n                            label={\"Use predefined values\"}\n                            disabled={!predefinedValuesEnabled}\n                        />\n                    </Bind>\n                </Cell>\n\n                <Cell span={12}>\n                    <Bind name={\"helpText\"}>\n                        <I18NInput label={\"Help text\"} description={\"Help text (optional)\"} />\n                    </Bind>\n                </Cell>\n            </Grid>\n            {additionalSettings}\n        </>\n    );\n};\n\nexport default GeneralTab;\n"],"file":"GeneralTab.js"}