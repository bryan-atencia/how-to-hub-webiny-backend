{"version":3,"sources":["../../../../../src/admin/components/ContentModelEditor/DropZone/Vertical.tsx"],"names":["React","styled","Droppable","InnerDivVertical","position","width","height","zIndex","borderRadius","display","boxSizing","border","borderSpacing","BackgroundColorDiv","OuterDivVertical","top","backgroundColor","props","last","borderColor","isOver","isDragging","opacity","Vertical","onDrop","isVisible","drop","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAGA,IAAMC,gBAAgB,gBAAGF,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AACnCG,EAAAA,QAAQ,EAAE,UADyB;AAEnCC,EAAAA,KAAK,EAAE,EAF4B;AAGnCC,EAAAA,MAAM,EAAE,MAH2B;AAInCC,EAAAA,MAAM,EAAE,CAJ2B;AAKnCC,EAAAA,YAAY,EAAE,CALqB;AAMnCC,EAAAA,OAAO,EAAE,MAN0B;AAOnCC,EAAAA,SAAS,EAAE,YAPwB;AAQnCC,EAAAA,MAAM,EAAE,kBAR2B;AASnCC,EAAAA,aAAa,EAAE;AAToB,CAAjB,CAAtB;AAYA,IAAMC,kBAAkB,gBAAGZ,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AACrCI,EAAAA,KAAK,EAAE,MAD8B;AAErCC,EAAAA,MAAM,EAAE;AAF6B,CAAjB,CAAxB;AAYA,IAAMQ,gBAAgB,gBAAGb,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAClB;AACIG,EAAAA,QAAQ,EAAE,UADd;AAEIC,EAAAA,KAAK,EAAE,KAFX;AAGIU,EAAAA,GAAG,EAAE,CAHT;AAIIT,EAAAA,MAAM,EAAE,MAJZ;AAKIC,EAAAA,MAAM,EAAE,EALZ;AAMIS,EAAAA,eAAe,EAAE;AANrB,CADkB,EASlB,UAACC,KAAD;AAAA;;AAAA,0CACKA,KAAK,CAACC,IAAN,GAAa,OAAb,GAAuB,MAD5B,EACqC,CAAC,CADtC,sCAEeD,KAAK,CAACC,IAAN,GAAa,OAAb,GAAuB,MAFtC,yBAIKf,gBAJL;AAKQgB,IAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,GAAe,0BAAf,GAA4C;AALjE,wCAMSH,KAAK,CAACC,IAAN,GAAa,OAAb,GAAuB,MANhC,EAMyC,CAAC,CAN1C,iDAOiBD,KAAK,CAACI,UAAN,GAAmB,OAAnB,GAA6B,MAP9C,sCASSR,kBATT,EAS8B;AAClBS,IAAAA,OAAO,EAAE,GADS;AAElBN,IAAAA,eAAe,EAAEC,KAAK,CAACG,MAAN,GACX,0BADW,GAEX;AAJY,GAT9B;AAAA,CATkB,CAAtB;;AAkCA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,QAAgD;AAAA,MAA7CL,IAA6C,SAA7CA,IAA6C;AAAA,MAAvCM,MAAuC,SAAvCA,MAAuC;AAAA,MAA/BC,SAA+B,SAA/BA,SAA+B;AAC7D,sBACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAED,MAAnB;AAA2B,IAAA,SAAS,EAAEC;AAAtC,KACK;AAAA;;AAAA,QAAGL,MAAH,SAAGA,MAAH;AAAA,QAAWC,UAAX,SAAWA,UAAX;AAAA,QAAuBK,IAAvB,SAAuBA,IAAvB;AAAA,wBACG;AACI,MAAA,GAAG,EAAEA,IADT;AAEI,MAAA,KAAK;AACDrB,QAAAA,KAAK,EAAE,KADN;AAEDsB,QAAAA,QAAQ,EAAE,OAFT;AAGDrB,QAAAA,MAAM,EAAE,MAHP;AAIDF,QAAAA,QAAQ,EAAE,UAJT;AAKDW,QAAAA,GAAG,EAAE;AALJ,gCAMAG,IAAI,GAAG,OAAH,GAAa,MANjB,EAM0B,CAN1B,oCAOOG,UAAU,GAAG,IAAH,GAAU,CAAC,CAP5B;AAFT,oBAYI,oBAAC,gBAAD;AAAkB,MAAA,MAAM,EAAED,MAA1B;AAAkC,MAAA,UAAU,EAAEC,UAA9C;AAA0D,MAAA,IAAI,EAAEH;AAAhE,oBACI,oBAAC,gBAAD,qBACI,oBAAC,kBAAD,OADJ,CADJ,CAZJ,CADH;AAAA,GADL,CADJ;AAwBH,CAzBD;;AA2BA,eAAeK,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport Droppable from \"../Droppable\";\nimport { DragObjectWithType } from \"react-dnd\";\n\nconst InnerDivVertical = styled(\"div\")({\n    position: \"absolute\",\n    width: 10,\n    height: \"100%\",\n    zIndex: 3,\n    borderRadius: 0,\n    display: \"none\",\n    boxSizing: \"border-box\",\n    border: \"1px dashed black\",\n    borderSpacing: 5\n});\n\nconst BackgroundColorDiv = styled(\"div\")({\n    width: \"100%\",\n    height: \"100%\"\n});\n\ntype OuterDivVerticalProps = {\n    isOver: boolean;\n    last?: boolean;\n    isVisible?: any;\n    isDragging?: boolean;\n};\n\nconst OuterDivVertical = styled(\"div\")(\n    {\n        position: \"absolute\",\n        width: \"30%\",\n        top: 0,\n        height: \"100%\",\n        zIndex: 10,\n        backgroundColor: \"transparent\"\n    },\n    (props: OuterDivVerticalProps) => ({\n        [props.last ? \"right\" : \"left\"]: -9,\n        textAlign: props.last ? \"right\" : \"left\",\n        // @ts-ignore\n        [InnerDivVertical]: {\n            borderColor: props.isOver ? \"var(--mdc-theme-primary)\" : \"var(--mdc-theme-secondary)\",\n            [props.last ? \"right\" : \"left\"]: -2,\n            display: props.isDragging ? \"block\" : \"none\",\n            // @ts-ignore\n            [BackgroundColorDiv]: {\n                opacity: 0.5,\n                backgroundColor: props.isOver\n                    ? \"var(--mdc-theme-primary)\"\n                    : \"var(--mdc-theme-secondary)\"\n            }\n        }\n    })\n);\n\ntype VerticalProps = {\n    onDrop(item: DragObjectWithType): void;\n    last?: boolean;\n    isVisible?: any;\n};\n\nconst Vertical = ({ last, onDrop, isVisible }: VerticalProps) => {\n    return (\n        <Droppable onDrop={onDrop} isVisible={isVisible}>\n            {({ isOver, isDragging, drop }) => (\n                <div\n                    ref={drop}\n                    style={{\n                        width: \"30%\",\n                        maxWidth: \"100px\",\n                        height: \"100%\",\n                        position: \"absolute\",\n                        top: 0,\n                        [last ? \"right\" : \"left\"]: 0,\n                        zIndex: isDragging ? 1000 : -1\n                    }}\n                >\n                    <OuterDivVertical isOver={isOver} isDragging={isDragging} last={last}>\n                        <InnerDivVertical>\n                            <BackgroundColorDiv />\n                        </InnerDivVertical>\n                    </OuterDivVertical>\n                </div>\n            )}\n        </Droppable>\n    );\n};\n\nexport default Vertical;\n"],"file":"Vertical.js"}