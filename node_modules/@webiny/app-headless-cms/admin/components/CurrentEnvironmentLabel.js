import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React, { useState } from "react";
import { Chips, Chip, ChipIcon } from "@webiny/ui/Chips";
import { ReactComponent as EnvironmentIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/call_split-24px.svg";
import { useCms } from "@webiny/app-headless-cms/admin/hooks";
import EnvironmentSelectorDialog from "./EnvironmentSelectorDialog";

var CurrentEnvironmentLabel = function CurrentEnvironmentLabel(props) {
  var _useCms = useCms(),
      currentEnvironment = _useCms.environments.currentEnvironment;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      dialogOpened = _useState2[0],
      setDialogOpened = _useState2[1];

  if (!currentEnvironment) {
    return null;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Chips, Object.assign({}, props, {
    onClick: function onClick() {
      return setDialogOpened(true);
    }
  }), /*#__PURE__*/React.createElement(Chip, null, currentEnvironment.name, /*#__PURE__*/React.createElement(ChipIcon, {
    trailing: true,
    icon: /*#__PURE__*/React.createElement(EnvironmentIcon, null)
  }))), /*#__PURE__*/React.createElement(EnvironmentSelectorDialog, {
    open: dialogOpened,
    onClose: function onClose() {
      setDialogOpened(false);
    }
  }));
};

export default CurrentEnvironmentLabel;
//# sourceMappingURL=CurrentEnvironmentLabel.js.map