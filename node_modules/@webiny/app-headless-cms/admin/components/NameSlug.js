import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Slug"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Cannot be changed."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Name"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { Cell } from "@webiny/ui/Grid";
import { Input } from "@webiny/ui/Input";
import { i18n } from "@webiny/app/i18n";
import { validation } from "@webiny/validation";
import slugify from "slugify";
var t = i18n.ns("app-headless-cms/admin/components/name-slug");

var toSlug = function toSlug(text) {
  return slugify(text, {
    replacement: "-",
    lower: true,
    remove: /[*#\?<>_\{\}\[\]+~.()'"!:;@]/g
  });
};

var slugValidator = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, validateSlugUniqueness, newEntry) {
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (newEntry) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return");

          case 2:
            validation.validateSync(value, "required,maxLength:100");
            _context.next = 5;
            return validateSlugUniqueness();

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function slugValidator(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

function NameSlug(_ref2) {
  var newEntry = _ref2.newEntry,
      Bind = _ref2.Bind,
      setValue = _ref2.setValue,
      _ref2$name = _ref2.name,
      name = _ref2$name === void 0 ? {} : _ref2$name,
      _ref2$slug = _ref2.slug,
      slug = _ref2$slug === void 0 ? {} : _ref2$slug,
      validateSlugUniqueness = _ref2.validateSlugUniqueness;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Cell, {
    span: 6
  }, /*#__PURE__*/React.createElement(Bind, Object.assign({}, name, {
    name: "name",
    validators: validation.create("required,maxLength:100"),
    afterChange: function afterChange(value) {
      if (newEntry) {
        setValue("slug", toSlug(value));
      }
    }
  }), /*#__PURE__*/React.createElement(Input, {
    label: t(_templateObject())
  }))), /*#__PURE__*/React.createElement(Cell, {
    span: 6
  }, /*#__PURE__*/React.createElement(Bind, {
    name: "slug",
    validators: function validators(value) {
      return slugValidator(value, validateSlugUniqueness, newEntry);
    }
  }, function (bindProps) {
    return /*#__PURE__*/React.createElement(Input, Object.assign({
      description: t(_templateObject2())
    }, bindProps, slug, {
      disabled: !newEntry,
      label: t(_templateObject3())
    }));
  })));
}

export default NameSlug;
//# sourceMappingURL=NameSlug.js.map