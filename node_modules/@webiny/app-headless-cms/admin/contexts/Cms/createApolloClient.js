import ApolloClient from "apollo-client";
import { ApolloLink } from "apollo-link";
import { BatchHttpLink } from "apollo-link-batch-http";
import { ErrorLink } from "apollo-link-error";
import { InMemoryCache } from "apollo-cache-inmemory";
import { createAuthLink } from "@webiny/app-security/components";
import { createOmitTypenameLink } from "@webiny/app/graphql";
import { GET_ERROR } from "./NetworkError";
export default (function (opts) {
  return new ApolloClient({
    link: ApolloLink.from([new ErrorLink(function (_ref) {
      var networkError = _ref.networkError,
          operation = _ref.operation;

      if (networkError) {
        var _operation$getContext = operation.getContext(),
            cache = _operation$getContext.cache;

        cache.writeQuery({
          query: GET_ERROR,
          data: {
            networkError: "UNAVAILABLE"
          }
        });
      }
    }), createOmitTypenameLink(), createAuthLink(), new BatchHttpLink({
      uri: opts.uri
    })]),
    cache: new InMemoryCache({
      addTypename: true,
      dataIdFromObject: function dataIdFromObject(obj) {
        return obj.id || null;
      }
    })
  });
});
//# sourceMappingURL=createApolloClient.js.map