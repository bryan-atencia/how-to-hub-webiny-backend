{"version":3,"sources":["../../../../src/admin/contexts/Cms/createApolloClient.ts"],"names":["ApolloClient","ApolloLink","BatchHttpLink","ErrorLink","InMemoryCache","createAuthLink","createOmitTypenameLink","GET_ERROR","opts","link","from","networkError","operation","getContext","cache","writeQuery","query","data","uri","addTypename","dataIdFromObject","obj","id"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,sBAAT,QAAuC,qBAAvC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAMA,gBAAe,UAACC,IAAD,EAA8B;AACzC,SAAO,IAAIR,YAAJ,CAAiB;AACpBS,IAAAA,IAAI,EAAER,UAAU,CAACS,IAAX,CAAgB,CAClB,IAAIP,SAAJ,CAAc,gBAAiC;AAAA,UAA9BQ,YAA8B,QAA9BA,YAA8B;AAAA,UAAhBC,SAAgB,QAAhBA,SAAgB;;AAC3C,UAAID,YAAJ,EAAkB;AAAA,oCACIC,SAAS,CAACC,UAAV,EADJ;AAAA,YACNC,KADM,yBACNA,KADM;;AAEdA,QAAAA,KAAK,CAACC,UAAN,CAAiB;AACbC,UAAAA,KAAK,EAAET,SADM;AAEbU,UAAAA,IAAI,EAAE;AACFN,YAAAA,YAAY,EAAE;AADZ;AAFO,SAAjB;AAMH;AACJ,KAVD,CADkB,EAYlBL,sBAAsB,EAZJ,EAalBD,cAAc,EAbI,EAclB,IAAIH,aAAJ,CAAkB;AAAEgB,MAAAA,GAAG,EAAEV,IAAI,CAACU;AAAZ,KAAlB,CAdkB,CAAhB,CADc;AAiBpBJ,IAAAA,KAAK,EAAE,IAAIV,aAAJ,CAAkB;AACrBe,MAAAA,WAAW,EAAE,IADQ;AAErBC,MAAAA,gBAAgB,EAAE,0BAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,EAAJ,IAAU,IAAd;AAAA;AAFA,KAAlB;AAjBa,GAAjB,CAAP;AAsBH,CAvBD","sourcesContent":["import ApolloClient from \"apollo-client\";\nimport { ApolloLink } from \"apollo-link\";\nimport { BatchHttpLink } from \"apollo-link-batch-http\";\nimport { ErrorLink } from \"apollo-link-error\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createAuthLink } from \"@webiny/app-security/components\";\nimport { createOmitTypenameLink } from \"@webiny/app/graphql\";\nimport { GET_ERROR } from \"./NetworkError\";\n\nexport type CreateApolloClient = {\n    uri: string;\n};\n\nexport default (opts: CreateApolloClient) => {\n    return new ApolloClient({\n        link: ApolloLink.from([\n            new ErrorLink(({ networkError, operation }) => {\n                if (networkError) {\n                    const { cache } = operation.getContext();\n                    cache.writeQuery({\n                        query: GET_ERROR,\n                        data: {\n                            networkError: \"UNAVAILABLE\"\n                        }\n                    });\n                }\n            }),\n            createOmitTypenameLink(),\n            createAuthLink(),\n            new BatchHttpLink({ uri: opts.uri })\n        ]),\n        cache: new InMemoryCache({\n            addTypename: true,\n            dataIdFromObject: obj => obj.id || null\n        })\n    });\n};\n"],"file":"createApolloClient.js"}