import _regeneratorRuntime from "@babel/runtime/regenerator";
import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

function _templateObject5() {
  var data = _taggedTemplateLiteral(["No revisions to show."]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Successfully published revision {revision}."]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Content entry revision deleted."]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Content entry and all of its revisions deleted."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["New content entry revision created."]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useCallback, useMemo } from "react";
import { css } from "emotion";
import { List } from "@webiny/ui/List";
import { Elevation } from "@webiny/ui/Elevation";
import Revision from "./Revision";
import get from "lodash/get";
import { CircularProgress } from "@webiny/ui/Progress";
import { useMutation } from "@webiny/app-headless-cms/admin/hooks";
import { createCreateFromMutation, createDeleteMutation, createPublishMutation } from "@webiny/app-headless-cms/admin/components/ContentModelForm/graphql";
import { useSnackbar } from "@webiny/app-admin/hooks/useSnackbar";
import { useRouter } from "@webiny/react-router";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/plugins/content-details/content-revisions");
var style = {
  list: /*#__PURE__*/css({
    position: "relative",
    margin: 25,
    display: "flex",
    flexDirection: "column",
    overflow: "scroll",
    maxHeight: "calc(100vh - 160px)",
    ".mdc-list .mdc-list-item": {
      borderBottom: "1px solid var(--mdc-theme-on-background)"
    },
    ".mdc-list .mdc-list-item:last-child": {
      borderBottom: "none"
    }
  }, "label:list;"),
  nothingToShow: /*#__PURE__*/css({
    padding: 20,
    margin: 25,
    textAlign: "center"
  }, "label:nothingToShow;")
};

var RevisionsList = function RevisionsList(props) {
  var _useSnackbar = useSnackbar(),
      showSnackbar = _useSnackbar.showSnackbar;

  var content = props.content,
      contentModel = props.contentModel,
      setLoading = props.setLoading,
      dataList = props.dataList,
      revisionsList = props.revisionsList;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  var _useMemo = useMemo(function () {
    return {
      CREATE_CONTENT_FROM: createCreateFromMutation(contentModel),
      DELETE_CONTENT: createDeleteMutation(contentModel),
      PUBLISH_CONTENT: createPublishMutation(contentModel)
    };
  }, [contentModel.modelId]),
      CREATE_CONTENT_FROM = _useMemo.CREATE_CONTENT_FROM,
      DELETE_CONTENT = _useMemo.DELETE_CONTENT,
      PUBLISH_CONTENT = _useMemo.PUBLISH_CONTENT;

  var revisions = get(revisionsList, "data.content.data.meta.revisions", []);

  var _useMutation = useMutation(CREATE_CONTENT_FROM),
      _useMutation2 = _slicedToArray(_useMutation, 1),
      createFromMutation = _useMutation2[0];

  var _useMutation3 = useMutation(DELETE_CONTENT),
      _useMutation4 = _slicedToArray(_useMutation3, 1),
      deleteMutation = _useMutation4[0];

  var _useMutation5 = useMutation(PUBLISH_CONTENT),
      _useMutation6 = _slicedToArray(_useMutation5, 1),
      publishMutation = _useMutation6[0];

  var createContentFrom = useCallback( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(revision) {
      var response, id, query;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              _context.next = 3;
              return createFromMutation({
                variables: {
                  revision: revision.id
                }
              });

            case 3:
              response = _context.sent;

              if (!response.data.content.error) {
                _context.next = 8;
                break;
              }

              setLoading(false);
              showSnackbar(response.data.content.error.message);
              return _context.abrupt("return");

            case 8:
              _context.next = 10;
              return Promise.all([dataList.refresh(), revisionsList.refetch()]);

            case 10:
              setLoading(false);
              showSnackbar(t(_templateObject()));
              id = response.data.content.data.id;
              query = new URLSearchParams(location.search);
              query.set("id", id);
              history.push({
                search: query.toString()
              });

            case 16:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }(), []);
  var deleteContent = useCallback( /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(revision) {
      var response, revisionId, i, current, query;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              setLoading(true);
              _context2.next = 3;
              return deleteMutation({
                variables: {
                  revision: revision.id
                }
              });

            case 3:
              response = _context2.sent;

              if (!response.data.content.error) {
                _context2.next = 8;
                break;
              }

              setLoading(false);
              showSnackbar(response.data.content.error.message);
              return _context2.abrupt("return");

            case 8:
              if (!(revision.id === revision.meta.parent)) {
                _context2.next = 15;
                break;
              }

              _context2.next = 11;
              return dataList.refresh();

            case 11:
              setLoading(false);
              history.push("/cms/content-models/manage/".concat(contentModel.modelId));
              showSnackbar(t(_templateObject2()));
              return _context2.abrupt("return");

            case 15:
              _context2.next = 17;
              return Promise.all([dataList.refresh(), revisionsList.refetch()]);

            case 17:
              setLoading(false);

              if (!(revision.id === content.id)) {
                _context2.next = 29;
                break;
              }

              i = 0;

            case 20:
              if (!(i < content.revisions.length)) {
                _context2.next = 28;
                break;
              }

              current = content.revisions[i];

              if (!(current.id !== content.id)) {
                _context2.next = 25;
                break;
              }

              revisionId = current.id;
              return _context2.abrupt("break", 28);

            case 25:
              i++;
              _context2.next = 20;
              break;

            case 28:
              if (revisionId) {
                query = new URLSearchParams(location.search);
                query.set("id", revisionId);
                history.push({
                  search: query.toString()
                });
              }

            case 29:
              showSnackbar(t(_templateObject3()));

            case 30:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }(), []);
  var publishContent = useCallback( /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(revision) {
      var response, content;
      return _regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              setLoading(true);
              _context3.next = 3;
              return publishMutation({
                variables: {
                  revision: revision.id
                }
              });

            case 3:
              response = _context3.sent;
              content = get(response, "data.content");

              if (!content.error) {
                _context3.next = 9;
                break;
              }

              setLoading(false);
              showSnackbar(content.error.message);
              return _context3.abrupt("return");

            case 9:
              _context3.next = 11;
              return dataList.refresh();

            case 11:
              setLoading(false);
              showSnackbar( /*#__PURE__*/React.createElement("span", null, t(_templateObject4())({
                revision: /*#__PURE__*/React.createElement("strong", null, "#", revision.meta.version)
              })));

            case 13:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function (_x3) {
      return _ref3.apply(this, arguments);
    };
  }(), []);
  return /*#__PURE__*/React.createElement(Elevation, {
    className: style.list,
    z: 2
  }, props.getLoading() && /*#__PURE__*/React.createElement(CircularProgress, null), content.id && revisions.length ? /*#__PURE__*/React.createElement(List, {
    nonInteractive: true,
    twoLine: true
  }, revisions.map(function (revisions) {
    return /*#__PURE__*/React.createElement(Revision, Object.assign({}, props, {
      revision: revisions,
      key: revisions.id,
      createContentFrom: createContentFrom,
      deleteContent: deleteContent,
      publishContent: publishContent
    }));
  })) : /*#__PURE__*/React.createElement("div", {
    className: style.nothingToShow
  }, t(_templateObject5())));
};

export default RevisionsList;
//# sourceMappingURL=RevisionsList.js.map