import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject8() {
  var data = _taggedTemplateLiteral([" Delete"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Publish"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral([" Edit"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["New from current"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Last modified: {time} (#{version})"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["N/A"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["You are about to delete revision {revision}. Are you sure you want to continue?"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Confirmation required!"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { css } from "emotion";
import TimeAgo from "timeago-react";
import { ListItem, ListItemText, ListItemTextPrimary, ListItemTextSecondary, ListItemGraphic, ListItemMeta } from "@webiny/ui/List";
import { IconButton } from "@webiny/ui/Button";
import { Icon } from "@webiny/ui/Icon";
import { MenuItem, Menu, MenuDivider } from "@webiny/ui/Menu";
import { ConfirmationDialog } from "@webiny/ui/ConfirmationDialog";
import { Tooltip } from "@webiny/ui/Tooltip";
import { ReactComponent as MoreVerticalIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/more_vert.svg";
import { ReactComponent as LockIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/lock.svg";
import { ReactComponent as BeenHereIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/beenhere.svg";
import { ReactComponent as GestureIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/gesture.svg";
import { ReactComponent as AddIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/add.svg";
import { ReactComponent as EditIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/edit.svg";
import { ReactComponent as PublishIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/publish.svg";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/delete.svg";
import { useRouter } from "@webiny/react-router";
import { I18NValue } from "@webiny/app-i18n/components";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/plugins/content-details/content-revisions");
var primaryColor = /*#__PURE__*/css({
  color: "var(--mdc-theme-primary)"
}, "label:primaryColor;");
var revisionsMenu = /*#__PURE__*/css({
  width: 250,
  right: -105,
  left: "auto !important"
}, "label:revisionsMenu;");

var getIcon = function getIcon(rev) {
  switch (true) {
    case rev.meta.locked && !rev.meta.published:
      return {
        icon: /*#__PURE__*/React.createElement(Icon, {
          icon: /*#__PURE__*/React.createElement(LockIcon, null)
        }),
        text: "This revision is locked (it has already been published)"
      };

    case rev.meta.published:
      return {
        icon: /*#__PURE__*/React.createElement(Icon, {
          icon: /*#__PURE__*/React.createElement(BeenHereIcon, null),
          className: primaryColor
        }),
        text: "This revision is currently published!"
      };

    default:
      return {
        icon: /*#__PURE__*/React.createElement(Icon, {
          icon: /*#__PURE__*/React.createElement(GestureIcon, null)
        }),
        text: "This is a draft"
      };
  }
};

var Revision = function Revision(props) {
  var revision = props.revision,
      createContentFrom = props.createContentFrom,
      deleteContent = props.deleteContent,
      publishContent = props.publishContent,
      switchTab = props.switchTab;

  var _getIcon = getIcon(revision),
      icon = _getIcon.icon,
      tooltipText = _getIcon.text;

  var _useRouter = useRouter(),
      history = _useRouter.history;

  return /*#__PURE__*/React.createElement(ConfirmationDialog, {
    title: t(_templateObject()),
    message: /*#__PURE__*/React.createElement("span", null, t(_templateObject2())({
      revision: /*#__PURE__*/React.createElement("strong", null, "#", revision.meta.version)
    }))
  }, function (_ref) {
    var showConfirmation = _ref.showConfirmation;
    return /*#__PURE__*/React.createElement(ListItem, null, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Tooltip, {
      content: tooltipText,
      placement: "bottom"
    }, icon)), /*#__PURE__*/React.createElement(ListItemText, null, /*#__PURE__*/React.createElement(ListItemTextPrimary, null, /*#__PURE__*/React.createElement(I18NValue, {
      value: revision.meta.title,
      default: t(_templateObject3())
    })), /*#__PURE__*/React.createElement(ListItemTextSecondary, null, t(_templateObject4())({
      time: /*#__PURE__*/React.createElement(TimeAgo, {
        datetime: revision.savedOn
      }),
      version: revision.meta.version
    }))), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(Menu, {
      handle: /*#__PURE__*/React.createElement(IconButton, {
        icon: /*#__PURE__*/React.createElement(MoreVerticalIcon, null)
      }),
      className: revisionsMenu
    }, /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        return createContentFrom(revision);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(AddIcon, null)
    })), t(_templateObject5())), !revision.meta.locked && /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        var id = revision.id;
        var query = new URLSearchParams(location.search);
        query.set("id", id);
        history.push({
          search: query.toString()
        });
        switchTab(0);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(EditIcon, null)
    })), t(_templateObject6())), !revision.meta.published && /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        return publishContent(revision);
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(PublishIcon, null)
    })), t(_templateObject7())), !revision.meta.locked && revision.id !== revision.meta.parent && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(MenuDivider, null), /*#__PURE__*/React.createElement(MenuItem, {
      onClick: function onClick() {
        return showConfirmation(function () {
          return deleteContent(revision);
        });
      }
    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {
      icon: /*#__PURE__*/React.createElement(DeleteIcon, null)
    })), t(_templateObject8()))))));
  });
};

export default Revision;
//# sourceMappingURL=Revision.js.map