{"version":3,"sources":["../../../../../src/admin/plugins/contentDetails/contentRevisions/RevisionsList.tsx"],"names":["React","useCallback","useMemo","css","List","Elevation","Revision","get","CircularProgress","useMutation","createCreateFromMutation","createDeleteMutation","createPublishMutation","useSnackbar","useRouter","i18n","t","ns","style","list","position","margin","display","flexDirection","overflow","maxHeight","borderBottom","nothingToShow","padding","textAlign","RevisionsList","props","showSnackbar","content","contentModel","setLoading","dataList","revisionsList","history","CREATE_CONTENT_FROM","DELETE_CONTENT","PUBLISH_CONTENT","modelId","revisions","createFromMutation","deleteMutation","publishMutation","createContentFrom","revision","variables","id","response","data","error","message","Promise","all","refresh","refetch","query","URLSearchParams","location","search","set","push","toString","deleteContent","meta","parent","i","length","current","revisionId","publishContent","version","getLoading","map"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport { css } from \"emotion\";\nimport { List } from \"@webiny/ui/List\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport Revision from \"./Revision\";\nimport get from \"lodash/get\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { useMutation } from \"@webiny/app-headless-cms/admin/hooks\";\nimport {\n    createCreateFromMutation,\n    createDeleteMutation,\n    createPublishMutation\n} from \"@webiny/app-headless-cms/admin/components/ContentModelForm/graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.ns(\"app-headless-cms/admin/plugins/content-details/content-revisions\");\n\nconst style = {\n    list: css({\n        position: \"relative\",\n        margin: 25,\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"scroll\",\n        maxHeight: \"calc(100vh - 160px)\",\n        \".mdc-list .mdc-list-item\": {\n            borderBottom: \"1px solid var(--mdc-theme-on-background)\"\n        },\n        \".mdc-list .mdc-list-item:last-child\": {\n            borderBottom: \"none\"\n        }\n    }),\n    nothingToShow: css({\n        padding: 20,\n        margin: 25,\n        textAlign: \"center\"\n    })\n};\n\nconst RevisionsList = props => {\n    const { showSnackbar } = useSnackbar();\n    const { content, contentModel, setLoading, dataList, revisionsList } = props;\n    const { history } = useRouter();\n\n    const { CREATE_CONTENT_FROM, DELETE_CONTENT, PUBLISH_CONTENT } = useMemo(() => {\n        return {\n            CREATE_CONTENT_FROM: createCreateFromMutation(contentModel),\n            DELETE_CONTENT: createDeleteMutation(contentModel),\n            PUBLISH_CONTENT: createPublishMutation(contentModel)\n        };\n    }, [contentModel.modelId]);\n\n    const revisions = get(revisionsList, \"data.content.data.meta.revisions\", []);\n\n    const [createFromMutation] = useMutation(CREATE_CONTENT_FROM);\n    const [deleteMutation] = useMutation(DELETE_CONTENT);\n    const [publishMutation] = useMutation(PUBLISH_CONTENT);\n\n    const createContentFrom = useCallback(async revision => {\n        setLoading(true);\n        const response = await createFromMutation({\n            variables: { revision: revision.id }\n        });\n\n        if (response.data.content.error) {\n            setLoading(false);\n            showSnackbar(response.data.content.error.message);\n            return;\n        }\n\n        await Promise.all([dataList.refresh(), revisionsList.refetch()]);\n        setLoading(false);\n\n        showSnackbar(t`New content entry revision created.`);\n        const { id } = response.data.content.data;\n        const query = new URLSearchParams(location.search);\n        query.set(\"id\", id);\n        history.push({ search: query.toString() });\n    }, []);\n\n    const deleteContent = useCallback(async revision => {\n        setLoading(true);\n        const response = await deleteMutation({\n            variables: { revision: revision.id }\n        });\n\n        if (response.data.content.error) {\n            setLoading(false);\n            showSnackbar(response.data.content.error.message);\n            return;\n        }\n\n        if (revision.id === revision.meta.parent) {\n            await dataList.refresh();\n            setLoading(false);\n            history.push(`/cms/content-models/manage/${contentModel.modelId}`);\n            showSnackbar(t`Content entry and all of its revisions deleted.`);\n            return;\n        }\n\n        await Promise.all([dataList.refresh(), revisionsList.refetch()]);\n        setLoading(false);\n\n        if (revision.id === content.id) {\n            let revisionId;\n            for (let i = 0; i < content.revisions.length; i++) {\n                const current = content.revisions[i];\n                if (current.id !== content.id) {\n                    revisionId = current.id;\n                    break;\n                }\n            }\n\n            if (revisionId) {\n                const query = new URLSearchParams(location.search);\n                query.set(\"id\", revisionId);\n                history.push({ search: query.toString() });\n            }\n        }\n\n        showSnackbar(t`Content entry revision deleted.`);\n    }, []);\n\n    const publishContent = useCallback(async revision => {\n        setLoading(true);\n        const response = await publishMutation({\n            variables: { revision: revision.id }\n        });\n\n        const content = get(response, \"data.content\");\n        if (content.error) {\n            setLoading(false);\n            showSnackbar(content.error.message);\n            return;\n        }\n\n        await dataList.refresh();\n        setLoading(false);\n\n        showSnackbar(\n            <span>\n                {t`Successfully published revision {revision}.`({\n                    revision: <strong>#{revision.meta.version}</strong>\n                })}\n            </span>\n        );\n    }, []);\n\n    return (\n        <Elevation className={style.list} z={2}>\n            {props.getLoading() && <CircularProgress />}\n            {content.id && revisions.length ? (\n                <List nonInteractive twoLine>\n                    {revisions.map(revisions => (\n                        <Revision\n                            {...props}\n                            revision={revisions}\n                            key={revisions.id}\n                            createContentFrom={createContentFrom}\n                            deleteContent={deleteContent}\n                            publishContent={publishContent}\n                        />\n                    ))}\n                </List>\n            ) : (\n                <div className={style.nothingToShow}>{t`No revisions to show.`}</div>\n            )}\n        </Elevation>\n    );\n};\n\nexport default RevisionsList;\n"],"file":"RevisionsList.js"}