{"version":3,"sources":["../../../../../../src/admin/plugins/contentDetails/header/revisionSelector/RevisionSelector.tsx"],"names":["React","css","useRouter","ButtonDefault","Icon","Typography","Menu","MenuItem","buttonStyle","color","menuStyles","width","right","flexDirection","justifyContent","alignItems","textAlign","RevisionSelector","content","getLoading","revisionsList","location","history","query","URLSearchParams","search","currentRevision","version","status","allRevisions","id","meta","map","revision","set","push","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AAEA,IAAMC,WAAW,gBAAGP,GAAG,CAAC;AACpB,kBAAgB;AACZQ,IAAAA,KAAK,EAAE;AADK;AADI,CAAD,uBAAvB;AAMA,IAAMC,UAAU,gBAAGT,GAAG,CAAC;AACnBU,EAAAA,KAAK,EAAE,GADY;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnB,oBAAkB;AACdC,IAAAA,aAAa,EAAE,QADD;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,UAHE;AAIdC,IAAAA,SAAS,EAAE;AAJG;AAHC,CAAD,sBAAtB;;AAWA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA4C;AAAA,MAAzCC,OAAyC,QAAzCA,OAAyC;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,mBACnClB,SAAS,EAD0B;AAAA,MACzDmB,QADyD,cACzDA,QADyD;AAAA,MAC/CC,OAD+C,cAC/CA,OAD+C;;AAEjE,MAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAAd;AAEA,MAAMC,eAAe,GAAG;AACpBC,IAAAA,OAAO,EAAE,KAAIT,OAAJ,EAAa,cAAb,EAA6B,CAA7B,CADW;AAEpBU,IAAAA,MAAM,EAAE,KAAIV,OAAJ,EAAa,aAAb,EAA4B,OAA5B;AAFY,GAAxB;;AAKA,MAAMW,YAAY,GAAG,KAAIT,aAAJ,EAAmB,kCAAnB,EAAuD,CACxE;AAAEU,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAEJ,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB;AAAnB,GADwE,CAAvD,CAArB;;AAIA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAElB,UADf;AAEI,IAAA,MAAM,eACF,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAEF,WAA1B;AAAuC,MAAA,QAAQ,EAAEW,UAAU;AAA3D,YACMO,eAAe,CAACC,OADtB,QACiCD,eAAe,CAACE,MADjD,OAC0D,GAD1D,eAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,eAAE,oBAAC,UAAD;AAAZ,MAFJ;AAHR,KASKC,YAAY,CAACG,GAAb,CAAiB,UAAAC,QAAQ;AAAA,wBACtB,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,QAAQ,CAACH,EADlB;AAEI,MAAA,OAAO,EAAE,mBAAM;AACXP,QAAAA,KAAK,CAACW,GAAN,CAAU,IAAV,EAAgBD,QAAQ,CAACH,EAAzB;AACAR,QAAAA,OAAO,CAACa,IAAR,CAAa;AAAEV,UAAAA,MAAM,EAAEF,KAAK,CAACa,QAAN;AAAV,SAAb;AACH;AALL,oBAOI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA4BH,QAAQ,CAACF,IAAT,CAAcJ,OAA1C,CAPJ,eAQI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA8BM,QAAQ,CAACF,IAAT,CAAcH,MAA5C,MARJ,CADsB;AAAA,GAAzB,CATL,CADJ;AAwBH,CArCD;;AAuCA,eAAeX,gBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as DownButton } from \"@webiny/app-headless-cms/admin/icons/round-arrow_drop_down-24px.svg\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { get } from \"lodash\";\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuStyles = css({\n    width: 150,\n    right: 0,\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\"\n    }\n});\n\nconst RevisionSelector = ({ content, getLoading, revisionsList }) => {\n    const { location, history } = useRouter();\n    const query = new URLSearchParams(location.search);\n\n    const currentRevision = {\n        version: get(content, \"meta.version\", 1),\n        status: get(content, \"meta.status\", \"draft\")\n    };\n\n    const allRevisions = get(revisionsList, \"data.content.data.meta.revisions\", [\n        { id: \"new\", meta: { version: 1, status: \"draft\" } }\n    ]);\n\n    return (\n        <Menu\n            className={menuStyles}\n            handle={\n                <ButtonDefault className={buttonStyle} disabled={getLoading()}>\n                    v{currentRevision.version} ({currentRevision.status}){\" \"}\n                    <Icon icon={<DownButton />} />\n                </ButtonDefault>\n            }\n        >\n            {allRevisions.map(revision => (\n                <MenuItem\n                    key={revision.id}\n                    onClick={() => {\n                        query.set(\"id\", revision.id);\n                        history.push({ search: query.toString() });\n                    }}\n                >\n                    <Typography use={\"body2\"}>v{revision.meta.version}</Typography>\n                    <Typography use={\"caption\"}>({revision.meta.status})</Typography>\n                </MenuItem>\n            ))}\n        </Menu>\n    );\n};\n\nexport default RevisionSelector;\n"],"file":"RevisionSelector.js"}