{"version":3,"sources":["../../../../../../src/admin/plugins/contentDetails/header/saveAndPublishContent/SaveAndPublishContent.tsx"],"names":["React","useCallback","useMemo","i18n","ButtonPrimary","useSnackbar","createPublishMutation","useMutation","useConfirmationDialog","css","t","ns","buttonStyles","marginLeft","SaveAndPublishButton","content","contentModel","getLoading","setLoading","revisionsList","state","showSnackbar","PUBLISH_CONTENT","modelId","publishContentMutation","onPublish","id","variables","revision","response","contentData","error","message","refetch","title","showConfirmation","contentForm","submit","data"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { createPublishMutation } from \"@webiny/app-headless-cms/admin/components/ContentModelForm/graphql\";\nimport { useMutation } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { get } from \"lodash\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { css } from \"emotion\";\nconst t = i18n.ns(\"app-headless-cms/admin/plugins/content-details/header/publish-revision\");\n\nconst buttonStyles = css({\n    marginLeft: 16\n});\n\nconst SaveAndPublishButton = ({\n    content,\n    contentModel,\n    getLoading,\n    setLoading,\n    revisionsList,\n    state\n}) => {\n    const { showSnackbar } = useSnackbar();\n    const { PUBLISH_CONTENT } = useMemo(() => {\n        return {\n            PUBLISH_CONTENT: createPublishMutation(contentModel)\n        };\n    }, [contentModel.modelId]);\n\n    const [publishContentMutation] = useMutation(PUBLISH_CONTENT);\n\n    const onPublish = useCallback(\n        async id => {\n            setLoading(true);\n            const response = await publishContentMutation({\n                variables: { revision: id || content.id }\n            });\n\n            const contentData = get(response, \"data.content\");\n            setLoading(false);\n            if (contentData.error) {\n                return showSnackbar(contentData.error.message);\n            }\n\n            showSnackbar(t`Content published successfully.`);\n            revisionsList.refetch();\n        },\n        [content.id]\n    );\n\n    const { showConfirmation } = useConfirmationDialog({\n        title: t`Publish content`,\n        message: (\n            <p>{t`You are about to publish a new revision. Are you sure you want to continue?`}</p>\n        )\n    });\n    return (\n        <ButtonPrimary\n            className={buttonStyles}\n            onClick={() => {\n                showConfirmation(async () => {\n                    const response = await state.contentForm.submit();\n                    if (response.data.content.error) {\n                        return;\n                    }\n                    const { id } = response.data.content.data;\n                    await onPublish(id);\n                });\n            }}\n            disabled={getLoading()}\n        >\n            {t`Save & Publish`}\n        </ButtonPrimary>\n    );\n};\n\nexport default SaveAndPublishButton;\n"],"file":"SaveAndPublishContent.js"}