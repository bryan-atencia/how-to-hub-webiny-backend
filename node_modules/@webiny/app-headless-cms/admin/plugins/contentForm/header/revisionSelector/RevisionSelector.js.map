{"version":3,"sources":["../../../../../../src/admin/plugins/contentForm/header/revisionSelector/RevisionSelector.tsx"],"names":["React","css","useRouter","ButtonDefault","Typography","Menu","MenuItem","buttonStyle","color","menuList","flexDirection","justifyContent","alignItems","textAlign","RevisionSelector","entry","location","history","query","URLSearchParams","search","evt","set","revisions","detail","index","id","push","toString","map","rev"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,iBAA/B;AAGA,IAAMC,WAAW,gBAAGN,GAAG,CAAC;AACpB,kBAAgB;AACZO,IAAAA,KAAK,EAAE;AADK;AADI,CAAD,uBAAvB;AAMA,IAAMC,QAAQ,gBAAGR,GAAG,CAAC;AACjB,oBAAkB;AACdS,IAAAA,aAAa,EAAE,QADD;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdC,IAAAA,UAAU,EAAE,UAHE;AAIdC,IAAAA,SAAS,EAAE;AAJG;AADD,CAAD,oBAApB;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,mBACNb,SAAS,EADH;AAAA,MAC5Bc,QAD4B,cAC5BA,QAD4B;AAAA,MAClBC,OADkB,cAClBA,OADkB;;AAEpC,MAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAAd;AAEA,sBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAEX,QADf;AAEI,IAAA,QAAQ,EAAE,kBAAAY,GAAG,EAAI;AACbH,MAAAA,KAAK,CAACI,GAAN,CAAU,IAAV,EAAgBP,KAAK,CAACQ,SAAN,CAAgBF,GAAG,CAACG,MAAJ,CAAWC,KAA3B,EAAkCC,EAAlD;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa;AAAEP,QAAAA,MAAM,EAAEF,KAAK,CAACU,QAAN;AAAV,OAAb;AACH,KALL;AAMI,IAAA,MAAM,eACF,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAErB;AAA1B,YAAyC,KAAIQ,KAAJ,EAAW,cAAX,CAAzC;AAPR,KAUK,CAAC,KAAIA,KAAJ,EAAW,gBAAX,KAAgC,EAAjC,EAAqCc,GAArC,CAAyC,UAAAC,GAAG,EAAI;AAC7C,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACJ;AAAnB,oBACI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA4B,KAAII,GAAJ,EAAS,cAAT,CAA5B,CADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE;AAAjB,YAA8B,KAAIA,GAAJ,EAAS,aAAT,CAA9B,MAFJ,CADJ;AAMH,GAPA,CAVL,CADJ;AAqBH,CAzBD;;AA2BA,eAAehB,gBAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { get } from \"lodash\";\n\nconst buttonStyle = css({\n    \"&.mdc-button\": {\n        color: \"var(--mdc-theme-text-primary-on-background) !important\"\n    }\n});\n\nconst menuList = css({\n    \".mdc-list-item\": {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",\n        textAlign: \"left\"\n    }\n});\n\nconst RevisionSelector = ({ entry }) => {\n    const { location, history } = useRouter();\n    const query = new URLSearchParams(location.search);\n\n    return (\n        <Menu\n            className={menuList}\n            onSelect={evt => {\n                query.set(\"id\", entry.revisions[evt.detail.index].id);\n                history.push({ search: query.toString() });\n            }}\n            handle={\n                <ButtonDefault className={buttonStyle}>v{get(entry, \"meta.version\")}</ButtonDefault>\n            }\n        >\n            {(get(entry, \"meta.revisions\") || []).map(rev => {\n                return (\n                    <MenuItem key={rev.id}>\n                        <Typography use={\"body2\"}>v{get(rev, \"meta.version\")}</Typography>\n                        <Typography use={\"caption\"}>({get(rev, \"meta.status\")})</Typography>\n                    </MenuItem>\n                );\n            })}\n        </Menu>\n    );\n};\n\nexport default RevisionSelector;\n"],"file":"RevisionSelector.js"}