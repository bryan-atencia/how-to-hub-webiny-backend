import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import React from "react";
import Input from "./Input";
import { Grid, Cell } from "@webiny/ui/Grid";
import { DEFAULT_DATE, DEFAULT_TIME, appendTextToLabel, RemoveFieldButton } from "./utils";

var DateTimeWithoutTimezone = function DateTimeWithoutTimezone(props) {
  // "2020-05-18 09:00:00"
  var _React$useState = React.useState(""),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      date = _React$useState2[0],
      setDate = _React$useState2[1];

  var _React$useState3 = React.useState(""),
      _React$useState4 = _slicedToArray(_React$useState3, 2),
      time = _React$useState4[0],
      setTime = _React$useState4[1];

  React.useEffect(function () {
    if (props.bind.value === null) {
      setDate(DEFAULT_DATE);
      setTime(DEFAULT_TIME);
      return;
    }

    var _props$bind$value$spl = props.bind.value.split(" "),
        _props$bind$value$spl2 = _slicedToArray(_props$bind$value$spl, 2),
        isoDate = _props$bind$value$spl2[0],
        fullTime = _props$bind$value$spl2[1];

    var formattedDate = isoDate;
    var formattedTime = fullTime; // Set previously saved values

    if (date !== formattedDate) {
      setDate(formattedDate);
    }

    if (time !== formattedTime) {
      setTime(formattedTime);
    }
  }, [props.bind.value]);
  var cellSize = props.trailingIcon ? 5 : 6;
  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
    span: 6
  }, /*#__PURE__*/React.createElement(Input, {
    bind: _objectSpread(_objectSpread({}, props.bind), {}, {
      value: date,
      onChange: function onChange(value) {
        setDate(value);
        return props.bind.onChange("".concat(value, " ").concat(time));
      }
    }),
    field: _objectSpread(_objectSpread({}, props.field), {}, {
      label: appendTextToLabel(props.field.label, " date")
    }),
    type: "date"
  })), /*#__PURE__*/React.createElement(Cell, {
    span: cellSize
  }, /*#__PURE__*/React.createElement(Input, {
    bind: _objectSpread(_objectSpread({}, props.bind), {}, {
      value: time,
      onChange: function onChange(value) {
        setTime(value);
        return props.bind.onChange("".concat(date, " ").concat(value));
      }
    }),
    field: _objectSpread(_objectSpread({}, props.field), {}, {
      label: appendTextToLabel(props.field.label, " time")
    }),
    type: "time",
    step: 5
  })), /*#__PURE__*/React.createElement(RemoveFieldButton, {
    trailingIcon: props.trailingIcon
  }));
};

export default DateTimeWithoutTimezone;
//# sourceMappingURL=DateTimeWithoutTimezone.js.map