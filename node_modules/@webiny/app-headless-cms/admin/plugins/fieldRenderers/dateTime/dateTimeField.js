import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Renders input for various formats of date and time."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Date/Time Input"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { Input } from "@webiny/ui/Input";
import DateTimeWithoutTimezone from "./DateTimeWithoutTimezone";
import DateTimeWithTimezone from "./DateTimeWithTimezone";
import Time from "./Time";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/fields/date-time");
import get from "lodash/get";
var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-date-time",
  renderer: {
    rendererName: "date-time-input",
    name: t(_templateObject()),
    description: t(_templateObject2()),
    canUse: function canUse(_ref) {
      var field = _ref.field;
      return field.type === "datetime" && !field.multipleValues && !get(field, "predefinedValues.enabled");
    },
    render: function render(_ref2) {
      var field = _ref2.field,
          getBind = _ref2.getBind;
      var Bind = getBind();
      return /*#__PURE__*/React.createElement(Bind, null, function (bind) {
        if (field.settings.type === "dateTimeWithoutTimezone") {
          return /*#__PURE__*/React.createElement(DateTimeWithoutTimezone, {
            field: field,
            bind: bind
          });
        }

        if (field.settings.type === "dateTimeWithTimezone") {
          return /*#__PURE__*/React.createElement(DateTimeWithTimezone, {
            field: field,
            bind: bind
          });
        }

        if (field.settings.type === "time") {
          return /*#__PURE__*/React.createElement(Time, {
            field: field,
            bind: bind
          });
        }

        return /*#__PURE__*/React.createElement(Input, Object.assign({}, bind, {
          type: field.settings.type
        }));
      });
    }
  }
};
export default plugin;
//# sourceMappingURL=dateTimeField.js.map