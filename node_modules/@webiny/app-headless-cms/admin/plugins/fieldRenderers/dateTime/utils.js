import _objectSpread from "@babel/runtime/helpers/objectSpread2";
import React from "react";
import { css } from "emotion";
import { Cell } from "@webiny/ui/Grid";
import { IconButton } from "@webiny/ui/Button";
export var UTC_TIMEZONES = [{
  value: "-12:00",
  label: "UTC-12:00"
}, {
  value: "-11:00",
  label: "UTC-11:00"
}, {
  value: "-10:00",
  label: "UTC-10:00"
}, {
  value: "-09:30",
  label: "UTC-09:30"
}, {
  value: "-09:00",
  label: "UTC-09:00"
}, {
  value: "-08:00",
  label: "UTC-08:00"
}, {
  value: "-07:00",
  label: "UTC-07:00"
}, {
  value: "-06:00",
  label: "UTC-06:00"
}, {
  value: "-05:00",
  label: "UTC-05:00"
}, {
  value: "-04:30",
  label: "UTC-04:30"
}, {
  value: "-04:00",
  label: "UTC-04:00"
}, {
  value: "-03:30",
  label: "UTC-03:30"
}, {
  value: "-03:00",
  label: "UTC-03:00"
}, {
  value: "-02:00",
  label: "UTC-02:00"
}, {
  value: "-01:00",
  label: "UTC-01:00"
}, {
  value: "+00:00",
  label: "UTC+00:00"
}, {
  value: "+01:00",
  label: "UTC+01:00"
}, {
  value: "+02:00",
  label: "UTC+02:00"
}, {
  value: "+03:00",
  label: "UTC+03:00"
}, {
  value: "+03:30",
  label: "UTC+03:30"
}, {
  value: "+04:00",
  label: "UTC+04:00"
}, {
  value: "+04:30",
  label: "UTC+04:30"
}, {
  value: "+05:30",
  label: "UTC+05:30"
}, {
  value: "+05:45",
  label: "UTC+05:45"
}, {
  value: "+06:00",
  label: "UTC+06:00"
}, {
  value: "+06:30",
  label: "UTC+06:30"
}, {
  value: "+07:00",
  label: "UTC+07:00"
}, {
  value: "+08:00",
  label: "UTC+08:00"
}, {
  value: "+08:45",
  label: "UTC+08:45"
}, {
  value: "+09:00",
  label: "UTC+09:00"
}, {
  value: "+09:30",
  label: "UTC+09:30"
}, {
  value: "+10:00",
  label: "UTC+10:00"
}, {
  value: "+10:30",
  label: "UTC+10:30"
}, {
  value: "+11:00",
  label: "UTC+11:00"
}, {
  value: "+11:30",
  label: "UTC+11:30"
}, {
  value: "+12:00",
  label: "UTC+12:00"
}, {
  value: "+12:45",
  label: "UTC+12:45"
}, {
  value: "+13:00",
  label: "UTC+13:00"
}, {
  value: "+14:00",
  label: "UTC+14:00"
}];
/**
 * @returns Current date string in format `YYYY-MM-DD`
 */

export var getCurrentDateString = function getCurrentDateString() {
  var today = new Date();
  var year = today.getFullYear();
  var month = today.getMonth() + 1; // months start from 0

  var formattedMonth = month < 10 ? "0".concat(month) : month;
  var date = today.getDate();
  return "".concat(year, "-").concat(formattedMonth, "-").concat(date);
};
/**
 *
 * @param {Object} label - I18NString instance
 * @param {String} text - text to append
 *
 * @return new updated instance of I18NString
 */

export var appendTextToLabel = function appendTextToLabel(label, text) {
  return {
    values: label.values.map(function (el) {
      return _objectSpread(_objectSpread({}, el), {}, {
        value: "".concat(el.value).concat(text)
      });
    })
  };
};
export var DEFAULT_TIME = "00:00:00";
export var DEFAULT_DATE = getCurrentDateString();
export var DEFAULT_TIMEZONE = "+01:00";
var deleteIconStyles = /*#__PURE__*/css({
  width: "100% !important",
  height: "100% !important",
  color: "var(--mdc-theme-text-secondary-on-background) !important"
}, "label:deleteIconStyles;");
export var RemoveFieldButton = function RemoveFieldButton(_ref) {
  var trailingIcon = _ref.trailingIcon;

  if (!trailingIcon) {
    return null;
  }

  return /*#__PURE__*/React.createElement(Cell, {
    span: 1
  }, /*#__PURE__*/React.createElement(IconButton, {
    className: deleteIconStyles,
    onClick: trailingIcon.onClick,
    icon: trailingIcon.icon
  }));
};
//# sourceMappingURL=utils.js.map