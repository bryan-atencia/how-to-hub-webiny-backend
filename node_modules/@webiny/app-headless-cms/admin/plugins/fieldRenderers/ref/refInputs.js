import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Renders an auto-complete input, allowing selection of multiple values."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Reference Inputs"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import ContentEntriesMultiAutocomplete from "./components/ContentEntriesMultiAutoComplete";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/fields/ref");
var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-ref-inputs",
  renderer: {
    rendererName: "ref-inputs",
    name: t(_templateObject()),
    description: t(_templateObject2()),
    canUse: function canUse(_ref) {
      var field = _ref.field;
      return field.type === "ref" && field.multipleValues;
    },
    render: function render(props) {
      var Bind = props.getBind();
      return /*#__PURE__*/React.createElement(Bind, null, function (bind) {
        return /*#__PURE__*/React.createElement(ContentEntriesMultiAutocomplete, Object.assign({}, props, {
          bind: bind
        }));
      });
    }
  }
};
export default plugin;
//# sourceMappingURL=refInputs.js.map