import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Renders checkboxes, allowing selection of multiple values."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Checkboxes"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { I18NValue } from "@webiny/app-i18n/components";
import { Checkbox, CheckboxGroup } from "@webiny/ui/Checkbox";
import { i18n } from "@webiny/app/i18n";
import get from "lodash/get";
var t = i18n.ns("app-headless-cms/admin/fields/text");
var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-checkboxes-buttons",
  renderer: {
    rendererName: "checkboxes",
    name: t(_templateObject()),
    description: t(_templateObject2()),
    canUse: function canUse(_ref) {
      var field = _ref.field;
      return field.multipleValues && get(field, "predefinedValues.enabled");
    },
    render: function render(_ref2) {
      var field = _ref2.field,
          getBind = _ref2.getBind,
          locale = _ref2.locale;
      var Bind = getBind();
      var valuesItem = field.predefinedValues.values.values.find(function (item) {
        return item.locale === locale;
      });
      var options = [];

      if (valuesItem) {
        options = Array.isArray(valuesItem.value) ? valuesItem.value : [];
      }

      return /*#__PURE__*/React.createElement(Bind, null, /*#__PURE__*/React.createElement(CheckboxGroup, {
        label: I18NValue({
          value: field.label
        }),
        description: I18NValue({
          value: field.helpText
        })
      }, function (_ref3) {
        var onChange = _ref3.onChange,
            getValue = _ref3.getValue;
        return /*#__PURE__*/React.createElement(React.Fragment, null, options.map(function (option, index) {
          return /*#__PURE__*/React.createElement("div", {
            key: option.value + index
          }, /*#__PURE__*/React.createElement(Checkbox, {
            label: option.label,
            value: getValue(option.value),
            onChange: onChange(option.value)
          }));
        }));
      }));
    }
  }
};
export default plugin;
//# sourceMappingURL=checkboxes.js.map