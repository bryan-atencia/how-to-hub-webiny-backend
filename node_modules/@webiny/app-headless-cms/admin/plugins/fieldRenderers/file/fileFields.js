import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Enables selecting multiple files via File Manager."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["File Inputs"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useState } from "react";
import { I18NValue } from "@webiny/app-i18n/components";
import { i18n } from "@webiny/app/i18n";
import { Cell, Grid } from "@webiny/ui/Grid";
import MultipleFile from "./MultipleFile";
var t = i18n.ns("app-headless-cms/admin/fields/file");

function CmsEditorFieldRenderer(_ref) {
  var field = _ref.field,
      getBind = _ref.getBind,
      Label = _ref.Label;

  var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      previewURLs = _useState2[0],
      setPreviewURLs = _useState2[1];

  var Bind = getBind();
  var FirstFieldBind = getBind(0);
  return /*#__PURE__*/React.createElement(Bind, null, function (_ref2) {
    var appendValues = _ref2.appendValues,
        value = _ref2.value,
        appendValue = _ref2.appendValue;
    return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
      span: 12
    }, /*#__PURE__*/React.createElement(Label, null, /*#__PURE__*/React.createElement(I18NValue, {
      value: field.label
    }))), /*#__PURE__*/React.createElement(Cell, {
      span: 3
    }, /*#__PURE__*/React.createElement(FirstFieldBind, null, function (bind) {
      return /*#__PURE__*/React.createElement(MultipleFile, {
        previewURLs: previewURLs,
        setPreviewURLs: setPreviewURLs,
        field: field,
        bind: bind,
        appendValue: appendValues,
        removeValue: bind.removeValue
      });
    })), value.slice(1).map(function (item, index) {
      var Bind = getBind(index + 1);
      return /*#__PURE__*/React.createElement(Cell, {
        span: 3,
        key: index + 1
      }, /*#__PURE__*/React.createElement(Bind, null, function (bind) {
        return /*#__PURE__*/React.createElement(MultipleFile, {
          previewURLs: previewURLs,
          setPreviewURLs: setPreviewURLs,
          field: field,
          bind: bind,
          appendValue: appendValues,
          removeValue: bind.removeValue
        });
      }));
    }), value.length >= 1 && /*#__PURE__*/React.createElement(Cell, {
      span: 3
    }, /*#__PURE__*/React.createElement(MultipleFile, {
      previewURLs: previewURLs,
      setPreviewURLs: setPreviewURLs,
      field: field,
      bind: {
        value: null,
        onChange: appendValue
      },
      appendValue: appendValues,
      removeValue: function removeValue() {
        return null;
      }
    })));
  });
}

var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-files",
  renderer: {
    rendererName: "file-inputs",
    name: t(_templateObject()),
    description: t(_templateObject2()),
    canUse: function canUse(_ref3) {
      var field = _ref3.field;
      return field.type === "file" && field.multipleValues;
    },
    render: function render(_ref4) {
      var field = _ref4.field,
          getBind = _ref4.getBind,
          Label = _ref4.Label;
      return /*#__PURE__*/React.createElement(CmsEditorFieldRenderer, {
        field: field,
        getBind: getBind,
        Label: Label
      });
    }
  }
};
export default plugin;
//# sourceMappingURL=fileFields.js.map