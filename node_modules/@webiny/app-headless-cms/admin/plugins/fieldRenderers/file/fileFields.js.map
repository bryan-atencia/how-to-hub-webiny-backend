{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/fileFields.tsx"],"names":["React","useState","I18NValue","i18n","Cell","Grid","MultipleFile","t","ns","CmsEditorFieldRenderer","field","getBind","Label","previewURLs","setPreviewURLs","Bind","FirstFieldBind","appendValues","value","appendValue","label","bind","removeValue","slice","map","item","index","length","onChange","plugin","type","name","renderer","rendererName","description","canUse","multipleValues","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { CmsEditorFieldRendererPlugin } from \"@webiny/app-headless-cms/types\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport MultipleFile from \"./MultipleFile\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/file\");\n\nfunction CmsEditorFieldRenderer({ field, getBind, Label }) {\n    const [previewURLs, setPreviewURLs] = useState({});\n\n    const Bind = getBind();\n    const FirstFieldBind = getBind(0);\n\n    return (\n        <Bind>\n            {({ appendValues, value, appendValue }) => (\n                <Grid>\n                    <Cell span={12}>\n                        <Label>\n                            <I18NValue value={field.label} />\n                        </Label>\n                    </Cell>\n                    <Cell span={3}>\n                        <FirstFieldBind>\n                            {bind => (\n                                <MultipleFile\n                                    previewURLs={previewURLs}\n                                    setPreviewURLs={setPreviewURLs}\n                                    field={field}\n                                    bind={bind}\n                                    appendValue={appendValues}\n                                    removeValue={bind.removeValue}\n                                />\n                            )}\n                        </FirstFieldBind>\n                    </Cell>\n\n                    {value.slice(1).map((item, index) => {\n                        const Bind = getBind(index + 1);\n                        return (\n                            <Cell span={3} key={index + 1}>\n                                <Bind>\n                                    {bind => (\n                                        <MultipleFile\n                                            previewURLs={previewURLs}\n                                            setPreviewURLs={setPreviewURLs}\n                                            field={field}\n                                            bind={bind}\n                                            appendValue={appendValues}\n                                            removeValue={bind.removeValue}\n                                        />\n                                    )}\n                                </Bind>\n                            </Cell>\n                        );\n                    })}\n                    {value.length >= 1 && (\n                        <Cell span={3}>\n                            <MultipleFile\n                                previewURLs={previewURLs}\n                                setPreviewURLs={setPreviewURLs}\n                                field={field}\n                                bind={{ value: null, onChange: appendValue }}\n                                appendValue={appendValues}\n                                removeValue={() => null}\n                            />\n                        </Cell>\n                    )}\n                </Grid>\n            )}\n        </Bind>\n    );\n}\n\nconst plugin: CmsEditorFieldRendererPlugin = {\n    type: \"cms-editor-field-renderer\",\n    name: \"cms-editor-field-renderer-files\",\n    renderer: {\n        rendererName: \"file-inputs\",\n        name: t`File Inputs`,\n        description: t`Enables selecting multiple files via File Manager.`,\n        canUse({ field }) {\n            return field.type === \"file\" && field.multipleValues;\n        },\n        render({ field, getBind, Label }) {\n            return <CmsEditorFieldRenderer field={field} getBind={getBind} Label={Label} />;\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"fileFields.js"}