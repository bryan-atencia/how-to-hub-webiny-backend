{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/SingleFile.tsx"],"names":["React","useState","useEffect","useCallback","createRenderImagePreview","imageExtensions","FileUpload","i18n","t","ns","imagePreviewProps","transform","width","style","height","objectFit","SingleFile","props","previewURL","setPreviewURL","isImage","setIsImage","bind","value","includes","some","extension","getImageSrc","fileIcon","getValue","src","onChange","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { createRenderImagePreview, imageExtensions } from \"./utils\";\nimport FileUpload from \"./FileUpload\";\nimport fileIcon from \"../../fields/icons/round_insert_drive_file-24px.svg\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.ns(\"app-headless-cms/admin/fields/file\");\n\nconst imagePreviewProps = {\n    transform: { width: 300 },\n    style: { width: \"100%\", height: 300, objectFit: \"contain\" }\n};\n\nconst SingleFile = props => {\n    const [previewURL, setPreviewURL] = useState(null);\n    const [isImage, setIsImage] = useState(true);\n    // Update `previewURL`\n    useEffect(() => {\n        if (props.bind.value && props.bind.value.includes(\"http\")) {\n            setPreviewURL(null);\n        }\n    }, [props.bind.value]);\n    // Update `isImage`\n    useEffect(() => {\n        if (props.bind.value) {\n            setIsImage(imageExtensions.some(extension => props.bind.value.includes(extension)));\n        }\n    }, [props.bind.value]);\n\n    const getImageSrc = useCallback(() => {\n        if (imageExtensions.some(extension => props.bind.value.includes(extension))) {\n            return props.bind.value;\n        }\n        return fileIcon;\n    }, [props.bind.value]);\n\n    const getValue = useCallback(() => {\n        if (!props.bind.value) {\n            return props.bind.value;\n        }\n\n        return { src: previewURL || getImageSrc() };\n    }, [previewURL, props.bind.value]);\n\n    return (\n        <FileUpload\n            {...props.bind}\n            onChange={value => {\n                if (value !== null) {\n                    props.bind.onChange(value.key);\n                    setPreviewURL(value.src);\n                } else {\n                    props.bind.onChange(value);\n                    setPreviewURL(value);\n                }\n            }}\n            value={getValue()}\n            imagePreviewProps={imagePreviewProps}\n            placeholder={t`Select a file\"`}\n            renderImagePreview={\n                !isImage && createRenderImagePreview({ value: props.bind.value, imagePreviewProps })\n            }\n        />\n    );\n};\n\nexport default SingleFile;\n"],"file":"SingleFile.js"}