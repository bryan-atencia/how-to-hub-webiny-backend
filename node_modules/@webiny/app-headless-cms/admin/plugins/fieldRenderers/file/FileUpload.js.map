{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/FileUpload.tsx"],"names":["React","Image","Ui","FileManager","FormElementMessage","styled","FileUploadWrapper","position","opacity","pointerEvents","color","FileUpload","props","className","onChange","value","validation","description","accept","maxSize","multipleMaxCount","multipleMaxSize","imagePreviewProps","round","multiple","placeholder","styles","renderImagePreview","defaultRenderImagePreview","renderImageProps","showFileManager","isValid","message","Component","width","height"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wBAApB;AACA,SAASC,WAAT,QAA4B,0CAA5B;AAEA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,iBAAiB,gBAAGD,MAAH,CAAU,KAAV;AAAA;AAAA;AAAA,GAAiB;AACpCE,EAAAA,QAAQ,EAAE,UAD0B;AAEpC,eAAa;AACTC,IAAAA,OAAO,EAAE,IADA;AAETC,IAAAA,aAAa,EAAE;AAFN,GAFuB;AAMpC,iCAA+B;AAC3BC,IAAAA,KAAK,EAAE;AADoB;AANK,CAAjB,CAAvB;;IA2DqBC,U;;;;;;;;;;;;;6BAMR;AAAA,wBAiBD,KAAKC,KAjBJ;AAAA,UAEDC,SAFC,eAEDA,SAFC;AAAA,UAGDC,QAHC,eAGDA,QAHC;AAAA,UAIDC,KAJC,eAIDA,KAJC;AAAA,UAKDC,UALC,eAKDA,UALC;AAAA,UAMDC,WANC,eAMDA,WANC;AAAA,UAODC,MAPC,eAODA,MAPC;AAAA,UAQDC,OARC,eAQDA,OARC;AAAA,UASDC,gBATC,eASDA,gBATC;AAAA,UAUDC,eAVC,eAUDA,eAVC;AAAA,UAWDC,iBAXC,eAWDA,iBAXC;AAAA,UAYDC,KAZC,eAYDA,KAZC;AAAA,UAaDC,QAbC,eAaDA,QAbC;AAAA,UAcDC,WAdC,eAcDA,WAdC;AAAA,UAeDC,MAfC,eAeDA,MAfC;AAAA,UAgBDC,kBAhBC,eAgBDA,kBAhBC;;AAmBL,UAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,gBAAgB;AAAA,4BAC9C,oBAAC,KAAD,oBAAWA,gBAAX,EAAiCP,iBAAjC,EAD8C;AAAA,OAAlD;;AAIA,0BACI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAET;AAA9B,sBACI,oBAAC,WAAD;AACI,QAAA,QAAQ,EAAEC,QADd;AAEI,QAAA,MAAM,EAAEI,MAFZ;AAGI,QAAA,OAAO,EAAEC,OAHb;AAII,QAAA,QAAQ,EAAEK,QAJd;AAKI,QAAA,gBAAgB,EAAEJ,gBALtB;AAMI,QAAA,eAAe,EAAEC;AANrB,SAQK;AAAA,YAAGS,eAAH,QAAGA,eAAH;AAAA,4BACG,oBAAC,EAAD,CAAI,KAAJ;AACI,UAAA,kBAAkB,EAAEH,kBAAkB,IAAIC,yBAD9C;AAEI,UAAA,KAAK,EAAEF,MAFX;AAGI,UAAA,KAAK,EAAEX,KAHX;AAII,UAAA,WAAW,EAAEe,eAJjB;AAKI,UAAA,WAAW,EAAEhB,QALjB;AAMI,UAAA,KAAK,EAAES,KANX;AAOI,UAAA,WAAW,EAAEE;AAPjB,UADH;AAAA,OARL,CADJ,EAsBKT,UAAU,CAACe,OAAX,KAAuB,KAAvB,iBACG,oBAAC,kBAAD;AAAoB,QAAA,KAAK;AAAzB,SAA2Bf,UAAU,CAACgB,OAAtC,CAvBR,EAyBKhB,UAAU,CAACe,OAAX,KAAuB,KAAvB,IAAgCd,WAAhC,iBACG,oBAAC,kBAAD,QAAqBA,WAArB,CA1BR,CADJ;AA+BH;;;;EA5DmCjB,KAAK,CAACiC,S;;gBAAzBtB,U,kBACK;AAClBK,EAAAA,UAAU,EAAE;AAAEe,IAAAA,OAAO,EAAE;AAAX,GADM;AAElBL,EAAAA,MAAM,EAAE;AAAEQ,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,MAAM,EAAE;AAAzB;AAFU,C;;SADLxB,U","sourcesContent":["import * as React from \"react\";\nimport { Image } from \"@webiny/app/components/Image\";\nimport * as Ui from \"@webiny/ui/ImageUpload\";\nimport { FileManager } from \"@webiny/app-admin/components/FileManager\";\nimport { FormComponentProps } from \"@webiny/ui/types\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\nimport styled from \"@emotion/styled\";\n\nconst FileUploadWrapper = styled(\"div\")({\n    position: \"relative\",\n    \".disabled\": {\n        opacity: 0.75,\n        pointerEvents: \"none\"\n    },\n    \".mdc-text-field-helper-text\": {\n        color: \"var(--mdc-theme-text-secondary-on-background)\"\n    }\n});\n\ntype FileUploadProps = FormComponentProps & {\n    // Accept types\n    accept?: string[];\n\n    // Component label.\n    label?: string;\n\n    // Is component disabled?\n    disabled?: boolean;\n\n    // Description beneath the image.\n    description?: React.ReactNode;\n\n    // A className for the root element.\n    className?: string;\n\n    // Define file's max allowed size (default is \"10mb\").\n    // Uses \"bytes\" (https://www.npmjs.com/package/bytes) library to convert string notation to actual number.\n    maxSize?: number | string;\n\n    // Max number of files in a single batch.\n    multipleMaxCount?: number;\n\n    // Max size of files in a single batch.\n    multipleMaxSize?: number | string;\n\n    // onChange callback.\n    onChange?: Function;\n\n    // Optional custom props, passed to the preview image.\n    imagePreviewProps?: any;\n\n    // Is the wrapper round?\n    round?: boolean;\n\n    // Placeholder text when hovering over file\n    placeholder?: string;\n\n    // upload multiple files\n    multiple?: boolean;\n\n    // Image wrapper styles\n    styles?: object;\n\n    // render image preview function\n    renderImagePreview?: any;\n};\n\nexport default class FileUpload extends React.Component<FileUploadProps> {\n    static defaultProps = {\n        validation: { isValid: null },\n        styles: { width: \"100%\", height: \"auto\" }\n    };\n\n    render() {\n        const {\n            className,\n            onChange,\n            value,\n            validation,\n            description,\n            accept,\n            maxSize,\n            multipleMaxCount,\n            multipleMaxSize,\n            imagePreviewProps,\n            round,\n            multiple,\n            placeholder,\n            styles,\n            renderImagePreview\n        } = this.props;\n\n        const defaultRenderImagePreview = renderImageProps => (\n            <Image {...renderImageProps} {...imagePreviewProps} />\n        );\n\n        return (\n            <FileUploadWrapper className={className}>\n                <FileManager\n                    onChange={onChange}\n                    accept={accept}\n                    maxSize={maxSize}\n                    multiple={multiple}\n                    multipleMaxCount={multipleMaxCount}\n                    multipleMaxSize={multipleMaxSize}\n                >\n                    {({ showFileManager }) => (\n                        <Ui.Image\n                            renderImagePreview={renderImagePreview || defaultRenderImagePreview}\n                            style={styles}\n                            value={value}\n                            uploadImage={showFileManager}\n                            removeImage={onChange}\n                            round={round}\n                            placeholder={placeholder}\n                        />\n                    )}\n                </FileManager>\n\n                {validation.isValid === false && (\n                    <FormElementMessage error>{validation.message}</FormElementMessage>\n                )}\n                {validation.isValid !== false && description && (\n                    <FormElementMessage>{description}</FormElementMessage>\n                )}\n            </FileUploadWrapper>\n        );\n    }\n}\n"],"file":"FileUpload.js"}