{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/fileField.tsx"],"names":["React","SingleFile","I18NValue","i18n","Cell","Grid","t","ns","plugin","type","name","renderer","rendererName","description","canUse","field","multipleValues","render","getBind","Label","Bind","label","bind"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,IAAMC,CAAC,GAAGH,IAAI,CAACI,EAAL,CAAQ,oCAAR,CAAV;AAEA,IAAMC,MAAoC,GAAG;AACzCC,EAAAA,IAAI,EAAE,2BADmC;AAEzCC,EAAAA,IAAI,EAAE,gCAFmC;AAGzCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,YADR;AAENF,IAAAA,IAAI,EAAEJ,CAAF,mBAFE;AAGNO,IAAAA,WAAW,EAAEP,CAAF,oBAHL;AAINQ,IAAAA,MAJM,wBAIY;AAAA,UAATC,KAAS,QAATA,KAAS;AACd,aAAOA,KAAK,CAACN,IAAN,KAAe,MAAf,IAAyB,CAACM,KAAK,CAACC,cAAvC;AACH,KANK;AAONC,IAAAA,MAPM,yBAO4B;AAAA,UAAzBF,KAAyB,SAAzBA,KAAyB;AAAA,UAAlBG,OAAkB,SAAlBA,OAAkB;AAAA,UAATC,KAAS,SAATA,KAAS;AAC9B,UAAMC,IAAI,GAAGF,OAAO,EAApB;AAEA,0BACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ,sBACI,oBAAC,KAAD,qBACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEH,KAAK,CAACM;AAAxB,QADJ,CADJ,eAII,oBAAC,IAAD,QAAO,UAAAC,IAAI;AAAA,4BAAI,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAEP,KAAnB;AAA0B,UAAA,IAAI,EAAEO;AAAhC,UAAJ;AAAA,OAAX,CAJJ,CADJ,CADJ;AAUH;AApBK;AAH+B,CAA7C;AA2BA,eAAed,MAAf","sourcesContent":["import React from \"react\";\nimport { CmsEditorFieldRendererPlugin } from \"@webiny/app-headless-cms/types\";\nimport SingleFile from \"./SingleFile\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nconst t = i18n.ns(\"app-headless-cms/admin/fields/file\");\n\nconst plugin: CmsEditorFieldRendererPlugin = {\n    type: \"cms-editor-field-renderer\",\n    name: \"cms-editor-field-renderer-file\",\n    renderer: {\n        rendererName: \"file-input\",\n        name: t`File Input`,\n        description: t`Enables selecting a single file via File Manager.`,\n        canUse({ field }) {\n            return field.type === \"file\" && !field.multipleValues;\n        },\n        render({ field, getBind, Label }) {\n            const Bind = getBind();\n\n            return (\n                <Grid>\n                    <Cell span={12}>\n                        <Label>\n                            <I18NValue value={field.label} />\n                        </Label>\n                        <Bind>{bind => <SingleFile field={field} bind={bind} />}</Bind>\n                    </Cell>\n                </Grid>\n            );\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"fileField.js"}