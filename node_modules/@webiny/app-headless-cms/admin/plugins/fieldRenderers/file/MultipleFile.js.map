{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/MultipleFile.tsx"],"names":["React","useState","useEffect","useCallback","FileUpload","createRenderImagePreview","imageWrapperStyles","imageExtensions","i18n","t","ns","imagePreviewProps","transform","width","style","height","objectFit","MultipleFile","props","isImage","setIsImage","bind","value","includes","key","split","pop","previewURLs","undefined","setPreviewURLs","some","extension","getImageSrc","fileIcon","getValue","src","keys","map","file","newPreviewURLs","length","onChange","appendValue","forEach","removeValue","field","multipleValues"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport fileIcon from \"../../fields/icons/round_insert_drive_file-24px.svg\";\nimport { createRenderImagePreview, imageWrapperStyles, imageExtensions } from \"./utils\";\n\nimport { i18n } from \"@webiny/app/i18n\";\nconst t = i18n.ns(\"app-headless-cms/admin/fields/file\");\n\nconst imagePreviewProps = {\n    transform: { width: 300 },\n    style: { width: \"100%\", height: 232, objectFit: \"cover\" }\n};\n\nconst MultipleFile = props => {\n    const [isImage, setIsImage] = useState(true);\n    // Update `previewURL`\n    useEffect(() => {\n        if (props.bind.value && props.bind.value.includes(\"http\")) {\n            const key = props.bind.value.split(\"/\").pop();\n            if (props.previewURLs[key] === undefined) {\n                props.setPreviewURLs({ ...props.previewURLs, [key]: null });\n            }\n        }\n    }, [props.bind.value, props.previewURLs]);\n    // Update `isImage`\n    useEffect(() => {\n        if (props.bind.value) {\n            setIsImage(imageExtensions.some(extension => props.bind.value.includes(extension)));\n        }\n    }, [props.bind.value]);\n\n    const getImageSrc = useCallback(() => {\n        if (imageExtensions.some(extension => props.bind.value.includes(extension))) {\n            return props.bind.value;\n        }\n        return fileIcon;\n    }, [props.bind.value]);\n\n    const getValue = useCallback(() => {\n        if (!props.bind.value) {\n            return props.bind.value;\n        }\n\n        return { src: props.previewURLs[props.bind.value] || getImageSrc() };\n    }, [props.previewURLs, props.bind.value]);\n\n    return (\n        <FileUpload\n            {...props.bind}\n            onChange={value => {\n                if (value !== null) {\n                    const keys = value.map(file => file.key);\n                    const newPreviewURLs = { ...props.previewURLs };\n                    if (keys.length === 1) {\n                        props.bind.onChange(keys[0]);\n\n                        newPreviewURLs[keys[0]] = value[0].src;\n                    } else {\n                        props.appendValue(keys);\n                        value.forEach(file => {\n                            newPreviewURLs[file.key] = file.src;\n                        });\n                    }\n                    props.setPreviewURLs(newPreviewURLs);\n                } else {\n                    props.removeValue();\n                    props.setPreviewURLs({ ...props.previewURLs, [props.bind.value]: null });\n                }\n            }}\n            value={getValue()}\n            imagePreviewProps={imagePreviewProps}\n            multiple={props.field.multipleValues}\n            placeholder={t`Select a file\"`}\n            className={imageWrapperStyles}\n            renderImagePreview={\n                !isImage && createRenderImagePreview({ value: props.bind.value, imagePreviewProps })\n            }\n        />\n    );\n};\n\nexport default MultipleFile;\n"],"file":"MultipleFile.js"}