{"version":3,"sources":["../../../../../src/admin/plugins/fieldRenderers/file/utils.tsx"],"names":["React","css","imageExtensions","imageWrapperStyles","height","fileLabel","padding","whiteSpace","overflow","textOverflow","fontSize","color","backgroundColor","IconWrapperStyle","display","justifyContent","alignItems","IconStyle","width","createRenderImagePreview","value","imagePreviewProps","fileName","getFileName","renderImagePreview","renderImageProps","split","pop"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,SAApB;;AAGA,OAAO,IAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,MAAlC,CAAxB;AAEP,OAAO,IAAMC,kBAAkB,gBAAGF,GAAG,CAAC;AAClCG,EAAAA,MAAM,EAAE;AAD0B,CAAD,8BAA9B;AAIP,IAAMC,SAAS,gBAAGJ,GAAG,CAAC;AAClBK,EAAAA,OAAO,EAAE,MADS;AAElBC,EAAAA,UAAU,EAAE,QAFM;AAGlBC,EAAAA,QAAQ,EAAE,QAHQ;AAIlBC,EAAAA,YAAY,EAAE,UAJI;AAKlBC,EAAAA,QAAQ,EAAE,QALQ;AAMlBC,EAAAA,KAAK,EAAE,6BANW;AAOlBC,EAAAA,eAAe,EAAE;AAPC,CAAD,qBAArB;AAUA,IAAMC,gBAAgB,gBAAGZ,GAAG,CAAC;AACzBa,EAAAA,OAAO,EAAE,MADgB;AAEzBC,EAAAA,cAAc,EAAE,QAFS;AAGzBC,EAAAA,UAAU,EAAE,QAHa;AAIzBZ,EAAAA,MAAM,EAAE;AAJiB,CAAD,4BAA5B;AAOA,IAAMa,SAAS,gBAAGhB,GAAG,CAAC;AAClBiB,EAAAA,KAAK,EAAE,EADW;AAElBd,EAAAA,MAAM,EAAE;AAFU,CAAD,qBAArB;AAKA,OAAO,IAAMe,wBAAwB,GAAG,SAA3BA,wBAA2B,OAAkC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;AACtE,MAAMC,QAAQ,GAAGC,WAAW,CAACH,KAAD,CAA5B;;AAEA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,gBAAgB,EAAI;AAC3C,wBACI,6CAASA,gBAAT,EAA+BJ,iBAA/B,gBACI;AAAK,MAAA,SAAS,EAAER;AAAhB,oBACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEI;AAArB,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAEZ;AAAhB,OAA4BiB,QAA5B,CAJJ,CADJ;AAQH,GATD;;AAUA,SAAOE,kBAAP;AACH,CAdM;;AAgBP,IAAMD,WAAW,GAAG,SAAdA,WAAc,CAAAH,KAAK,EAAI;AACzB,MAAI,CAACA,KAAL,EAAY;AACR,WAAO,EAAP;AACH;;AACD,SAAOA,KAAK,CAACM,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAAP;AACH,CALD","sourcesContent":["import * as React from \"react\";\nimport { css } from \"emotion\";\nimport { ReactComponent as FileIcon } from \"../../fields/icons/round_insert_drive_file-24px.svg\";\n\nexport const imageExtensions = [\".jpg\", \".jpeg\", \".gif\", \".png\", \".svg\"];\n\nexport const imageWrapperStyles = css({\n    height: 232\n});\n\nconst fileLabel = css({\n    padding: \"10px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    fontSize: \"0.8rem\",\n    color: \"var(--mdc-theme-on-surface)\",\n    backgroundColor: \"var(--mdc-theme-on-background)\"\n});\n\nconst IconWrapperStyle = css({\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 200\n});\n\nconst IconStyle = css({\n    width: 64,\n    height: 64\n});\n\nexport const createRenderImagePreview = ({ value, imagePreviewProps }) => {\n    const fileName = getFileName(value);\n\n    const renderImagePreview = renderImageProps => {\n        return (\n            <div {...renderImageProps} {...imagePreviewProps}>\n                <div className={IconWrapperStyle}>\n                    <FileIcon className={IconStyle} />\n                </div>\n                <div className={fileLabel}>{fileName}</div>\n            </div>\n        );\n    };\n    return renderImagePreview;\n};\n\nconst getFileName = value => {\n    if (!value) {\n        return \"\";\n    }\n    return value.split(\"/\").pop();\n};\n"],"file":"utils.js"}