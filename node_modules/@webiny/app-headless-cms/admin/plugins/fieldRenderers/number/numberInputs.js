import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Value {number}"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Renders a simple list of number inputs."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Number Inputs"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { Input } from "@webiny/ui/Input";
import { i18n } from "@webiny/app/i18n";
import { ReactComponent as DeleteIcon } from "@svgr/webpack!@webiny/app-headless-cms/admin/icons/close.svg";
import DynamicListMultipleValues from "./../DynamicListMultipleValues";
import get from "lodash/get";
var t = i18n.ns("app-headless-cms/admin/fields/text");
var plugin = {
  type: "cms-editor-field-renderer",
  name: "cms-editor-field-renderer-number-inputs",
  renderer: {
    rendererName: "number-inputs",
    name: t(_templateObject()),
    description: t(_templateObject2()),
    canUse: function canUse(_ref) {
      var field = _ref.field;
      return field.type === "number" && field.multipleValues && !get(field, "predefinedValues.enabled");
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(DynamicListMultipleValues, props, function (_ref2) {
        var bind = _ref2.bind,
            index = _ref2.index;
        return /*#__PURE__*/React.createElement(Input, Object.assign({}, bind.index, {
          onChange: function onChange(value) {
            value = parseFloat(value);
            return bind.index.onChange(value);
          },
          autoFocus: true,
          onEnter: function onEnter() {
            return bind.field.appendValue("");
          },
          label: t(_templateObject3())({
            number: index + 1
          }),
          type: "number",
          trailingIcon: index > 0 && {
            icon: /*#__PURE__*/React.createElement(DeleteIcon, null),
            onClick: bind.index.removeValue
          }
        }));
      });
    }
  }
};
export default plugin;
//# sourceMappingURL=numberInputs.js.map