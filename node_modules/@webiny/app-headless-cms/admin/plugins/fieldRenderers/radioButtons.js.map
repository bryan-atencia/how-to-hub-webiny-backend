{"version":3,"sources":["../../../../src/admin/plugins/fieldRenderers/radioButtons.tsx"],"names":["React","I18NValue","Radio","RadioGroup","i18n","get","t","ns","plugin","type","name","renderer","rendererName","description","canUse","field","multipleValues","render","getBind","locale","Bind","valuesItem","predefinedValues","values","find","item","options","Array","isArray","value","label","helpText","onChange","getValue","map","option","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,IAAMC,CAAC,GAAGF,IAAI,CAACG,EAAL,CAAQ,oCAAR,CAAV;AAEA,IAAMC,MAAoC,GAAG;AACzCC,EAAAA,IAAI,EAAE,2BADmC;AAEzCC,EAAAA,IAAI,EAAE,yCAFmC;AAGzCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,eADR;AAENF,IAAAA,IAAI,EAAEJ,CAAF,mBAFE;AAGNO,IAAAA,WAAW,EAAEP,CAAF,oBAHL;AAINQ,IAAAA,MAJM,wBAIY;AAAA,UAATC,KAAS,QAATA,KAAS;AACd,aAAO,CAACA,KAAK,CAACC,cAAP,IAAyBX,GAAG,CAACU,KAAD,EAAQ,0BAAR,CAAnC;AACH,KANK;AAONE,IAAAA,MAPM,yBAO6B;AAAA,UAA1BF,KAA0B,SAA1BA,KAA0B;AAAA,UAAnBG,OAAmB,SAAnBA,OAAmB;AAAA,UAAVC,MAAU,SAAVA,MAAU;AAC/B,UAAMC,IAAI,GAAGF,OAAO,EAApB;AAEA,UAAMG,UAAU,GAAGN,KAAK,CAACO,gBAAN,CAAuBC,MAAvB,CAA8BA,MAA9B,CAAqCC,IAArC,CACf,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACN,MAAL,KAAgBA,MAApB;AAAA,OADW,CAAnB;AAGA,UAAIO,OAAO,GAAG,EAAd;;AACA,UAAIL,UAAJ,EAAgB;AACZK,QAAAA,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcP,UAAU,CAACQ,KAAzB,IAAkCR,UAAU,CAACQ,KAA7C,GAAqD,EAA/D;AACH;;AAED,0BACI,oBAAC,IAAD,qBACI,oBAAC,UAAD;AACI,QAAA,KAAK,EAAE5B,SAAS,CAAC;AAAE4B,UAAAA,KAAK,EAAEd,KAAK,CAACe;AAAf,SAAD,CADpB;AAEI,QAAA,WAAW,EAAE7B,SAAS,CAAC;AAAE4B,UAAAA,KAAK,EAAEd,KAAK,CAACgB;AAAf,SAAD;AAF1B,SAIK;AAAA,YAAGC,QAAH,SAAGA,QAAH;AAAA,YAAaC,QAAb,SAAaA,QAAb;AAAA,4BACG,oBAAC,KAAD,CAAO,QAAP,QACKP,OAAO,CAACQ,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT;AAAA,8BACT;AAAK,YAAA,GAAG,EAAED,MAAM,CAACN,KAAP,GAAeO;AAAzB,0BACI,oBAAC,KAAD;AACI,YAAA,KAAK,EAAED,MAAM,CAACL,KADlB;AAEI,YAAA,KAAK,EAAEG,QAAQ,CAACE,MAAM,CAACN,KAAR,CAFnB;AAGI,YAAA,QAAQ,EAAEG,QAAQ,CAACG,MAAM,CAACN,KAAR;AAHtB,YADJ,CADS;AAAA,SAAZ,CADL,CADH;AAAA,OAJL,CADJ,CADJ;AAsBH;AAxCK;AAH+B,CAA7C;AA+CA,eAAerB,MAAf","sourcesContent":["import React from \"react\";\nimport { CmsEditorFieldRendererPlugin } from \"@webiny/app-headless-cms/types\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { Radio, RadioGroup } from \"@webiny/ui/Radio\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport get from \"lodash/get\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/text\");\n\nconst plugin: CmsEditorFieldRendererPlugin = {\n    type: \"cms-editor-field-renderer\",\n    name: \"cms-editor-field-renderer-radio-buttons\",\n    renderer: {\n        rendererName: \"radio-buttons\",\n        name: t`Radio Buttons`,\n        description: t`Renders radio buttons, allowing selection of a single value.`,\n        canUse({ field }) {\n            return !field.multipleValues && get(field, \"predefinedValues.enabled\");\n        },\n        render({ field, getBind, locale }) {\n            const Bind = getBind();\n\n            const valuesItem = field.predefinedValues.values.values.find(\n                item => item.locale === locale\n            );\n            let options = [];\n            if (valuesItem) {\n                options = Array.isArray(valuesItem.value) ? valuesItem.value : [];\n            }\n\n            return (\n                <Bind>\n                    <RadioGroup\n                        label={I18NValue({ value: field.label })}\n                        description={I18NValue({ value: field.helpText })}\n                    >\n                        {({ onChange, getValue }) => (\n                            <React.Fragment>\n                                {options.map((option, index) => (\n                                    <div key={option.value + index}>\n                                        <Radio\n                                            label={option.label}\n                                            value={getValue(option.value)}\n                                            onChange={onChange(option.value)}\n                                        />\n                                    </div>\n                                ))}\n                            </React.Fragment>\n                        )}\n                    </RadioGroup>\n                </Bind>\n            );\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"radioButtons.js"}