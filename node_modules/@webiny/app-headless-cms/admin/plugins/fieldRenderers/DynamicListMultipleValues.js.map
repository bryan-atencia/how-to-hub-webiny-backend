{"version":3,"sources":["../../../../src/admin/plugins/fieldRenderers/DynamicListMultipleValues.tsx"],"names":["React","I18NValue","ButtonDefault","i18n","Cell","Grid","css","t","ns","style","addButton","textAlign","width","DynamicListMultipleValues","field","getBind","Label","children","Bind","FirstFieldBind","bindField","value","appendValue","label","bindIndex","bind","index","slice","map","item","realIndex","BindField","undefined"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,GAAT,QAAoB,SAApB;AAEA,IAAMC,CAAC,GAAGJ,IAAI,CAACK,EAAL,CAAQ,oCAAR,CAAV;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,SAAS,eAAEJ,GAAG,CAAC;AACXK,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAAD;AADJ,CAAd;;AAOA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAyC;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvE,MAAMC,IAAI,GAAGH,OAAO,EAApB;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,CAAD,CAA9B;AAEA,sBACI,oBAAC,IAAD,QACK,UAAAK,SAAS,EAAI;AAAA,QACFC,KADE,GACqBD,SADrB,CACFC,KADE;AAAA,QACKC,WADL,GACqBF,SADrB,CACKE,WADL;AAEV,wBACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AAAZ,OACKR,KAAK,CAACS,KAAN,iBACG,oBAAC,KAAD,qBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAET,KAAK,CAACS;AAAxB,MADJ,CAFR,eAOI,oBAAC,cAAD,QACK,UAAAC,SAAS;AAAA,aACNP,QAAQ,CAAC;AACLH,QAAAA,KAAK,EAALA,KADK;AAELW,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAEF,SAAT;AAAoBV,UAAAA,KAAK,EAAEM;AAA3B,SAFD;AAGLM,QAAAA,KAAK,EAAE;AAHF,OAAD,CADF;AAAA,KADd,CAPJ,CADJ,EAmBKN,SAAS,CAACC,KAAV,CAAgBM,KAAhB,CAAsB,CAAtB,EAAyBC,GAAzB,CAA6B,UAACC,IAAD,EAAOH,KAAP,EAAiB;AAC3C,UAAMI,SAAS,GAAGJ,KAAK,GAAG,CAA1B;AACA,UAAMK,SAAS,GAAGhB,OAAO,CAACe,SAAD,CAAzB;AACA,0BACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,EAAZ;AAAgB,QAAA,GAAG,EAAEA;AAArB,sBACI,oBAAC,SAAD,QACK,UAAAN,SAAS;AAAA,eACNP,QAAQ,CAAC;AACLH,UAAAA,KAAK,EAALA,KADK;AAELW,UAAAA,IAAI,EAAE;AAAEC,YAAAA,KAAK,EAAEF,SAAT;AAAoBV,YAAAA,KAAK,EAAEM;AAA3B,WAFD;AAGLM,UAAAA,KAAK,EAAEI;AAHF,SAAD,CADF;AAAA,OADd,CADJ,CADJ;AAaH,KAhBA,CAnBL,eAoCI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,EAAZ;AAAgB,MAAA,SAAS,EAAErB,KAAK,CAACC;AAAjC,oBACI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAEW,KAAK,CAAC,CAAD,CAAL,KAAaW,SAD3B;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMV,WAAW,CAAC,EAAD,CAAjB;AAAA;AAFb,OAGEf,CAHF,oBADJ,CApCJ,CADJ;AA6CH,GAhDL,CADJ;AAoDH,CAxDD;;AA0DA,eAAeM,yBAAf","sourcesContent":["import React from \"react\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Cell, Grid } from \"@webiny/ui/Grid\";\nimport { css } from \"emotion\";\n\nconst t = i18n.ns(\"app-headless-cms/admin/fields/text\");\n\nconst style = {\n    addButton: css({\n        textAlign: \"center\",\n        width: \"100%\"\n    })\n};\n\nconst DynamicListMultipleValues = ({ field, getBind, Label, children }) => {\n    const Bind = getBind();\n    const FirstFieldBind = getBind(0);\n\n    return (\n        <Bind>\n            {bindField => {\n                const { value, appendValue } = bindField;\n                return (\n                    <Grid>\n                        <Cell span={12}>\n                            {field.label && (\n                                <Label>\n                                    <I18NValue value={field.label} />\n                                </Label>\n                            )}\n\n                            <FirstFieldBind>\n                                {bindIndex =>\n                                    children({\n                                        field,\n                                        bind: { index: bindIndex, field: bindField },\n                                        index: 0\n                                    })\n                                }\n                            </FirstFieldBind>\n                        </Cell>\n\n                        {bindField.value.slice(1).map((item, index) => {\n                            const realIndex = index + 1;\n                            const BindField = getBind(realIndex);\n                            return (\n                                <Cell span={12} key={realIndex}>\n                                    <BindField>\n                                        {bindIndex =>\n                                            children({\n                                                field,\n                                                bind: { index: bindIndex, field: bindField },\n                                                index: realIndex\n                                            })\n                                        }\n                                    </BindField>\n                                </Cell>\n                            );\n                        })}\n                        <Cell span={12} className={style.addButton}>\n                            <ButtonDefault\n                                disabled={value[0] === undefined}\n                                onClick={() => appendValue(\"\")}\n                            >{t`+ Add value`}</ButtonDefault>\n                        </Cell>\n                    </Grid>\n                );\n            }}\n        </Bind>\n    );\n};\n\nexport default DynamicListMultipleValues;\n"],"file":"DynamicListMultipleValues.js"}