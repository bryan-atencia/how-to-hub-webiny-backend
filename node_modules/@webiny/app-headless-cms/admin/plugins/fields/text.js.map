{"version":3,"sources":["../../../../src/admin/plugins/fields/text.tsx"],"names":["React","Grid","Cell","I18NInput","i18n","Input","PredefinedValuesDynamicFieldset","t","ns","plugin","type","name","field","validators","label","description","icon","allowMultipleValues","allowPredefinedValues","allowIndexes","singleValue","multipleValues","multipleValuesLabel","createField","validation","renderer","renderSettings","Bind","form","renderPredefinedValues","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,mCAA1B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,+BAAP,MAA4C,mCAA5C;AACA,IAAMC,CAAC,GAAGH,IAAI,CAACI,EAAL,CAAQ,+BAAR,CAAV;AAEA,IAAMC,MAAgC,GAAG;AACrCC,EAAAA,IAAI,EAAE,uBAD+B;AAErCC,EAAAA,IAAI,EAAE,4BAF+B;AAGrCC,EAAAA,KAAK,EAAE;AACHF,IAAAA,IAAI,EAAE,MADH;AAEHG,IAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,WAA1B,EAAuC,SAAvC,CAFT;AAGHC,IAAAA,KAAK,EAAEP,CAAF,mBAHF;AAIHQ,IAAAA,WAAW,EAAER,CAAF,oBAJR;AAKHS,IAAAA,IAAI,eAAE,oBAAC,QAAD,OALH;AAMHC,IAAAA,mBAAmB,EAAE,IANlB;AAOHC,IAAAA,qBAAqB,EAAE,IAPpB;AAQHC,IAAAA,YAAY,EAAE;AACVC,MAAAA,WAAW,EAAE,IADH;AAEVC,MAAAA,cAAc,EAAE;AAFN,KARX;AAYHC,IAAAA,mBAAmB,EAAEf,CAAF,oBAZhB;AAaHgB,IAAAA,WAbG,yBAaW;AACV,aAAO;AACHb,QAAAA,IAAI,EAAE,KAAKA,IADR;AAEHc,QAAAA,UAAU,EAAE,EAFT;AAGHC,QAAAA,QAAQ,EAAE;AACNd,UAAAA,IAAI,EAAE;AADA;AAHP,OAAP;AAOH,KArBE;AAsBHe,IAAAA,cAtBG,gCAsBgC;AAAA,UAAVC,IAAU,QAAlBC,IAAkB,CAAVD,IAAU;AAC/B,0BACI,oBAAC,IAAD,qBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ,sBACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEpB,CAAF,oBADT;AAEI,QAAA,WAAW,EAAEA,CAAF;AAFf,QADJ,CADJ,CADJ,CADJ;AAYH,KAnCE;AAoCHsB,IAAAA,sBApCG,kCAoCoBC,KApCpB,EAoC2B;AAC1B,0BACI,oBAAC,+BAAD,EAAqCA,KAArC,eACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEvB,CAAF;AAAZ,QADJ,CADJ;AAKH;AA1CE;AAH8B,CAAzC;AAiDA,eAAeE,MAAf","sourcesContent":["import React from \"react\";\nimport { ReactComponent as TextIcon } from \"./icons/round-text_fields-24px.svg\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { I18NInput } from \"@webiny/app-i18n/admin/components\";\nimport { CmsEditorFieldTypePlugin } from \"@webiny/app-headless-cms/types\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Input } from \"@webiny/ui/Input\";\nimport PredefinedValuesDynamicFieldset from \"./PredefinedValuesDynamicFieldset\";\nconst t = i18n.ns(\"app-headless-cms/admin/fields\");\n\nconst plugin: CmsEditorFieldTypePlugin = {\n    type: \"cms-editor-field-type\",\n    name: \"cms-editor-field-type-text\",\n    field: {\n        type: \"text\",\n        validators: [\"required\", \"minLength\", \"maxLength\", \"pattern\"],\n        label: t`Text`,\n        description: t`Titles, names, single line values.`,\n        icon: <TextIcon />,\n        allowMultipleValues: true,\n        allowPredefinedValues: true,\n        allowIndexes: {\n            singleValue: true,\n            multipleValues: false\n        },\n        multipleValuesLabel: t`Use as a list of texts`,\n        createField() {\n            return {\n                type: this.type,\n                validation: [],\n                renderer: {\n                    name: \"\"\n                }\n            };\n        },\n        renderSettings({ form: { Bind } }) {\n            return (\n                <Grid>\n                    <Cell span={12}>\n                        <Bind name={\"placeholderText\"}>\n                            <I18NInput\n                                label={t`Placeholder text`}\n                                description={t`Placeholder text (optional)`}\n                            />\n                        </Bind>\n                    </Cell>\n                </Grid>\n            );\n        },\n        renderPredefinedValues(props) {\n            return (\n                <PredefinedValuesDynamicFieldset {...props}>\n                    <Input label={t`Value`} />\n                </PredefinedValuesDynamicFieldset>\n            );\n        }\n    }\n};\n\nexport default plugin;\n"],"file":"text.js"}