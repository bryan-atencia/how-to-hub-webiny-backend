import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Use as a list of booleans"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Store boolean (\"yes\" or \"no\" ) values."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Boolean"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { ReactComponent as BooleanIcon } from "@svgr/webpack!./icons/toggle_on-black-24px.svg";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/fields");
var plugin = {
  type: "cms-editor-field-type",
  name: "cms-editor-field-type-boolean",
  field: {
    type: "boolean",
    label: t(_templateObject()),
    description: t(_templateObject2()),
    icon: /*#__PURE__*/React.createElement(BooleanIcon, null),
    allowMultipleValues: false,
    allowPredefinedValues: false,
    allowIndexes: {
      singleValue: true,
      multipleValues: false
    },
    multipleValuesLabel: t(_templateObject3()),
    createField: function createField() {
      return {
        type: this.type,
        validation: [],
        renderer: {
          name: ""
        }
      };
    }
  }
};
export default plugin;
//# sourceMappingURL=boolean.js.map