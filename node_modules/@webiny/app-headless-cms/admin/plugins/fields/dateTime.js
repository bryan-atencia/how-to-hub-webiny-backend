import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject15() {
  var data = _taggedTemplateLiteral(["Date and time without timezone"]);

  _templateObject15 = function _templateObject15() {
    return data;
  };

  return data;
}

function _templateObject14() {
  var data = _taggedTemplateLiteral(["dateTimeWithoutTimezone"]);

  _templateObject14 = function _templateObject14() {
    return data;
  };

  return data;
}

function _templateObject13() {
  var data = _taggedTemplateLiteral(["Date and time with timezone"]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = _taggedTemplateLiteral(["dateTimeWithTimezone"]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = _taggedTemplateLiteral(["Time only"]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10() {
  var data = _taggedTemplateLiteral(["time"]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["Date only"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["date"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Cannot be changed later"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Format"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Placeholder text (optional)"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Placeholder text"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Use as a list of dates and times"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Store date and time."]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Date/Time"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { ReactComponent as DateTimeIcon } from "@svgr/webpack!./icons/schedule-black-24px.svg";
import { Grid, Cell } from "@webiny/ui/Grid";
import { Select } from "@webiny/ui/Select";
import { I18NInput } from "@webiny/app-i18n/admin/components";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/fields");
var plugin = {
  type: "cms-editor-field-type",
  name: "cms-editor-field-type-dateTime",
  field: {
    type: "datetime",
    label: t(_templateObject()),
    description: t(_templateObject2()),
    icon: /*#__PURE__*/React.createElement(DateTimeIcon, null),
    validators: ["required", "gte", "lte"],
    allowMultipleValues: true,
    allowPredefinedValues: false,
    // TODO: implement "renderPredefinedValues" and set to true.
    allowIndexes: {
      singleValue: true,
      multipleValues: false
    },
    multipleValuesLabel: t(_templateObject3()),
    createField: function createField() {
      return {
        type: this.type,
        settings: {
          type: "date"
        },
        validation: [],
        renderer: {
          name: ""
        }
      };
    },
    renderSettings: function renderSettings(_ref) {
      var Bind = _ref.form.Bind;
      return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, /*#__PURE__*/React.createElement(Bind, {
        name: "placeholderText"
      }, /*#__PURE__*/React.createElement(I18NInput, {
        label: t(_templateObject4()),
        description: t(_templateObject5())
      }))), /*#__PURE__*/React.createElement(Cell, {
        span: 12
      }, /*#__PURE__*/React.createElement(Bind, {
        name: "settings.type"
      }, /*#__PURE__*/React.createElement(Select, {
        label: t(_templateObject6()),
        description: t(_templateObject7())
      }, /*#__PURE__*/React.createElement("option", {
        value: t(_templateObject8())
      }, t(_templateObject9())), /*#__PURE__*/React.createElement("option", {
        value: t(_templateObject10())
      }, t(_templateObject11())), /*#__PURE__*/React.createElement("option", {
        value: t(_templateObject12())
      }, t(_templateObject13())), /*#__PURE__*/React.createElement("option", {
        value: t(_templateObject14())
      }, t(_templateObject15()))))));
    }
  }
};
export default plugin;
//# sourceMappingURL=dateTime.js.map