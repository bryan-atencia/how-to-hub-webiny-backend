import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Change environment"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["N/A"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Headless CMS"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React, { useState, useEffect } from "react";
import { i18n } from "@webiny/app/i18n";
var t = i18n.ns("app-headless-cms/admin/menus");
import { ReactComponent as HeadlessCmsIcon } from "@svgr/webpack!../../icons/devices_other-black-24px.svg";
import { ReactComponent as EnvironmentIcon } from "@svgr/webpack!../../icons/call_split-24px.svg";
import { Typography } from "@webiny/ui/Typography";
import { css } from "emotion";
import { useNavigation } from "@webiny/app-admin/plugins/Menu/Navigation/components";
import EnvironmentSelectorDialog from "./../../components/EnvironmentSelectorDialog";
import { useCms } from "@webiny/app-headless-cms/admin/hooks";
import { useQuery } from "@webiny/app-headless-cms/admin/hooks";
import { registerPlugins, unregisterPlugin, getPlugin, getPlugins } from "@webiny/plugins";
import { LIST_MENU_CONTENT_GROUPS_MODELS } from "./../../viewsGraphql";
import get from "lodash/get";
var style = {
  itemsList: /*#__PURE__*/css({
    paddingTop: 10,
    paddingBottom: 10,
    "> li": {
      display: "flex",
      alignItems: "center",
      paddingTop: 2,
      paddingBottom: 2
    }
  }, "label:itemsList;"),
  icon: /*#__PURE__*/css({
    width: 16,
    height: 16
  }, "label:icon;"),
  environmentLi: /*#__PURE__*/css({
    color: "var(--mdc-theme-text-secondary-on-background)"
  }, "label:environmentLi;"),
  environmentLiIcon: /*#__PURE__*/css({
    width: 16,
    height: 16
  }, "label:environmentLiIcon;"),
  environmentLiLabel: /*#__PURE__*/css({
    marginLeft: 2,
    width: 110,
    whiteSpace: "nowrap",
    overflow: "hidden",
    textOverflow: "ellipsis"
  }, "label:environmentLiLabel;"),
  changeEnvironmentLiLink: /*#__PURE__*/css({
    color: "var(--mdc-theme-primary)"
  }, "label:changeEnvironmentLiLink;")
};

var HeadlessCmsMenu = function HeadlessCmsMenu(_ref) {
  var Menu = _ref.Menu,
      children = _ref.children;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      dialogOpened = _useState2[0],
      setDialogOpened = _useState2[1];

  var _useNavigation = useNavigation(),
      hideMenu = _useNavigation.hideMenu;

  var _useCms = useCms(),
      currentEnvironment = _useCms.environments.currentEnvironment;

  var response = useQuery(LIST_MENU_CONTENT_GROUPS_MODELS);
  var contentModelGroups = get(response, "data.listContentModelGroups.data", []);
  var cmgHash = contentModelGroups.reduce(function (returnValue, currentValue) {
    return returnValue + currentValue.contentModels.reduce(function (returnValue, currentValue) {
      return returnValue + currentValue.modelId;
    }, "");
  }, ""); // Generate "admin-global-search" plugins - enables the user to search content via the global search bar.

  useEffect(function () {
    // 1. Unregister all previously registered plugins.
    getPlugins("admin-global-search").filter(function (item) {
      return item.name.startsWith("admin-global-search-headless-cms");
    }).forEach(function (item) {
      return unregisterPlugin(item.name);
    }); // 2. Register a new set of plugins via the latest list of content models.

    contentModelGroups.forEach(function (group) {
      group.contentModels.forEach(function (contentModel) {
        var pluginName = "admin-global-search-headless-cms-" + contentModel.modelId;

        if (!getPlugin(pluginName)) {
          registerPlugins({
            type: "admin-global-search",
            name: "admin-global-search-headless-cms-" + contentModel.modelId,
            route: "/cms/content-models/manage/" + contentModel.modelId,
            label: contentModel.name
          });
        }
      });
    });
  }, [get(currentEnvironment, "id"), cmgHash]);
  return /*#__PURE__*/React.createElement(Menu, {
    onClick: function onClick(toggleMenu) {
      return !dialogOpened && toggleMenu();
    },
    name: "headless-cms",
    icon: /*#__PURE__*/React.createElement(HeadlessCmsIcon, null),
    label: /*#__PURE__*/React.createElement("ul", {
      className: style.itemsList
    }, /*#__PURE__*/React.createElement("li", null, t(_templateObject())), /*#__PURE__*/React.createElement("li", {
      className: style.environmentLi
    }, /*#__PURE__*/React.createElement(EnvironmentIcon, {
      className: style.environmentLiIcon
    }), /*#__PURE__*/React.createElement(Typography, {
      use: "caption",
      className: style.environmentLiLabel
    }, currentEnvironment ? currentEnvironment.name : t(_templateObject2()))), /*#__PURE__*/React.createElement("li", null, /*#__PURE__*/React.createElement(Typography, {
      use: "caption"
    }, /*#__PURE__*/React.createElement("div", {
      className: style.changeEnvironmentLiLink,
      onClick: function onClick(e) {
        e.preventDefault();
        e.stopPropagation();
        setDialogOpened(true);
      }
    }, t(_templateObject3()))), /*#__PURE__*/React.createElement(EnvironmentSelectorDialog, {
      open: dialogOpened,
      onClose: function onClose() {
        setDialogOpened(false);
        hideMenu();
      }
    })))
  }, children);
};

export default HeadlessCmsMenu;
//# sourceMappingURL=HeadlessCmsMenu.js.map