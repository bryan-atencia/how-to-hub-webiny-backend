import _taggedTemplateLiteral from "@babel/runtime/helpers/taggedTemplateLiteral";

function _templateObject7() {
  var data = _taggedTemplateLiteral(["Access Tokens"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["Aliases"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["Environments"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["Headless CMS"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["Groups"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["Models"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["Content Models"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import React from "react";
import { i18n } from "@webiny/app/i18n";
import { SecureView } from "@webiny/app-security/components";
import HeadlessCmsMenu from "./menus/HeadlessCmsMenu";
import ContentModelMenuItems from "./menus/ContentModelMenuItems";
var t = i18n.ns("app-headless-cms/admin/menus");
export default [{
  type: "admin-menu",
  name: "menu-headless-cms",
  render: function render(_ref) {
    var Menu = _ref.Menu,
        Section = _ref.Section,
        Item = _ref.Item;
    return /*#__PURE__*/React.createElement(SecureView, {
      scopes: {
        contentModels: ["cms:content-model:crud"],
        contentModelGroups: ["cms:content-model-group:crud"]
      }
    }, function (_ref2) {
      var scopes = _ref2.scopes;
      var contentModels = scopes.contentModels,
          contentModelGroups = scopes.contentModelGroups;

      if (!contentModels && !contentModelGroups) {
        return null;
      }

      return /*#__PURE__*/React.createElement(HeadlessCmsMenu, {
        Menu: Menu
      }, /*#__PURE__*/React.createElement(ContentModelMenuItems, {
        Section: Section,
        Item: Item
      }), /*#__PURE__*/React.createElement(Section, {
        label: t(_templateObject())
      }, contentModels && /*#__PURE__*/React.createElement(Item, {
        label: t(_templateObject2()),
        path: "/cms/content-models"
      }), contentModelGroups && /*#__PURE__*/React.createElement(Item, {
        label: t(_templateObject3()),
        path: "/cms/content-model-groups"
      })));
    });
  }
}, {
  type: "admin-menu-settings",
  name: "menu-settings-cms-environments",
  render: function render(_ref3) {
    var Section = _ref3.Section,
        Item = _ref3.Item;
    return /*#__PURE__*/React.createElement(Section, {
      label: t(_templateObject4())
    }, /*#__PURE__*/React.createElement(Item, {
      label: t(_templateObject5()),
      path: "/settings/cms/environments"
    }), /*#__PURE__*/React.createElement(Item, {
      label: t(_templateObject6()),
      path: "/settings/cms/environments/aliases"
    }), /*#__PURE__*/React.createElement(Item, {
      label: t(_templateObject7()),
      path: "/settings/cms/accessTokens"
    }));
  }
}];
//# sourceMappingURL=menus.js.map