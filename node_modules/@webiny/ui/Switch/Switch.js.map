{"version":3,"sources":["../../src/Switch/Switch.tsx"],"names":["React","Switch","RmwcSwitch","pick","FormElementMessage","getClasses","e","props","onChange","target","checked","value","description","validation","rmwcProps","Boolean","isValid","message","Component"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAkD,cAAlD;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAWA;;;IAGMJ,M;;;;;;;;;;;;;;;;+DAOS,UAACK,CAAD,EAA0C;AACjD,YAAKC,KAAL,CAAWC,QAAX,IAAuB,MAAKD,KAAL,CAAWC,QAAX,CAAqBF,CAAC,CAACG,MAAH,CAAkBC,OAAtC,CAAvB;AACH,K;;;;;;;6BAEQ;AAAA,wBACsC,KAAKH,KAD3C;AAAA,UACGI,KADH,eACGA,KADH;AAAA,UACUC,WADV,eACUA,WADV;AAAA,UACuBC,UADvB,eACuBA,UADvB;AAGL,0BACI,oBAAC,KAAD,CAAO,QAAP,qBACI,oBAAC,UAAD,oBACQR,UAAU,mBAAMF,IAAI,CAAC,KAAKI,KAAN,EAAaN,MAAM,CAACa,SAApB,CAAV,GAA4C,kBAA5C,CADlB;AAEI,QAAA,OAAO,EAAEC,OAAO,CAACJ,KAAD,CAFpB;AAGI,QAAA,QAAQ,EAAE,KAAKH;AAHnB,SADJ,EAOKK,UAAU,CAACG,OAAX,KAAuB,KAAvB,iBACG,oBAAC,kBAAD;AAAoB,QAAA,KAAK;AAAzB,SAA2BH,UAAU,CAACI,OAAtC,CARR,EAWKJ,UAAU,CAACG,OAAX,KAAuB,KAAvB,IAAgCJ,WAAhC,iBACG,oBAAC,kBAAD,QAAqBA,WAArB,CAZR,CADJ;AAiBH;;;;EA/BgBZ,KAAK,CAACkB,S;;gBAArBjB,M,kBACoB;AAClBY,EAAAA,UAAU,EAAE;AAAEG,IAAAA,OAAO,EAAE;AAAX;AADM,C;;gBADpBf,M,eAKiB,CAAC,IAAD,EAAO,UAAP,EAAmB,SAAnB,EAA8B,OAA9B,EAAuC,WAAvC,EAAoD,WAApD,C;;AA6BvB,SAASA,MAAT","sourcesContent":["import * as React from \"react\";\nimport { Switch as RmwcSwitch, SwitchProps } from \"@rmwc/switch\";\nimport { FormComponentProps } from \"./../types\";\nimport pick from \"lodash/pick\";\nimport { FormElementMessage } from \"../FormElementMessage\";\nimport { getClasses } from \"@webiny/ui/Helpers\";\n\ntype Props = FormComponentProps &\n    SwitchProps & {\n        // Description beneath the switch.\n        description?: string;\n\n        // Optional class name.\n        className?: string;\n    };\n\n/**\n * Switch component can be used to store simple boolean values.\n */\nclass Switch extends React.Component<Props> {\n    static defaultProps = {\n        validation: { isValid: null }\n    };\n\n    static rmwcProps = [\"id\", \"disabled\", \"checked\", \"label\", \"rootProps\", \"className\"];\n\n    onChange = (e: React.SyntheticEvent<HTMLElement>) => {\n        this.props.onChange && this.props.onChange((e.target as any).checked);\n    };\n\n    render() {\n        const { value, description, validation } = this.props;\n\n        return (\n            <React.Fragment>\n                <RmwcSwitch\n                    {...getClasses({ ...pick(this.props, Switch.rmwcProps) }, \"webiny-ui-switch\")}\n                    checked={Boolean(value)}\n                    onChange={this.onChange}\n                />\n\n                {validation.isValid === false && (\n                    <FormElementMessage error>{validation.message}</FormElementMessage>\n                )}\n\n                {validation.isValid !== false && description && (\n                    <FormElementMessage>{description}</FormElementMessage>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport { Switch };\n"],"file":"Switch.js"}