import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import * as React from "react";
import { Select as RmwcSelect } from "@rmwc/select";
import { FormElementMessage } from "@webiny/ui/FormElementMessage";
import { css } from "emotion";
import classNames from "classnames";
var noLabel = /*#__PURE__*/css({
  "&.mdc-select": {
    height: 35,
    ".mdc-select__native-control": {
      paddingTop: 0
    },
    "&.mdc-select--box": {
      ".mdc-select__native-control": {
        height: 35,
        paddingTop: 5
      }
    }
  }
}, "label:noLabel;");
/**
 * Select component lets users choose a value from given set of options.
 */

var skipProps = ["validate"];

var getRmwcProps = function getRmwcProps(props) {
  var newProps = {};
  Object.keys(props).filter(function (name) {
    return !skipProps.includes(name);
  }).forEach(function (name) {
    return newProps[name] = props[name];
  });
  return newProps;
};

export var Select = function Select(props) {
  var value = props.value,
      description = props.description,
      validation = props.validation,
      other = _objectWithoutProperties(props, ["value", "description", "validation"]);

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RmwcSelect, Object.assign({}, getRmwcProps(other), {
    value: value,
    className: classNames("webiny-ui-select", props.className, _defineProperty({}, noLabel, !props.label)),
    onChange: function onChange(e) {
      props.onChange && props.onChange(e.target.value);
    }
  })), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {
    error: true
  }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));
};
Select.defaultProps = {
  validation: {
    isValid: null
  }
};
export default Select;
//# sourceMappingURL=Select.js.map