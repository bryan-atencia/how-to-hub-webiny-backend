{"version":3,"sources":["../../src/ColorPicker/ColorPicker.tsx"],"names":["React","SketchPicker","css","FormElementMessage","classNames","classes","label","marginBottom","color","width","height","borderRadius","swatch","padding","background","boxShadow","display","cursor","popover","position","zIndex","top","right","bottom","left","disable","opacity","pointerEvents","ColorPicker","showColorPicker","setState","state","onChange","props","hex","value","description","validation","backgroundColorStyle","handleClick","handleClose","handleChange","isValid","message","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { css } from \"emotion\";\nimport { FormComponentProps } from \"./../types\";\nimport { FormElementMessage } from \"../FormElementMessage\";\nimport classNames from \"classnames\";\n\nconst classes = {\n    label: css({\n        marginBottom: \"10px !important\"\n    }),\n    color: css({\n        width: \"36px\",\n        height: \"14px\",\n        borderRadius: \"2px\"\n    }),\n    swatch: css({\n        padding: \"5px\",\n        background: \"#fff\",\n        borderRadius: \"1px\",\n        boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n        display: \"inline-block\",\n        cursor: \"pointer\"\n    }),\n    // @ts-ignore\n    popover: css({\n        position: \"absolute\",\n        zIndex: \"2\"\n    }),\n    classNames: css({\n        position: \"fixed\",\n        top: \"0px\",\n        right: \"0px\",\n        bottom: \"0px\",\n        left: \"0px\"\n    }),\n    disable: css({\n        opacity: 0.7,\n        pointerEvents: \"none\"\n    })\n};\n\ntype Props = FormComponentProps & {\n    // Component label.\n    label?: string;\n\n    // Is color picker disabled?\n    disable?: boolean;\n\n    // Description beneath the color picker.\n    description?: string;\n};\n\n/**\n * Use ColorPicker component to display a list of choices, once the handler is triggered.\n */\nclass ColorPicker extends React.Component<Props> {\n    state = {\n        showColorPicker: false\n    };\n\n    static defaultProps = {\n        validation: { isValid: null }\n    };\n\n    handleClick = () => {\n        this.setState({ showColorPicker: !this.state.showColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ showColorPicker: false });\n    };\n\n    handleChange = color => {\n        const { onChange } = this.props;\n        onChange && onChange(color.hex);\n    };\n\n    render() {\n        const { value, label, disable, description, validation } = this.props;\n\n        let backgroundColorStyle = null;\n        if (value) {\n            backgroundColorStyle = {\n                background: `${value}`\n            };\n        }\n\n        return (\n            <div className={classNames({ [classes.disable]: disable })}>\n                {label && (\n                    <div\n                        className={classNames(\n                            \"mdc-text-field-helper-text mdc-text-field-helper-text--persistent\",\n                            classes.label\n                        )}\n                    >\n                        {label}\n                    </div>\n                )}\n\n                <div>\n                    <div className={classes.swatch} onClick={this.handleClick}>\n                        <div className={classes.color} style={backgroundColorStyle} />\n                    </div>\n                    {this.state.showColorPicker ? (\n                        <div className={classes.popover}>\n                            <div className={classes.classNames} onClick={this.handleClose} />\n                            <SketchPicker color={value || \"\"} onChange={this.handleChange} />\n                        </div>\n                    ) : null}\n                </div>\n\n                {validation.isValid === false && (\n                    <FormElementMessage error>{validation.message}</FormElementMessage>\n                )}\n\n                {validation.isValid !== false && description && (\n                    <FormElementMessage>{description}</FormElementMessage>\n                )}\n            </div>\n        );\n    }\n}\n\nexport { ColorPicker };\n"],"file":"ColorPicker.js"}