{"version":3,"sources":["../../src/FormElementMessage/FormElementMessage.tsx"],"names":["React","classnames","FormElementMessage","props","classNames","className","error","children"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAaA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAkB;AACzC,MAAMC,UAAU,GAAGH,UAAU,CACzB,mEADyB,EAEzBE,KAAK,CAACE,SAFmB,EAGzB;AAAE,yCAAqCF,KAAK,CAACG;AAA7C,GAHyB,CAA7B;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAEF;AAAhB,KAA6BD,KAAK,CAACI,QAAnC,CAAP;AACH,CARD;;AAUA,SAASL,kBAAT","sourcesContent":["import * as React from \"react\";\nimport classnames from \"classnames\";\n\ntype Props = {\n    // message to display\n    children: React.ReactNode;\n\n    // optional class name\n    className?: string;\n\n    // is it an error message we're displaying\n    error?: boolean;\n};\n\nconst FormElementMessage = (props: Props) => {\n    const classNames = classnames(\n        \"mdc-text-field-helper-text mdc-text-field-helper-text--persistent\",\n        props.className,\n        { \"mdc-text-field-helper-text--error\": props.error }\n    );\n\n    return <div className={classNames}>{props.children}</div>;\n};\n\nexport { FormElementMessage };\n"],"file":"FormElementMessage.js"}