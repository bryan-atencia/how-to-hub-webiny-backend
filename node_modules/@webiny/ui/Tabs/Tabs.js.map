{"version":3,"sources":["../../src/Tabs/Tabs.tsx"],"names":["React","classNames","TabBar","Tab","disabledStyles","opacity","pointerEvents","Tabs","activeTabIndex","setState","children","tabs","Children","toArray","filter","c","map","child","label","props","icon","disabled","style","tabBar","state","evt","detail","index","onActivate","item","Object","assign","content","i","length","current","push","display","className","switchTab","bind","renderChildren","Component"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { TabBar } from \"@rmwc/tabs\";\nimport { Tab, TabProps } from \"./Tab\";\n\nexport type TabsRenderProps = {\n    switchTab(tabIndex: number): void;\n};\n\nexport type TabsProps = {\n    /**\n     * A collection of tabs that needs to be rendered.\n     */\n    children: ((props: TabsRenderProps) => ReactNode) | ReactNode;\n\n    /**\n     * Append a class name.\n     */\n    className?: string;\n\n    /**\n     * Callback to execute when a tab is changed.\n     */\n    onActivate?: (index: number) => void;\n};\n\ntype State = {\n    activeTabIndex: number;\n};\n\nconst disabledStyles = {\n    opacity: 0.5,\n    pointerEvents: \"none\"\n};\n\n/**\n * Use Tabs component to display a list of choices, once the handler is triggered.\n */\nexport class Tabs extends React.Component<TabsProps, State> {\n    state = {\n        activeTabIndex: 0\n    };\n\n    switchTab(activeTabIndex) {\n        this.setState({ activeTabIndex });\n    }\n\n    renderChildren(children) {\n        const tabs = React.Children.toArray(children)\n            .filter(c => c !== null)\n            .map((child: React.ReactElement<TabProps>) => {\n                return {\n                    label: child.props.label,\n                    children: child.props.children,\n                    icon: child.props.icon,\n                    disabled: child.props.disabled,\n                    style: child.props.style\n                };\n            });\n\n        const tabBar = (\n            <TabBar\n                className=\"webiny-ui-tabs__tab-bar\"\n                activeTabIndex={this.state.activeTabIndex}\n                onActivate={evt => {\n                    this.setState({ activeTabIndex: evt.detail.index });\n                    this.props.onActivate && this.props.onActivate(evt.detail.index);\n                }}\n            >\n                {tabs.map((item: TabProps) => {\n                    const style = item.style || {};\n                    if (item.disabled) {\n                        Object.assign(style, disabledStyles);\n                    }\n\n                    return (\n                        <Tab\n                            tag={\"div\"}\n                            style={style}\n                            key={item.label}\n                            {...(item.icon ? { icon: item.icon } : {})}\n                            {...(item.label ? { label: item.label } : {})}\n                        />\n                    );\n                })}\n            </TabBar>\n        );\n\n        const content = [];\n        for (let i = 0; i < tabs.length; i++) {\n            const current = tabs[i];\n            if (this.state.activeTabIndex === i) {\n                content.push(<div key={i}>{current.children}</div>);\n            } else {\n                content.push(\n                    <div key={i} style={{ display: \"none\" }}>\n                        {current.children}\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <div className={classNames(\"webiny-ui-tabs\", this.props.className)}>\n                {tabBar}\n                <div className={\"webiny-ui-tabs__content mdc-tab-content\"}>{content}</div>\n            </div>\n        );\n    }\n\n    render() {\n        let children = this.props.children;\n        if (typeof this.props.children === \"function\") {\n            // @ts-ignore\n            children = this.props.children({ switchTab: this.switchTab.bind(this) });\n        }\n\n        return this.renderChildren(children);\n    }\n}\n"],"file":"Tabs.js"}