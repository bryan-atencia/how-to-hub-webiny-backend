import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import classNames from "classnames";
import { TabBar } from "@rmwc/tabs";
import { Tab } from "./Tab";
var disabledStyles = {
  opacity: 0.5,
  pointerEvents: "none"
};
/**
 * Use Tabs component to display a list of choices, once the handler is triggered.
 */

export var Tabs = /*#__PURE__*/function (_React$Component) {
  _inherits(Tabs, _React$Component);

  var _super = _createSuper(Tabs);

  function Tabs() {
    var _this;

    _classCallCheck(this, Tabs);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      activeTabIndex: 0
    });

    return _this;
  }

  _createClass(Tabs, [{
    key: "switchTab",
    value: function switchTab(activeTabIndex) {
      this.setState({
        activeTabIndex: activeTabIndex
      });
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(children) {
      var _this2 = this;

      var tabs = React.Children.toArray(children).filter(function (c) {
        return c !== null;
      }).map(function (child) {
        return {
          label: child.props.label,
          children: child.props.children,
          icon: child.props.icon,
          disabled: child.props.disabled,
          style: child.props.style
        };
      });
      var tabBar = /*#__PURE__*/React.createElement(TabBar, {
        className: "webiny-ui-tabs__tab-bar",
        activeTabIndex: this.state.activeTabIndex,
        onActivate: function onActivate(evt) {
          _this2.setState({
            activeTabIndex: evt.detail.index
          });

          _this2.props.onActivate && _this2.props.onActivate(evt.detail.index);
        }
      }, tabs.map(function (item) {
        var style = item.style || {};

        if (item.disabled) {
          Object.assign(style, disabledStyles);
        }

        return /*#__PURE__*/React.createElement(Tab, Object.assign({
          tag: "div",
          style: style,
          key: item.label
        }, item.icon ? {
          icon: item.icon
        } : {}, item.label ? {
          label: item.label
        } : {}));
      }));
      var content = [];

      for (var i = 0; i < tabs.length; i++) {
        var current = tabs[i];

        if (this.state.activeTabIndex === i) {
          content.push( /*#__PURE__*/React.createElement("div", {
            key: i
          }, current.children));
        } else {
          content.push( /*#__PURE__*/React.createElement("div", {
            key: i,
            style: {
              display: "none"
            }
          }, current.children));
        }
      }

      return /*#__PURE__*/React.createElement("div", {
        className: classNames("webiny-ui-tabs", this.props.className)
      }, tabBar, /*#__PURE__*/React.createElement("div", {
        className: "webiny-ui-tabs__content mdc-tab-content"
      }, content));
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;

      if (typeof this.props.children === "function") {
        // @ts-ignore
        children = this.props.children({
          switchTab: this.switchTab.bind(this)
        });
      }

      return this.renderChildren(children);
    }
  }]);

  return Tabs;
}(React.Component);
//# sourceMappingURL=Tabs.js.map