import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import { default as RcTooltip } from "rc-tooltip";
import "rc-tooltip/assets/bootstrap_white.css";
import "./style.scss";

/**
 * Use Tooltip component to display a list of choices, once the handler is triggered.
 */
var Tooltip = /*#__PURE__*/function (_React$Component) {
  _inherits(Tooltip, _React$Component);

  var _super = _createSuper(Tooltip);

  function Tooltip() {
    var _this;

    _classCallCheck(this, Tooltip);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      tooltipIsOpen: false
    });

    _defineProperty(_assertThisInitialized(_this), "onVisibleChange", function (visible) {
      _this.setState({
        tooltipIsOpen: visible
      });
    });

    return _this;
  }

  _createClass(Tooltip, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(RcTooltip, Object.assign({
        animation: "fade",
        onVisibleChange: this.onVisibleChange,
        overlay: this.props.content
      }, this.props), /*#__PURE__*/React.createElement("span", {
        className: "webiny-ui-tooltip tooltip-content-wrapper"
      }, this.props.children));
    }
  }]);

  return Tooltip;
}(React.Component);

export { Tooltip };
//# sourceMappingURL=Tooltip.js.map