{"version":3,"sources":["../../src/DynamicFieldset/Fieldset.tsx"],"names":["React","dotProp","FormElementMessage","Fieldset","add","index","addData","remove","removeData","props","value","onChange","delete","slice","cb","header","rows","map","record","createElement","key","data","empty","children","actions","renderHeader","row","renderRow","renderEmpty","length","description","validation","isValid","renderComponent","message","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport dotProp from \"dot-prop-immutable\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\n\ninterface ChildrenRenderProp {\n    actions: { add: Function; remove: Function };\n    header: Function;\n    row: Function;\n    empty: Function;\n}\n\ntype FieldsetProps = {\n    value?: Array<Object>;\n    description?: string;\n    validation?: { isValid: null | boolean; message?: string };\n    onChange?: Function;\n    children: (props: ChildrenRenderProp) => React.ReactNode;\n};\n\nclass Fieldset extends React.Component<FieldsetProps> {\n    static defaultProps = {\n        value: [],\n        description: null\n    };\n\n    header: React.ReactNode = null;\n    rows: React.ReactNode = null;\n    empty: React.ReactNode = null;\n\n    actions = {\n        add: (index = -1) => () => this.addData(index),\n        remove: (index = -1) => () => this.removeData(index)\n    };\n\n    removeData = (index: number) => {\n        const { value, onChange } = this.props;\n        onChange(dotProp.delete(value, index));\n    };\n\n    addData = (index = -1) => {\n        const { value, onChange } = this.props;\n        if (index < 0) {\n            onChange([...value, {}]);\n        } else {\n            onChange([...value.slice(0, index + 1), {}, ...value.slice(index + 1)]);\n        }\n    };\n\n    renderHeader = (cb: () => React.ReactNode) => {\n        this.header = cb();\n    };\n\n    renderRow = (cb: (params: Object) => React.ReactNode) => {\n        const { value } = this.props;\n        this.rows = value.map((record, index) => {\n            return React.createElement(\n                \"webiny-dynamic-fieldset-row\",\n                { key: index },\n                cb({ data: record, index })\n            );\n        });\n    };\n\n    renderEmpty = (cb: () => React.ReactNode) => {\n        this.empty = cb();\n    };\n\n    renderComponent() {\n        const { value } = this.props;\n        const { children } = this.props;\n\n        children({\n            actions: this.actions,\n            header: this.renderHeader,\n            row: this.renderRow,\n            empty: this.renderEmpty\n        });\n\n        if (value.length) {\n            return (\n                <React.Fragment>\n                    {this.header}\n                    {this.rows}\n                </React.Fragment>\n            );\n        }\n\n        return this.empty;\n    }\n\n    render() {\n        const { description, validation = { isValid: null } } = this.props;\n\n        return (\n            <>\n                {this.renderComponent()}\n                {validation.isValid === false && (\n                    <FormElementMessage error>{validation.message}</FormElementMessage>\n                )}\n\n                {validation.isValid !== false && description && (\n                    <FormElementMessage>{description}</FormElementMessage>\n                )}\n            </>\n        );\n    }\n}\n\nexport default Fieldset;\n"],"file":"Fieldset.js"}