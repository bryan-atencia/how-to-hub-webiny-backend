import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import dotProp from "dot-prop-immutable";
import { FormElementMessage } from "@webiny/ui/FormElementMessage";

var Fieldset = /*#__PURE__*/function (_React$Component) {
  _inherits(Fieldset, _React$Component);

  var _super = _createSuper(Fieldset);

  function Fieldset() {
    var _this;

    _classCallCheck(this, Fieldset);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "header", null);

    _defineProperty(_assertThisInitialized(_this), "rows", null);

    _defineProperty(_assertThisInitialized(_this), "empty", null);

    _defineProperty(_assertThisInitialized(_this), "actions", {
      add: function add() {
        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        return function () {
          return _this.addData(index);
        };
      },
      remove: function remove() {
        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        return function () {
          return _this.removeData(index);
        };
      }
    });

    _defineProperty(_assertThisInitialized(_this), "removeData", function (index) {
      var _this$props = _this.props,
          value = _this$props.value,
          onChange = _this$props.onChange;
      onChange(dotProp.delete(value, index));
    });

    _defineProperty(_assertThisInitialized(_this), "addData", function () {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
      var _this$props2 = _this.props,
          value = _this$props2.value,
          onChange = _this$props2.onChange;

      if (index < 0) {
        onChange([].concat(_toConsumableArray(value), [{}]));
      } else {
        onChange([].concat(_toConsumableArray(value.slice(0, index + 1)), [{}], _toConsumableArray(value.slice(index + 1))));
      }
    });

    _defineProperty(_assertThisInitialized(_this), "renderHeader", function (cb) {
      _this.header = cb();
    });

    _defineProperty(_assertThisInitialized(_this), "renderRow", function (cb) {
      var value = _this.props.value;
      _this.rows = value.map(function (record, index) {
        return /*#__PURE__*/React.createElement("webiny-dynamic-fieldset-row", {
          key: index
        }, cb({
          data: record,
          index: index
        }));
      });
    });

    _defineProperty(_assertThisInitialized(_this), "renderEmpty", function (cb) {
      _this.empty = cb();
    });

    return _this;
  }

  _createClass(Fieldset, [{
    key: "renderComponent",
    value: function renderComponent() {
      var value = this.props.value;
      var children = this.props.children;
      children({
        actions: this.actions,
        header: this.renderHeader,
        row: this.renderRow,
        empty: this.renderEmpty
      });

      if (value.length) {
        return /*#__PURE__*/React.createElement(React.Fragment, null, this.header, this.rows);
      }

      return this.empty;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          description = _this$props3.description,
          _this$props3$validati = _this$props3.validation,
          validation = _this$props3$validati === void 0 ? {
        isValid: null
      } : _this$props3$validati;
      return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderComponent(), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {
        error: true
      }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));
    }
  }]);

  return Fieldset;
}(React.Component);

_defineProperty(Fieldset, "defaultProps", {
  value: [],
  description: null
});

export default Fieldset;
//# sourceMappingURL=Fieldset.js.map