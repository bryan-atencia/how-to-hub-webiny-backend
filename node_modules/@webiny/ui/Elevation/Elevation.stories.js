import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import * as React from "react";
import { storiesOf } from "@storybook/react";
import { Story, StoryReadme, StorySandboxCode, StorySandbox, StorySandboxExample } from "@webiny/storybook-utils/Story";
import readme from "./../Elevation/README.md";
import { withKnobs, boolean, select } from "@storybook/addon-knobs";
import { Elevation } from "./Elevation";
var story = storiesOf("Components/Elevation", module);
story.addDecorator(withKnobs);
story.add("usage", function () {
  var transition = boolean("Transition", true);
  var z = select("Z (elevation height)", _toConsumableArray(Array(25).keys()), 1);
  var style = {
    padding: 20,
    backgroundColor: "white"
  };
  return /*#__PURE__*/React.createElement(Story, null, /*#__PURE__*/React.createElement(StoryReadme, null, readme), /*#__PURE__*/React.createElement(StorySandbox, {
    title: "An area with applied elevation"
  }, /*#__PURE__*/React.createElement(StorySandboxExample, null, /*#__PURE__*/React.createElement(Elevation, {
    z: z,
    transition: transition
  }, /*#__PURE__*/React.createElement("div", {
    style: style
  }, "This is an elevated content."))), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                        <Elevation z={".concat(z, "} transition={").concat(transition, "}>\n                            <div>This is an elevated content.</div>\n                        </Elevation>\n                    "))));
}, {
  info: {
    propTables: [Elevation]
  }
});
//# sourceMappingURL=Elevation.stories.js.map