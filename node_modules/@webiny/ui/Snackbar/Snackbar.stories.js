import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import { storiesOf } from "@storybook/react";
import { Story, StoryReadme, StorySandboxCode, StorySandbox, StorySandboxExample } from "@webiny/storybook-utils/Story";
import readme from "./../Snackbar/README.md";
import { withKnobs, boolean } from "@storybook/addon-knobs";
import { ButtonPrimary } from "./../Button";
import { Snackbar } from "./Snackbar";
var story = storiesOf("Components/Snackbar", module);
story.addDecorator(withKnobs);

var SnackbarContainer = /*#__PURE__*/function (_React$Component) {
  _inherits(SnackbarContainer, _React$Component);

  var _super = _createSuper(SnackbarContainer);

  function SnackbarContainer() {
    var _this;

    _classCallCheck(this, SnackbarContainer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: false
    });

    return _this;
  }

  _createClass(SnackbarContainer, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Snackbar, {
        open: this.state.show,
        onClose: function onClose() {
          return _this2.setState({
            show: false
          });
        },
        message: "This is a message.",
        leading: this.props.leading,
        action: "Something"
      }), /*#__PURE__*/React.createElement(ButtonPrimary, {
        onClick: function onClick() {
          return _this2.setState({
            show: true
          });
        }
      }, "Show message"));
    }
  }]);

  return SnackbarContainer;
}(React.Component);

story.add("usage", function () {
  var leading = boolean("leading", false);
  return /*#__PURE__*/React.createElement(Story, null, /*#__PURE__*/React.createElement(StoryReadme, null, readme), /*#__PURE__*/React.createElement(StorySandbox, null, /*#__PURE__*/React.createElement(StorySandboxExample, null, /*#__PURE__*/React.createElement(SnackbarContainer, {
    leading: true
  })), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                        <div>\n                             <Snackbar\n                                open={this.state.show}\n                                leading={".concat(leading, "}\n                                onHide={() => this.setState({ show: false })}\n                                message=\"This is a message.\"\n                            />\n                            <ButtonPrimary onClick={() => this.setState({ show: true })}>\n                                Show message\n                            </ButtonPrimary>\n                        </div>\n                    "))));
}, {
  info: {
    propTables: [Snackbar]
  }
});
//# sourceMappingURL=Snackbar.stories.js.map