{"version":3,"sources":["../../src/ImageEditor/ImageEditor.tsx"],"names":["React","toolbar","styled","classNames","ButtonSecondary","ButtonPrimary","loadScript","Toolbar","display","justifyContent","alignItems","backgroundColor","margin","padding","position","width","boxSizing","zIndex","opacity","pointerEvents","ToolOptions","borderTop","ApplyCancelActions","textAlign","initScripts","Promise","resolve","window","Caman","ImageEditor","tool","src","createRef","props","image","Image","canvas","current","onload","height","ctx","getContext","drawImage","setState","tt","onActivate","options","getToolOptions","startsWith","toDataURL","state","apply","deactivateTool","cancel","name","then","updateCanvas","setTimeout","key","autoEnable","activateTool","tools","children","editor","map","disabled","icon","renderForm","cancelActiveTool","applyActiveTool","maxWidth","render","getCanvasDataUrl","activeTool","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as toolbar from \"./toolbar\";\nimport { ImageEditorTool } from \"./toolbar/types\";\nimport styled from \"@emotion/styled\";\nimport classNames from \"classnames\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport loadScript from \"load-script\";\n\nconst Toolbar = styled(\"div\")({\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"var(--mdc-theme-secondary)\",\n    margin: \"-24px -24px 0px -24px\",\n    padding: 2,\n    position: \"absolute\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    zIndex: 10,\n    \"> div.disabled\": {\n        opacity: 0.5,\n        pointerEvents: \"none\"\n    }\n});\n\nconst ToolOptions = styled(\"div\")({\n    margin: \"50px -24px 10px -24px\",\n    boxSizing: \"border-box\",\n    padding: 10,\n    backgroundColor: \"var(--mdc-theme-background)\",\n    borderTop: \"1px solid var(--mdc-theme-on-background)\"\n});\n\nconst ApplyCancelActions = styled(\"div\")({\n    textAlign: \"center\"\n});\n\nconst initScripts = () => {\n    return new Promise(resolve => {\n        // @ts-ignore\n        if (window.Caman) {\n            return resolve();\n        }\n        return loadScript(\n            \"https://cdnjs.cloudflare.com/ajax/libs/camanjs/4.1.2/caman.full.min.js\",\n            resolve\n        );\n    });\n};\n\nexport type ToolbarTool = \"crop\" | \"flip\" | \"rotate\" | \"filter\";\n\ntype RenderPropArgs = {\n    render: Function;\n    getCanvasDataUrl: () => string;\n    activeTool?: ImageEditorTool;\n    applyActiveTool: Function;\n    cancelActiveTool: Function;\n};\n\ntype Props = {\n    src: string;\n    tools: ToolbarTool[];\n    options?: { [key: string]: any };\n    onToolActivate?: Function;\n    onToolDeactivate?: Function;\n    children?: (props: RenderPropArgs) => React.ReactNode;\n};\n\ntype State = {\n    tool?: { [key: string]: any };\n    src: string;\n};\n\nclass ImageEditor extends React.Component<Props, State> {\n    static defaultProps = {\n        tools: [\"crop\", \"flip\", \"rotate\", \"filter\"]\n    };\n\n    state = {\n        tool: null,\n        src: \"\"\n    };\n\n    canvas = React.createRef();\n    image = null;\n\n    componentDidMount() {\n        initScripts().then(() => {\n            this.updateCanvas();\n            setTimeout(() => {\n                const { options } = this.props;\n                if (typeof options === \"object\" && options) {\n                    for (const key in options) {\n                        if (options[key].autoEnable === true) {\n                            const tool: ImageEditorTool | null = toolbar[key];\n                            tool && this.activateTool(tool);\n                            break;\n                        }\n                    }\n                }\n            }, 250);\n        });\n    }\n\n    updateCanvas = () => {\n        const { src } = this.props;\n        this.image = new window.Image();\n        const canvas = this.canvas.current as HTMLCanvasElement;\n        if (canvas) {\n            this.image.onload = () => {\n                if (this.image) {\n                    canvas.width = this.image.width;\n                    canvas.height = this.image.height;\n                    const ctx = canvas.getContext(\"2d\");\n                    ctx.drawImage(this.image, 0, 0);\n                }\n            };\n\n            this.image.src = src;\n        }\n    };\n\n    activateTool = (tool: string | ImageEditorTool) => {\n        if (typeof tool === \"string\") {\n            tool = toolbar[tool] as ImageEditorTool;\n        }\n\n        this.setState({ tool }, () => {\n            const tt = tool as ImageEditorTool;\n            typeof tt.onActivate === \"function\" &&\n                tt.onActivate({ canvas: this.canvas, options: this.getToolOptions(tt) });\n        });\n    };\n\n    deactivateTool = () => {\n        this.setState({ tool: null });\n    };\n\n    getCanvasDataUrl = () => {\n        const canvas = this.canvas.current as HTMLCanvasElement;\n        if (canvas) {\n            const { src } = this.props;\n            if (src.startsWith(\"data:image/jpeg;\")) {\n                return canvas.toDataURL(\"image/jpeg\", 1.0);\n            }\n\n            return canvas.toDataURL();\n        }\n\n        return \"\";\n    };\n\n    applyActiveTool = async () => {\n        const { tool } = this.state;\n        if (!tool) {\n            return;\n        }\n\n        tool.apply &&\n            (await tool.apply({\n                canvas: this.canvas\n            }));\n        this.deactivateTool();\n    };\n\n    cancelActiveTool = async () => {\n        const { tool } = this.state;\n        if (!tool) {\n            return;\n        }\n\n        tool.cancel &&\n            (await tool.cancel({\n                canvas: this.canvas\n            }));\n        this.deactivateTool();\n    };\n\n    getToolOptions = (tool: ImageEditorTool) => {\n        const { options } = this.props;\n        if (!options || typeof options !== \"object\") {\n            return {};\n        }\n\n        return options[tool.name] || {};\n    };\n\n    render() {\n        const { src, tools, children } = this.props;\n        const { tool } = this.state;\n        const editor = (\n            <React.Fragment>\n                <Toolbar>\n                    {tools.map(key => {\n                        const tool: ImageEditorTool = toolbar[key];\n                        if (!tool) {\n                            return null;\n                        }\n\n                        return (\n                            <div key={key} className={classNames({ disabled: this.state.tool })}>\n                                {tool.icon({\n                                    activateTool: () => this.activateTool(tool)\n                                })}\n                            </div>\n                        );\n                    })}\n                </Toolbar>\n\n                <ToolOptions>\n                    {tool ? (\n                        <>\n                            {typeof tool.renderForm === \"function\" &&\n                                tool.renderForm({\n                                    options: this.getToolOptions(tool),\n                                    image: this.image,\n                                    canvas: this.canvas\n                                })}\n\n                            <ApplyCancelActions>\n                                <ButtonSecondary onClick={this.cancelActiveTool}>\n                                    Cancel\n                                </ButtonSecondary>\n                                &nbsp;\n                                <ButtonPrimary onClick={this.applyActiveTool}>Apply</ButtonPrimary>\n                            </ApplyCancelActions>\n                        </>\n                    ) : (\n                        <div style={{ textAlign: \"center\" }}>\n                            Select a tool to start working on your image.\n                        </div>\n                    )}\n                </ToolOptions>\n\n                <div style={{ margin: \"0 auto\", textAlign: \"center\" }}>\n                    <canvas\n                        key={src}\n                        id={\"canvas\"}\n                        style={{ maxWidth: 700 }}\n                        ref={this.canvas as React.Ref<any>}\n                    />\n                </div>\n            </React.Fragment>\n        );\n\n        if (typeof children === \"function\") {\n            return children({\n                render: () => editor,\n                // canvas: this.canvas,\n                getCanvasDataUrl: this.getCanvasDataUrl,\n                activeTool: this.state.tool,\n                applyActiveTool: this.applyActiveTool,\n                cancelActiveTool: this.cancelActiveTool\n            });\n        }\n\n        return editor;\n    }\n}\n\nexport { ImageEditor };\n"],"file":"ImageEditor.js"}