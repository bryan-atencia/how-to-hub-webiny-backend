import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import * as toolbar from "./toolbar";
import styled from "@emotion/styled";
import classNames from "classnames";
import { ButtonSecondary, ButtonPrimary } from "@webiny/ui/Button";
import loadScript from "load-script";
var Toolbar = /*#__PURE__*/styled("div", {
  target: "eq22gs70",
  label: "Toolbar"
})({
  display: "flex",
  justifyContent: "center",
  alignItems: "center",
  backgroundColor: "var(--mdc-theme-secondary)",
  margin: "-24px -24px 0px -24px",
  padding: 2,
  position: "absolute",
  width: "100%",
  boxSizing: "border-box",
  zIndex: 10,
  "> div.disabled": {
    opacity: 0.5,
    pointerEvents: "none"
  }
});
var ToolOptions = /*#__PURE__*/styled("div", {
  target: "eq22gs71",
  label: "ToolOptions"
})({
  margin: "50px -24px 10px -24px",
  boxSizing: "border-box",
  padding: 10,
  backgroundColor: "var(--mdc-theme-background)",
  borderTop: "1px solid var(--mdc-theme-on-background)"
});
var ApplyCancelActions = /*#__PURE__*/styled("div", {
  target: "eq22gs72",
  label: "ApplyCancelActions"
})({
  textAlign: "center"
});

var initScripts = function initScripts() {
  return new Promise(function (resolve) {
    // @ts-ignore
    if (window.Caman) {
      return resolve();
    }

    return loadScript("https://cdnjs.cloudflare.com/ajax/libs/camanjs/4.1.2/caman.full.min.js", resolve);
  });
};

var ImageEditor = /*#__PURE__*/function (_React$Component) {
  _inherits(ImageEditor, _React$Component);

  var _super = _createSuper(ImageEditor);

  function ImageEditor() {
    var _this;

    _classCallCheck(this, ImageEditor);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      tool: null,
      src: ""
    });

    _defineProperty(_assertThisInitialized(_this), "canvas", /*#__PURE__*/React.createRef());

    _defineProperty(_assertThisInitialized(_this), "image", null);

    _defineProperty(_assertThisInitialized(_this), "updateCanvas", function () {
      var src = _this.props.src;
      _this.image = new window.Image();
      var canvas = _this.canvas.current;

      if (canvas) {
        _this.image.onload = function () {
          if (_this.image) {
            canvas.width = _this.image.width;
            canvas.height = _this.image.height;
            var ctx = canvas.getContext("2d");
            ctx.drawImage(_this.image, 0, 0);
          }
        };

        _this.image.src = src;
      }
    });

    _defineProperty(_assertThisInitialized(_this), "activateTool", function (tool) {
      if (typeof tool === "string") {
        tool = toolbar[tool];
      }

      _this.setState({
        tool: tool
      }, function () {
        var tt = tool;
        typeof tt.onActivate === "function" && tt.onActivate({
          canvas: _this.canvas,
          options: _this.getToolOptions(tt)
        });
      });
    });

    _defineProperty(_assertThisInitialized(_this), "deactivateTool", function () {
      _this.setState({
        tool: null
      });
    });

    _defineProperty(_assertThisInitialized(_this), "getCanvasDataUrl", function () {
      var canvas = _this.canvas.current;

      if (canvas) {
        var src = _this.props.src;

        if (src.startsWith("data:image/jpeg;")) {
          return canvas.toDataURL("image/jpeg", 1.0);
        }

        return canvas.toDataURL();
      }

      return "";
    });

    _defineProperty(_assertThisInitialized(_this), "applyActiveTool", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var tool;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              tool = _this.state.tool;

              if (tool) {
                _context.next = 3;
                break;
              }

              return _context.abrupt("return");

            case 3:
              _context.t0 = tool.apply;

              if (!_context.t0) {
                _context.next = 7;
                break;
              }

              _context.next = 7;
              return tool.apply({
                canvas: _this.canvas
              });

            case 7:
              _this.deactivateTool();

            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));

    _defineProperty(_assertThisInitialized(_this), "cancelActiveTool", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
      var tool;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              tool = _this.state.tool;

              if (tool) {
                _context2.next = 3;
                break;
              }

              return _context2.abrupt("return");

            case 3:
              _context2.t0 = tool.cancel;

              if (!_context2.t0) {
                _context2.next = 7;
                break;
              }

              _context2.next = 7;
              return tool.cancel({
                canvas: _this.canvas
              });

            case 7:
              _this.deactivateTool();

            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    })));

    _defineProperty(_assertThisInitialized(_this), "getToolOptions", function (tool) {
      var options = _this.props.options;

      if (!options || typeof options !== "object") {
        return {};
      }

      return options[tool.name] || {};
    });

    return _this;
  }

  _createClass(ImageEditor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      initScripts().then(function () {
        _this2.updateCanvas();

        setTimeout(function () {
          var options = _this2.props.options;

          if (typeof options === "object" && options) {
            for (var _key2 in options) {
              if (options[_key2].autoEnable === true) {
                var tool = toolbar[_key2];
                tool && _this2.activateTool(tool);
                break;
              }
            }
          }
        }, 250);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          src = _this$props.src,
          tools = _this$props.tools,
          children = _this$props.children;
      var tool = this.state.tool;
      var editor = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toolbar, null, tools.map(function (key) {
        var tool = toolbar[key];

        if (!tool) {
          return null;
        }

        return /*#__PURE__*/React.createElement("div", {
          key: key,
          className: classNames({
            disabled: _this3.state.tool
          })
        }, tool.icon({
          activateTool: function activateTool() {
            return _this3.activateTool(tool);
          }
        }));
      })), /*#__PURE__*/React.createElement(ToolOptions, null, tool ? /*#__PURE__*/React.createElement(React.Fragment, null, typeof tool.renderForm === "function" && tool.renderForm({
        options: this.getToolOptions(tool),
        image: this.image,
        canvas: this.canvas
      }), /*#__PURE__*/React.createElement(ApplyCancelActions, null, /*#__PURE__*/React.createElement(ButtonSecondary, {
        onClick: this.cancelActiveTool
      }, "Cancel"), "\xA0", /*#__PURE__*/React.createElement(ButtonPrimary, {
        onClick: this.applyActiveTool
      }, "Apply"))) : /*#__PURE__*/React.createElement("div", {
        style: {
          textAlign: "center"
        }
      }, "Select a tool to start working on your image.")), /*#__PURE__*/React.createElement("div", {
        style: {
          margin: "0 auto",
          textAlign: "center"
        }
      }, /*#__PURE__*/React.createElement("canvas", {
        key: src,
        id: "canvas",
        style: {
          maxWidth: 700
        },
        ref: this.canvas
      })));

      if (typeof children === "function") {
        return children({
          render: function render() {
            return editor;
          },
          // canvas: this.canvas,
          getCanvasDataUrl: this.getCanvasDataUrl,
          activeTool: this.state.tool,
          applyActiveTool: this.applyActiveTool,
          cancelActiveTool: this.cancelActiveTool
        });
      }

      return editor;
    }
  }]);

  return ImageEditor;
}(React.Component);

_defineProperty(ImageEditor, "defaultProps", {
  tools: ["crop", "flip", "rotate", "filter"]
});

export { ImageEditor };
//# sourceMappingURL=ImageEditor.js.map