import React from "react";
import { ReactComponent as CropIcon } from "@svgr/webpack!./icons/crop.svg";
import { IconButton } from "@webiny/ui/Button";
import { Tooltip } from "@webiny/ui/Tooltip";
import Cropper from "cropperjs";
import "cropperjs/dist/cropper.css";
var cropper = null;

var renderForm = function renderForm() {
  return /*#__PURE__*/React.createElement("div", {
    style: {
      textAlign: "center"
    }
  }, "Click and drag to crop a portion of the image. Hold Shift to persist aspect ratio.");
};

var tool = {
  name: "crop",
  icon: function icon(_ref) {
    var activateTool = _ref.activateTool;
    return /*#__PURE__*/React.createElement(Tooltip, {
      placement: "bottom",
      content: "Crop"
    }, /*#__PURE__*/React.createElement(IconButton, {
      icon: /*#__PURE__*/React.createElement(CropIcon, null),
      onClick: activateTool
    }));
  },
  renderForm: renderForm,
  onActivate: function onActivate(_ref2) {
    var canvas = _ref2.canvas,
        options = _ref2.options;
    cropper = new Cropper(canvas.current, options);
  },
  cancel: function cancel() {
    return cropper && cropper.destroy();
  },
  apply: function apply(_ref3) {
    var canvas = _ref3.canvas;
    return new Promise(function (resolve) {
      if (!cropper) {
        resolve();
        return;
      }

      var current = canvas.current;
      var src = cropper.getCroppedCanvas().toDataURL();

      if (current) {
        var image = new window.Image();
        var ctx = current.getContext("2d");

        image.onload = function () {
          ctx.drawImage(image, 0, 0);
          current.width = image.width;
          current.height = image.height;
          ctx.drawImage(image, 0, 0);
          resolve();
        };

        image.src = src;
      }

      cropper.destroy();
      cropper = null;
    });
  }
};
export default tool;
//# sourceMappingURL=crop.js.map