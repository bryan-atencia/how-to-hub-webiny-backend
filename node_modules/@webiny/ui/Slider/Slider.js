import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import { Slider as RmwcSlider } from "@rmwc/slider";
import styled from "@emotion/styled";
import { FormElementMessage } from "../FormElementMessage";
// wrapper fixes a bug in slider where the slider handle is rendered outside the bounds of the slider box
var Wrapper = /*#__PURE__*/styled("div", {
  target: "e1ll7sdi0",
  label: "Wrapper"
})({
  width: "100%",
  ".mdc-slider .mdc-slider__thumb-container": {
    left: 5
  }
});
/**
 * Slider component lets users choose a value from given range.
 */

var Slider = /*#__PURE__*/function (_React$Component) {
  _inherits(Slider, _React$Component);

  var _super = _createSuper(Slider);

  function Slider() {
    var _this;

    _classCallCheck(this, Slider);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "onChange", function (e) {
      _this.props.onChange && _this.props.onChange(e.detail.value);
    });

    _defineProperty(_assertThisInitialized(_this), "onInput", function (e) {
      _this.props.onInput && _this.props.onInput(e.detail.value);
    });

    return _this;
  }

  _createClass(Slider, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          value = _this$props.value,
          label = _this$props.label,
          description = _this$props.description,
          validation = _this$props.validation;
      var sliderValue = value;

      if (value === null || typeof value === "undefined") {
        sliderValue = this.props.min || 0;
      }

      return /*#__PURE__*/React.createElement(React.Fragment, null, label && /*#__PURE__*/React.createElement("div", {
        className: "mdc-text-field-helper-text mdc-text-field-helper-text--persistent"
      }, label), /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(RmwcSlider, Object.assign({}, this.props, {
        value: sliderValue,
        onChange: this.onChange,
        onInput: this.onInput
      }))), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {
        error: true
      }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));
    }
  }]);

  return Slider;
}(React.Component);

_defineProperty(Slider, "defaultProps", {
  validation: {
    isValid: null
  }
});

export default Slider;
//# sourceMappingURL=Slider.js.map