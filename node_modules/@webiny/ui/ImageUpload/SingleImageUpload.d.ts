import * as React from "react";
import { FormComponentProps } from "./../types";
import { SelectedFile, FileError } from "react-butterfiles";
declare type Props = FormComponentProps & {
    label?: string;
    disabled?: boolean;
    description?: string;
    className?: string;
    accept?: Array<string>;
    maxSize: string;
    imageEditor?: Object;
    renderImagePreview?: () => React.ReactElement<any>;
    showRemoveImageButton?: boolean;
    errorMessages: {
        maxSizeExceeded: string;
        unsupportedFileType: string;
        default: string;
        multipleNotAllowed: string;
        multipleMaxSizeExceeded: string;
    };
};
declare type State = {
    loading: boolean;
    error?: FileError;
    imageEditor: {
        image?: {
            name: string;
            type: string;
            size: number;
            src?: string;
        };
        open: boolean;
    };
};
export declare class SingleImageUpload extends React.Component<Props, State> {
    static defaultProps: {
        validation: {
            isValid: any;
        };
        maxSize: string;
        imageEditor: {};
        accept: string[];
        showRemoveImageButton: boolean;
        errorMessages: {
            maxSizeExceeded: string;
            multipleMaxSizeExceeded: string;
            multipleNotAllowed: string;
            unsupportedFileType: string;
            default: string;
        };
    };
    state: {
        loading: boolean;
        error: any;
        imageEditor: {
            open: boolean;
            image: any;
        };
    };
    handleFiles: (images: SelectedFile[]) => void;
    handleErrors: (errors: FileError[]) => void;
    render(): JSX.Element;
}
export {};
