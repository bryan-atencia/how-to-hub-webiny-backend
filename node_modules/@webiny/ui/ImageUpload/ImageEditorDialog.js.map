{"version":3,"sources":["../../src/ImageUpload/ImageEditorDialog.tsx"],"names":["React","ImageEditor","Tooltip","css","Dialog","DialogAccept","DialogCancel","DialogActions","DialogContent","imageEditorDialog","width","height","maxWidth","maxHeight","paddingTop","ImageEditorDialog","createRef","props","src","options","onAccept","open","dialogZIndex","dialogProps","zIndex","imageEditor","render","activeTool","current","getCanvasDataUrl","Component"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SACIC,MADJ,EAEIC,YAFJ,EAGIC,YAHJ,EAIIC,aAJJ,EAKIC,aALJ,QAOO,mBAPP;AAkBA,IAAMC,iBAAiB,gBAAGN,GAAG,CAAC;AAC1BO,EAAAA,KAAK,EAAE,OADmB;AAE1BC,EAAAA,MAAM,EAAE,OAFkB;AAG1B,0BAAwB;AACpBC,IAAAA,QAAQ,EAAE,iBADU;AAEpBC,IAAAA,SAAS,EAAE,iBAFS;AAGpB,kCAA8B;AAC1BD,MAAAA,QAAQ,EAAE,iBADgB;AAE1BC,MAAAA,SAAS,EAAE,iBAFe;AAG1BH,MAAAA,KAAK,EAAE,OAHmB;AAI1BC,MAAAA,MAAM,EAAE,OAJkB;AAK1BG,MAAAA,UAAU,EAAE;AALc;AAHV;AAHE,CAAD,6BAA7B;;IAgBMC,iB;;;;;;;;;;;;;;;;+EAC0Cf,KAAK,CAACgB,SAAN,E;;;;;;;6BAEnC;AAAA;;AAAA,wBACkE,KAAKC,KADvE;AAAA,UACGC,GADH,eACGA,GADH;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC2BC,IAD3B,eAC2BA,IAD3B;AAAA,UACiCC,YADjC,eACiCA,YADjC;AAAA,UACkDC,WADlD;;AAGL,0BACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAEd,iBADf;AAEI,QAAA,KAAK,EAAE;AAAEe,UAAAA,MAAM,EAAEF;AAAV,SAFX;AAGI,QAAA,IAAI,EAAED;AAHV,SAIQE,WAJR,GAMKF,IAAI,iBACD,oBAAC,WAAD;AACI,QAAA,GAAG,EAAE,KAAKI,WADd;AAEI,QAAA,GAAG,EAAEP,GAFT;AAGI,QAAA,OAAO,EAAEC;AAHb,SAKK;AAAA,YAAGO,MAAH,QAAGA,MAAH;AAAA,YAAWC,UAAX,QAAWA,UAAX;AAAA,4BACG,uDACI,oBAAC,aAAD,QAAgBD,MAAM,EAAtB,CADJ,eAEI,oBAAC,aAAD,qBACI,oBAAC,YAAD,iBADJ,EAEKC,UAAU,gBACP,oBAAC,OAAD;AACI,UAAA,OAAO,EAAE,qCADb;AAEI,UAAA,SAAS,EAAE;AAFf,wBAII,oBAAC,YAAD;AAAc,UAAA,QAAQ;AAAtB,kBAJJ,CADO,gBAQP,oBAAC,YAAD;AACI,UAAA,OAAO,EAAE;AAAA,mBACLP,QAAQ,CACJ,MAAI,CAACK,WAAL,CAAiBG,OAAjB,CAAyBC,gBAAzB,EADI,CADH;AAAA;AADb,kBAVR,CAFJ,CADH;AAAA,OALL,CAPR,CADJ;AA2CH;;;;EAjD2B7B,KAAK,CAAC8B,S;;AAmDtC,eAAef,iBAAf","sourcesContent":["import * as React from \"react\";\nimport { ImageEditor } from \"@webiny/ui/ImageEditor\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { css } from \"emotion\";\nimport {\n    Dialog,\n    DialogAccept,\n    DialogCancel,\n    DialogActions,\n    DialogContent,\n    DialogOnClose\n} from \"@webiny/ui/Dialog\";\n\ntype Props = {\n    dialogZIndex?: number;\n    onClose?: DialogOnClose;\n    open?: boolean;\n    options?: Object;\n    src?: string;\n    onAccept: (src: string) => void;\n};\n\nconst imageEditorDialog = css({\n    width: \"100vw\",\n    height: \"100vh\",\n    \".mdc-dialog__surface\": {\n        maxWidth: \"100% !important\",\n        maxHeight: \"100% !important\",\n        \".webiny-ui-dialog__content\": {\n            maxWidth: \"100% !important\",\n            maxHeight: \"100% !important\",\n            width: \"100vw\",\n            height: \"100vh\",\n            paddingTop: \"0 !important\"\n        }\n    }\n});\n\nclass ImageEditorDialog extends React.Component<Props, { imageProcessing: boolean }> {\n    imageEditor: React.RefObject<ImageEditor> = React.createRef();\n\n    render() {\n        const { src, options, onAccept, open, dialogZIndex, ...dialogProps } = this.props;\n\n        return (\n            <Dialog\n                className={imageEditorDialog}\n                style={{ zIndex: dialogZIndex }}\n                open={open}\n                {...dialogProps}\n            >\n                {open && (\n                    <ImageEditor\n                        ref={this.imageEditor as React.Ref<any>}\n                        src={src}\n                        options={options}\n                    >\n                        {({ render, activeTool }) => (\n                            <>\n                                <DialogContent>{render()}</DialogContent>\n                                <DialogActions>\n                                    <DialogCancel>Cancel</DialogCancel>\n                                    {activeTool ? (\n                                        <Tooltip\n                                            content={\"Please close currently active tool.\"}\n                                            placement={\"top\"}\n                                        >\n                                            <DialogAccept disabled>Save</DialogAccept>\n                                        </Tooltip>\n                                    ) : (\n                                        <DialogAccept\n                                            onClick={() =>\n                                                onAccept(\n                                                    this.imageEditor.current.getCanvasDataUrl()\n                                                )\n                                            }\n                                        >\n                                            Save\n                                        </DialogAccept>\n                                    )}\n                                </DialogActions>\n                            </>\n                        )}\n                    </ImageEditor>\n                )}\n            </Dialog>\n        );\n    }\n}\nexport default ImageEditorDialog;\n"],"file":"ImageEditorDialog.js"}