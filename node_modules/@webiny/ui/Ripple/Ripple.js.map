{"version":3,"sources":["../../src/Ripple/Ripple.tsx"],"names":["React","Ripple","RmwcRipple","props","type","children"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,cAArC;;AAaA;;;AAGA,IAAMD,MAAM,GAAG,SAATA,MAAS,CAACE,KAAD,EAAkB;AAC7B;AACA,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,IAAc,SAA3B;AAEA,sBACI,oBAAC,UAAD,wCAAmBA,IAAnB,EAA0B,IAA1B,GAAsCD,KAAtC,GACKA,KAAK,CAACE,QADX,CADJ;AAKH,CATD;;AAWA,SAASJ,MAAT","sourcesContent":["import * as React from \"react\";\nimport { Ripple as RmwcRipple } from \"@rmwc/ripple\";\n\ntype Props = {\n    // Any element that needs to be highlighted.\n    children?: React.ReactNode;\n\n    // Choose the type of ripple.\n    type?: \"unbounded\" | \"primary\" | \"accent\";\n\n    // Makes the ripple disabled.\n    disabled?: boolean;\n};\n\n/**\n * Use Ripple component to display a list of choices, once the handler is triggered.\n */\nconst Ripple = (props: Props) => {\n    // Let's pass \"unbounded\" / \"primary\" / \"accent\" flags as \"type\" prop instead.\n    const type = props.type || \"surface\";\n\n    return (\n        <RmwcRipple {...{ [type]: true }} {...props}>\n            {props.children}\n        </RmwcRipple>\n    );\n};\n\nexport { Ripple };\n"],"file":"Ripple.js"}