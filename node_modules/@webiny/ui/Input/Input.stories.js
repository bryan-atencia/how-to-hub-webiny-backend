import * as React from "react";
import { storiesOf } from "@storybook/react";
import { Story, StoryReadme, StorySandboxCode, StorySandbox, StorySandboxExample } from "@webiny/storybook-utils/Story";
import { withKnobs, boolean } from "@storybook/addon-knobs";
import readme from "./../Input/README.md";
import { ReactComponent as AutoRenewIcon } from "@svgr/webpack!./svg/baseline-autorenew-24px.svg";
import { ReactComponent as CloudDoneIcon } from "@svgr/webpack!./svg/baseline-cloud_done-24px.svg";
import { ReactComponent as BaselineDeleteIcon } from "@svgr/webpack!./svg/baseline-delete-24px.svg";
import { ReactComponent as BaselineDoneIcon } from "@svgr/webpack!./svg/baseline-done-24px.svg";
import { Form } from "@webiny/form";
import { Input } from "./Input";
import { validation } from "@webiny/validation";
var story = storiesOf("Components/Input", module);
story.addDecorator(withKnobs);
story.add("usage", function () {
  var bindProps = {
    name: "name",
    validators: validation.create("required,minLength:3")
  };
  var disabled = boolean("Disabled", false);
  return /*#__PURE__*/React.createElement(Story, null, /*#__PURE__*/React.createElement(StoryReadme, null, readme), /*#__PURE__*/React.createElement(StorySandbox, null, /*#__PURE__*/React.createElement(StorySandboxExample, {
    title: "Label, description and validation"
  }, /*#__PURE__*/React.createElement(Form, null, function (_ref) {
    var Bind = _ref.Bind;
    return /*#__PURE__*/React.createElement(Bind, bindProps, /*#__PURE__*/React.createElement(Input, {
      label: "Your name",
      disabled: disabled,
      description: "This is your profile name"
    }));
  })), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                    <Form>\n                        {({ Bind }) => (\n                            <Bind\n                                name=\"name\"\n                                validators={validation.create(\"required,minLength:3\")}>\n                                <Input label={\"Your name\"} disabled={".concat(disabled, "} description={\"This is your profile name\"}/>\n                            </Bind>\n                        )}\n                    </Form>\n                    "))), /*#__PURE__*/React.createElement(StorySandbox, null, /*#__PURE__*/React.createElement(StorySandboxExample, {
    title: "With icon (box)"
  }, /*#__PURE__*/React.createElement(Form, null, function (_ref2) {
    var Bind = _ref2.Bind;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bind, {
      name: "phone"
    }, /*#__PURE__*/React.createElement(Input, {
      leadingIcon: /*#__PURE__*/React.createElement(AutoRenewIcon, null),
      label: "Your phone number",
      description: "Please enter a real number",
      disabled: disabled
    })), /*#__PURE__*/React.createElement(Bind, {
      name: "mobile"
    }, /*#__PURE__*/React.createElement(Input, {
      trailingIcon: /*#__PURE__*/React.createElement(CloudDoneIcon, null),
      label: "Your mobile number",
      description: "An SMS will be sent to this number",
      disabled: disabled
    })));
  })), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                    <Form>\n                        {({ Bind }) => (\n                            <React.Fragment>\n                                <Bind name=\"phone\">\n                                    <Input\n                                        leadingIcon={<AutoRenewIcon />}\n                                        label={\"Your phone number\"}\n                                        description={\"Please enter a real number\"}\n                                        disabled={".concat(disabled, "}\n                                    />\n                                </Bind>\n                                <Bind name=\"mobile\">\n                                    <Input\n                                        trailingIcon={<CloudDoneIcon />}\n                                        label={\"Your mobile number\"}\n                                        description={\"An SMS will be sent to this number\"}\n                                        disabled={").concat(disabled, "}\n                                    />\n                                </Bind>\n                            </React.Fragment>\n                        )}\n                    </Form>\n                    "))), /*#__PURE__*/React.createElement(StorySandbox, null, /*#__PURE__*/React.createElement(StorySandboxExample, {
    title: "With icon (outlined)"
  }, /*#__PURE__*/React.createElement(Form, null, function (_ref3) {
    var Bind = _ref3.Bind;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bind, {
      name: "phone"
    }, /*#__PURE__*/React.createElement(Input, {
      outlined: true,
      leadingIcon: /*#__PURE__*/React.createElement(BaselineDeleteIcon, null),
      label: "Your phone number",
      description: "Please enter a real number",
      disabled: disabled
    })), /*#__PURE__*/React.createElement(Bind, {
      name: "mobile"
    }, /*#__PURE__*/React.createElement(Input, {
      outlined: true,
      trailingIcon: /*#__PURE__*/React.createElement(BaselineDoneIcon, null),
      label: "Your mobile number",
      description: "An SMS will be sent to this number",
      disabled: disabled
    })));
  })), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                    <Form>\n                        {({ Bind }) => (\n                            <React.Fragment>\n                                <Bind name=\"phone\">\n                                    <Input\n                                        outlined\n                                        leadingIcon={<BaselineDeleteIcon />}\n                                        label={\"Your phone number\"}\n                                        description={\"Please enter a real number\"}\n                                        disabled={".concat(disabled, "}\n                                    />\n                                </Bind>\n                                <Bind name=\"mobile\">\n                                    <Input\n                                        outlined\n                                        trailingIcon={<BaselineDoneIcon />}\n                                        label={\"Your mobile number\"}\n                                        description={\"An SMS will be sent to this number\"}\n                                        disabled={").concat(disabled, "}\n                                    />\n                                </Bind>\n                            </React.Fragment>\n                        )}\n                    </Form>\n                    "))), /*#__PURE__*/React.createElement(StorySandbox, null, /*#__PURE__*/React.createElement(StorySandboxExample, {
    title: "Full width"
  }, /*#__PURE__*/React.createElement(Form, null, function (_ref4) {
    var Bind = _ref4.Bind;
    return /*#__PURE__*/React.createElement(Bind, bindProps, /*#__PURE__*/React.createElement(Input, {
      placeholder: "Your name",
      fullwidth: true,
      disabled: disabled
    }));
  })), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                    <Form>\n                        {({ Bind }) => (\n                            <Bind\n                                name=\"name\"\n                                validators={validation.create(\"required,minLength:3\")}>\n                                <Input placeholder={\"Your name\"} fullwidth disabled={".concat(disabled, "}/>\n                            </Bind>\n                        )}\n                    </Form>\n                    "))), /*#__PURE__*/React.createElement(StorySandbox, null, /*#__PURE__*/React.createElement(StorySandboxExample, {
    title: "Textarea"
  }, /*#__PURE__*/React.createElement(Form, null, function (_ref5) {
    var Bind = _ref5.Bind;
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bind, {
      name: "info"
    }, /*#__PURE__*/React.createElement(Input, {
      rows: 6,
      placeholder: "Tell us something...",
      description: "Just a little bit about yourself.",
      disabled: disabled
    })), /*#__PURE__*/React.createElement(Bind, {
      name: "description"
    }, /*#__PURE__*/React.createElement(Input, {
      fullwidth: true,
      rows: 6,
      placeholder: "How's the weather today?",
      description: "We actually need to know.",
      disabled: disabled
    })));
  })), /*#__PURE__*/React.createElement(StorySandboxCode, null, "\n                    <Form>\n                        {({ Bind }) => (\n                            <React.Fragment>\n                                <Bind name=\"info\">\n                                    <Input\n                                        rows={6}\n                                        placeholder={\"Tell us something...\"}\n                                        description={\"Just a little bit about yourself.\"}\n                                        disabled={".concat(disabled, "}\n                                    />\n                                </Bind>\n                                <Bind name=\"description\">\n                                    <Input\n                                        fullwidth\n                                        rows={6}\n                                        placeholder={\"How's the weather today?\"}\n                                        description={\"We actually need to know.\"}\n                                        disabled={").concat(disabled, "}\n                                    />\n                                </Bind>\n                            </React.Fragment>\n                        )}\n                    </Form>\n                    "))));
}, {
  info: {
    propTables: [Input]
  }
});
//# sourceMappingURL=Input.stories.js.map