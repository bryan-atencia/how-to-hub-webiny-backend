{"version":3,"sources":["../../src/Button/Button.tsx"],"names":["React","R","Fab","Icon","classNames","ButtonDefault","props","disabled","onClick","children","small","ripple","className","style","ButtonPrimary","flat","ButtonSecondary","ButtonFloating","icon","label","rest","ButtonIcon"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as R from \"@rmwc/button\";\nimport { Fab, FabProps } from \"@rmwc/fab\";\nimport { Icon } from \"../Icon/Icon\";\nimport classNames from \"classnames\";\nimport { SyntheticEvent } from \"react\";\n\ntype Props = {\n    // Make button flat (only applicable to Primary button).\n    flat?: boolean;\n\n    // Make button smaller.\n    small?: boolean;\n\n    // onClick handler.\n    onClick?: (event: React.MouseEvent<any, MouseEvent>) => void | null;\n\n    // Label and optionally an icon (using Button.Icon component).\n    children?: React.ReactNode;\n\n    // Show ripple effect on button click. Default: true\n    ripple?: boolean;\n\n    className?: string;\n\n    disabled?: boolean;\n\n    style?: { [key: string]: any };\n\n    // For testing purposes.\n    \"data-testid\"?: string;\n};\n\n/**\n * Shows a default button, used typically when action is not of high priority.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ButtonDefault = (props: Props) => {\n    const { disabled, onClick, children, small, ripple = true, className = \"\", style } = props;\n\n    return (\n        <R.Button\n            style={style}\n            disabled={disabled}\n            dense={small}\n            onClick={onClick}\n            ripple={ripple}\n            className={classNames(\"webiny-ui-button\", className)}\n            data-testid={props[\"data-testid\"]}\n        >\n            {children}\n        </R.Button>\n    );\n};\n\n/**\n * Shows primary button, eg. for submitting forms.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ButtonPrimary = (props: Props) => {\n    const {\n        disabled,\n        onClick,\n        children,\n        small = false,\n        flat = false,\n        ripple = true,\n        style = null,\n        className = null\n    } = props;\n    return (\n        <R.Button\n            raised={!flat}\n            dense={small}\n            disabled={disabled}\n            unelevated={flat}\n            ripple={ripple}\n            onClick={onClick}\n            style={style}\n            className={classNames(\"webiny-ui-button webiny-ui-button--primary\", className)}\n            data-testid={props[\"data-testid\"]}\n        >\n            {children}\n        </R.Button>\n    );\n};\n\n/**\n * Shows a secondary button - eg. for doing a reset on a form.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ButtonSecondary = (props: Props) => {\n    const {\n        disabled,\n        onClick,\n        children,\n        small = false,\n        ripple = true,\n        className = null,\n        style = null\n    } = props;\n\n    return (\n        <R.Button\n            disabled={disabled}\n            outlined\n            dense={small}\n            ripple={ripple}\n            onClick={onClick}\n            style={style}\n            className={classNames(\"webiny-ui-button webiny-ui-button--secondary\", className)}\n            data-testid={props[\"data-testid\"]}\n        >\n            {children}\n        </R.Button>\n    );\n};\n\ntype ButtonFloatingProps = Props &\n    FabProps & {\n        label?: React.ReactNode;\n        icon?: React.ReactNode;\n        onMouseDown?: (e: SyntheticEvent) => void;\n        onMouseUp?: (e: SyntheticEvent) => void;\n    };\n\n/**\n * A floating button, shown on the side of the screen, typically used for creating new content or accessing settings.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ButtonFloating = (props: ButtonFloatingProps) => {\n    const {\n        disabled,\n        icon,\n        onClick,\n        small = false,\n        label = false,\n        ripple = true,\n        className = null,\n        ...rest\n    } = props;\n    return (\n        <Fab\n            data-testid={props[\"data-testid\"]}\n            disabled={disabled}\n            mini={small}\n            onClick={onClick}\n            label={label}\n            ripple={ripple}\n            icon={icon}\n            className={classNames(\"webiny-ui-button--floating\", className)}\n            {...rest}\n        />\n    );\n};\n\n/**\n * Shows an icon, suitable to be shown inside of a button.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ButtonIcon = (props: any) => <Icon {...props} />;\n"],"file":"Button.js"}