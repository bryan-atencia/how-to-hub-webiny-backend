{"version":3,"sources":["../../src/List/List.tsx"],"names":["React","List","RmwcList","ListItem","RmwcListItem","ListItemText","RmwcListItemText","ListItemPrimaryText","RmwcListItemPrimaryText","ListItemSecondaryText","RmwcListItemSecondaryText","SimpleListItem","RmwcSimpleListItem","Typography","classNames","styled","props","children","Component","ListItemTextPrimary","ListItemTextSecondary","ListItemGraphic","className","ListItemMeta","ListTopCaption","ListBottomCaption","ListTextOverline","ListActions","SelectBoxWrapper","overflow","width","height","display","position","alignItems","justifyContent","ListSelectBox"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    List as RmwcList,\n    ListProps as RmwcListProps,\n    ListItem as RmwcListItem,\n    ListItemProps as RmwcListItemProps,\n    ListItemText as RmwcListItemText,\n    ListItemTextProps as RmwcListItemTextProps,\n    ListItemPrimaryText as RmwcListItemPrimaryText,\n    ListItemSecondaryText as RmwcListItemSecondaryText,\n    SimpleListItem as RmwcSimpleListItem,\n    SimpleListItemProps as RmwcSimpleListItemProps\n} from \"@rmwc/list\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport classNames from \"classnames\";\nimport styled from \"@emotion/styled\";\n\nexport type ListItemProps = RmwcListItemProps & {\n    children: React.ReactNode;\n    className?: string;\n    style?: React.CSSProperties;\n    onClick?: (e: React.MouseEvent) => void;\n};\n\n/**\n * ListItem components are placed as direct children to List component.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListItem = (props: ListItemProps) => {\n    return <RmwcListItem {...props} />;\n};\n\nexport type ListProps = RmwcListProps & {\n    children?: any;\n\n    className?: string;\n\n    style?: React.CSSProperties;\n};\n\n/**\n * Use List component to display data and offer additional actions if needed.\n */\nexport class List extends React.Component<ListProps> {\n    render() {\n        return <RmwcList {...this.props}>{this.props.children}</RmwcList>;\n    }\n}\n\nexport type ListItemTextProps = RmwcListItemTextProps & {\n    children: React.ReactNode;\n    className?: string;\n    onClick?: (e: React.SyntheticEvent<MouseEvent>) => void;\n};\n\n/**\n * Used to show regular text in list items.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListItemText = (props: ListItemTextProps) => {\n    return <RmwcListItemText {...props}>{props.children}</RmwcListItemText>;\n};\n\nexport type ListItemTextPrimaryProps = {\n    /**\n     * Text content\n     */\n    children: React.ReactNode;\n};\n\nexport const ListItemTextPrimary = (props: ListItemTextPrimaryProps) => {\n    return <RmwcListItemPrimaryText>{props.children}</RmwcListItemPrimaryText>;\n};\n\nexport type ListItemTextSecondaryProps = {\n    /**\n     * Text content\n     */\n    children: React.ReactNode;\n};\n\n/**\n * Used to show secondary text in list items.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListItemTextSecondary = (props: ListItemTextSecondaryProps) => {\n    return <RmwcListItemSecondaryText>{props.children}</RmwcListItemSecondaryText>;\n};\n\nexport type ListItemGraphicProps = { children: React.ReactNode; className?: string };\n\n/**\n * Can be used to show an icon or any other custom element. Rendered on the left side.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListItemGraphic = (props: ListItemGraphicProps) => {\n    return (\n        <div {...props} className={classNames(\"mdc-list-item__graphic\", props.className)}>\n            {props.children}\n        </div>\n    );\n};\n\nexport type ListItemMetaProps = { children: React.ReactNode; className?: string };\n\n/**\n * Can be used to show an icon or any other custom element. Rendered on the right side.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListItemMeta = (props: ListItemMetaProps) => {\n    return (\n        <span {...props} className={classNames(\"mdc-list-item__meta\", props.className)}>\n            {props.children}\n        </span>\n    );\n};\n\nexport type ListTopCaptionProps = {\n    children: React.ReactNode;\n};\n\n/**\n * Can be used to show a top caption inside ListItemMeta component.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListTopCaption = (props: ListTopCaptionProps) => {\n    return (\n        <span {...props} className={\"webiny-list-top-caption\"}>\n            <Typography use=\"overline\">{props.children}</Typography>\n        </span>\n    );\n};\n\nexport type ListBottomCaptionProps = {\n    children: React.ReactNode;\n};\n\n/**\n * Can be used to show a bottom caption inside ListItemMeta component.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListBottomCaption = (props: ListBottomCaptionProps) => {\n    return (\n        <span {...props} className={\"webiny-list-bottom-caption\"}>\n            <Typography use=\"overline\">{props.children}</Typography>\n        </span>\n    );\n};\n\nexport type ListTextOverlineProps = {\n    children: React.ReactNode;\n};\n\n/**\n * Can be used to show an overline text inside ListItem component.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListTextOverline = (props: ListTextOverlineProps) => {\n    return (\n        <span {...props} className={\"webiny-list-text-overline\"}>\n            <Typography use=\"overline\">{props.children}</Typography>\n        </span>\n    );\n};\n\nexport type ListActionsProps = {\n    children: React.ReactNode;\n};\n\n/**\n * Used to contain the actions inside ListItemMate component.\n * @param props\n * @returns {*}\n * @constructor\n */\nexport const ListActions = (props: ListActionsProps) => {\n    return (\n        <span {...props} className={\"webiny-list-actions\"}>\n            {props.children}\n        </span>\n    );\n};\n\nconst SelectBoxWrapper = styled(\"div\")({\n    overflow: \"hidden\",\n    width: 25,\n    height: 25,\n    display: \"flex\",\n    position: \"relative\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n});\n\nexport type ListSelectBoxProps = {\n    children: React.ReactNode;\n};\n\n/**\n * Used to hold the Checkbox element for multi-select options.\n * @param {*} props\n */\nexport const ListSelectBox = (props: ListSelectBoxProps) => {\n    return (\n        <ListItemGraphic>\n            <SelectBoxWrapper>{props.children}</SelectBoxWrapper>\n        </ListItemGraphic>\n    );\n};\n\nexport const SimpleListItem = (props: RmwcSimpleListItemProps & { onClick?: any }) => {\n    return <RmwcSimpleListItem {...props} />;\n};\n"],"file":"List.js"}