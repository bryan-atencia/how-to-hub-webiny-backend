{"version":3,"sources":["../../../src/List/DataList/DataList.stories.tsx"],"names":["React","storiesOf","Story","StoryReadme","StorySandboxCode","StorySandbox","StorySandboxExample","readme","withKnobs","boolean","text","object","array","DataList","DeleteIcon","EditIcon","List","ListItem","ListItemText","ListItemTextSecondary","ListItemMeta","ListItemGraphic","story","module","addDecorator","add","generalOptionsAndCallbacks","refresh","console","log","loading","title","multiActions","setNextPage","cursor","setPreviousPage","perPageOptions","setPerPage","perPage","setSorters","sorter","JSON","stringify","dataProp","id","firstName","lastName","email","metaProp","totalPages","totalCount","from","to","previousPage","nextPage","sortersProp","list","label","sorters","createdOn","name","data","map","item","info","propTables"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport {\n    Story,\n    StoryReadme,\n    StorySandboxCode,\n    StorySandbox,\n    StorySandboxExample\n} from \"@webiny/storybook-utils/Story\";\nimport readme from \"./../DataList/README.md\";\nimport { withKnobs, boolean, text, object, array } from \"@storybook/addon-knobs\";\n\nimport { DataList } from \"./DataList\";\n\nimport { DeleteIcon, EditIcon } from \"./icons\";\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemTextSecondary,\n    ListItemMeta,\n    ListItemGraphic\n} from \"./../List\";\n\nconst story = storiesOf(\"Components/List\", module);\nstory.addDecorator(withKnobs);\n\nstory.add(\n    \"data list\",\n    () => {\n        const generalOptionsAndCallbacks = {\n            refresh: () => {\n                console.log(`Implement \"refresh\" method.`);\n            },\n            loading: boolean(\"Loading\", false, \"Basic\"),\n            title: text(\"Title\", \"A list of all users\", \"Basic\"),\n            multiActions: boolean(\"Multi actions\", false, \"Basic\"),\n\n            setNextPage: cursor => {\n                console.log(`Implement setNextPage method (selected ${cursor}).`);\n            },\n            setPreviousPage: cursor => {\n                console.log(`Implement setPreviousPage method (selected ${cursor}).`);\n            },\n            // @ts-ignore\n            perPageOptions: array(\"perPageOptions\", [10, 25, 50], \",\", \"Basic\"),\n            setPerPage: perPage => {\n                console.log(`Implement setPerPage method (selected ${perPage}).`);\n            },\n            setSorters: sorter => {\n                console.log(`Implement setSorters method (selected ${JSON.stringify(sorter)}).`);\n            }\n        };\n\n        const dataProp = object(\n            \"Data\",\n            [\n                {\n                    id: \"A\",\n                    firstName: \"John\",\n                    lastName: \"Doe\",\n                    email: \"john.doe@webiny.com\"\n                },\n                {\n                    id: \"B\",\n                    firstName: \"Jane\",\n                    lastName: \"Doe\",\n                    email: \"jane.doe@webiny.com\"\n                },\n                {\n                    id: \"C\",\n                    firstName: \"Foo\",\n                    lastName: \"Bar\",\n                    email: \"foo.bar@webiny.com\"\n                }\n            ],\n            \"Data\"\n        );\n\n        const metaProp = object(\n            \"Meta\",\n            {\n                totalPages: 1,\n                totalCount: 3,\n                from: 1,\n                to: 3,\n                previousPage: null,\n                nextPage: null\n            },\n            \"Meta\"\n        );\n\n        const sortersProp = {\n            list: object(\n                \"Sorters\",\n                [\n                    {\n                        label: \"Newest to oldest\",\n                        sorters: { createdOn: -1 }\n                    },\n                    {\n                        label: \"Oldest to newest\",\n                        sorters: { createdOn: 1 }\n                    },\n                    {\n                        label: \"Name A-Z\",\n                        sorters: { name: 1 }\n                    },\n                    {\n                        label: \"Name Z-A\",\n                        sorters: { name: -1 }\n                    }\n                ],\n                \"Sorters\"\n            )\n        };\n\n        return (\n            <Story>\n                <StoryReadme>{readme}</StoryReadme>\n\n                <StorySandbox>\n                    <StorySandboxExample>\n                        <DataList\n                            {...generalOptionsAndCallbacks}\n                            data={dataProp}\n                            meta={metaProp}\n                            sorters={sortersProp.list}\n                        >\n                            {({ data }) => (\n                                <List>\n                                    {data.map(item => (\n                                        <ListItem key={item.id}>\n                                            <ListItemGraphic>\n                                                <img\n                                                    src={\"http://i.pravatar.cc/100?id=\" + item.id}\n                                                />\n                                            </ListItemGraphic>\n                                            <ListItemText>\n                                                {item.firstName} {item.lastName}\n                                                <ListItemTextSecondary>\n                                                    {item.email}\n                                                </ListItemTextSecondary>\n                                            </ListItemText>\n                                            <ListItemMeta>\n                                                <DeleteIcon\n                                                    onClick={() => {\n                                                        console.log(\"Redirect user to form.\");\n                                                    }}\n                                                />\n                                                <EditIcon\n                                                    onClick={() => {\n                                                        console.log(\"Show confirmation dialog.\");\n                                                    }}\n                                                />\n                                            </ListItemMeta>\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            )}\n                        </DataList>\n                    </StorySandboxExample>\n                    <StorySandboxCode>\n                        {`\n                        <DataList\n                        {...generalOptionsAndCallbacks}\n                        data={${JSON.stringify(dataProp, null, 2)}}\n                        meta={${JSON.stringify(metaProp, null, 2)}}\n                        sorters={${JSON.stringify(sortersProp.list, null, 2)}}\n                    >\n                      {({ data }) => (\n                            <List>\n                                {data.map(item => (\n                                    <ListItem key={item.id}>\n                                        <ListItemGraphic>\n                                            <img\n                                                src={\n                                                    \"//www.gravatar.com/avatar/\" +\n                                                    item.gravatar +\n                                                    \"?s=48\"\n                                                }\n                                            />\n                                        </ListItemGraphic>\n                                        <ListItemText>\n                                            {item.firstName} {item.lastName}\n                                            <ListItemTextSecondary>\n                                                {item.email}\n                                            </ListItemTextSecondary>\n                                        </ListItemText>\n                                        <ListItemMeta>\n                                                <DeleteIcon\n                                                    onClick={() => {\n                                                        console.log(\"Redirect user to form.\");\n                                                    }}\n                                                />\n                                                <EditIcon\n                                                    onClick={() => {\n                                                        console.log(\"Show confirmation dialog.\");\n                                                    }}\n                                                />\n                                        </ListItemMeta>\n                                    </ListItem>\n                                ))}\n                            </List>\n                        )}\n                    </DataList>\n                    `}\n                    </StorySandboxCode>\n                </StorySandbox>\n            </Story>\n        );\n    },\n    {\n        info: {\n            propTables: [\n                List,\n                ListItem,\n                ListItemText,\n                ListItemTextSecondary,\n                ListItemMeta,\n                ListItemGraphic\n            ]\n        }\n    }\n);\n"],"file":"DataList.stories.js"}