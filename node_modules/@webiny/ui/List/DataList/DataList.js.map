{"version":3,"sources":["../../../src/List/DataList/DataList.tsx"],"names":["React","styled","classNames","Loader","NoData","Typography","css","noop","isEmpty","Checkbox","Menu","MenuItem","Grid","Cell","RefreshIcon","SortIcon","PreviousPageIcon","NextPageIcon","OptionsIcon","List","ListContainer","position","paddingBottom","paddingTop","borderBottom","padding","height","minHeight","display","marginRight","width","margin","alignItems","justifyContent","flexDirection","boxSizing","whiteSpace","marginTop","marginBottom","textAlign","listHeader","color","listSubHeader","ListHeaderItem","verticalAlign","opacity","pointerEvents","listTitle","listActions","scrollList","overflow","MultiSelectAll","props","multiSelectActions","multiSelectAll","isAllMultiSelected","isNoneMultiSelected","MultiSelectActions","RefreshButton","refresh","Sorters","sorters","map","sorter","label","setSorters","Pagination","meta","setPreviousPage","setNextPage","disabled","hasPreviousPage","cursors","previous","hasNextPage","next","setPerPage","Array","isArray","perPageOptions","perPage","DataList","render","loading","loader","data","noData","children","title","actions","Object","keys","showOptions","length","pagination","defaultProps","setPage","ScrollList"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport classNames from \"classnames\";\nimport Loader from \"./Loader\";\nimport NoData from \"./NoData\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { css } from \"emotion\";\nimport noop from \"lodash/noop\";\nimport isEmpty from \"lodash/isEmpty\";\n\nimport { Checkbox } from \"@webiny/ui/Checkbox\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\n\nimport { RefreshIcon, SortIcon, PreviousPageIcon, NextPageIcon, OptionsIcon } from \"./icons\";\nimport { List, ListItem, ListProps } from \"@webiny/ui/List\";\n\nimport { MetaProp, SortersProp } from \"./types\";\n\nconst ListContainer = styled(\"div\")({\n    position: \"relative\",\n    \".mdc-list\": {\n        paddingBottom: 0,\n        paddingTop: 0\n    },\n    \".mdc-list-item\": {\n        borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n        padding: \"10px 20px 10px 20px\",\n        height: \"auto\",\n        minHeight: 40,\n        \".mdc-list-item__text, .mdc-list-item__secondary-text, .webiny-list-text-overline\": {\n            display: \"block\"\n        },\n        \".mdc-list-item__graphic\": {\n            marginRight: 20\n        },\n        \".mdc-list-item__text\": {\n            width: \"100%\",\n            margin: \"-20px 0\",\n            padding: \"20px 0\"\n        },\n        \".mdc-list-item__meta\": {\n            alignItems: \"center\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexDirection: \"column\",\n            position: \"relative\",\n            padding: \"5px 0\",\n            boxSizing: \"border-box\",\n            height: \"100%\",\n            whiteSpace: \"nowrap\",\n            marginTop: -10,\n            marginBottom: -10,\n            \".webiny-list-actions\": {\n                display: \"none\"\n            },\n            \".webiny-list-top-caption, .webiny-list-bottom-caption\": {\n                //position: 'absolute',\n                width: \"100%\",\n                textAlign: \"right\"\n            },\n            \".webiny-list-top-caption\": {\n                marginBottom: 20\n            }\n        },\n        \"&:hover\": {\n            \".mdc-list-item__meta\": {\n                \".webiny-list-top-caption, .webiny-list-bottom-caption\": {\n                    display: \"none\"\n                },\n                \".webiny-list-actions\": {\n                    display: \"flex\",\n                    height: \"100%\",\n                    alignItems: \"center\"\n                }\n            }\n        }\n    }\n});\n\nconst listHeader = css({\n    borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n    color: \"var(--mdc-theme-text-primary-on-background)\",\n    width: \"100%\"\n});\n\nconst listSubHeader = css({\n    width: \"100%\",\n    \"&.mdc-layout-grid\": {\n        borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n        padding: \"10px 24px 10px 12px\",\n        color: \"var(--mdc-theme-text-primary-on-background)\"\n    }\n});\n\nconst ListHeaderItem = styled(\"div\")({\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    \"&.disabled\": {\n        opacity: 0.5,\n        pointerEvents: \"none\"\n    }\n});\n\nconst listTitle = css({\n    display: \"flex\",\n    alignItems: \"center\"\n});\n\nconst listActions = css({\n    textAlign: \"right\"\n});\n\nconst scrollList = css({\n    overflow: \"scroll\",\n    height: \"calc(100vh - 235px)\"\n});\n\n// This was copied from \"./types\" so that it can be outputted in docs.\ntype Props = {\n    // Pass a function to take full control of list render.\n    children?: Function;\n\n    // A title of paginated list.\n    title?: React.ReactNode;\n\n    // FormData that needs to be shown in the list.\n    data?: Object[];\n\n    // A callback that must refresh current view by repeating the previous query.\n    refresh?: Function;\n\n    // If true, Loader component will be shown, disallowing any interaction.\n    loading?: boolean;\n\n    // Provide a custom loader. Shown while the content is loading.\n    loader?: React.ReactNode;\n\n    // Provide a custom no data component. Shown while there is no data to be shown.\n    noData?: React.ReactNode;\n\n    // Provide all pagination data, options and callbacks here.\n    meta?: MetaProp;\n\n    // Triggered when previous page is requested.\n    setPreviousPage?: Function;\n\n    // Triggered when next page is requested.\n    setNextPage?: Function;\n\n    // Triggered once a sorter has been selected.\n    setSorters?: Function;\n\n    // Triggered once selected filters are submitted.\n    setFilters?: Function;\n\n    // Triggered when number of entries per page has been changed.\n    setPerPage?: Function;\n\n    // By default, users can choose from 10, 25 or 50 entries per page.\n    perPageOptions?: number[];\n\n    // Provide all sorters options and callbacks here.\n    sorters?: SortersProp;\n\n    // Provide actions that will be shown in the top right corner (eg. export or import actions).\n    actions?: React.ReactNode;\n\n    // Provide actions that can be executed on one or more multi-selected list items (eg. export or delete).\n    multiSelectActions?: React.ReactNode;\n\n    // Provide callback that will be executed once user selects all list items.\n    multiSelectAll: (value: boolean) => void;\n\n    // Callback which returns true if all items were selected, otherwise returns false.\n    isAllMultiSelected: () => boolean;\n\n    // Callback which returns true if none of the items were selected, otherwise returns false.\n    isNoneMultiSelected: () => boolean;\n\n    showOptions: { [key: string]: any };\n};\n\nconst MultiSelectAll = (props: Props) => {\n    const { multiSelectActions } = props;\n    if (!multiSelectActions) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            {typeof props.multiSelectAll === \"function\" && (\n                <ListHeaderItem>\n                    <Checkbox\n                        indeterminate={!props.isAllMultiSelected() && !props.isNoneMultiSelected()}\n                        value={props.isAllMultiSelected()}\n                        onClick={() => {\n                            props.multiSelectAll(!props.isAllMultiSelected());\n                        }}\n                    />\n                </ListHeaderItem>\n            )}\n        </React.Fragment>\n    );\n};\n\nconst MultiSelectActions = (props: Props) => {\n    const { multiSelectActions } = props;\n    if (!multiSelectActions) {\n        return null;\n    }\n\n    return <ListHeaderItem>{multiSelectActions}</ListHeaderItem>;\n};\n\nconst RefreshButton = (props: Props) => {\n    const refresh = props.refresh;\n    if (!refresh) {\n        return null;\n    }\n\n    return (\n        <ListHeaderItem>\n            <RefreshIcon onClick={() => refresh()} />\n        </ListHeaderItem>\n    );\n};\n\nconst Sorters = (props: Props) => {\n    const sorters = props.sorters;\n    if (!sorters) {\n        return null;\n    }\n\n    return (\n        <ListHeaderItem>\n            <Menu handle={<SortIcon />}>\n                {sorters.map(sorter => (\n                    <MenuItem\n                        key={sorter.label}\n                        onClick={() => {\n                            if (sorters && props.setSorters) {\n                                props.setSorters(sorter.sorters);\n                            }\n                        }}\n                    >\n                        {sorter.label}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </ListHeaderItem>\n    );\n};\n\nconst Pagination = (props: Props) => {\n    const meta = props.meta;\n    if (!meta) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            {props.setPreviousPage && props.setNextPage && (\n                <React.Fragment>\n                    <ListHeaderItem\n                        className={classNames({\n                            disabled: !meta.hasPreviousPage\n                        })}\n                    >\n                        <PreviousPageIcon\n                            onClick={() => {\n                                if (props.setPreviousPage && meta.hasPreviousPage) {\n                                    props.setPreviousPage(meta.cursors.previous);\n                                }\n                            }}\n                        />\n                    </ListHeaderItem>\n\n                    <ListHeaderItem\n                        className={classNames({\n                            disabled: !meta.hasNextPage\n                        })}\n                    >\n                        <NextPageIcon\n                            onClick={() => {\n                                if (props.setNextPage && meta.hasNextPage) {\n                                    props.setNextPage(meta.cursors.next);\n                                }\n                            }}\n                        />\n                    </ListHeaderItem>\n                </React.Fragment>\n            )}\n\n            {props.setPerPage && Array.isArray(props.perPageOptions) && (\n                <ListHeaderItem>\n                    <Menu handle={<OptionsIcon />}>\n                        {props.setPerPage &&\n                            props.perPageOptions.map(perPage => (\n                                <MenuItem\n                                    key={perPage}\n                                    onClick={() => props.setPerPage && props.setPerPage(perPage)}\n                                >\n                                    {perPage}\n                                </MenuItem>\n                            ))}\n                    </Menu>\n                </ListHeaderItem>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport const DataList = (props: Props) => {\n    let render = null;\n    if (props.loading) {\n        render = props.loader;\n    } else {\n        if (isEmpty(props.data)) {\n            render = props.noData;\n        } else {\n            if (typeof props.children === \"function\") {\n                render = props.children(props);\n            }\n        }\n    }\n\n    return (\n        <ListContainer className={\"webiny-data-list\"}>\n            {(props.title || props.actions) && (\n                <Grid className={listHeader}>\n                    <Cell span={6} className={listTitle}>\n                        <Typography use=\"headline5\">{props.title}</Typography>\n                    </Cell>\n                    <Cell span={6} className={listActions}>\n                        {props.actions}\n                    </Cell>\n                </Grid>\n            )}\n\n            {Object.keys(props.showOptions).length > 0 && (\n                <Grid className={listSubHeader}>\n                    <Cell span={props.showOptions.pagination ? 5 : 12}>\n                        <MultiSelectAll {...props} />\n                        {props.showOptions.refresh && <RefreshButton {...props} />}\n                        {props.showOptions.sorters && <Sorters {...props} />}\n                        <MultiSelectActions {...props} />\n                    </Cell>\n\n                    {props.showOptions.pagination && (\n                        <Cell span={7} style={{ textAlign: \"right\" }}>\n                            <Pagination {...props} />\n                        </Cell>\n                    )}\n                </Grid>\n            )}\n\n            {render}\n        </ListContainer>\n    );\n};\n\nDataList.defaultProps = {\n    children: null,\n    title: null,\n    data: null,\n    meta: null,\n    loading: false,\n    refresh: null,\n    setPage: null,\n    setPerPage: null,\n    perPageOptions: [10, 25, 50],\n    sorters: null,\n    setSorters: null,\n    actions: null,\n    multiSelectAll: noop,\n    isAllMultiSelected: () => false,\n    isNoneMultiSelected: () => false,\n    loader: <Loader />,\n    noData: <NoData />,\n    showOptions: {\n        refresh: true,\n        pagination: true,\n        sorters: true\n    }\n};\n\nexport type ScrollListProps = ListProps & {\n    children: React.ReactElement<typeof ListItem>[];\n};\n\nexport const ScrollList = (props: ScrollListProps) => {\n    return (\n        <List {...props} className={scrollList}>\n            {props.children}\n        </List>\n    );\n};\n"],"file":"DataList.js"}