{"version":3,"sources":["../../src/ConfirmationDialog/ConfirmationDialog.tsx"],"names":["React","noop","Dialog","DialogButton","DialogCancel","DialogActions","DialogTitle","DialogContent","CircularProgress","ConfirmationDialog","onAccept","onCancel","show","loading","callbacks","setState","__isMounted","state","hideConfirmation","props","title","message","disableConfirm","children","showConfirmation","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport noop from \"lodash/noop\";\n\nimport {\n    Dialog,\n    DialogButton,\n    DialogCancel,\n    DialogActions,\n    DialogTitle,\n    DialogContent\n} from \"./../Dialog\";\n\nimport { CircularProgress } from \"../Progress\";\n\ninterface ChildrenRenderProp {\n    showConfirmation: (onAccept?: Function, onCancel?: Function) => any;\n}\n\ninterface ConfirmationCallbacks {\n    onAccept: Function;\n    onCancel: Function;\n}\n\ntype Props = {\n    // Title of confirmation dialog.\n    title?: React.ReactNode;\n\n    // Message of confirmation dialog.\n    message?: React.ReactNode;\n\n    // This element will be rendered during loading\n    loading?: React.ReactNode;\n\n    // For testing purposes.\n    \"data-testid\"?: string;\n\n    // An element that will trigger the confirmation dialog.\n    children: (props: ChildrenRenderProp) => React.ReactNode;\n\n    // Is `Confirm` button disabled\n    disableConfirm?: boolean;\n};\n\ntype State = {\n    show: boolean;\n    loading: boolean;\n};\n\n/**\n * Use ConfirmationDialog component to display a list of choices, once the handler is triggered.\n */\nclass ConfirmationDialog extends React.Component<Props, State> {\n    static defaultProps = {\n        title: \"Confirmation\",\n        message: \"Are you sure you want to continue?\",\n        loading: <CircularProgress />\n    };\n\n    __isMounted = false;\n\n    callbacks: ConfirmationCallbacks = {\n        onAccept: noop,\n        onCancel: noop\n    };\n\n    state = {\n        show: false,\n        loading: false\n    };\n\n    componentDidMount() {\n        this.__isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this.__isMounted = false;\n    }\n\n    showConfirmation = (onAccept?: Function, onCancel?: Function) => {\n        this.callbacks = { onAccept, onCancel };\n        this.setState({ show: true });\n    };\n\n    hideConfirmation = () => {\n        this.setState({ show: false });\n    };\n\n    onAccept = async () => {\n        const { onAccept } = this.callbacks;\n        if (typeof onAccept === \"function\") {\n            this.setState({ loading: true });\n            await onAccept();\n            if (this.__isMounted) {\n                this.setState({ loading: false, show: false });\n            }\n        }\n    };\n\n    onCancel = async () => {\n        const { onCancel } = this.callbacks;\n        if (typeof onCancel === \"function\") {\n            await onCancel();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Dialog\n                    open={this.state.show}\n                    onClose={this.hideConfirmation}\n                    data-testid={this.props[\"data-testid\"]}\n                >\n                    {this.state.loading ? this.props.loading : null}\n                    <DialogTitle>{this.props.title}</DialogTitle>\n                    <DialogContent>{this.props.message}</DialogContent>\n                    <DialogActions>\n                        <DialogCancel onClick={this.onCancel}>Cancel</DialogCancel>\n                        <DialogButton\n                            data-testid=\"confirmationdialog-confirm-action\"\n                            onClick={this.onAccept}\n                            disabled={this.props.disableConfirm}\n                        >\n                            Confirm\n                        </DialogButton>\n                    </DialogActions>\n                </Dialog>\n                {this.props.children({\n                    showConfirmation: this.showConfirmation\n                })}\n            </React.Fragment>\n        );\n    }\n}\n\nexport { ConfirmationDialog };\n"],"file":"ConfirmationDialog.js"}