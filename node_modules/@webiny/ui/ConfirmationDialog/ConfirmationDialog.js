import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import * as React from "react";
import noop from "lodash/noop";
import { Dialog, DialogButton, DialogCancel, DialogActions, DialogTitle, DialogContent } from "./../Dialog";
import { CircularProgress } from "../Progress";

/**
 * Use ConfirmationDialog component to display a list of choices, once the handler is triggered.
 */
var ConfirmationDialog = /*#__PURE__*/function (_React$Component) {
  _inherits(ConfirmationDialog, _React$Component);

  var _super = _createSuper(ConfirmationDialog);

  function ConfirmationDialog() {
    var _this;

    _classCallCheck(this, ConfirmationDialog);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "__isMounted", false);

    _defineProperty(_assertThisInitialized(_this), "callbacks", {
      onAccept: noop,
      onCancel: noop
    });

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: false,
      loading: false
    });

    _defineProperty(_assertThisInitialized(_this), "showConfirmation", function (onAccept, onCancel) {
      _this.callbacks = {
        onAccept: onAccept,
        onCancel: onCancel
      };

      _this.setState({
        show: true
      });
    });

    _defineProperty(_assertThisInitialized(_this), "hideConfirmation", function () {
      _this.setState({
        show: false
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onAccept", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var onAccept;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              onAccept = _this.callbacks.onAccept;

              if (!(typeof onAccept === "function")) {
                _context.next = 6;
                break;
              }

              _this.setState({
                loading: true
              });

              _context.next = 5;
              return onAccept();

            case 5:
              if (_this.__isMounted) {
                _this.setState({
                  loading: false,
                  show: false
                });
              }

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));

    _defineProperty(_assertThisInitialized(_this), "onCancel", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
      var onCancel;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              onCancel = _this.callbacks.onCancel;

              if (!(typeof onCancel === "function")) {
                _context2.next = 4;
                break;
              }

              _context2.next = 4;
              return onCancel();

            case 4:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    })));

    return _this;
  }

  _createClass(ConfirmationDialog, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.__isMounted = true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.__isMounted = false;
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {
        open: this.state.show,
        onClose: this.hideConfirmation,
        "data-testid": this.props["data-testid"]
      }, this.state.loading ? this.props.loading : null, /*#__PURE__*/React.createElement(DialogTitle, null, this.props.title), /*#__PURE__*/React.createElement(DialogContent, null, this.props.message), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, {
        onClick: this.onCancel
      }, "Cancel"), /*#__PURE__*/React.createElement(DialogButton, {
        "data-testid": "confirmationdialog-confirm-action",
        onClick: this.onAccept,
        disabled: this.props.disableConfirm
      }, "Confirm"))), this.props.children({
        showConfirmation: this.showConfirmation
      }));
    }
  }]);

  return ConfirmationDialog;
}(React.Component);

_defineProperty(ConfirmationDialog, "defaultProps", {
  title: "Confirmation",
  message: "Are you sure you want to continue?",
  loading: /*#__PURE__*/React.createElement(CircularProgress, null)
});

export { ConfirmationDialog };
//# sourceMappingURL=ConfirmationDialog.js.map