import React from "react";
import { AuthProps, AuthState } from "../Authenticator";
export declare type ForgotPasswordChildrenProps = {
    authProps: AuthProps;
    requestCode(params: {
        username: string;
    }): Promise<void>;
    setPassword(params: {
        username: string;
    }): Promise<void>;
    codeSent: boolean;
    error: Error;
    loading: boolean;
};
export declare type ForgotPasswordProps = Omit<AuthProps, "checkingUser"> & {
    children: React.ReactElement;
};
declare class ForgotPassword extends React.Component<ForgotPasswordProps> {
    authStates: AuthState[];
    state: {
        codeSent: any;
        error: any;
        loading: boolean;
    };
    requestCode: (data: any) => Promise<void>;
    setPassword: ({ username }: {
        username: any;
    }) => Promise<void>;
    render(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
}
export default ForgotPassword;
