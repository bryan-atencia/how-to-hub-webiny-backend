{"version":3,"sources":["../../../src/cognito/states/ForgotPassword.ts"],"names":["React","Auth","debug","ForgotPassword","codeSent","error","loading","data","setState","username","forgotPassword","toLowerCase","res","CodeDeliveryDetails","code","message","props","changeState","children","authProps","authState","authStates","includes","cloneElement","requestCode","setPassword","state","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;IAgBMC,c;;;;;;;;;;;;;;;;iEACwB,CAAC,gBAAD,C;;4DAElB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,OAAO,EAAE;AAHL,K;;;0EAMM,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,sBAAKC,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AACQG,gBAAAA,QAFE,GAEWF,IAFX,CAEFE,QAFE;AAAA;AAAA;AAAA,uBAIYR,IAAI,CAACS,cAAL,CAAoBD,QAAQ,CAACE,WAAT,EAApB,CAJZ;;AAAA;AAIAC,gBAAAA,GAJA;AAKNV,gBAAAA,KAAK,CAAC,oBAAD,EAAuBU,GAAvB,CAAL;;AACA,sBAAKJ,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE,KAAX;AAAkBF,kBAAAA,QAAQ,EAAEQ,GAAG,CAACC,mBAAhC;AAAqDR,kBAAAA,KAAK,EAAE;AAA5D,iBAAd;;AANM;AAAA;;AAAA;AAAA;AAAA;;AAAA,sBAQF,YAAIS,IAAJ,KAAa,wBARX;AAAA;AAAA;AAAA;;AASF,sBAAKN,QAAL,CAAc;AACVF,kBAAAA,OAAO,EAAE,KADC;AAEVD,kBAAAA,KAAK;AAFK,iBAAd;;AATE;;AAAA;AAgBN,sBAAKG,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE,KAAX;AAAkBD,kBAAAA,KAAK,EAAE,YAAIU;AAA7B,iBAAd;;AAhBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;2EAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAASN,gBAAAA,QAAT,SAASA,QAAT;;AACV,sBAAKD,QAAL,CAAc;AAAEJ,kBAAAA,QAAQ,EAAE,IAAZ;AAAkBC,kBAAAA,KAAK,EAAE;AAAzB,iBAAd;;AACA,sBAAKW,KAAL,CAAWC,WAAX,CAAuB,gBAAvB,EAAyCR,QAAzC;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAKL;AAAA,wBAC8B,KAAKO,KADnC;AAAA,UACGE,QADH,eACGA,QADH;AAAA,UACgBC,SADhB;;AAAA,UAEGC,SAFH,GAEiBD,SAFjB,CAEGC,SAFH;;AAGL,UAAI,CAAC,KAAKC,UAAL,CAAgBC,QAAhB,CAAyBF,SAAzB,CAAL,EAA0C;AACtC,eAAO,IAAP;AACH;;AAED,0BAAOpB,KAAK,CAACuB,YAAN,CAAmBL,QAAnB,EAA6B;AAChCC,QAAAA,SAAS,EAATA,SADgC;AAEhCK,QAAAA,WAAW,EAAE,KAAKA,WAFc;AAGhCC,QAAAA,WAAW,EAAE,KAAKA,WAHc;AAIhCrB,QAAAA,QAAQ,EAAE,KAAKsB,KAAL,CAAWtB,QAJW;AAKhCC,QAAAA,KAAK,EAAE,KAAKqB,KAAL,CAAWrB,KALc;AAMhCC,QAAAA,OAAO,EAAE,KAAKoB,KAAL,CAAWpB;AANY,OAA7B,CAAP;AAQH;;;;EAjDwBN,KAAK,CAAC2B,S;;AAoDnC,eAAexB,cAAf","sourcesContent":["import React from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport debug from \"./../debug\";\nimport { AuthProps, AuthState } from \"../Authenticator\";\n\nexport type ForgotPasswordChildrenProps = {\n    authProps: AuthProps;\n    requestCode(params: { username: string }): Promise<void>;\n    setPassword(params: { username: string }): Promise<void>;\n    codeSent: boolean;\n    error: Error;\n    loading: boolean;\n};\n\nexport type ForgotPasswordProps = Omit<AuthProps, \"checkingUser\"> & {\n    children: React.ReactElement;\n};\n\nclass ForgotPassword extends React.Component<ForgotPasswordProps> {\n    authStates: AuthState[] = [\"forgotPassword\"];\n\n    state = {\n        codeSent: null,\n        error: null,\n        loading: false\n    };\n\n    requestCode = async data => {\n        this.setState({ loading: true });\n        const { username } = data;\n        try {\n            const res = await Auth.forgotPassword(username.toLowerCase());\n            debug(\"Forgot password %O\", res);\n            this.setState({ loading: false, codeSent: res.CodeDeliveryDetails, error: null });\n        } catch (err) {\n            if (err.code === \"LimitExceededException\") {\n                this.setState({\n                    loading: false,\n                    error: `You can't change password that often. Please try later.`\n                });\n                return;\n            }\n\n            this.setState({ loading: false, error: err.message });\n        }\n    };\n\n    setPassword = async ({ username }) => {\n        this.setState({ codeSent: null, error: null });\n        this.props.changeState(\"setNewPassword\", username);\n    };\n\n    render() {\n        const { children, ...authProps } = this.props;\n        const { authState } = authProps;\n        if (!this.authStates.includes(authState)) {\n            return null;\n        }\n\n        return React.cloneElement(children, {\n            authProps,\n            requestCode: this.requestCode,\n            setPassword: this.setPassword,\n            codeSent: this.state.codeSent,\n            error: this.state.error,\n            loading: this.state.loading\n        } as ForgotPasswordChildrenProps);\n    }\n}\n\nexport default ForgotPassword;\n"],"file":"ForgotPassword.js"}