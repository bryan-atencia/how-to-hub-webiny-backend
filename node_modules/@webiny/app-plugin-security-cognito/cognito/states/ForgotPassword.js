import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import Auth from "@aws-amplify/auth";
import debug from "./../debug";

var ForgotPassword = /*#__PURE__*/function (_React$Component) {
  _inherits(ForgotPassword, _React$Component);

  var _super = _createSuper(ForgotPassword);

  function ForgotPassword() {
    var _this;

    _classCallCheck(this, ForgotPassword);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "authStates", ["forgotPassword"]);

    _defineProperty(_assertThisInitialized(_this), "state", {
      codeSent: null,
      error: null,
      loading: false
    });

    _defineProperty(_assertThisInitialized(_this), "requestCode", /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {
        var username, res;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _this.setState({
                  loading: true
                });

                username = data.username;
                _context.prev = 2;
                _context.next = 5;
                return Auth.forgotPassword(username.toLowerCase());

              case 5:
                res = _context.sent;
                debug("Forgot password %O", res);

                _this.setState({
                  loading: false,
                  codeSent: res.CodeDeliveryDetails,
                  error: null
                });

                _context.next = 16;
                break;

              case 10:
                _context.prev = 10;
                _context.t0 = _context["catch"](2);

                if (!(_context.t0.code === "LimitExceededException")) {
                  _context.next = 15;
                  break;
                }

                _this.setState({
                  loading: false,
                  error: "You can't change password that often. Please try later."
                });

                return _context.abrupt("return");

              case 15:
                _this.setState({
                  loading: false,
                  error: _context.t0.message
                });

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[2, 10]]);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "setPassword", /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {
        var username;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                username = _ref2.username;

                _this.setState({
                  codeSent: null,
                  error: null
                });

                _this.props.changeState("setNewPassword", username);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x2) {
        return _ref3.apply(this, arguments);
      };
    }());

    return _this;
  }

  _createClass(ForgotPassword, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          authProps = _objectWithoutProperties(_this$props, ["children"]);

      var authState = authProps.authState;

      if (!this.authStates.includes(authState)) {
        return null;
      }

      return /*#__PURE__*/React.cloneElement(children, {
        authProps: authProps,
        requestCode: this.requestCode,
        setPassword: this.setPassword,
        codeSent: this.state.codeSent,
        error: this.state.error,
        loading: this.state.loading
      });
    }
  }]);

  return ForgotPassword;
}(React.Component);

export default ForgotPassword;
//# sourceMappingURL=ForgotPassword.js.map