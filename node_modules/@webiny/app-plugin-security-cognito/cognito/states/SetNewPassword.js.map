{"version":3,"sources":["../../../src/cognito/states/SetNewPassword.ts"],"names":["React","Auth","debug","SetNewPassword","error","loading","data","setState","code","password","authData","props","forgotPasswordSubmit","toLowerCase","res","changeState","title","text","type","message","children","authProps","authState","authStates","includes","cloneElement","setPassword","state","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;IAcMC,c;;;;;;;;;;;;;;;;iEACW,CAAC,gBAAD,C;;4DAEL;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;;0EAKM,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,sBAAKC,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AACQG,gBAAAA,IAFE,GAEiBF,IAFjB,CAEFE,IAFE,EAEIC,QAFJ,GAEiBH,IAFjB,CAEIG,QAFJ;AAGFC,gBAAAA,QAHE,GAGW,MAAKC,KAHhB,CAGFD,QAHE;AAAA;AAAA;AAAA,uBAMYT,IAAI,CAACW,oBAAL,CAA0BF,QAAQ,CAACG,WAAT,EAA1B,EAAkDL,IAAlD,EAAwDC,QAAxD,CANZ;;AAAA;AAMAK,gBAAAA,GANA;AAONZ,gBAAAA,KAAK,CAAC,iCAAD,EAAoCY,GAApC,CAAL;;AACA,sBAAKH,KAAL,CAAWI,WAAX,CAAuB,QAAvB,EAAiC,IAAjC,EAAuC;AACnCC,kBAAAA,KAAK,EAAE,kBAD4B;AAEnCC,kBAAAA,IAAI,EAAE,4CAF6B;AAGnCC,kBAAAA,IAAI,EAAE;AAH6B,iBAAvC;;AAKA,sBAAKX,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE,KAAX;AAAkBD,kBAAAA,KAAK,EAAE;AAAzB,iBAAd;;AAbM;AAAA;;AAAA;AAAA;AAAA;;AAeN,sBAAKG,QAAL,CAAc;AAAEF,kBAAAA,OAAO,EAAE,KAAX;AAAkBD,kBAAAA,KAAK,EAAE,YAAIe;AAA7B,iBAAd;;AAfM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAmBL;AAAA,wBAC8B,KAAKR,KADnC;AAAA,UACGS,QADH,eACGA,QADH;AAAA,UACgBC,SADhB;;AAAA,UAEGC,SAFH,GAEiBD,SAFjB,CAEGC,SAFH;;AAIL,UAAI,CAAC,KAAKC,UAAL,CAAgBC,QAAhB,CAAyBF,SAAzB,CAAL,EAA0C;AACtC,eAAO,IAAP;AACH;;AAED,0BAAOtB,KAAK,CAACyB,YAAN,CAAmBL,QAAnB,EAA6B;AAChCC,QAAAA,SAAS,EAATA,SADgC;AAEhCK,QAAAA,WAAW,EAAE,KAAKA,WAFc;AAGhCtB,QAAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWvB,KAHc;AAIhCC,QAAAA,OAAO,EAAE,KAAKsB,KAAL,CAAWtB;AAJY,OAA7B,CAAP;AAMH;;;;EAzCwBL,KAAK,CAAC4B,S;;AA4CnC,eAAezB,cAAf","sourcesContent":["import React from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport debug from \"./../debug\";\nimport { AuthProps } from \"../Authenticator\";\n\nexport type SetNewPasswordChildrenProps = {\n    authProps: AuthProps;\n    setPassword(params: { code: string; password: string }): Promise<void>;\n    error: Error;\n    loading: boolean;\n};\n\nexport type SetNewPasswordProps = Omit<AuthProps, \"checkingUser\"> & {\n    children: React.ReactElement;\n};\n\nclass SetNewPassword extends React.Component<SetNewPasswordProps> {\n    authStates = [\"setNewPassword\"];\n\n    state = {\n        error: null,\n        loading: false\n    };\n\n    setPassword = async data => {\n        this.setState({ loading: true });\n        const { code, password } = data;\n        const { authData } = this.props;\n\n        try {\n            const res = await Auth.forgotPasswordSubmit(authData.toLowerCase(), code, password);\n            debug(\"set-new-password:setPassword %O\", res);\n            this.props.changeState(\"signIn\", null, {\n                title: \"Password updated\",\n                text: \"You can now login using your new password!\",\n                type: \"success\"\n            });\n            this.setState({ loading: false, error: null });\n        } catch (err) {\n            this.setState({ loading: false, error: err.message });\n        }\n    };\n\n    render() {\n        const { children, ...authProps } = this.props;\n        const { authState } = authProps;\n\n        if (!this.authStates.includes(authState)) {\n            return null;\n        }\n\n        return React.cloneElement(children, {\n            authProps,\n            setPassword: this.setPassword,\n            error: this.state.error,\n            loading: this.state.loading\n        } as SetNewPasswordChildrenProps);\n    }\n}\n\nexport default SetNewPassword;\n"],"file":"SetNewPassword.js"}