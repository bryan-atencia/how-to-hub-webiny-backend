{"version":3,"sources":["../../../src/cognito/states/SignIn.ts"],"names":["React","Auth","debug","SignIn","error","loading","user","changeState","props","verifiedContact","then","data","verified","input","setState","username","password","signIn","toLowerCase","challengeName","challengeParam","checkContact","catch","err","code","system","children","authProps","authState","authStates","includes","cloneElement","state","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport debug from \"../debug\";\nimport { AuthChangeState, AuthProps, AuthState } from \"../Authenticator\";\n\nexport type SignInChildrenProps = {\n    authProps: AuthProps;\n    signIn(params: { username: string; password: string }): void;\n    changeState: AuthChangeState;\n    error: Error;\n    loading: boolean;\n};\n\nexport type SignInProps = Omit<AuthProps, \"checkingUser\"> & {\n    children: React.ReactElement;\n};\n\nclass SignIn extends React.Component<SignInProps> {\n    // States when this view should be visible\n    authStates: AuthState[] = [\"signIn\", \"signedOut\", \"signedUp\"];\n\n    state = {\n        error: null,\n        loading: false\n    };\n\n    checkContact = user => {\n        const { changeState } = this.props;\n\n        Auth.verifiedContact(user).then(data => {\n            if (data.verified) {\n                changeState(\"signedIn\", user);\n            } else {\n                changeState(\"verifyContact\", { ...user, ...data });\n            }\n        });\n    };\n\n    signIn = input => {\n        this.setState({ loading: true });\n        const { username, password } = input;\n        const { changeState } = this.props;\n\n        Auth.signIn(username.toLowerCase(), password)\n            .then(user => {\n                this.setState({ loading: false });\n                debug(\"User %O\", user);\n                if (\n                    user.challengeName === \"SMS_MFA\" ||\n                    user.challengeName === \"SOFTWARE_TOKEN_MFA\"\n                ) {\n                    debug(\"confirm user with %s\", user.challengeName);\n                    changeState(\"confirmSignIn\", user);\n                } else if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n                    debug(\"require new password %s\", user.challengeParam);\n                    changeState(\"requireNewPassword\", user);\n                } else if (user.challengeName === \"MFA_SETUP\") {\n                    debug(\"TOTP setup %s\", user.challengeParam);\n                    changeState(\"TOTPSetup\", user);\n                } else {\n                    this.checkContact(user);\n                }\n            })\n            .catch(err => {\n                this.setState({ loading: false });\n                if (err.code === \"UserNotConfirmedException\") {\n                    debug(\"the user is not confirmed\");\n                    changeState(\"confirmSignUp\", { username });\n                } else if (err.code === \"PasswordResetRequiredException\") {\n                    debug(\"password reset required\", err);\n                    changeState(\"forgotPassword\", { username, system: true });\n                } else {\n                    this.setState({ error: err });\n                }\n            });\n    };\n\n    render() {\n        const { children, ...authProps } = this.props;\n        const { authState, changeState } = authProps;\n\n        if (!this.authStates.includes(authState)) {\n            return null;\n        }\n\n        return React.cloneElement(children, {\n            authProps,\n            signIn: this.signIn,\n            changeState,\n            error: this.state.error,\n            loading: this.state.loading\n        } as SignInChildrenProps);\n    }\n}\n\nexport default SignIn;\n"],"file":"SignIn.js"}