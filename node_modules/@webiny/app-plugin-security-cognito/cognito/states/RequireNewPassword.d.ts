import React from "react";
import { AuthChangeState, AuthProps } from "../Authenticator";
export declare type RequireNewPasswordChildrenProps = {
    authProps: AuthProps;
    confirm(params: {
        password: string;
        requiredAttributes: {
            [key: string]: string;
        };
    }): Promise<void>;
    changeState: AuthChangeState;
    requiredAttributes: string[];
};
export declare type RequireNewPasswordProps = Omit<AuthProps, "checkingUser"> & {
    children: React.ReactElement;
};
declare class RequireNewPassword extends React.Component<RequireNewPasswordProps> {
    authStates: string[];
    checkContact: (user: any) => void;
    confirm: ({ password, ...requiredAttributes }: {
        [x: string]: any;
        password: any;
    }) => Promise<void>;
    render(): React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
}
export default RequireNewPassword;
