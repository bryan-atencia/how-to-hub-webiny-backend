{"version":3,"sources":["../../src/cognito/Authenticator.ts"],"names":["React","Auth","withApollo","localStorage","observe","debug","addPlugin","AuthenticatorClass","authState","authData","setState","checkingUser","currentSession","cognitoUser","onChangeState","state","data","message","user","props","onIdToken","getIdToken","getJwtToken","query","URLSearchParams","window","location","search","queryData","forEach","value","key","params","checkUser","children","changeState","Component","Authenticator"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport { withApollo, WithApolloClient } from \"react-apollo\";\nimport localStorage from \"store\";\nimport observe from \"store/plugins/observe\";\nimport debug from \"./debug\";\nimport { AlertType } from \"@webiny/ui/Alert\";\nlocalStorage.addPlugin(observe);\n\nexport type AuthState =\n    | \"signIn\"\n    | \"signedIn\"\n    | \"signedOut\"\n    | \"signedUp\"\n    | \"verifyContact\"\n    | \"confirmSignIn\"\n    | \"requireNewPassword\"\n    | \"setNewPassword\"\n    | \"TOTPSetup\"\n    | \"confirmSignUp\"\n    | \"forgotPassword\";\n\nexport type AuthData = { [key: string]: any };\n\nexport type AuthMessage = { title: string; text: string; type: AlertType };\n\nexport type AuthChangeState = (\n    state: AuthState,\n    data?: AuthData,\n    message?: AuthMessage\n) => Promise<void>;\n\nexport type AuthProps = {\n    authState: AuthState;\n    authData: AuthData;\n    changeState: AuthChangeState;\n    checkingUser?: boolean;\n    message: AuthMessage;\n};\n\nexport type AuthenticatorChildrenFunction = (params: AuthProps) => React.ReactElement;\n\nexport type AuthenticatorProps = WithApolloClient<{\n    onIdToken(idToken: string): void;\n    children: AuthenticatorChildrenFunction;\n}>;\n\ntype AuthenticatorState = {\n    authState: AuthState;\n    authData: AuthData;\n    checkingUser?: boolean;\n    message?: AuthMessage;\n};\n\nclass AuthenticatorClass extends React.Component<AuthenticatorProps, AuthenticatorState> {\n    state: AuthenticatorState = {\n        authState: \"signIn\",\n        authData: null\n    };\n\n    async componentDidMount() {\n        const query = new URLSearchParams(window.location.search);\n        const queryData: any = {};\n        query.forEach((value, key) => (queryData[key] = value));\n        const { state, ...params } = queryData;\n\n        if (state) {\n            await this.onChangeState(state, params);\n            return;\n        }\n        return this.checkUser();\n    }\n\n    checkUser = async () => {\n        this.setState({ checkingUser: true });\n        try {\n            const cognitoUser = await Auth.currentSession();\n            if (!cognitoUser) {\n                await this.onChangeState(\"signIn\");\n                this.setState({ checkingUser: false });\n            }\n        } catch (e) {\n            debug(\"Error %s\", e);\n            this.setState({ checkingUser: false });\n        }\n    };\n\n    onChangeState = async (state, data = null, message: AuthMessage = null) => {\n        this.setState({ message });\n\n        debug(\"Requested state change %s %O\", state, data);\n        if (state === this.state.authState) {\n            return;\n        }\n\n        // Cognito states call this state with user data.\n        if (state === \"signedIn\" && data) {\n            const user = await Auth.currentSession();\n            return this.props.onIdToken(user.getIdToken().getJwtToken());\n        }\n\n        if (state === \"signedOut\") {\n            state = \"signIn\";\n        }\n\n        this.setState({ authState: state, authData: data });\n    };\n\n    render() {\n        const { authState, authData, checkingUser, message } = this.state;\n\n        return this.props.children({\n            authState,\n            authData,\n            changeState: this.onChangeState,\n            checkingUser,\n            message\n        });\n    }\n}\n\nexport const Authenticator = withApollo<AuthenticatorProps>(AuthenticatorClass);\n"],"file":"Authenticator.js"}