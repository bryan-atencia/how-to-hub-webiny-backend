import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from "react";
import Auth from "@aws-amplify/auth";
import { withApollo } from "react-apollo";
import localStorage from "store";
import observe from "store/plugins/observe";
import debug from "./debug";
localStorage.addPlugin(observe);

var AuthenticatorClass = /*#__PURE__*/function (_React$Component) {
  _inherits(AuthenticatorClass, _React$Component);

  var _super = _createSuper(AuthenticatorClass);

  function AuthenticatorClass() {
    var _this;

    _classCallCheck(this, AuthenticatorClass);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      authState: "signIn",
      authData: null
    });

    _defineProperty(_assertThisInitialized(_this), "checkUser", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var cognitoUser;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _this.setState({
                checkingUser: true
              });

              _context.prev = 1;
              _context.next = 4;
              return Auth.currentSession();

            case 4:
              cognitoUser = _context.sent;

              if (cognitoUser) {
                _context.next = 9;
                break;
              }

              _context.next = 8;
              return _this.onChangeState("signIn");

            case 8:
              _this.setState({
                checkingUser: false
              });

            case 9:
              _context.next = 15;
              break;

            case 11:
              _context.prev = 11;
              _context.t0 = _context["catch"](1);
              debug("Error %s", _context.t0);

              _this.setState({
                checkingUser: false
              });

            case 15:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[1, 11]]);
    })));

    _defineProperty(_assertThisInitialized(_this), "onChangeState", /*#__PURE__*/function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(state) {
        var data,
            message,
            user,
            _args2 = arguments;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                data = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;
                message = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : null;

                _this.setState({
                  message: message
                });

                debug("Requested state change %s %O", state, data);

                if (!(state === _this.state.authState)) {
                  _context2.next = 6;
                  break;
                }

                return _context2.abrupt("return");

              case 6:
                if (!(state === "signedIn" && data)) {
                  _context2.next = 11;
                  break;
                }

                _context2.next = 9;
                return Auth.currentSession();

              case 9:
                user = _context2.sent;
                return _context2.abrupt("return", _this.props.onIdToken(user.getIdToken().getJwtToken()));

              case 11:
                if (state === "signedOut") {
                  state = "signIn";
                }

                _this.setState({
                  authState: state,
                  authData: data
                });

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }());

    return _this;
  }

  _createClass(AuthenticatorClass, [{
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
        var query, queryData, state, params;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                query = new URLSearchParams(window.location.search);
                queryData = {};
                query.forEach(function (value, key) {
                  return queryData[key] = value;
                });
                state = queryData.state, params = _objectWithoutProperties(queryData, ["state"]);

                if (!state) {
                  _context3.next = 8;
                  break;
                }

                _context3.next = 7;
                return this.onChangeState(state, params);

              case 7:
                return _context3.abrupt("return");

              case 8:
                return _context3.abrupt("return", this.checkUser());

              case 9:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          authState = _this$state.authState,
          authData = _this$state.authData,
          checkingUser = _this$state.checkingUser,
          message = _this$state.message;
      return this.props.children({
        authState: authState,
        authData: authData,
        changeState: this.onChangeState,
        checkingUser: checkingUser,
        message: message
      });
    }
  }]);

  return AuthenticatorClass;
}(React.Component);

export var Authenticator = withApollo(AuthenticatorClass);
//# sourceMappingURL=Authenticator.js.map