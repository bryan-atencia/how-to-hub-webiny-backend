{"version":3,"sources":["../../../src/__tests__/components/SimpleFileField.js"],"names":["SimpleFileField","files","errors","counts","tries","drops","props","setState","state","getLabelProps","getDropZoneProps","browseFiles","onSuccess","onError","browseFilesHandler","renderFiles","renderErrors","React","Component","map","file","id","name","error","type"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from \"react\";\nimport Files from \"react-butterfiles\";\nimport type { FilesRules, SelectedFile, FileError } from \"react-butterfiles\";\n\ntype Props = {\n    files: FilesRules,\n    renderFiles: (files: Array<SelectedFile>) => React.Node,\n    renderErrors: (errors: Array<FileError>) => React.Node,\n    browseFilesHandler: Function\n};\ntype State = {\n    files: Array<SelectedFile>,\n    errors: Array<FileError>,\n    counts: {\n        tries: number,\n        drops: number\n    }\n};\n\nclass SimpleFileField extends React.Component<Props, State> {\n    static defaultProps = {\n        browseFilesHandler: (browseFiles: Function) => browseFiles(),\n        renderFiles: (files: Array<SelectedFile>) => {\n            return (\n                <div>\n                    Selected files:\n                    <ul>\n                        {files.map(file => {\n                            return <li key={file.id}>{file.name}</li>;\n                        })}\n                    </ul>\n                </div>\n            );\n        },\n        renderErrors: (errors: Array<FileError>) => {\n            return (\n                <div>\n                    Errors:\n                    <ul>\n                        {errors.map(error => {\n                            return <li key={error.id}>{error.type}</li>;\n                        })}\n                    </ul>\n                </div>\n            );\n        }\n    };\n\n    state = {\n        files: [],\n        errors: [],\n        counts: {\n            tries: 0,\n            drops: 0\n        }\n    };\n\n    render() {\n        return (\n            <Files\n                {...this.props.files}\n                onSuccess={files => {\n                    this.setState(state => {\n                        state.counts.tries++;\n                        state.counts.drops++;\n                        state.files = files;\n                        return state;\n                    });\n                }}\n                onError={errors => {\n                    this.setState(state => {\n                        state.counts.tries++;\n                        state.counts.drops++;\n                        state.errors = errors;\n                        return state;\n                    });\n                }}\n            >\n                {({ getLabelProps, getDropZoneProps, browseFiles }) => (\n                    <div>\n                        <label {...getLabelProps()}>Select files...</label>\n                        <div\n                            {...getDropZoneProps({\n                                \"data-testid\": \"dropZone\",\n                                onSuccess: files => {\n                                    this.setState(state => {\n                                        state.counts.tries++;\n                                        state.files = files;\n                                        return state;\n                                    });\n                                },\n                                onError: errors => {\n                                    this.setState(state => {\n                                        state.counts.tries++;\n                                        state.errors = errors;\n                                        return state;\n                                    });\n                                }\n                            })}\n                        />\n\n                        <button onClick={() => this.props.browseFilesHandler(browseFiles)}>\n                            Browse...\n                        </button>\n                        <div>Tries: {this.state.counts.tries}</div>\n                        {this.props.renderFiles(this.state.files)}\n                        {this.props.renderErrors(this.state.errors)}\n                    </div>\n                )}\n            </Files>\n        );\n    }\n}\n\nexport default SimpleFileField;\n"],"file":"SimpleFileField.js"}