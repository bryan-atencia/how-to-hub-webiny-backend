"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _reactButterfiles = _interopRequireDefault(require("react-butterfiles"));

var SimpleFileField =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(SimpleFileField, _React$Component);

  function SimpleFileField() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, SimpleFileField);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SimpleFileField)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      files: [],
      errors: [],
      counts: {
        tries: 0,
        drops: 0
      }
    });
    return _this;
  }

  (0, _createClass2.default)(SimpleFileField, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return React.createElement(_reactButterfiles.default, (0, _extends2.default)({}, this.props.files, {
        onSuccess: function onSuccess(files) {
          _this2.setState(function (state) {
            state.counts.tries++;
            state.counts.drops++;
            state.files = files;
            return state;
          });
        },
        onError: function onError(errors) {
          _this2.setState(function (state) {
            state.counts.tries++;
            state.counts.drops++;
            state.errors = errors;
            return state;
          });
        }
      }), function (_ref) {
        var getLabelProps = _ref.getLabelProps,
            getDropZoneProps = _ref.getDropZoneProps,
            browseFiles = _ref.browseFiles;
        return React.createElement("div", null, React.createElement("label", getLabelProps(), "Select files..."), React.createElement("div", getDropZoneProps({
          "data-testid": "dropZone",
          onSuccess: function onSuccess(files) {
            _this2.setState(function (state) {
              state.counts.tries++;
              state.files = files;
              return state;
            });
          },
          onError: function onError(errors) {
            _this2.setState(function (state) {
              state.counts.tries++;
              state.errors = errors;
              return state;
            });
          }
        })), React.createElement("button", {
          onClick: function onClick() {
            return _this2.props.browseFilesHandler(browseFiles);
          }
        }, "Browse..."), React.createElement("div", null, "Tries: ", _this2.state.counts.tries), _this2.props.renderFiles(_this2.state.files), _this2.props.renderErrors(_this2.state.errors));
      });
    }
  }]);
  return SimpleFileField;
}(React.Component);

(0, _defineProperty2.default)(SimpleFileField, "defaultProps", {
  browseFilesHandler: function browseFilesHandler(browseFiles) {
    return browseFiles();
  },
  renderFiles: function renderFiles(files) {
    return React.createElement("div", null, "Selected files:", React.createElement("ul", null, files.map(function (file) {
      return React.createElement("li", {
        key: file.id
      }, file.name);
    })));
  },
  renderErrors: function renderErrors(errors) {
    return React.createElement("div", null, "Errors:", React.createElement("ul", null, errors.map(function (error) {
      return React.createElement("li", {
        key: error.id
      }, error.type);
    })));
  }
});
var _default = SimpleFileField;
exports.default = _default;
//# sourceMappingURL=SimpleFileField.js.map