import * as React from 'react';
import { FoundationComponent, FoundationProps } from '@rmwc/base';
export interface ToggleableFoundationProps {
    /** A DOM ID for the toggle. */
    id?: string;
    /** Disables the control. */
    disabled?: boolean;
    /** Toggle the control on and off. */
    checked?: boolean;
    /** The value of the control. */
    value?: string | number | string[];
    /** A label for the control. */
    label?: React.ReactNode;
    /** By default, all props except className and style spread to the input. These are additional props for the root of the checkbox. */
    rootProps?: React.HTMLProps<any>;
    /** A reference to the native input. */
    inputRef?: React.MutableRefObject<HTMLInputElement | null> | ((ref: HTMLInputElement | null) => void);
}
export declare class ToggleableFoundationComponent<Foundation extends any, P extends ToggleableFoundationProps, S extends any = {}> extends FoundationComponent<Foundation, P & FoundationProps, S> {
    generatedId: string;
    renderToggle(toggle: React.ReactNode): {} | null | undefined;
}
