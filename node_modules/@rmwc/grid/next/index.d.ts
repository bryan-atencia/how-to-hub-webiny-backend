import * as RMWC from '@rmwc/types';
import * as React from 'react';
/** A Grid component */
export interface GridProps {
    /** Specifies the grid should have fixed column width. */
    fixedColumnWidth?: boolean;
    /** Specifies the alignment of the whole grid. */
    align?: 'left' | 'right';
    /** Children for the Grid */
    children?: React.ReactNode;
}
/** A Grid component */
export declare const Grid: React.ComponentType<GridProps & RMWC.ComponentProps>;
/** A Grid cell */
export interface GridCellProps {
    /** Default number of columns to span. */
    span?: number;
    /** Number of columns to span on a phone. */
    phone?: number;
    /** Number of columns to span on a tablet. */
    tablet?: number;
    /** Number of columns to span on a desktop. */
    desktop?: number;
    /** Specifies the order of the cell. */
    order?: number;
    /** Specifies the alignment of cell */
    align?: 'top' | 'middle' | 'bottom';
}
/** A Grid cell */
export declare const GridCell: React.ComponentType<RMWC.MergeInterfacesT<GridCellProps, RMWC.ComponentProps>>;
/** By default, an inner grid component is included inside of <Grid>. Use GridInner when doing nested Grids. */
export interface GridInnerProps {
}
/** By default, an inner grid component is included inside of <Grid>. Use GridInner when doing nested Grids. */
export declare const GridInner: React.ComponentType<RMWC.MergeInterfacesT<GridInnerProps, RMWC.ComponentProps>>;
