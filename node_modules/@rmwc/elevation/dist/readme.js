"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var _doc_utils_1 = require("@doc-utils");
var generated_props_json_1 = __importDefault(require("./generated-props.json"));
var generated_examples_json_1 = __importDefault(require("./generated-examples.json"));
var _1 = require(".");
function default_1() {
    return (react_1.default.createElement(_doc_utils_1.Docs, { title: "Elevation", lead: "Elevation is the relative distance between two surfaces along the z-axis.", module: "@rmwc/elevation", styles: ['@material/elevation/dist/mdc.elevation.css'], docsLink: "https://material.io/develop/web/components/elevation/", examples: generated_examples_json_1.default },
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Elevation" },
            react_1.default.createElement(react_1.default.Fragment, null, Array(25)
                .fill(undefined)
                .map(function (val, i) { return (react_1.default.createElement(_1.Elevation, { z: i, key: i },
                i,
                "dp")); }))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Transition" }, function Example() {
            var _a = __read(react_1.default.useState(0), 2), elevation = _a[0], setElevation = _a[1];
            return (react_1.default.createElement(_1.Elevation, { z: elevation, transition: true, onMouseOver: function () { return setElevation(24); }, onMouseOut: function () { return setElevation(0); } },
                "Hover Me ",
                elevation,
                "dp"));
        }),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Wrapping Children"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "You can avoid adding extra DOM nodes by using the `wrap` prop on elevation. This will apply the classes directly to the child component. Additionally, Elevation is simply a `className`, so you can achieve the same effect by adding `className=\"mdc-elevation--z15\"`."),
        react_1.default.createElement(_doc_utils_1.DocsExample, null,
            react_1.default.createElement(_1.Elevation, { z: 21, wrap: true },
                react_1.default.createElement("span", null, "Wrapped!"))),
        react_1.default.createElement(_doc_utils_1.DocProps, { src: generated_props_json_1.default, components: [_1.Elevation] })));
}
exports.default = default_1;
exports.galleryExample = [2, 24].map(function (num) { return (react_1.default.createElement(_1.Elevation, { key: num, z: num, style: {
        backgroundColor: 'var(--mdc-theme-primary)',
        width: '3rem',
        height: '3rem',
        lineHeight: '3rem',
        textAlign: 'center',
        margin: '0.5rem',
        borderRadius: '6px',
        display: 'inline-block'
    } })); });
