"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var snackbar_1 = require("./snackbar");
var base_1 = require("@rmwc/base");
/** A snackbar queue for rendering messages */
var SnackbarQueue = /** @class */ (function (_super) {
    __extends(SnackbarQueue, _super);
    function SnackbarQueue(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            message: _this.props.messages.array[0]
        };
        _this.getMessage = _this.getMessage.bind(_this);
        _this.props.messages.on('change', _this.getMessage);
        return _this;
    }
    SnackbarQueue.prototype.componentWillUnmount = function () {
        this.props.messages.off('change', this.getMessage);
    };
    SnackbarQueue.prototype.getMessage = function () {
        if (this.props.messages.array[0] !== this.state.message) {
            this.setState({
                message: this.props.messages.array[0]
            });
        }
    };
    SnackbarQueue.prototype.removeMessage = function (message) {
        var _this = this;
        if (!message)
            return;
        setTimeout(function () {
            var index = _this.props.messages.array.indexOf(message);
            !!~index && _this.props.messages.array.splice(index, 1);
            _this.setState({
                message: undefined
            }, _this.getMessage);
        }, 75);
    };
    SnackbarQueue.prototype.render = function () {
        var _this = this;
        var _a = this.props, messages = _a.messages, defaultSnackbarProps = __rest(_a, ["messages"]);
        var message = this.state.message;
        var _b = (message || {}), _c = _b.body, body = _c === void 0 ? '' : _c, image = _b.image, _d = _b.title, title = _d === void 0 ? '' : _d, onClose = _b.onClose, actions = _b.actions, messageSnackbarProps = __rest(_b, ["body", "image", "title", "onClose", "actions"]);
        var actionProp = actions
            ? actions.map(function (_a) {
                var title = _a.title, label = _a.label, rest = __rest(_a, ["title", "label"]);
                return (React.createElement(snackbar_1.SnackbarAction, __assign({}, rest, { label: label || title })));
            })
            : null;
        return (React.createElement(snackbar_1.Snackbar, __assign({}, defaultSnackbarProps, messageSnackbarProps, { open: !!message, message: React.createElement(React.Fragment, null,
                title,
                !!title && !!body && React.createElement("br", null),
                body,
                !!image && (React.createElement("div", { className: "rmwc-snackbar__image", style: {
                        margin: '1rem auto',
                        textAlign: 'center'
                    } },
                    React.createElement("img", { src: image, alt: "" + image, style: { maxWidth: '100%', maxHeight: '18rem' } })))), onClose: function (evt) {
                onClose && onClose(evt);
                _this.removeMessage(message);
            }, action: actionProp })));
    };
    SnackbarQueue.displayName = 'SnackbarQueue';
    return SnackbarQueue;
}(React.Component));
exports.SnackbarQueue = SnackbarQueue;
/** Creates a snackbar queue */
exports.createSnackbarQueue = function () {
    var messages = new base_1.ArrayEmitter();
    return {
        messages: messages,
        notify: function (message) {
            messages.push(message);
        }
    };
};
