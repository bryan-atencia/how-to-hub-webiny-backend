import * as React from 'react';
import { SnackbarProps, SnackbarActionProps } from './snackbar';
import { MergeInterfacesT, IconPropT } from '@rmwc/types';
import { ArrayEmitter } from '@rmwc/base';
interface SnackbarQueueMessageBase {
    title?: React.ReactNode;
    body?: React.ReactNode;
    icon?: IconPropT;
    actions?: Array<NotificationAction | MergeInterfacesT<SnackbarActionProps, React.HTMLProps<any>>>;
}
export interface SnackbarQueueMessage extends SnackbarProps, MergeInterfacesT<SnackbarQueueMessageBase, NotificationOptions> {
}
/** A snackbar queue for rendering messages */
export interface SnackbarQueueProps extends SnackbarProps {
    messages: ArrayEmitter<SnackbarQueueMessage>;
}
interface SnackbarQueueState {
    message?: SnackbarQueueMessage;
}
/** A snackbar queue for rendering messages */
export declare class SnackbarQueue extends React.Component<SnackbarQueueProps, SnackbarQueueState> {
    static displayName: string;
    state: SnackbarQueueState;
    constructor(props: SnackbarQueueProps);
    componentWillUnmount(): void;
    getMessage(): void;
    removeMessage(message?: SnackbarQueueMessage): void;
    render(): JSX.Element;
}
/** Creates a snackbar queue */
export declare const createSnackbarQueue: () => {
    messages: ArrayEmitter<SnackbarQueueMessage>;
    notify: (message: SnackbarQueueMessage) => void;
};
export {};
