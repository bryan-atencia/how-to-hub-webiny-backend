{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport * as React from \"react\";\nimport warning from \"warning\";\nimport { useQuery } from \"react-apollo\";\nimport { loadPages } from \"./graphql\";\nimport { getPlugins } from \"@webiny/plugins\";\n\nvar PagesList = function PagesList(props) {\n  var _props$data = props.data,\n      component = _props$data.component,\n      vars = _objectWithoutProperties(_props$data, [\"component\"]),\n      theme = props.theme;\n\n  var plugins = getPlugins(\"pb-page-element-pages-list-component\");\n  var pageList = plugins.find(function (cmp) {\n    return cmp.componentName === component;\n  });\n\n  if (!pageList) {\n    warning(false, \"Pages list component \\\"\".concat(component, \"\\\" is missing!\"));\n    return null;\n  }\n\n  var ListComponent = pageList.component;\n\n  if (!ListComponent) {\n    warning(false, \"React component is not defined for \\\"\".concat(component, \"\\\"!\"));\n    return null;\n  }\n\n  var sort = null;\n\n  if (vars.sortBy) {\n    sort = _defineProperty({}, vars.sortBy, parseInt(vars.sortDirection) || -1);\n  }\n\n  var variables = {\n    category: vars.category,\n    sort: sort,\n    tags: vars.tags,\n    tagsRule: vars.tagsRule,\n    limit: parseInt(vars.resultsPerPage),\n    after: undefined,\n    before: undefined\n  };\n\n  var _useQuery = useQuery(loadPages, {\n    variables: variables\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      refetch = _useQuery.refetch;\n\n  if (loading) {\n    return null;\n  }\n\n  var pages = data.pageBuilder.listPublishedPages;\n\n  if (!pages || !pages.data.length) {\n    return null;\n  }\n\n  var prevPage = null;\n\n  if (pages.meta.hasPreviousPage) {\n    prevPage = function prevPage() {\n      return refetch(_objectSpread(_objectSpread({}, variables), {}, {\n        before: pages.meta.cursors.previous\n      }));\n    };\n  }\n\n  var nextPage = null;\n\n  if (pages.meta.hasNextPage) {\n    nextPage = function nextPage() {\n      return refetch(_objectSpread(_objectSpread({}, variables), {}, {\n        after: pages.meta.cursors.next\n      }));\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ssr-cache\", {\n    \"data-class\": \"pb-pages-list\"\n  }), /*#__PURE__*/React.createElement(ListComponent, Object.assign({}, pages, {\n    nextPage: nextPage,\n    prevPage: prevPage,\n    theme: theme\n  })));\n};\n\nexport default /*#__PURE__*/React.memo(PagesList);","map":null,"metadata":{},"sourceType":"module"}