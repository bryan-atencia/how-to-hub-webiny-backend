{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport uniqid from \"uniqid\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Menu } from \"@webiny/ui/Menu\";\nimport { List, ListItem, ListItemGraphic } from \"@webiny/ui/List\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport MenuItemsList from \"./MenuItems/MenuItemsList\";\nimport MenuItemForm from \"./MenuItems/MenuItemForm\";\nimport findObject from \"./MenuItems/findObject\";\nimport { Typography } from \"@webiny/ui/Typography\";\nvar leftPanel = /*#__PURE__*/css({\n  padding: 25,\n  backgroundColor: \"var(--mdc-theme-background)\",\n  overflow: \"scroll\"\n}, \"label:leftPanel;\");\nvar menuItems = /*#__PURE__*/css({\n  width: 170\n}, \"label:menuItems;\");\nvar MenuHolder = /*#__PURE__*/styled(\"div\", {\n  target: \"e2eq7qu0\",\n  label: \"MenuHolder\"\n})({\n  textAlign: \"center\",\n  color: \"var(--mdc-theme-text-primary-on-background)\"\n});\nvar AddMenu = /*#__PURE__*/styled(\"div\", {\n  target: \"e2eq7qu1\",\n  label: \"AddMenu\"\n})({\n  width: 180,\n  margin: \"25px auto 0 auto\"\n});\n\nvar MenuItems = /*#__PURE__*/function (_React$Component) {\n  _inherits(MenuItems, _React$Component);\n\n  var _super = _createSuper(MenuItems);\n\n  function MenuItems() {\n    var _this;\n\n    _classCallCheck(this, MenuItems);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"form\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currentMenuItem: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addItem\", function (plugin) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          value = _this$props.value;\n      var newItem = {\n        type: plugin.menuItem.type,\n        id: uniqid(),\n        __new: true\n      };\n      onChange([].concat(_toConsumableArray(value), [newItem]));\n\n      _this.editItem(newItem);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"editItem\", function (data) {\n      _this.setState({\n        currentMenuItem: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deleteItem\", function (item) {\n      var _this$props2 = _this.props,\n          value = _this$props2.value,\n          onChange = _this$props2.onChange;\n      var target = findObject(value, item.id);\n      target && target.source.splice(target.index, 1);\n      onChange(value);\n\n      _this.editItem(null);\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          items = _this$props3.value,\n          onChange = _this$props3.onChange;\n      var currentMenuItem = this.state.currentMenuItem;\n      var plugins = getPlugins(\"pb-menu-item\");\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n        span: 7,\n        className: leftPanel\n      }, /*#__PURE__*/React.createElement(MenuItemsList, {\n        items: items,\n        onChange: onChange,\n        editItem: this.editItem,\n        deleteItem: this.deleteItem\n      })), /*#__PURE__*/React.createElement(Cell, {\n        span: 5\n      }, !currentMenuItem && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuHolder, null, /*#__PURE__*/React.createElement(Typography, {\n        use: \"body2\"\n      }, \"To build your menu you need to create menu items! Begin by clicking the \\\"Add menu item\\\" button\"), /*#__PURE__*/React.createElement(AddMenu, null, /*#__PURE__*/React.createElement(Menu, {\n        handle: /*#__PURE__*/React.createElement(ButtonPrimary, null, \"+ Add menu item\"),\n        anchor: \"topEnd\"\n      }, /*#__PURE__*/React.createElement(List, {\n        className: menuItems\n      }, plugins.map(function (pl) {\n        return /*#__PURE__*/React.createElement(ListItem, {\n          key: pl.name,\n          onClick: function onClick() {\n            return _this2.addItem(pl);\n          },\n          style: {\n            whiteSpace: \"nowrap\"\n          }\n        }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {\n          icon: pl.menuItem.icon\n        })), pl.menuItem.title);\n      })))))), currentMenuItem && /*#__PURE__*/React.createElement(MenuItemForm, {\n        currentMenuItem: currentMenuItem,\n        editItem: this.editItem,\n        deleteItem: this.deleteItem,\n        items: items,\n        onChange: onChange\n      }))));\n    }\n  }]);\n\n  return MenuItems;\n}(React.Component);\n\nexport default MenuItems;","map":null,"metadata":{},"sourceType":"module"}