{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { SplitView, LeftPanel, RightPanel } from \"@webiny/app-admin/components/SplitView\";\nimport { FloatingActionButton } from \"@webiny/app-admin/components/FloatingActionButton\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CREATE_PAGE, LIST_PAGES } from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { useDataList } from \"@webiny/app/hooks/useDataList\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport PagesDataList from \"./PagesDataList\";\nimport PageDetails from \"./PageDetails\";\nimport CategoriesDialog from \"../Categories/CategoriesDialog\";\n\nvar Pages = function Pages(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      creatingPage = _useState2[0],\n      setCreatingPage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showCategoriesDialog = _useState4[0],\n      setCategoriesDialog = _useState4[1];\n\n  var client = useApolloClient();\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var dataList = useDataList({\n    query: LIST_PAGES,\n    variables: {\n      sort: {\n        savedOn: -1\n      }\n    }\n  });\n  var openDialog = useCallback(function () {\n    return setCategoriesDialog(true);\n  }, []);\n  var closeDialog = useCallback(function () {\n    return setCategoriesDialog(false);\n  }, []);\n  var createPageMutation = useHandler(props, function () {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(category) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                setCreatingPage(true);\n                _context.next = 4;\n                return client.mutate({\n                  mutation: CREATE_PAGE,\n                  variables: {\n                    category: category\n                  },\n                  refetchQueries: [\"PbListPages\"],\n                  awaitRefetchQueries: true\n                });\n\n              case 4:\n                res = _context.sent;\n                setCreatingPage(false);\n                closeDialog();\n                data = res.data.pageBuilder.page.data;\n                history.push(\"/page-builder/editor/\".concat(data.id));\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                showSnackbar(_context.t0.message);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  });\n  var onSelect = useCallback(function (category) {\n    createPageMutation(category.id);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CategoriesDialog, {\n    open: showCategoriesDialog,\n    onClose: closeDialog,\n    onSelect: onSelect\n  }, creatingPage && /*#__PURE__*/React.createElement(CircularProgress, {\n    label: \"Creating page...\"\n  })), /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {\n    span: 4\n  }, /*#__PURE__*/React.createElement(PagesDataList, {\n    dataList: dataList\n  })), /*#__PURE__*/React.createElement(RightPanel, {\n    span: 8\n  }, /*#__PURE__*/React.createElement(PageDetails, {\n    refreshPages: dataList.refresh\n  }))), /*#__PURE__*/React.createElement(FloatingActionButton, {\n    \"data-testid\": \"new-record-button\",\n    onClick: openDialog\n  }));\n};\n\nexport default Pages;","map":null,"metadata":{},"sourceType":"module"}