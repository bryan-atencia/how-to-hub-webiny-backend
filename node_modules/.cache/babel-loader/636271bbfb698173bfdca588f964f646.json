{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Value {number}\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Renders a simple list of number inputs.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Number Inputs\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack!@webiny/app-headless-cms/admin/icons/close.svg\";\nimport DynamicListMultipleValues from \"./../DynamicListMultipleValues\";\nimport get from \"lodash/get\";\nvar t = i18n.ns(\"app-headless-cms/admin/fields/text\");\nvar plugin = {\n  type: \"cms-editor-field-renderer\",\n  name: \"cms-editor-field-renderer-number-inputs\",\n  renderer: {\n    rendererName: \"number-inputs\",\n    name: t(_templateObject()),\n    description: t(_templateObject2()),\n    canUse: function canUse(_ref) {\n      var field = _ref.field;\n      return field.type === \"number\" && field.multipleValues && !get(field, \"predefinedValues.enabled\");\n    },\n    render: function render(props) {\n      return /*#__PURE__*/React.createElement(DynamicListMultipleValues, props, function (_ref2) {\n        var bind = _ref2.bind,\n            index = _ref2.index;\n        return /*#__PURE__*/React.createElement(Input, Object.assign({}, bind.index, {\n          onChange: function onChange(value) {\n            value = parseFloat(value);\n            return bind.index.onChange(value);\n          },\n          autoFocus: true,\n          onEnter: function onEnter() {\n            return bind.field.appendValue(\"\");\n          },\n          label: t(_templateObject3())({\n            number: index + 1\n          }),\n          type: \"number\",\n          trailingIcon: index > 0 && {\n            icon: /*#__PURE__*/React.createElement(DeleteIcon, null),\n            onClick: bind.index.removeValue\n          }\n        }));\n      });\n    }\n  }\n};\nexport default plugin;","map":null,"metadata":{},"sourceType":"module"}