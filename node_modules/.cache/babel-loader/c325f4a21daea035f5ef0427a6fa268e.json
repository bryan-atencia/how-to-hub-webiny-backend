{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport { Switch as RmwcSwitch } from \"@rmwc/switch\";\nimport pick from \"lodash/pick\";\nimport { FormElementMessage } from \"../FormElementMessage\";\nimport { getClasses } from \"@webiny/ui/Helpers\";\n/**\n * Switch component can be used to store simple boolean values.\n */\n\nvar Switch = /*#__PURE__*/function (_React$Component) {\n  _inherits(Switch, _React$Component);\n\n  var _super = _createSuper(Switch);\n\n  function Switch() {\n    var _this;\n\n    _classCallCheck(this, Switch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      _this.props.onChange && _this.props.onChange(e.target.checked);\n    });\n\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          description = _this$props.description,\n          validation = _this$props.validation;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RmwcSwitch, Object.assign({}, getClasses(_objectSpread({}, pick(this.props, Switch.rmwcProps)), \"webiny-ui-switch\"), {\n        checked: Boolean(value),\n        onChange: this.onChange\n      })), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {\n        error: true\n      }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));\n    }\n  }]);\n\n  return Switch;\n}(React.Component);\n\n_defineProperty(Switch, \"defaultProps\", {\n  validation: {\n    isValid: null\n  }\n});\n\n_defineProperty(Switch, \"rmwcProps\", [\"id\", \"disabled\", \"checked\", \"label\", \"rootProps\", \"className\"]);\n\nexport { Switch };","map":null,"metadata":{},"sourceType":"module"}