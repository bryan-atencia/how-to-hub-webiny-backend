{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query listCategories($search: PbSearchInput) {\\n        pageBuilder {\\n            categories: listCategories(search: $search) {\\n                data {\\n                    id\\n                    name\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query getCategory($id: ID!) {\\n        pageBuilder {\\n            getCategory(id: $id) {\\n                data {\\n                    id\\n                    name\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport { AutoComplete } from \"@webiny/ui/AutoComplete\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { useAutocomplete } from \"@webiny/app/hooks/useAutocomplete\";\nvar GET_CATEGORY = gql(_templateObject());\nvar LIST_CATEGORIES = gql(_templateObject2());\nexport function CategoriesAutocomplete(props) {\n  var autoComplete = useAutocomplete({\n    search: function search(query) {\n      return {\n        query: query,\n        fields: [\"name\"]\n      };\n    },\n    query: LIST_CATEGORIES\n  });\n  return /*#__PURE__*/React.createElement(Query, {\n    skip: !props.value,\n    variables: {\n      id: props.value\n    },\n    query: GET_CATEGORY\n  }, function (_ref) {\n    var data = _ref.data;\n    return /*#__PURE__*/React.createElement(AutoComplete, Object.assign({}, props, autoComplete, {\n      value: _get(data, \"pageBuilder.getCategory.data\")\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}