{"ast":null,"code":"import React from \"react\";\nimport warning from \"warning\";\nimport { getPlugin, getPlugins } from \"@webiny/plugins\";\nimport fileUploadPlugin from \"./fileUploaderPlugin\";\nimport imagePlugin from \"./imagePlugin\";\nexport { fileUploadPlugin, imagePlugin };\n\nvar PluginComponent = function PluginComponent(props) {\n  return props.children;\n};\n\nvar PluginsComponent = function PluginsComponent(props) {\n  return props.children;\n};\n\nexport var renderPlugin = function renderPlugin(name) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$wrapper = options.wrapper,\n      wrapper = _options$wrapper === void 0 ? true : _options$wrapper,\n      _options$fn = options.fn,\n      fn = _options$fn === void 0 ? \"render\" : _options$fn;\n  var plugin = getPlugin(name);\n  warning(plugin, \"No such plugin \\\"\".concat(name, \"\\\"\"));\n\n  if (!plugin) {\n    return null;\n  }\n\n  var content = plugin[fn](params);\n\n  if (content) {\n    return wrapper ? /*#__PURE__*/React.createElement(PluginComponent, {\n      key: plugin.name,\n      name: name,\n      params: params,\n      fn: fn\n    }, content) : /*#__PURE__*/React.cloneElement(content, {\n      key: plugin.name\n    });\n  }\n\n  return null;\n};\nexport var renderPlugins = function renderPlugins(type) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$wrapper2 = options.wrapper,\n      wrapper = _options$wrapper2 === void 0 ? true : _options$wrapper2,\n      _options$fn2 = options.fn,\n      fn = _options$fn2 === void 0 ? \"render\" : _options$fn2,\n      _options$filter = options.filter,\n      filter = _options$filter === void 0 ? function (v) {\n    return v;\n  } : _options$filter;\n  var content = getPlugins(type).filter(filter).map(function (plugin) {\n    return renderPlugin(plugin.name, params, {\n      wrapper: wrapper,\n      fn: fn\n    });\n  });\n  return wrapper ? /*#__PURE__*/React.createElement(PluginsComponent, {\n    type: type,\n    params: params,\n    fn: fn\n  }, content) : content;\n};\nexport default [imagePlugin, fileUploadPlugin];","map":null,"metadata":{},"sourceType":"module"}