{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar OG_IMAGE_DIMENSIONS_PROPERTIES = [\"image:width\", \"image:height\"];\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var form, value, image;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = _ref.form, value = _ref.value;\n\n            if (!(!value || value.src.startsWith(\"data:\"))) {\n              _context.next = 4;\n              break;\n            }\n\n            form.setState(function (state) {\n              var next = _objectSpread({}, state); // Remove previously set og:image:width / og:image:height.\n\n\n              next.data.settings.social.meta = next.data.settings.social.meta.filter(function (item) {\n                return item.property && !OG_IMAGE_DIMENSIONS_PROPERTIES.includes(item.property);\n              });\n              return next;\n            });\n            return _context.abrupt(\"return\");\n\n          case 4:\n            _context.next = 6;\n            return new Promise(function (resolve, reject) {\n              var image = new window.Image();\n\n              image.onload = function () {\n                resolve(image);\n              };\n\n              image.onerror = reject;\n              image.src = value.src;\n            });\n\n          case 6:\n            image = _context.sent;\n            form.setState(function (state) {\n              var next = _objectSpread({}, state); // Remove previously set og:image:width / og:image:height.\n\n\n              if (Array.isArray(next.data.settings.social.meta)) {\n                next.data.settings.social.meta = next.data.settings.social.meta.filter(function (item) {\n                  return !OG_IMAGE_DIMENSIONS_PROPERTIES.includes(item.property);\n                });\n              } else {\n                next.data.settings.social.meta = [];\n              }\n\n              next.data.settings.social.meta.push({\n                property: \"og:image:width\",\n                content: String(image.width)\n              }, {\n                property: \"og:image:height\",\n                content: String(image.height)\n              });\n              return next;\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":null,"metadata":{},"sourceType":"module"}