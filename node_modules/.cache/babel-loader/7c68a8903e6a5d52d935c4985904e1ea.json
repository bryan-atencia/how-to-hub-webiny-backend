{"ast":null,"code":"import _get from \"lodash/get\";\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport styled from \"@emotion/styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { renderPlugins } from \"@webiny/app/plugins\";\nimport { GET_PAGE } from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { PageDetailsProvider, PageDetailsConsumer } from \"../../contexts/PageDetails\";\nimport { ElementAnimation } from \"@webiny/app-page-builder/render/components\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nvar EmptySelect = /*#__PURE__*/styled(\"div\", {\n  target: \"e1c91zhx0\",\n  label: \"EmptySelect\"\n})({\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"var(--mdc-theme-on-surface)\",\n  \".select-page\": {\n    maxWidth: 400,\n    padding: \"50px 100px\",\n    textAlign: \"center\",\n    display: \"block\",\n    borderRadius: 2,\n    backgroundColor: \"var(--mdc-theme-surface)\"\n  }\n});\nvar DetailsContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"e1c91zhx1\",\n  label: \"DetailsContainer\"\n})({\n  height: \"calc(100% - 10px)\",\n  overflow: \"hidden\",\n  position: \"relative\",\n  nav: {\n    backgroundColor: \"var(--mdc-theme-surface)\"\n  }\n});\n\nvar EmptyPageDetails = function EmptyPageDetails() {\n  return /*#__PURE__*/React.createElement(EmptySelect, null, /*#__PURE__*/React.createElement(Elevation, {\n    z: 2,\n    className: \"select-page\"\n  }, \"Select a page on the left side, or click the green button to create a new one.\"));\n};\n\nvar PageDetails = function PageDetails(_ref) {\n  var refreshPages = _ref.refreshPages;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history,\n      location = _useRouter.location;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var query = new URLSearchParams(location.search);\n  var pageId = query.get(\"id\");\n\n  if (!pageId) {\n    return /*#__PURE__*/React.createElement(EmptyPageDetails, null);\n  }\n\n  return /*#__PURE__*/React.createElement(Query, {\n    query: GET_PAGE(),\n    variables: {\n      id: pageId\n    },\n    onCompleted: function onCompleted(data) {\n      var error = _get(data, \"pageBuilder.page.error.message\");\n\n      if (error) {\n        query.delete(\"id\");\n        history.push({\n          search: query.toString()\n        });\n        showSnackbar(error);\n      }\n    }\n  }, function (_ref2) {\n    var data = _ref2.data,\n        loading = _ref2.loading;\n    var details = {\n      page: _get(data, \"pageBuilder.page.data\") || {},\n      loading: loading\n    };\n    return /*#__PURE__*/React.createElement(ElementAnimation, null, function (_ref3) {\n      var refresh = _ref3.refresh;\n      return /*#__PURE__*/React.createElement(DetailsContainer, {\n        onScroll: refresh\n      }, /*#__PURE__*/React.createElement(PageDetailsProvider, {\n        value: details\n      }, /*#__PURE__*/React.createElement(PageDetailsConsumer, null, function (pageDetails) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"test-id\", {\n          \"data-testid\": \"pb-page-details\"\n        }, renderPlugins(\"pb-page-details\", {\n          refreshPages: refreshPages,\n          pageDetails: pageDetails,\n          loading: loading\n        })));\n      })));\n    });\n  });\n};\n\nexport default PageDetails;","map":null,"metadata":{},"sourceType":"module"}