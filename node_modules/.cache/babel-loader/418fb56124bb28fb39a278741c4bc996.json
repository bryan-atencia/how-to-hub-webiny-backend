{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport React from \"react\";\nimport isEqual from \"lodash/isEqual\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport DropZone from \"@webiny/app-page-builder/editor/components/DropZone\";\nimport Element from \"@webiny/app-page-builder/editor/components/Element\";\nimport { dropElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getElement } from \"@webiny/app-page-builder/editor/selectors\";\n\nvar ColumnChild = function ColumnChild(props) {\n  var target = props.target,\n      element = props.element,\n      _props$last = props.last,\n      last = _props$last === void 0 ? false : _props$last;\n  var dropElementAbove = useHandler(props, function (_ref) {\n    var index = _ref.index,\n        target = _ref.target,\n        dropElement = _ref.dropElement;\n    return function (source) {\n      dropElement({\n        source: source,\n        target: _objectSpread(_objectSpread({}, target), {}, {\n          position: index\n        })\n      });\n    };\n  });\n  var dropElementBelow = useHandler(props, function (_ref2) {\n    var dropElement = _ref2.dropElement,\n        count = _ref2.count,\n        target = _ref2.target;\n    return function (source) {\n      dropElement({\n        source: source,\n        target: _objectSpread(_objectSpread({}, target), {}, {\n          position: count\n        })\n      });\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      position: \"relative\"\n    }\n  }, /*#__PURE__*/React.createElement(DropZone.Above, {\n    type: target.type,\n    onDrop: dropElementAbove\n  }), /*#__PURE__*/React.createElement(Element, {\n    id: element.id\n  }), last && /*#__PURE__*/React.createElement(DropZone.Below, {\n    type: target.type,\n    onDrop: dropElementBelow\n  }));\n};\n\nexport default connect(function (state, props) {\n  return {\n    element: getElement(state, props.id)\n  };\n}, {\n  dropElement: dropElement\n}, null, {\n  areStatePropsEqual: isEqual\n})( /*#__PURE__*/React.memo(ColumnChild));","map":null,"metadata":{},"sourceType":"module"}