{"ast":null,"code":"import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { useSlate } from \"slate-react\";\nimport classNames from \"classnames\";\nvar MenuContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"e1xuru6m0\",\n  label: \"MenuContainer\"\n})({\n  position: \"relative\",\n  padding: \"10px 0 20px 1px\",\n  borderBottom: \"2px solid var(--mdc-theme-on-background)\",\n  display: \"flex\",\n  alignItems: \"center\",\n  \"& > *\": {\n    display: \"inline-block\"\n  },\n  \"& > * + *\": {\n    marginLeft: 10\n  },\n  span: {\n    display: \"flex\",\n    alignContent: \"center\",\n    \">svg\": {\n      height: 18\n    }\n  }\n});\nexport var MenuButton = function MenuButton(_ref) {\n  var className = _ref.className,\n      onClick = _ref.onClick,\n      active = _ref.active,\n      children = _ref.children,\n      _ref$onMouseDown = _ref.onMouseDown,\n      onMouseDown = _ref$onMouseDown === void 0 ? function (e) {\n    return e.preventDefault();\n  } : _ref$onMouseDown;\n  var buttonStyle = /*#__PURE__*/css({\n    cursor: \"pointer\",\n    color: active ? \"var(--mdc-theme-primary)\" : \"var(--mdc-theme-text-secondary-on-background)\",\n    \"&:hover\": {\n      color: \"var(--mdc-theme-primary)\"\n    }\n  }, \"label:buttonStyle;\");\n  return /*#__PURE__*/React.createElement(\"span\", {\n    onClick: onClick,\n    className: classNames(className, buttonStyle),\n    onMouseDown: onMouseDown\n  }, children);\n};\nexport var Menu = function Menu(props) {\n  var editor = useSlate();\n  var activePlugin = props.activePlugin,\n      activatePlugin = props.activatePlugin,\n      deactivatePlugin = props.deactivatePlugin,\n      plugins = props.plugins;\n  return /*#__PURE__*/React.createElement(MenuContainer, null, plugins.filter(function (pl) {\n    return pl.menu;\n  }).map(function (item) {\n    return /*#__PURE__*/React.cloneElement(item.menu.render({\n      MenuButton: MenuButton,\n      editor: editor,\n      activatePlugin: activatePlugin\n    }), {\n      key: item.name\n    });\n  }), plugins.filter(function (pl) {\n    return pl.menu && typeof pl.menu.renderDialog === \"function\";\n  }).map(function (pl) {\n    var props = {\n      editor: editor,\n      open: activePlugin ? activePlugin.plugin === pl.name : false,\n      closeDialog: deactivatePlugin,\n      activePlugin: activePlugin,\n      activatePlugin: activatePlugin\n    };\n    return /*#__PURE__*/React.cloneElement(pl.menu.renderDialog(props), {\n      key: pl.name\n    });\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}