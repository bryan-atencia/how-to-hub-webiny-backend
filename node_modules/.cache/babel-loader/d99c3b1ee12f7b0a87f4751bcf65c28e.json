{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _isEqual from \"lodash/isEqual\";\nimport _set from \"lodash/set\";\nimport React, { useCallback } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport styled from \"@emotion/styled\";\nimport isNumeric from \"isnumeric\";\nimport SingleImageUpload from \"@webiny/app-admin/components/SingleImageUpload\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getElement } from \"@webiny/app-page-builder/editor/selectors\";\nvar position = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\"\n};\nvar AlignImage = /*#__PURE__*/styled(\"div\", {\n  target: \"egixx440\",\n  label: \"AlignImage\"\n})(function (props) {\n  return {\n    img: {\n      alignSelf: position[props.align]\n    }\n  };\n});\n\nvar ImageContainer = function ImageContainer(props) {\n  var horizontalAlign = props.horizontalAlign,\n      updateElement = props.updateElement,\n      element = props.element;\n\n  var image = _objectSpread({}, props.image);\n\n  var imgStyle = {\n    width: null,\n    height: null\n  };\n\n  if (image.width) {\n    var width = image.width;\n    imgStyle.width = isNumeric(width) ? parseInt(width) : width;\n  }\n\n  if (image.height) {\n    var height = image.height;\n    imgStyle.height = isNumeric(height) ? parseInt(height) : height;\n  }\n\n  var onChange = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              updateElement({\n                element: _set(element, \"data.image.file\", data),\n                merge: true\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [element]);\n  return /*#__PURE__*/React.createElement(AlignImage, {\n    align: horizontalAlign\n  }, /*#__PURE__*/React.createElement(SingleImageUpload, {\n    imagePreviewProps: {\n      style: imgStyle,\n      srcSet: \"auto\"\n    },\n    onChange: onChange,\n    value: image.file\n  }));\n};\n\nexport default connect(function (state, _ref2) {\n  var elementId = _ref2.elementId;\n  var element = getElement(state, elementId);\n  var _element$data = element.data,\n      _element$data$image = _element$data.image,\n      image = _element$data$image === void 0 ? {} : _element$data$image,\n      _element$data$setting = _element$data.settings,\n      settings = _element$data$setting === void 0 ? {} : _element$data$setting;\n  return {\n    element: {\n      id: element.id,\n      type: element.type,\n      path: element.path\n    },\n    image: image,\n    horizontalAlign: settings.horizontalAlign || \"center\"\n  };\n}, {\n  updateElement: updateElement\n}, null, {\n  areStatePropsEqual: _isEqual\n})( /*#__PURE__*/React.memo(ImageContainer));","map":null,"metadata":{},"sourceType":"module"}