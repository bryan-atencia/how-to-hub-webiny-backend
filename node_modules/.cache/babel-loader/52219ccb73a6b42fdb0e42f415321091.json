{"ast":null,"code":"import _clone from \"lodash/clone\";\nimport classnames from \"classnames\";\n/**\n * This is a pass-through that modifies your object's props and creates the required className prop by merging\n * the provided appendClasses(string) and any class names defined inside your props.\n * To you the function just do: {...getClasses (props)}\n * and make sure you are not spreading the `props` element, as this will clone and spread your current `props` element already.\n * @param {*} propList\n * @param {*} appendClasses\n */\n\nvar getClasses = function getClasses(propList, appendClasses) {\n  var classes = {};\n\n  var props = _clone(propList);\n\n  if (propList.hasOwnProperty(\"className\")) {\n    classes = classnames(propList.className);\n    delete props.className;\n  }\n\n  if (typeof appendClasses !== \"undefined\") {\n    classes = classnames(classes, appendClasses);\n  }\n\n  props.className = classes;\n  return props;\n};\n\nexport { getClasses };","map":null,"metadata":{},"sourceType":"module"}