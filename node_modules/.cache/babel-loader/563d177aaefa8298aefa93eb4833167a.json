{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.hash = factory();\n  }\n})(this, function () {\n  /**\n      A string hashing function based on Daniel J. Bernstein's popular 'times 33' hash algorithm.\n      @param {string} text - String to hash\n      @return {number} Resulting number.\n  */\n  function hash(text) {\n    'use strict';\n\n    var hash = 5381,\n        index = text.length;\n\n    while (index) {\n      hash = hash * 33 ^ text.charCodeAt(--index);\n    }\n\n    return hash >>> 0;\n  }\n\n  return hash;\n});","map":null,"metadata":{},"sourceType":"script"}