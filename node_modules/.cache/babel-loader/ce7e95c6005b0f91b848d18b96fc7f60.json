{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport * as React from \"react\";\nimport * as R from \"@rmwc/button\";\nimport { Fab } from \"@rmwc/fab\";\nimport { Icon } from \"../Icon/Icon\";\nimport classNames from \"classnames\";\n/**\n * Shows a default button, used typically when action is not of high priority.\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport var ButtonDefault = function ButtonDefault(props) {\n  var disabled = props.disabled,\n      onClick = props.onClick,\n      children = props.children,\n      small = props.small,\n      _props$ripple = props.ripple,\n      ripple = _props$ripple === void 0 ? true : _props$ripple,\n      _props$className = props.className,\n      className = _props$className === void 0 ? \"\" : _props$className,\n      style = props.style;\n  return /*#__PURE__*/React.createElement(R.Button, {\n    style: style,\n    disabled: disabled,\n    dense: small,\n    onClick: onClick,\n    ripple: ripple,\n    className: classNames(\"webiny-ui-button\", className),\n    \"data-testid\": props[\"data-testid\"]\n  }, children);\n};\n/**\n * Shows primary button, eg. for submitting forms.\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport var ButtonPrimary = function ButtonPrimary(props) {\n  var disabled = props.disabled,\n      onClick = props.onClick,\n      children = props.children,\n      _props$small = props.small,\n      small = _props$small === void 0 ? false : _props$small,\n      _props$flat = props.flat,\n      flat = _props$flat === void 0 ? false : _props$flat,\n      _props$ripple2 = props.ripple,\n      ripple = _props$ripple2 === void 0 ? true : _props$ripple2,\n      _props$style = props.style,\n      style = _props$style === void 0 ? null : _props$style,\n      _props$className2 = props.className,\n      className = _props$className2 === void 0 ? null : _props$className2;\n  return /*#__PURE__*/React.createElement(R.Button, {\n    raised: !flat,\n    dense: small,\n    disabled: disabled,\n    unelevated: flat,\n    ripple: ripple,\n    onClick: onClick,\n    style: style,\n    className: classNames(\"webiny-ui-button webiny-ui-button--primary\", className),\n    \"data-testid\": props[\"data-testid\"]\n  }, children);\n};\n/**\n * Shows a secondary button - eg. for doing a reset on a form.\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport var ButtonSecondary = function ButtonSecondary(props) {\n  var disabled = props.disabled,\n      onClick = props.onClick,\n      children = props.children,\n      _props$small2 = props.small,\n      small = _props$small2 === void 0 ? false : _props$small2,\n      _props$ripple3 = props.ripple,\n      ripple = _props$ripple3 === void 0 ? true : _props$ripple3,\n      _props$className3 = props.className,\n      className = _props$className3 === void 0 ? null : _props$className3,\n      _props$style2 = props.style,\n      style = _props$style2 === void 0 ? null : _props$style2;\n  return /*#__PURE__*/React.createElement(R.Button, {\n    disabled: disabled,\n    outlined: true,\n    dense: small,\n    ripple: ripple,\n    onClick: onClick,\n    style: style,\n    className: classNames(\"webiny-ui-button webiny-ui-button--secondary\", className),\n    \"data-testid\": props[\"data-testid\"]\n  }, children);\n};\n/**\n * A floating button, shown on the side of the screen, typically used for creating new content or accessing settings.\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport var ButtonFloating = function ButtonFloating(props) {\n  var disabled = props.disabled,\n      icon = props.icon,\n      onClick = props.onClick,\n      _props$small3 = props.small,\n      small = _props$small3 === void 0 ? false : _props$small3,\n      _props$label = props.label,\n      label = _props$label === void 0 ? false : _props$label,\n      _props$ripple4 = props.ripple,\n      ripple = _props$ripple4 === void 0 ? true : _props$ripple4,\n      _props$className4 = props.className,\n      className = _props$className4 === void 0 ? null : _props$className4,\n      rest = _objectWithoutProperties(props, [\"disabled\", \"icon\", \"onClick\", \"small\", \"label\", \"ripple\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Fab, Object.assign({\n    \"data-testid\": props[\"data-testid\"],\n    disabled: disabled,\n    mini: small,\n    onClick: onClick,\n    label: label,\n    ripple: ripple,\n    icon: icon,\n    className: classNames(\"webiny-ui-button--floating\", className)\n  }, rest));\n};\n/**\n * Shows an icon, suitable to be shown inside of a button.\n * @param props\n * @returns {*}\n * @constructor\n */\n\nexport var ButtonIcon = function ButtonIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, props);\n};","map":null,"metadata":{},"sourceType":"module"}