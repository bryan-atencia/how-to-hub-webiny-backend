{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"Create\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"Description\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Content model group\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Choose a content model group\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"The name of the content model\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Name\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"New Content Model\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { CREATE_CONTENT_MODEL, LIST_MENU_CONTENT_GROUPS_MODELS } from \"../../viewsGraphql\";\nimport get from \"lodash.get\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { validation } from \"@webiny/validation\";\nimport { useQuery, useMutation } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@webiny/ui/Dialog\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nvar t = i18n.ns(\"app-headless-cms/admin/views/content-models/new-content-model-dialog\");\nvar narrowDialog = /*#__PURE__*/css({\n  \".mdc-dialog__surface\": {\n    width: 600,\n    minWidth: 600\n  }\n}, \"label:narrowDialog;\");\nvar noPadding = /*#__PURE__*/css({\n  padding: \"5px !important\"\n}, \"label:noPadding;\");\n\nvar NewContentModelDialog = function NewContentModelDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      contentModelsDataList = _ref.contentModelsDataList;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var _useMutation = useMutation(CREATE_CONTENT_MODEL),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createContentModel = _useMutation2[0];\n\n  var _useQuery = useQuery(LIST_MENU_CONTENT_GROUPS_MODELS, {\n    skip: !open\n  }),\n      data = _useQuery.data;\n\n  var contentModelGroups = get(data, \"listContentModelGroups.data\", []).map(function (item) {\n    return {\n      value: item.id,\n      label: item.name\n    };\n  });\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    className: narrowDialog,\n    \"data-testid\": \"cms-new-content-model-modal\"\n  }, open && /*#__PURE__*/React.createElement(Form, {\n    data: {\n      group: get(contentModelGroups, \"0.value\")\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.t0 = get;\n                _context.next = 4;\n                return createContentModel({\n                  variables: {\n                    data: data\n                  },\n                  awaitRefetchQueries: true,\n                  refetchQueries: [\"HeadlessCmsListContentModels\", \"HeadlessCmsListMenuContentGroupsModels\"]\n                });\n\n              case 4:\n                _context.t1 = _context.sent;\n                response = (0, _context.t0)(_context.t1, \"data.createContentModel\");\n\n                if (!response.error) {\n                  _context.next = 9;\n                  break;\n                }\n\n                setLoading(false);\n                return _context.abrupt(\"return\", showSnackbar(response.error.message));\n\n              case 9:\n                _context.next = 11;\n                return contentModelsDataList.refresh();\n\n              case 11:\n                history.push(\"/cms/content-models/\" + response.data.id);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  }, function (_ref3) {\n    var Bind = _ref3.Bind,\n        submit = _ref3.submit;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject())), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Grid, {\n      className: noPadding\n    }, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"name\",\n      validators: validation.create(\"required,maxLength:100\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: t(_templateObject2()),\n      description: t(_templateObject3())\n    }))), /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"group\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Select, {\n      description: t(_templateObject4()),\n      label: t(_templateObject5()),\n      options: contentModelGroups\n    }))), /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"description\"\n    }, function (props) {\n      return /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n        rows: 4,\n        maxLength: 200,\n        characterCount: true,\n        label: t(_templateObject6())\n      }));\n    })))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(ButtonDefault, {\n      onClick: submit\n    }, \"+ \", t(_templateObject7()))));\n  }));\n};\n\nexport default NewContentModelDialog;","map":null,"metadata":{},"sourceType":"module"}