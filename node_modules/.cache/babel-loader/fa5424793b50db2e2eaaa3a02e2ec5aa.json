{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from \"react\";\nimport { Transition } from \"react-transition-group\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport styled from \"@emotion/styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { togglePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\nvar Overlay = /*#__PURE__*/styled(\"div\", {\n  target: \"e1p5lh7r0\",\n  label: \"Overlay\"\n})({\n  position: \"fixed\",\n  top: 64,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  zIndex: 5\n});\nvar defaultStyle = {\n  transform: \"translateY(-5px)\",\n  opacity: 0,\n  transitionProperty: \"opacity, transform\",\n  transitionTimingFunction: \"cubic-bezier(0, 0, .2, 1)\",\n  transitionDuration: \"250ms\",\n  willChange: \"opacity, transform\"\n};\nvar transitionStyles = {\n  entering: {\n    opacity: 0,\n    transform: \"translateY(-5px)\"\n  },\n  entered: {\n    opacity: 1,\n    transform: \"translateY(0px)\"\n  }\n};\nvar Wrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"e1p5lh7r1\",\n  label: \"Wrapper\"\n})({\n  padding: 0,\n  boxSizing: \"border-box\",\n  \".mdc-tab-content\": {\n    padding: 15\n  },\n  \".mdc-layout-grid\": {\n    padding: 0,\n    \"&.no-bottom-padding\": {\n      paddingBottom: 0\n    },\n    \".mdc-layout-grid__inner\": {\n      gridGap: 0,\n      '[class*=\"mdc-layout-grid__cell--span-\"]': {\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"var(--mdc-theme-text-secondary-on-background)\",\n        marginBottom: 10,\n        justifyContent: \"flex-end\",\n        '[class*=\"mdc-typography--\"], .mdc-button__icon': {\n          lineHeight: \"120%\",\n          width: \"100%\"\n        },\n        \".mdc-button__icon\": {\n          marginRight: 20\n        }\n      }\n    }\n  }\n});\nvar ToolbarBox = /*#__PURE__*/styled(\"div\", {\n  target: \"e1p5lh7r2\",\n  label: \"ToolbarBox\"\n})({\n  position: \"absolute\",\n  color: \"var(--mdc-theme-on-surface)\",\n  zIndex: 6,\n  width: 270,\n  top: 56,\n  left: 25,\n  \".elevationBox\": {\n    backgroundColor: \"var(--mdc-theme-surface)\",\n    borderRadius: 2,\n    \"&::after\": {\n      content: \"''\",\n      width: 0,\n      height: 0,\n      borderLeft: \"7px solid transparent\",\n      borderRight: \"7px solid transparent\",\n      borderBottom: \"7px solid var(--mdc-theme-on-background)\",\n      position: \"absolute\",\n      top: -7,\n      left: \"50%\",\n      transform: \"translateX(-50%)\"\n    }\n  }\n}, function (props) {\n  return {\n    left: props.left || 0\n  };\n});\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      left: null\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.ref.current && this.state.left === null) {\n        this.setState({\n          left: -(this.ref.current.offsetWidth - 48) / 2\n        }, function () {\n          /*eslint-env browser */\n          window.dispatchEvent(new Event(\"resize\"));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          active = _this$props.active,\n          plugin = _this$props.plugin,\n          options = _this$props.options,\n          togglePlugin = _this$props.togglePlugin;\n      var content = plugin.renderMenu({\n        options: options\n      });\n      return /*#__PURE__*/React.createElement(Transition, {\n        in: active,\n        timeout: 125,\n        appear: true,\n        unmountOnExit: true\n      }, function (state) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToolbarBox, {\n          left: _this2.state.left,\n          style: _objectSpread(_objectSpread({}, defaultStyle), transitionStyles[state])\n        }, /*#__PURE__*/React.createElement(Elevation, {\n          z: 2,\n          className: \"elevationBox\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          ref: _this2.ref\n        }, /*#__PURE__*/React.createElement(Wrapper, null, content)))), /*#__PURE__*/React.createElement(Overlay, {\n          onClick: function onClick() {\n            return togglePlugin({\n              name: plugin.name\n            });\n          }\n        }));\n      });\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport default connect(function (state, props) {\n  return {\n    active: isPluginActive(props.plugin.name)(state)\n  };\n}, {\n  togglePlugin: togglePlugin\n})(Menu);","map":null,"metadata":{},"sourceType":"module"}