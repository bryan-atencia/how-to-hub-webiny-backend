{"ast":null,"code":"import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { getElementProps } from \"@webiny/app-page-builder/editor/selectors\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport Droppable from \"./../Droppable\";\nvar Container = /*#__PURE__*/React.memo(\n/*#__PURE__*/\n// @ts-ignore\nstyled(\"div\", {\n  target: \"e1meegfv0\",\n  label: \"Container\"\n})(function (_ref) {\n  var isOver = _ref.isOver;\n  return {\n    backgroundColor: \"transparent\",\n    boxSizing: \"border-box\",\n    height: \"100%\",\n    minHeight: 100,\n    position: \"relative\",\n    userSelect: \"none\",\n    width: \"100%\",\n    border: isOver ? \"1px dashed var(--mdc-theme-primary)\" : \"1px dashed var(--mdc-theme-secondary)\",\n    \".addIcon\": {\n      color: isOver ? \"var(--mdc-theme-primary) !important\" : \"var(--mdc-theme-secondary) !important\"\n    }\n  };\n}));\nvar Add = /*#__PURE__*/styled(\"div\", {\n  target: \"e1meegfv1\",\n  label: \"Add\"\n})({\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%,-50%)\",\n  margin: 0\n});\n\nvar isVisible = function isVisible() {\n  return true;\n};\n\nvar Center = function Center(_ref2) {\n  var type = _ref2.type,\n      onDrop = _ref2.onDrop,\n      children = _ref2.children,\n      active = _ref2.active,\n      highlight = _ref2.highlight;\n  return /*#__PURE__*/React.createElement(Droppable, {\n    onDrop: onDrop,\n    type: type,\n    isVisible: isVisible\n  }, function (_ref3) {\n    var isOver = _ref3.isOver,\n        isDroppable = _ref3.isDroppable,\n        drop = _ref3.drop;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      ref: drop\n    }, /*#__PURE__*/React.createElement(Container, {\n      isOver: isOver && isDroppable || active,\n      highlight: highlight\n    }, /*#__PURE__*/React.createElement(Add, null, children)));\n  });\n};\n\nexport default connect(function (state, props) {\n  return getElementProps(state, props);\n})( /*#__PURE__*/React.memo(Center));","map":null,"metadata":{},"sourceType":"module"}