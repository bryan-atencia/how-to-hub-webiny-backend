{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from \"react\";\nimport Auth from \"@aws-amplify/auth\";\nimport debug from \"../debug\";\n\nvar SignIn = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn() {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"authStates\", [\"signIn\", \"signedOut\", \"signedUp\"]);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      error: null,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkContact\", function (user) {\n      var changeState = _this.props.changeState;\n      Auth.verifiedContact(user).then(function (data) {\n        if (data.verified) {\n          changeState(\"signedIn\", user);\n        } else {\n          changeState(\"verifyContact\", _objectSpread(_objectSpread({}, user), data));\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"signIn\", function (input) {\n      _this.setState({\n        loading: true\n      });\n\n      var username = input.username,\n          password = input.password;\n      var changeState = _this.props.changeState;\n      Auth.signIn(username.toLowerCase(), password).then(function (user) {\n        _this.setState({\n          loading: false\n        });\n\n        debug(\"User %O\", user);\n\n        if (user.challengeName === \"SMS_MFA\" || user.challengeName === \"SOFTWARE_TOKEN_MFA\") {\n          debug(\"confirm user with %s\", user.challengeName);\n          changeState(\"confirmSignIn\", user);\n        } else if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n          debug(\"require new password %s\", user.challengeParam);\n          changeState(\"requireNewPassword\", user);\n        } else if (user.challengeName === \"MFA_SETUP\") {\n          debug(\"TOTP setup %s\", user.challengeParam);\n          changeState(\"TOTPSetup\", user);\n        } else {\n          _this.checkContact(user);\n        }\n      }).catch(function (err) {\n        _this.setState({\n          loading: false\n        });\n\n        if (err.code === \"UserNotConfirmedException\") {\n          debug(\"the user is not confirmed\");\n          changeState(\"confirmSignUp\", {\n            username: username\n          });\n        } else if (err.code === \"PasswordResetRequiredException\") {\n          debug(\"password reset required\", err);\n          changeState(\"forgotPassword\", {\n            username: username,\n            system: true\n          });\n        } else {\n          _this.setState({\n            error: err\n          });\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          authProps = _objectWithoutProperties(_this$props, [\"children\"]);\n\n      var authState = authProps.authState,\n          changeState = authProps.changeState;\n\n      if (!this.authStates.includes(authState)) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.cloneElement(children, {\n        authProps: authProps,\n        signIn: this.signIn,\n        changeState: changeState,\n        error: this.state.error,\n        loading: this.state.loading\n      });\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nexport default SignIn;","map":null,"metadata":{},"sourceType":"module"}