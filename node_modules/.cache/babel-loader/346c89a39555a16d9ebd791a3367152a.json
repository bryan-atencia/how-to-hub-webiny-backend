{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _isEqual from \"lodash/isEqual\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { css } from \"emotion\";\nimport { getActiveElement, getElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { activateElement, highlightElement } from \"@webiny/app-page-builder/editor/actions\";\nvar breadcrumbs = /*#__PURE__*/css({\n  display: \"flex\",\n  zIndex: 20,\n  flexDirection: \"row\",\n  padding: 0,\n  position: \"fixed\",\n  left: 55,\n  bottom: 0,\n  width: \"calc(100% - 55px)\",\n  backgroundColor: \"var(--mdc-theme-surface)\",\n  borderTop: \"1px solid var(--mdc-theme-on-background)\",\n  fontSize: \"14px\",\n  \"> li\": {\n    cursor: \"pointer\",\n    \".element\": {\n      color: \"var(--mdc-theme-secondary)\",\n      padding: \"5px\",\n      display: \"inline-block\",\n      \"&:hover\": {\n        backgroundColor: \"var(--mdc-theme-background)\",\n        color: \"var(--mdc-theme-on-surface)\"\n      }\n    },\n    \".divider\": {\n      color: \"var(--mdc-theme-text-secondary-on-background)\"\n    }\n  }\n}, \"label:breadcrumbs;\");\n\nvar Breadcrumbs = function Breadcrumbs(_ref) {\n  var elements = _ref.elements,\n      activateElement = _ref.activateElement,\n      highlightElement = _ref.highlightElement;\n\n  if (!elements) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: breadcrumbs\n  }, elements.map(function (el, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      onMouseOver: function onMouseOver() {\n        return highlightElement({\n          element: el.id\n        });\n      },\n      onClick: function onClick() {\n        return activateElement({\n          element: el.id\n        });\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"element\"\n    }, el.type.replace(\"pb-editor-page-element-\", \"\")), elements.length - 1 > index ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"divider\"\n    }, \"\\xA0>\\xA0\") : null);\n  }));\n};\n\nexport default connect(function (state) {\n  var element = getActiveElement(state);\n\n  if (!element) {\n    return {\n      elements: null\n    };\n  }\n\n  var paths = element.path.split(\".\").slice(1);\n  var elements = paths.map(function (path, index) {\n    var elPath = [0].concat(_toConsumableArray(paths.slice(0, index + 1))).join(\".\");\n    var el = getElement(state, elPath);\n    return {\n      id: el.id,\n      type: el.type,\n      index: path,\n      active: el.id === element.id\n    };\n  });\n  return {\n    elements: elements\n  };\n}, {\n  activateElement: activateElement,\n  highlightElement: highlightElement\n}, null, {\n  areStatePropsEqual: _isEqual\n})(Breadcrumbs);","map":null,"metadata":{},"sourceType":"module"}