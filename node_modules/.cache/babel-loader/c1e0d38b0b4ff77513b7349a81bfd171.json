{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport { Editable, withReact, Slate } from \"slate-react\";\nimport { Editor as SlateEditor, createEditor } from \"slate\";\nimport { withHistory } from \"slate-history\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport classNames from \"classnames\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\nimport { Menu } from \"./Menu\";\nimport { pluginsToProps } from \"./pluginsToProps\";\nvar EditorWrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"e16g08480\",\n  label: \"EditorWrapper\"\n})({\n  border: \"1px solid var(--mdc-theme-on-background)\",\n  borderRadius: 2,\n  boxSizing: \"border-box\",\n  padding: 10\n});\nvar EditorContent = /*#__PURE__*/styled(\"div\", {\n  target: \"e16g08481\",\n  label: \"EditorContent\"\n})({\n  height: \"45vh\",\n  minHeight: 200,\n  overflow: \"auto\",\n  resize: \"vertical\",\n  padding: \"0px 8px\",\n  \"> div > div\": {\n    boxSizing: \"border-box\",\n    padding: 10,\n    maxHeight: 500,\n    minHeight: 200,\n    overflow: \"scroll\",\n    color: \"var(--mdc-theme-on-surface)\"\n  }\n});\nvar classes = {\n  label: /*#__PURE__*/css({\n    marginBottom: \"10px !important\"\n  }, \"label:label;\"),\n  disable: /*#__PURE__*/css({\n    opacity: 0.7,\n    pointerEvents: \"none\"\n  }, \"label:disable;\")\n};\nvar initialValue = [{\n  type: \"paragraph\",\n  children: [{\n    text: \"\"\n  }]\n}];\n\nvar withUtils = function withUtils(editor) {\n  var isInline = editor.isInline;\n\n  editor.hasMark = function (mark) {\n    var marks = SlateEditor.marks(editor);\n    return marks ? marks[mark] === true : false;\n  };\n\n  editor.toggleMark = function (mark) {\n    var isActive = editor.hasMark(mark);\n\n    if (isActive) {\n      SlateEditor.removeMark(editor, mark);\n    } else {\n      SlateEditor.addMark(editor, mark, true);\n    }\n  }; // TODO: add `enhanceEditor` method to editor plugins and move this to `link` plugin\n\n\n  editor.isInline = function (element) {\n    return element.type === \"link\" ? true : isInline(element);\n  };\n\n  return editor;\n};\n\nexport var RichTextEditor = /*#__PURE__*/function (_React$Component) {\n  _inherits(RichTextEditor, _React$Component);\n\n  var _super = _createSuper(RichTextEditor);\n\n  function RichTextEditor(props) {\n    var _this;\n\n    _classCallCheck(this, RichTextEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"plugins\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"editor\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"editorProps\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      _this.setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          value: value\n        });\n      });\n\n      var onChange = _this.props.onChange;\n      typeof onChange === \"function\" && onChange(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"activatePlugin\", function (plugin) {\n      _this.setState({\n        activePlugin: {\n          plugin: plugin,\n          selection: _this.editor.selection,\n          fragment: _this.editor.getFragment()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"deactivatePlugin\", function () {\n      _this.setState({\n        activePlugin: null\n      });\n    });\n\n    _this.state = {\n      showMenu: false,\n      value: props.value || initialValue,\n      readOnly: !props.onChange,\n      activePlugin: null\n    };\n    _this.editor = withUtils(withHistory(withReact(createEditor())));\n    _this.editorProps = pluginsToProps(props.plugins, {\n      editor: _this.editor,\n      activatePlugin: _this.activatePlugin\n    });\n    return _this;\n  }\n\n  _createClass(RichTextEditor, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          plugins = _this$props.plugins,\n          label = _this$props.label,\n          disabled = _this$props.disabled,\n          description = _this$props.description,\n          validation = _this$props.validation,\n          placeholder = _this$props.placeholder;\n\n      var _this$editorProps = this.editorProps,\n          renderEditor = _this$editorProps.renderEditor,\n          editorProps = _objectWithoutProperties(_this$editorProps, [\"renderEditor\"]);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(_defineProperty({}, classes.disable, disabled))\n      }, label && /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(\"mdc-text-field-helper-text mdc-text-field-helper-text--persistent\", classes.label)\n      }, label), /*#__PURE__*/React.createElement(EditorWrapper, null, /*#__PURE__*/React.createElement(Slate, {\n        editor: this.editor,\n        value: this.state.value,\n        onChange: this.onChange\n      }, /*#__PURE__*/React.createElement(Menu, {\n        plugins: plugins,\n        activePlugin: this.state.activePlugin,\n        activatePlugin: this.activatePlugin,\n        deactivatePlugin: this.deactivatePlugin\n      }), /*#__PURE__*/React.createElement(EditorContent, null, renderEditor( /*#__PURE__*/React.createElement(Editable, Object.assign({\n        readOnly: disabled,\n        placeholder: placeholder,\n        spellCheck: true,\n        autoFocus: true\n      }, editorProps)))))), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {\n        error: true\n      }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      if (!props.readOnly) {\n        // Got new editor value through props.\n        return {\n          value: props.value ? props.value : initialValue\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return RichTextEditor;\n}(React.Component);\n/*<EditorContent>\n    {React.createElement<any>(SlateEditor, {\n        onBlur: this.onBlur,\n        ref: this.setEditorRef,\n        autoCorrect: false,\n        spellCheck: false,\n        plugins: this.plugins.editor,\n        placeholder: placeholder || \"Enter some text...\",\n        value: this.state.value,\n        onChange: this.onChange,\n        activatePlugin: this.activatePlugin,\n        activePlugin: this.state.activePlugin,\n        deactivatePlugin: this.deactivatePlugin\n    })}\n</EditorContent>*/\n\n/*<Menu\n    plugins={plugins}\n    value={this.state.value}\n    onChange={this.onChange}\n    activePlugin={this.state.activePlugin}\n    activatePlugin={this.activatePlugin}\n    deactivatePlugin={this.deactivatePlugin}\n/>*/\n\n_defineProperty(RichTextEditor, \"defaultProps\", {\n  validation: {\n    isValid: null\n  }\n});","map":null,"metadata":{},"sourceType":"module"}