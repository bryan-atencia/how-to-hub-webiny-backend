{"ast":null,"code":"import * as React from \"react\";\nimport { ReactComponent as CodeIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/code.svg\";\nvar MARK = \"code\";\n\nvar hasMark = function hasMark(value, type) {\n  return Boolean(value.marks.find(function (mark) {\n    return mark.type === type;\n  }));\n};\n\nvar onClickMark = function onClickMark(type, editor, onChange) {\n  editor.change(function (change) {\n    return onChange(change.toggleMark(type));\n  });\n};\n\nexport default (function () {\n  return {\n    menu: [{\n      name: \"pb-editor-slate-menu-item-code\",\n      type: \"pb-editor-slate-menu-item\",\n      render: function render(_ref) {\n        var MenuButton = _ref.MenuButton,\n            editor = _ref.editor,\n            onChange = _ref.onChange;\n        var isActive = hasMark(editor.value, MARK);\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/jsx-no-bind\n          React.createElement(MenuButton, {\n            onClick: function onClick() {\n              return onClickMark(MARK, editor, onChange);\n            },\n            active: isActive\n          }, /*#__PURE__*/React.createElement(CodeIcon, null))\n        );\n      }\n    }],\n    editor: [{\n      name: \"pb-editor-slate-editor-code\",\n      type: \"pb-editor-slate-editor\",\n      slate: {\n        renderMark: function renderMark(props, editor, next) {\n          if (props.mark.type === MARK) {\n            return /*#__PURE__*/React.createElement(\"code\", Object.assign({\n              className: \"webiny-pb-typography-code\"\n            }, props.attributes), props.children);\n          }\n\n          return next();\n        }\n      }\n    }]\n  };\n});","map":null,"metadata":{},"sourceType":"module"}