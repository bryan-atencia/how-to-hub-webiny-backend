{"ast":null,"code":"import React from \"react\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { set } from \"dot-prop-immutable\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { get } from \"dot-prop-immutable\";\nimport { ReactComponent as AlignCenterIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_center.svg\";\nimport { ReactComponent as AlignLeftIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_left.svg\";\nimport { ReactComponent as AlignRightIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_right.svg\"; // Icons map for dynamic render\n\nvar icons = {\n  \"flex-start\": /*#__PURE__*/React.createElement(AlignLeftIcon, null),\n  center: /*#__PURE__*/React.createElement(AlignCenterIcon, null),\n  \"flex-end\": /*#__PURE__*/React.createElement(AlignRightIcon, null)\n};\nvar alignments = Object.keys(icons);\n\nvar HorizontalAlignActionFlex = function HorizontalAlignActionFlex(props) {\n  var element = props.element,\n      children = props.children;\n  var align = get(element, \"data.settings.horizontalAlignFlex\") || \"flex-start\";\n  var onClick = useHandler(props, function (_ref) {\n    var element = _ref.element,\n        updateElement = _ref.updateElement;\n    return function () {\n      var align = get(element, \"data.settings.horizontalAlignFlex\") || \"flex-start\";\n      var nextAlign = alignments[alignments.indexOf(align) + 1] || \"flex-start\";\n      updateElement({\n        element: set(element, \"data.settings.horizontalAlignFlex\", nextAlign)\n      });\n    };\n  });\n  var plugin = getPlugins(\"pb-editor-page-element\").find(function (pl) {\n    return pl.elementType === element.type;\n  });\n\n  if (!plugin) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.cloneElement(children, {\n    onClick: onClick,\n    icon: icons[align]\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    element: getActiveElement(state)\n  };\n}, {\n  updateElement: updateElement\n})(HorizontalAlignActionFlex);","map":null,"metadata":{},"sourceType":"module"}