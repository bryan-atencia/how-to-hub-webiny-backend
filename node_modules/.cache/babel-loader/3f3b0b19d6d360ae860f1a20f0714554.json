{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Pages\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { css } from \"emotion\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { DataList, List, ListItem, ListItemText, ListItemTextSecondary, ListTextOverline, ListItemMeta } from \"@webiny/ui/List\";\nvar t = i18n.namespace(\"Pb.PagesDataList\");\nvar rightAlign = /*#__PURE__*/css({\n  alignItems: \"flex-end !important\"\n}, \"label:rightAlign;\");\n\nvar PagesDataList = function PagesDataList(props) {\n  var _useRouter = useRouter(),\n      location = _useRouter.location,\n      history = _useRouter.history;\n\n  var dataList = props.dataList;\n  var query = new URLSearchParams(location.search);\n  return /*#__PURE__*/React.createElement(DataList, Object.assign({}, dataList, {\n    title: t(_templateObject()),\n    sorters: [{\n      label: \"Newest to oldest\",\n      sorters: {\n        createdOn: -1\n      }\n    }, {\n      label: \"Oldest to newest\",\n      sorters: {\n        createdOn: 1\n      }\n    }, {\n      label: \"Title A-Z\",\n      sorters: {\n        title: 1\n      }\n    }, {\n      label: \"Title Z-A\",\n      sorters: {\n        title: -1\n      }\n    }]\n  }), function (_ref) {\n    var _ref$data = _ref.data,\n        data = _ref$data === void 0 ? [] : _ref$data;\n    return /*#__PURE__*/React.createElement(List, {\n      \"data-testid\": \"default-data-list\"\n    }, data.map(function (page) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: page.id\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        onClick: function onClick() {\n          query.set(\"id\", page.id);\n          history.push({\n            search: query.toString()\n          });\n        }\n      }, page.title, /*#__PURE__*/React.createElement(ListTextOverline, null, page.category.name), page.createdBy && /*#__PURE__*/React.createElement(ListItemTextSecondary, null, \"Created by: \", page.createdBy.firstName || \"N/A\", \". Last modified: \", /*#__PURE__*/React.createElement(TimeAgo, {\n        datetime: page.savedOn\n      }), \".\")), /*#__PURE__*/React.createElement(ListItemMeta, {\n        className: rightAlign\n      }, /*#__PURE__*/React.createElement(Typography, {\n        use: \"subtitle2\"\n      }, page.locked ? \"Published\" : \"Draft\", \" (v\", page.version, \")\")));\n    }));\n  });\n};\n\nexport default PagesDataList;","map":null,"metadata":{},"sourceType":"module"}