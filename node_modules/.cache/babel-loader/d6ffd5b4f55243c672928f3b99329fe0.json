{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Add index\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Choose fields\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"An index with the same combination of fields already exists.\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Create index\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Index added. To apply the changes, please save the content model.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport { Form } from \"@webiny/form\";\nimport get from \"lodash.get\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { useContentModelEditor } from \"@webiny/app-headless-cms/admin/components/ContentModelEditor/Context\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { CheckboxGroup, Checkbox } from \"@webiny/ui/Checkbox\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@webiny/ui/Dialog\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Alert } from \"@webiny/ui/Alert\";\nvar t = i18n.ns(\"app-headless-cms/admin/components/editor/tabs/index\");\nvar narrowDialog = /*#__PURE__*/css({\n  \".mdc-dialog__surface\": {\n    width: 600,\n    minWidth: 600\n  }\n}, \"label:narrowDialog;\");\nvar noPadding = /*#__PURE__*/css({\n  padding: \"5px !important\"\n}, \"label:noPadding;\");\n\nvar NewContentModelDialog = function NewContentModelDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useContentModelEdito = useContentModelEditor(),\n      data = _useContentModelEdito.data,\n      setData = _useContentModelEdito.setData,\n      getFieldPlugin = _useContentModelEdito.getFieldPlugin;\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    className: narrowDialog,\n    \"data-testid\": \"cms-new-content-model-modal\"\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(index, form) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return setData(function (data) {\n                  data.indexes.push(index);\n                  return data;\n                });\n\n              case 2:\n                onClose();\n                form.setState({\n                  data: {}\n                });\n                showSnackbar(t(_templateObject()));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  }, function (_ref3) {\n    var Bind = _ref3.Bind,\n        submit = _ref3.submit,\n        formData = _ref3.data;\n    var selectedFields = get(formData, \"fields\", []);\n    var justIdSelected = selectedFields.length === 1 && selectedFields[0] === \"id\";\n    var isExisting;\n    var hash = selectedFields.sort().join();\n    data.indexes.forEach(function (item) {\n      var itemHash = get(item, \"fields\", []).sort().join();\n\n      if (itemHash === hash) {\n        isExisting = true;\n        return false;\n      }\n    });\n    var indexableFields = data.fields.map(function (field) {\n      var fieldPlugin = getFieldPlugin({\n        type: field.type\n      });\n\n      if (field.multipleValues) {\n        if (!fieldPlugin.field.allowIndexes.multipleValues) {\n          return null;\n        }\n      } else {\n        if (!fieldPlugin.field.allowIndexes.singleValue) {\n          return null;\n        }\n      }\n\n      return field;\n    }).filter(Boolean);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject2())), /*#__PURE__*/React.createElement(DialogContent, null, isExisting && !justIdSelected && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Alert, {\n      type: \"warning\",\n      title: \"Already existing\"\n    }, t(_templateObject3()))), /*#__PURE__*/React.createElement(Bind, {\n      name: \"fields\"\n    }, /*#__PURE__*/React.createElement(CheckboxGroup, {\n      label: t(_templateObject4())\n    }, function (_ref4) {\n      var onChange = _ref4.onChange,\n          getValue = _ref4.getValue;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        className: noPadding\n      }, /*#__PURE__*/React.createElement(Cell, {\n        span: 12\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        value: getValue(\"id\"),\n        onChange: onChange(\"id\"),\n        label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, \"id\"))\n      })), indexableFields.map(function (_ref5) {\n        var label = _ref5.label,\n            fieldId = _ref5.fieldId,\n            type = _ref5.type;\n        return /*#__PURE__*/React.createElement(Cell, {\n          span: 6,\n          key: fieldId\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          value: getValue(fieldId),\n          onChange: onChange(fieldId),\n          label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(I18NValue, {\n            value: label\n          })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Typography, {\n            use: \"caption\"\n          }, type)))\n        }));\n      })));\n    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(ButtonDefault, {\n      disabled: justIdSelected || isExisting,\n      onClick: submit\n    }, \"+ \", t(_templateObject5()))));\n  }));\n};\n\nexport default NewContentModelDialog;","map":null,"metadata":{},"sourceType":"module"}