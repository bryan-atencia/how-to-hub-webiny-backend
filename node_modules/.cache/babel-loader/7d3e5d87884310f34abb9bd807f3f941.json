{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport React from \"react\";\nimport SortableTree from \"react-sortable-tree\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport MenuItemRenderer from \"./MenuItemRenderer\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport styled from \"@emotion/styled\";\nvar TreeWrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"e1g2oxaz0\",\n  label: \"TreeWrapper\"\n})({\n  width: \"100%\",\n  height: 400,\n  \".rst__lineHalfHorizontalRight::before, .rst__lineFullVertical::after, .rst__lineHalfVerticalTop::after, .rst__lineHalfVerticalBottom::after, .rst__lineChildren::after\": {\n    backgroundColor: \"var(--mdc-theme-on-surface)\"\n  }\n});\nvar EmptyTree = /*#__PURE__*/styled(\"div\", {\n  target: \"e1g2oxaz1\",\n  label: \"EmptyTree\"\n})({\n  width: \"100%\",\n  height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"var(--mdc-theme-on-surface)\"\n});\n\nvar MenuItemsList = /*#__PURE__*/function (_React$Component) {\n  _inherits(MenuItemsList, _React$Component);\n\n  var _super = _createSuper(MenuItemsList);\n\n  function MenuItemsList() {\n    _classCallCheck(this, MenuItemsList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MenuItemsList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          onChange = _this$props.onChange,\n          editItem = _this$props.editItem,\n          deleteItem = _this$props.deleteItem;\n      var data = Array.isArray(items) ? _toConsumableArray(items) : [];\n      var dom = /*#__PURE__*/React.createElement(EmptyTree, null, /*#__PURE__*/React.createElement(Typography, {\n        use: \"overline\"\n      }, \"There are no menu items to display\"));\n\n      if (data.length > 0) {\n        dom = /*#__PURE__*/React.createElement(SortableTree, {\n          treeData: data,\n          onChange: onChange,\n          canNodeHaveChildren: MenuItemsList.canHaveChildren,\n          nodeContentRenderer: MenuItemRenderer,\n          rowHeight: 80,\n          generateNodeProps: function generateNodeProps() {\n            return {\n              editItem: editItem,\n              deleteItem: deleteItem\n            };\n          },\n          getNodeKey: function getNodeKey(_ref) {\n            var node = _ref.node;\n            return node.id;\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(TreeWrapper, null, dom);\n    }\n  }], [{\n    key: \"canHaveChildren\",\n    value: function canHaveChildren(node) {\n      var plugins = getPlugins(\"pb-menu-item\");\n      var plugin = plugins.find(function (pl) {\n        return pl.menuItem.type === node.type;\n      });\n      return plugin ? plugin.menuItem.canHaveChildren : false;\n    }\n  }]);\n\n  return MenuItemsList;\n}(React.Component);\n\nexport default MenuItemsList;","map":null,"metadata":{},"sourceType":"module"}