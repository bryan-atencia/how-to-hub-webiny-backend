{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validationError = _interopRequireDefault(require(\"./../validationError\"));\n/**\n * @name gte\n * @description \"Greater than or equals\" validator. This validator checks if the given values is greater than or equal to the `min` value.\n * @param {any} value This is the value that will be validated.\n * @param {any} min This is the value to validate against. It is passed as a validator parameter: `gte:valueToCompareAgainst`\n * @throws {ValidationError}\n * @example\n * import { validation } from '@webiny/validation';\n * validation.validate(10, 'gte:100').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\n\n\nvar _default = function _default(value, params) {\n  if (!value) {\n    return;\n  }\n\n  if (parseFloat(value) >= parseFloat(params[0])) {\n    return;\n  }\n\n  throw new _validationError.default(\"Value needs to be greater than or equal to \" + params[0] + \".\");\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}