{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Record deleted successfully.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Record deleted successfully. Switched to first available environment.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { SplitView, LeftPanel, RightPanel } from \"@webiny/app-admin/components/SplitView\";\nimport { FloatingActionButton } from \"@webiny/app-admin/components/FloatingActionButton\";\nimport EnvironmentsDataList from \"./EnvironmentsDataList\";\nimport EnvironmentsForm from \"./EnvironmentsForm\";\nimport { CrudProvider } from \"@webiny/app-admin/contexts/Crud\";\nimport { useCms } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { READ_ENVIRONMENT, LIST_ENVIRONMENTS, CREATE_ENVIRONMENT, UPDATE_ENVIRONMENT, DELETE_ENVIRONMENT } from \"./graphql\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.ns(\"app-headless-cms/admin/environments\");\n\nfunction Environments() {\n  var _useCms = useCms(),\n      _useCms$environments = _useCms.environments,\n      refreshEnvironments = _useCms$environments.refreshEnvironments,\n      isSelectedEnvironment = _useCms$environments.isSelectedEnvironment;\n\n  return /*#__PURE__*/React.createElement(CrudProvider, {\n    delete: {\n      mutation: DELETE_ENVIRONMENT,\n      snackbar: function snackbar(item) {\n        if (isSelectedEnvironment(item)) {\n          return t(_templateObject());\n        }\n\n        return t(_templateObject2());\n      }\n    },\n    read: READ_ENVIRONMENT,\n    create: {\n      mutation: CREATE_ENVIRONMENT,\n      options: {\n        onCompleted: refreshEnvironments\n      }\n    },\n    update: {\n      mutation: UPDATE_ENVIRONMENT\n    },\n    list: {\n      query: LIST_ENVIRONMENTS,\n      variables: {\n        sort: {\n          savedOn: -1\n        }\n      }\n    }\n  }, function (_ref) {\n    var actions = _ref.actions;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SplitView, null, /*#__PURE__*/React.createElement(LeftPanel, {\n      span: 4\n    }, /*#__PURE__*/React.createElement(EnvironmentsDataList, null)), /*#__PURE__*/React.createElement(RightPanel, {\n      span: 8\n    }, /*#__PURE__*/React.createElement(EnvironmentsForm, null))), /*#__PURE__*/React.createElement(FloatingActionButton, {\n      \"data-testid\": \"new-record-button\",\n      onClick: actions.resetForm\n    }));\n  });\n}\n\nexport default Environments;","map":null,"metadata":{},"sourceType":"module"}