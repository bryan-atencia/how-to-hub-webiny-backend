{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport { ReactComponent as AddImageIcon } from \"@svgr/webpack!./icons/round-add_photo_alternate-24px.svg\";\nimport { ReactComponent as RemoveImageIcon } from \"@svgr/webpack!./icons/round-close-24px.svg\";\nimport { ReactComponent as EditImageIcon } from \"@svgr/webpack!./icons/round-edit-24px.svg\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { AddImageIconWrapper, AddImageWrapper, AddImageWrapperRound, EditImage, ImagePreviewWrapper, RemoveImage } from \"./styled\";\n\nvar Image = /*#__PURE__*/function (_React$Component) {\n  _inherits(Image, _React$Component);\n\n  var _super = _createSuper(Image);\n\n  function Image() {\n    _classCallCheck(this, Image);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Image, [{\n    key: \"renderBlank\",\n    value: function renderBlank() {\n      var _this$props = this.props,\n          uploadImage = _this$props.uploadImage,\n          round = _this$props.round;\n      var ImageWrapper = round ? AddImageWrapperRound : AddImageWrapper;\n      return /*#__PURE__*/React.createElement(ImageWrapper, {\n        \"data-role\": \"select-image\",\n        onClick: function onClick() {\n          uploadImage();\n        }\n      }, /*#__PURE__*/React.createElement(AddImageIconWrapper, null, /*#__PURE__*/React.createElement(AddImageIcon, null), /*#__PURE__*/React.createElement(Typography, {\n        use: \"caption\"\n      }, this.props.placeholder)));\n    }\n  }, {\n    key: \"renderImg\",\n    value: function renderImg() {\n      var _this$props2 = this.props,\n          removeImage = _this$props2.removeImage,\n          editImage = _this$props2.editImage,\n          uploadImage = _this$props2.uploadImage,\n          value = _this$props2.value,\n          renderImagePreview = _this$props2.renderImagePreview;\n      var imagePreviewProps = {\n        src: value ? value.src : null,\n        style: this.props.style ? this.props.style : null,\n        onClick: function onClick() {\n          return uploadImage();\n        }\n      };\n\n      if (!imagePreviewProps.style) {\n        imagePreviewProps.style = {};\n      }\n\n      if (!imagePreviewProps.style.width && !imagePreviewProps.style.height) {\n        imagePreviewProps.style.width = \"100%\";\n        imagePreviewProps.style.height = \"100%\";\n      }\n\n      var imagePreview = null;\n\n      if (typeof renderImagePreview === \"function\") {\n        imagePreview = renderImagePreview(imagePreviewProps);\n      } else {\n        imagePreview = /*#__PURE__*/React.createElement(\"img\", imagePreviewProps);\n      }\n\n      return /*#__PURE__*/React.createElement(ImagePreviewWrapper, null, imagePreview, typeof removeImage === \"function\" && /*#__PURE__*/React.createElement(RemoveImage, {\n        onClick: function onClick() {\n          return removeImage(null);\n        }\n      }, /*#__PURE__*/React.createElement(RemoveImageIcon, null)), typeof editImage === \"function\" && /*#__PURE__*/React.createElement(EditImage, {\n        onClick: function onClick() {\n          return editImage(value);\n        }\n      }, /*#__PURE__*/React.createElement(EditImageIcon, null)), /*#__PURE__*/React.createElement(AddImageWrapper, {\n        \"data-role\": \"select-image\",\n        onClick: function onClick() {\n          uploadImage();\n        }\n      }, /*#__PURE__*/React.createElement(AddImageIconWrapper, null, /*#__PURE__*/React.createElement(AddImageIcon, null), /*#__PURE__*/React.createElement(Typography, {\n        use: \"caption\"\n      }, this.props.placeholder))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          value = _this$props3.value,\n          disabled = _this$props3.disabled;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames({\n          disabled: disabled\n        }),\n        style: {\n          height: \"100%\"\n        }\n      }, this.props.loading && /*#__PURE__*/React.createElement(CircularProgress, null), value && value.src ? this.renderImg() : this.renderBlank());\n    }\n  }]);\n\n  return Image;\n}(React.Component);\n\n_defineProperty(Image, \"defaultProps\", {\n  placeholder: \"Select an image\"\n});\n\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}