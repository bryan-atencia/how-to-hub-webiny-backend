{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Submitted: {time}.\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Oldest to newest\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Newest to oldest\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Export all form submissions\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Export {submissionsCount|count:1:form submission:default:form submissions}.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport { css } from \"emotion\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Checkbox } from \"@webiny/ui/Checkbox\";\nimport Block from \"../Block\";\nimport { DataList, List, ListItem, ListItemText, ListTextOverline, ListItemMeta, ListSelectBox } from \"@webiny/ui/List\";\nimport FormSubmissionDialog from \"./FormSubmissionDialog\";\nimport { ReactComponent as ImportExport } from \"@svgr/webpack!./icons/round-cloud_download-24px.svg\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { EXPORT_FORM_SUBMISSIONS } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { Mutation } from \"react-apollo\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.namespace(\"FormsApp.FormsDataList\");\nvar rightAlign = /*#__PURE__*/css({\n  alignItems: \"flex-end !important\"\n}, \"label:rightAlign;\");\n\nvar FullName = function FullName(_ref) {\n  var submission = _ref.submission;\n  var _submission$data = submission.data,\n      firstName = _submission$data.firstName,\n      lastName = _submission$data.lastName,\n      email = _submission$data.email;\n  var output = [firstName, lastName, email && \"<\".concat(email, \">\")].filter(Boolean).join(\" \");\n  return /*#__PURE__*/React.createElement(\"span\", null, output || \"N/A\");\n};\n\nvar FormVersion = function FormVersion(_ref2) {\n  var submission = _ref2.submission;\n  return /*#__PURE__*/React.createElement(\"span\", null, \"Form revision #$\", submission.form.revision.version);\n};\n\nvar renderExportFormSubmissionsTooltip = function renderExportFormSubmissionsTooltip(dataList) {\n  var submissionsCount = dataList.getMultiSelected().length;\n\n  if (submissionsCount > 0) {\n    return t(_templateObject())({\n      submissionsCount: submissionsCount\n    });\n  }\n\n  return t(_templateObject2());\n};\n\nvar FormSubmissionsList = function FormSubmissionsList(props) {\n  var dataList = props.dataList,\n      form = props.form;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedFormSubmission = _useState2[0],\n      selectFormSubmission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      exportInProgress = _useState4[0],\n      setExportInProgress = _useState4[1];\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  if (!dataList) {\n    return;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Block, {\n    title: \"Submissions\"\n  }, /*#__PURE__*/React.createElement(DataList, Object.assign({}, dataList, {\n    multiSelectAll: dataList.multiSelectAll,\n    multiSelect: dataList.multiSelect,\n    multiSelectActions: /*#__PURE__*/React.createElement(Mutation, {\n      mutation: EXPORT_FORM_SUBMISSIONS\n    }, function (update) {\n      return /*#__PURE__*/React.createElement(Tooltip, {\n        content: renderExportFormSubmissionsTooltip(dataList),\n        placement: \"bottom\"\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        disabled: exportInProgress,\n        icon: /*#__PURE__*/React.createElement(ImportExport, null),\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var args, _yield$update, data;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setExportInProgress(true);\n                  args = {\n                    variables: {\n                      parent: null,\n                      ids: null\n                    }\n                  };\n\n                  if (dataList.isNoneMultiSelected()) {\n                    args.variables.parent = form.parent;\n                  } else {\n                    args.variables.ids = dataList.getMultiSelected().map(function (item) {\n                      return item.id;\n                    });\n                  }\n\n                  _context.next = 5;\n                  return update(args);\n\n                case 5:\n                  _yield$update = _context.sent;\n                  data = _yield$update.data;\n                  setExportInProgress(false);\n\n                  if (!data.forms.exportFormSubmissions.error) {\n                    _context.next = 11;\n                    break;\n                  }\n\n                  showSnackbar(data.forms.exportFormSubmissions.error.message);\n                  return _context.abrupt(\"return\");\n\n                case 11:\n                  window.open(data.forms.exportFormSubmissions.data.src, \"_blank\");\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      }));\n    }),\n    sorters: [{\n      label: t(_templateObject3()),\n      sorters: {\n        \"meta.submittedOn\": -1\n      }\n    }, {\n      label: t(_templateObject4()),\n      sorters: {\n        \"meta.submittedOn\": 1\n      }\n    }]\n  }), function (_ref4) {\n    var _ref4$data = _ref4.data,\n        data = _ref4$data === void 0 ? [] : _ref4$data;\n    return /*#__PURE__*/React.createElement(List, null, data.map(function (submission) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: submission.id\n      }, /*#__PURE__*/React.createElement(ListSelectBox, null, /*#__PURE__*/React.createElement(Checkbox, {\n        onChange: function onChange() {\n          return dataList.multiSelect(submission);\n        },\n        value: dataList.isMultiSelected(submission)\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        onClick: function onClick() {\n          return selectFormSubmission(submission);\n        }\n      }, /*#__PURE__*/React.createElement(FullName, {\n        submission: submission\n      }), /*#__PURE__*/React.createElement(ListTextOverline, null, \"Visitor IP: \", submission.meta.ip || \"N/A\")), /*#__PURE__*/React.createElement(ListItemMeta, {\n        className: rightAlign\n      }, /*#__PURE__*/React.createElement(Typography, {\n        use: \"subtitle2\"\n      }, t(_templateObject5())({\n        time: /*#__PURE__*/React.createElement(TimeAgo, {\n          datetime: submission.meta.submittedOn\n        })\n      }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(FormVersion, {\n        submission: submission\n      }))));\n    }));\n  })), /*#__PURE__*/React.createElement(FormSubmissionDialog, {\n    onClose: function onClose() {\n      selectFormSubmission(null);\n    },\n    formSubmission: selectedFormSubmission\n  }));\n};\n\nexport default FormSubmissionsList;","map":null,"metadata":{},"sourceType":"module"}