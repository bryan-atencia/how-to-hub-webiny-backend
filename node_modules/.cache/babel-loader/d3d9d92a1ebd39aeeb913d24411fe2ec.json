{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useCallback } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { CREATE_REVISION_FORM, DELETE_REVISION } from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { usePublishRevisionHandler } from \"../utils/usePublishRevisionHandler\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { usePageDetails } from \"@webiny/app-page-builder/admin/hooks/usePageDetails\";\nexport function useRevisionHandlers(_ref) {\n  var rev = _ref.rev;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var client = useApolloClient();\n\n  var _usePageDetails = usePageDetails(),\n      page = _usePageDetails.page;\n\n  var _usePublishRevisionHa = usePublishRevisionHandler({\n    page: page\n  }),\n      publishRevision = _usePublishRevisionHa.publishRevision;\n\n  var createRevision = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$client$mutate, res, _res$pageBuilder$revi, data, error;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.mutate({\n              mutation: CREATE_REVISION_FORM,\n              variables: {\n                revision: rev.id\n              },\n              refetchQueries: [\"PbListPages\"],\n              awaitRefetchQueries: true\n            });\n\n          case 2:\n            _yield$client$mutate = _context.sent;\n            res = _yield$client$mutate.data;\n            _res$pageBuilder$revi = res.pageBuilder.revision, data = _res$pageBuilder$revi.data, error = _res$pageBuilder$revi.error;\n\n            if (!error) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showSnackbar(error.message));\n\n          case 7:\n            history.push(\"/page-builder/editor/\".concat(data.id));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [rev]);\n  var editRevision = useCallback(function () {\n    history.push(\"/page-builder/editor/\".concat(rev.id));\n  }, [rev]);\n  var deleteRevision = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$client$mutate2, res, error;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return client.mutate({\n              mutation: DELETE_REVISION,\n              variables: {\n                id: rev.id\n              },\n              refetchQueries: [\"PbListPages\"],\n              awaitRefetchQueries: true\n            });\n\n          case 2:\n            _yield$client$mutate2 = _context2.sent;\n            res = _yield$client$mutate2.data;\n            error = res.pageBuilder.deleteRevision.error;\n\n            if (!error) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", showSnackbar(error.message));\n\n          case 7:\n            if (rev.id === page.id) {\n              history.push(\"/page-builder/pages\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [rev, page]);\n  return {\n    publishRevision: publishRevision,\n    createRevision: createRevision,\n    editRevision: editRevision,\n    deleteRevision: deleteRevision\n  };\n}","map":null,"metadata":{},"sourceType":"module"}