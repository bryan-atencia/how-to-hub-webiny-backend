{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Renders radio buttons, allowing selection of a single value.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Radio Buttons\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport { Radio, RadioGroup } from \"@webiny/ui/Radio\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport get from \"lodash/get\";\nvar t = i18n.ns(\"app-headless-cms/admin/fields/text\");\nvar plugin = {\n  type: \"cms-editor-field-renderer\",\n  name: \"cms-editor-field-renderer-radio-buttons\",\n  renderer: {\n    rendererName: \"radio-buttons\",\n    name: t(_templateObject()),\n    description: t(_templateObject2()),\n    canUse: function canUse(_ref) {\n      var field = _ref.field;\n      return !field.multipleValues && get(field, \"predefinedValues.enabled\");\n    },\n    render: function render(_ref2) {\n      var field = _ref2.field,\n          getBind = _ref2.getBind,\n          locale = _ref2.locale;\n      var Bind = getBind();\n      var valuesItem = field.predefinedValues.values.values.find(function (item) {\n        return item.locale === locale;\n      });\n      var options = [];\n\n      if (valuesItem) {\n        options = Array.isArray(valuesItem.value) ? valuesItem.value : [];\n      }\n\n      return /*#__PURE__*/React.createElement(Bind, null, /*#__PURE__*/React.createElement(RadioGroup, {\n        label: I18NValue({\n          value: field.label\n        }),\n        description: I18NValue({\n          value: field.helpText\n        })\n      }, function (_ref3) {\n        var onChange = _ref3.onChange,\n            getValue = _ref3.getValue;\n        return /*#__PURE__*/React.createElement(React.Fragment, null, options.map(function (option, index) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: option.value + index\n          }, /*#__PURE__*/React.createElement(Radio, {\n            label: option.label,\n            value: getValue(option.value),\n            onChange: onChange(option.value)\n          }));\n        }));\n      }));\n    }\n  }\n};\nexport default plugin;","map":null,"metadata":{},"sourceType":"module"}