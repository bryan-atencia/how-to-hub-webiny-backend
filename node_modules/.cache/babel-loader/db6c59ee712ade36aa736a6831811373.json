{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { TopAppBarSecondary, TopAppBarSection } from \"@webiny/ui/TopAppBar\";\nimport { ButtonDefault, ButtonIcon } from \"@webiny/ui/Button\";\nimport { deactivateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getPlugin, getPlugins } from \"@webiny/plugins\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { useKeyHandler } from \"@webiny/app-page-builder/editor/hooks/useKeyHandler\";\nimport Menu from \"./components/Menu\";\nimport { ReactComponent as NavigateBeforeIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/navigate_before.svg\";\nvar divider = \"pb-editor-page-element-settings-divider\";\n\nvar getElementActions = function getElementActions(plugin) {\n  if (!plugin.settings) {\n    return [];\n  }\n\n  var actions = plugin.settings.map(function (pl) {\n    if (typeof pl === \"string\") {\n      return {\n        plugin: getPlugin(pl || divider),\n        options: {}\n      };\n    }\n\n    if (Array.isArray(pl)) {\n      return {\n        plugin: getPlugin(pl[0] || divider),\n        options: pl[1]\n      };\n    }\n\n    return null;\n  });\n  return [].concat(_toConsumableArray(actions), [{\n    plugin: getPlugin(\"pb-editor-page-element-settings-advanced\")\n  }, {\n    plugin: getPlugin(\"pb-editor-page-element-settings-save\")\n  }]).filter(function (pl) {\n    return pl;\n  });\n};\n\nvar ElementSettingsBar = function ElementSettingsBar(_ref) {\n  var elementType = _ref.elementType,\n      deactivateElement = _ref.deactivateElement;\n\n  if (!elementType) {\n    return null;\n  }\n\n  var plugin = getPlugins(\"pb-editor-page-element\").find(function (pl) {\n    return pl.elementType === elementType;\n  });\n\n  if (!plugin) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ElementSettingsBarContent, {\n    plugin: plugin,\n    deactivateElement: deactivateElement\n  });\n};\n\nvar ElementSettingsBarContent = /*#__PURE__*/React.memo(function (_ref2) {\n  var plugin = _ref2.plugin,\n      deactivateElement = _ref2.deactivateElement;\n\n  var _useKeyHandler = useKeyHandler(),\n      addKeyHandler = _useKeyHandler.addKeyHandler,\n      removeKeyHandler = _useKeyHandler.removeKeyHandler;\n\n  useEffect(function () {\n    addKeyHandler(\"escape\", function (e) {\n      e.preventDefault();\n      deactivateElement();\n    });\n    return function () {\n      return removeKeyHandler(\"escape\");\n    };\n  });\n  var actions = getElementActions(plugin);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopAppBarSecondary, {\n    fixed: true\n  }, /*#__PURE__*/React.createElement(TopAppBarSection, {\n    alignStart: true\n  }, /*#__PURE__*/React.createElement(ButtonDefault, {\n    onClick: deactivateElement\n  }, /*#__PURE__*/React.createElement(ButtonIcon, {\n    icon: /*#__PURE__*/React.createElement(NavigateBeforeIcon, null)\n  }), \" Back\")), /*#__PURE__*/React.createElement(TopAppBarSection, null, actions.map(function (_ref3, index) {\n    var plugin = _ref3.plugin,\n        options = _ref3.options;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: plugin.name + \"-\" + index,\n      style: {\n        position: \"relative\"\n      }\n    }, plugin.renderAction({\n      options: options\n    }), typeof plugin.renderMenu === \"function\" && /*#__PURE__*/React.createElement(Menu, {\n      plugin: plugin,\n      options: options\n    }));\n  }))));\n});\nElementSettingsBarContent.displayName = \"ElementSettingsBarContent\";\nexport default connect(function (state) {\n  var element = getActiveElement(state);\n  return {\n    elementType: element ? element.type : null\n  };\n}, {\n  deactivateElement: deactivateElement\n})( /*#__PURE__*/React.memo(ElementSettingsBar));","map":null,"metadata":{},"sourceType":"module"}