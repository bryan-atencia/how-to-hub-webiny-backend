{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport { Image } from \"@webiny/app/components/Image\";\nimport * as Ui from \"@webiny/ui/ImageUpload\";\nimport { FileManager } from \"@webiny/app-admin/components/FileManager\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\nimport styled from \"@emotion/styled\";\nvar FileUploadWrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"ej2a27i0\",\n  label: \"FileUploadWrapper\"\n})({\n  position: \"relative\",\n  \".disabled\": {\n    opacity: 0.75,\n    pointerEvents: \"none\"\n  },\n  \".mdc-text-field-helper-text\": {\n    color: \"var(--mdc-theme-text-secondary-on-background)\"\n  }\n});\n\nvar FileUpload = /*#__PURE__*/function (_React$Component) {\n  _inherits(FileUpload, _React$Component);\n\n  var _super = _createSuper(FileUpload);\n\n  function FileUpload() {\n    _classCallCheck(this, FileUpload);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileUpload, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          onChange = _this$props.onChange,\n          value = _this$props.value,\n          validation = _this$props.validation,\n          description = _this$props.description,\n          accept = _this$props.accept,\n          maxSize = _this$props.maxSize,\n          multipleMaxCount = _this$props.multipleMaxCount,\n          multipleMaxSize = _this$props.multipleMaxSize,\n          imagePreviewProps = _this$props.imagePreviewProps,\n          round = _this$props.round,\n          multiple = _this$props.multiple,\n          placeholder = _this$props.placeholder,\n          styles = _this$props.styles,\n          renderImagePreview = _this$props.renderImagePreview;\n\n      var defaultRenderImagePreview = function defaultRenderImagePreview(renderImageProps) {\n        return /*#__PURE__*/React.createElement(Image, Object.assign({}, renderImageProps, imagePreviewProps));\n      };\n\n      return /*#__PURE__*/React.createElement(FileUploadWrapper, {\n        className: className\n      }, /*#__PURE__*/React.createElement(FileManager, {\n        onChange: onChange,\n        accept: accept,\n        maxSize: maxSize,\n        multiple: multiple,\n        multipleMaxCount: multipleMaxCount,\n        multipleMaxSize: multipleMaxSize\n      }, function (_ref) {\n        var showFileManager = _ref.showFileManager;\n        return /*#__PURE__*/React.createElement(Ui.Image, {\n          renderImagePreview: renderImagePreview || defaultRenderImagePreview,\n          style: styles,\n          value: value,\n          uploadImage: showFileManager,\n          removeImage: onChange,\n          round: round,\n          placeholder: placeholder\n        });\n      }), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {\n        error: true\n      }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));\n    }\n  }]);\n\n  return FileUpload;\n}(React.Component);\n\n_defineProperty(FileUpload, \"defaultProps\", {\n  validation: {\n    isValid: null\n  },\n  styles: {\n    width: \"100%\",\n    height: \"auto\"\n  }\n});\n\nexport { FileUpload as default };","map":null,"metadata":{},"sourceType":"module"}