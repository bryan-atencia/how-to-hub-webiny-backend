{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _isEqual from \"lodash/isEqual\";\nimport * as React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { css } from \"emotion\";\nimport Element from \"@webiny/app-page-builder/editor/components/Element\";\nimport DropZone from \"@webiny/app-page-builder/editor/components/DropZone\";\nimport { dropElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getElement } from \"@webiny/app-page-builder/editor/selectors\";\n\nvar BlockContainer = function BlockContainer(_ref) {\n  var elementStyle = _ref.elementStyle,\n      elementAttributes = _ref.elementAttributes,\n      customClasses = _ref.customClasses,\n      combineClassNames = _ref.combineClassNames,\n      element = _ref.element,\n      dropElement = _ref.dropElement;\n\n  var width = elementStyle.width,\n      alignItems = elementStyle.alignItems,\n      justifyContent = elementStyle.justifyContent,\n      containerStyle = _objectWithoutProperties(elementStyle, [\"width\", \"alignItems\", \"justifyContent\"]);\n\n  var id = element.id,\n      type = element.type,\n      elements = element.elements;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    className: \"webiny-pb-layout-block-container \" + /*#__PURE__*/css(containerStyle, \"label:BlockContainer;\")\n  }, elementAttributes), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: width ? width : \"100%\",\n      alignSelf: justifyContent,\n      alignItems: alignItems\n    },\n    className: combineClassNames.apply(void 0, _toConsumableArray(customClasses))\n  }, !elements.length && /*#__PURE__*/React.createElement(DropZone.Center, {\n    element: element\n  }, \"Add an element here\"), elements.map(function (childId, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: childId\n    }, /*#__PURE__*/React.createElement(DropZone.Above, {\n      type: type,\n      onDrop: function onDrop(source) {\n        return dropElement({\n          source: source,\n          target: {\n            id: id,\n            type: type,\n            position: index\n          }\n        });\n      }\n    }), /*#__PURE__*/React.createElement(Element, {\n      key: childId,\n      id: childId\n    }), index === elements.length - 1 && /*#__PURE__*/React.createElement(DropZone.Below, {\n      type: type,\n      onDrop: function onDrop(source) {\n        dropElement({\n          source: source,\n          target: {\n            id: id,\n            type: type,\n            position: elements.length\n          }\n        });\n      }\n    }));\n  })));\n};\n\nexport default connect(function (state, props) {\n  return {\n    element: getElement(state, props.elementId)\n  };\n}, {\n  dropElement: dropElement\n}, null, {\n  areStatePropsEqual: _isEqual\n})(BlockContainer);","map":null,"metadata":{},"sourceType":"module"}