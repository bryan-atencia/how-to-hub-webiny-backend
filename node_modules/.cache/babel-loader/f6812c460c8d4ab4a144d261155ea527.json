{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as MoreVerticalIcon } from \"@svgr/webpack!@webiny/app-page-builder/admin/assets/more_vert.svg\";\nimport { ReactComponent as PreviewIcon } from \"@svgr/webpack!@webiny/app-page-builder/admin/assets/visibility.svg\";\nimport { ReactComponent as HomeIcon } from \"@svgr/webpack!@webiny/app-page-builder/admin/assets/round-home-24px.svg\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { MenuItem, Menu } from \"@webiny/ui/Menu\";\nimport { usePageBuilderSettings } from \"@webiny/app-page-builder/admin/hooks/usePageBuilderSettings\";\nimport { css } from \"emotion\";\nimport { Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport classNames from \"classnames\";\nimport { setHomePage } from \"./graphql\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { getPlugins } from \"@webiny/plugins\";\nvar menuStyles = /*#__PURE__*/css({\n  width: 250,\n  right: -105,\n  left: \"auto !important\",\n  \".disabled\": {\n    opacity: 0.5,\n    pointerEvents: \"none\"\n  }\n}, \"label:menuStyles;\");\n\nvar PageOptionsMenu = function PageOptionsMenu(props) {\n  var page = props.pageDetails.page;\n\n  var _usePageBuilderSettin = usePageBuilderSettings(),\n      getPageUrl = _usePageBuilderSettin.getPageUrl,\n      getPagePreviewUrl = _usePageBuilderSettin.getPagePreviewUrl;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useConfirmationDialo = useConfirmationDialog({\n    title: \"Delete page\",\n    message: /*#__PURE__*/React.createElement(\"span\", null, \"You're about to set the \", /*#__PURE__*/React.createElement(\"strong\", null, page.title), \" page as your new homepage, are you sure you want to continue?\", \" \", !page.published && \"Note that your page will be automatically published.\")\n  }),\n      showConfirmation = _useConfirmationDialo.showConfirmation; // We must prevent opening in new tab - Cypress doesn't work with new tabs.\n\n\n  var target = window.Cypress ? \"_self\" : \"_blank\";\n  return /*#__PURE__*/React.createElement(Menu, {\n    className: menuStyles,\n    handle: /*#__PURE__*/React.createElement(IconButton, {\n      \"data-testid\": \"pb-page-details-header-page-options-menu\",\n      icon: /*#__PURE__*/React.createElement(MoreVerticalIcon, null)\n    })\n  }, page.locked ? /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: function onClick() {\n      return window.open(getPageUrl(page), target);\n    }\n  }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {\n    \"data-testid\": \"pb-page-details-header-page-options-menu-preview\",\n    icon: /*#__PURE__*/React.createElement(PreviewIcon, null)\n  })), \"View\") : /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: function onClick() {\n      return window.open(getPagePreviewUrl(page), target);\n    }\n  }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {\n    \"data-testid\": \"pb-page-details-header-page-options-menu-preview\",\n    icon: /*#__PURE__*/React.createElement(PreviewIcon, null)\n  })), \"Preview\"), /*#__PURE__*/React.createElement(Mutation, {\n    mutation: setHomePage\n  }, function (update) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      className: classNames({\n        disabled: page.isHomePage\n      }),\n      onClick: function onClick() {\n        showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var response, error;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return update({\n                    variables: {\n                      id: page.id\n                    }\n                  });\n\n                case 2:\n                  response = _context.sent;\n                  error = response.data.pageBuilder.setHomePage.error;\n\n                  if (error) {\n                    showSnackbar(error.message);\n                  } else {\n                    showSnackbar(\"Homepage set successfully!\");\n\n                    if (!page.published) {\n                      props.refreshPages();\n                    }\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })));\n      }\n    }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {\n      icon: /*#__PURE__*/React.createElement(HomeIcon, null)\n    })), \"Set as homepage\");\n  }), getPlugins(\"pb-page-details-header-right-options-menu-item\").map(function (plugin) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: plugin.name\n    }, plugin.render(props));\n  }));\n};\n\nexport default PageOptionsMenu;","map":null,"metadata":{},"sourceType":"module"}