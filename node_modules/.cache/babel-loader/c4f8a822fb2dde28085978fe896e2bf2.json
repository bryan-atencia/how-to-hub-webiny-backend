{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Enable Google reCAPTCHA\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Edit Google reCAPTCHA settings\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport get from \"lodash.get\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { UPDATE_FORMS_SETTINGS } from \"./graphql\";\nimport { useFormEditor } from \"@webiny/app-form-builder/admin/components/FormEditor/Context\";\nimport { validation } from \"@webiny/validation\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.namespace(\"Forms.ReCaptchaSettingsDialog\");\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@webiny/ui/Dialog\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\n\nvar ReCaptchaSettingsDialog = function ReCaptchaSettingsDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      reCaptchaSettings = _ref.reCaptchaSettings,\n      onSubmit = _ref.onSubmit;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useFormEditor = useFormEditor(),\n      setData = _useFormEditor.setData;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose\n  }, /*#__PURE__*/React.createElement(Mutation, {\n    mutation: UPDATE_FORMS_SETTINGS\n  }, function (update) {\n    return /*#__PURE__*/React.createElement(Form, {\n      data: reCaptchaSettings,\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n          var siteKey, secretKey, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  siteKey = _ref2.siteKey, secretKey = _ref2.secretKey;\n                  setLoading(true);\n                  _context.t0 = get;\n                  _context.next = 5;\n                  return update({\n                    variables: {\n                      data: {\n                        reCaptcha: {\n                          enabled: true,\n                          siteKey: siteKey,\n                          secretKey: secretKey\n                        }\n                      }\n                    }\n                  });\n\n                case 5:\n                  _context.t1 = _context.sent;\n                  response = (0, _context.t0)(_context.t1, \"data.forms.updateSettings\");\n                  setData(function (data) {\n                    data.settings.reCaptcha.settings = {\n                      enabled: true,\n                      siteKey: siteKey,\n                      secretKey: secretKey\n                    };\n                    return data;\n                  });\n                  setLoading(false);\n\n                  if (!response.error) {\n                    _context.next = 11;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", showSnackbar(response.error.message));\n\n                case 11:\n                  onSubmit();\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }, function (_ref4) {\n      var Bind = _ref4.Bind,\n          submit = _ref4.submit;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject())), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n        span: 12\n      }, /*#__PURE__*/React.createElement(Bind, {\n        name: \"siteKey\",\n        validators: validation.create(\"required\")\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: \"Site key\",\n        description: /*#__PURE__*/React.createElement(React.Fragment, null, \"A v2 Tickbox site key.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://www.google.com/recaptcha/admin\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\"\n        }, \"Don't have a site key?\"))\n      }))), /*#__PURE__*/React.createElement(Cell, {\n        span: 12\n      }, /*#__PURE__*/React.createElement(Bind, {\n        name: \"secretKey\",\n        validators: validation.create(\"required\")\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: \"Secret key\",\n        description: /*#__PURE__*/React.createElement(React.Fragment, null, \"A v2 Tickbox secret key.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n          href: \"https://www.google.com/recaptcha/admin\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\"\n        }, \"Don't have a site key?\"))\n      }))))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(ButtonDefault, {\n        onClick: submit\n      }, t(_templateObject2()))));\n    });\n  }));\n};\n\nexport default ReCaptchaSettingsDialog;","map":null,"metadata":{},"sourceType":"module"}