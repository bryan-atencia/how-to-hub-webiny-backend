{"ast":null,"code":"import { css as _css } from \"emotion\";\nimport _get from \"lodash/get\";\nimport * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { TagsMultiAutocomplete } from \"@webiny/app-page-builder/admin/components/TagsMultiAutocomplete\";\nimport { CategoriesAutocomplete } from \"@webiny/app-page-builder/admin/components/CategoriesAutocomplete\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { validation } from \"@webiny/validation\";\nvar menuPageFormStyle = {\n  color: \"var(--mdc-theme-on-surface)\",\n  backgroundColor: \"var(--mdc-theme-background) !important\"\n};\n\nvar LinkForm = function LinkForm(_ref) {\n  var data = _ref.data,\n      onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel;\n  return /*#__PURE__*/React.createElement(Elevation, {\n    z: 4,\n    className: _css(menuPageFormStyle)\n  }, /*#__PURE__*/React.createElement(Form, {\n    data: data,\n    onSubmit: onSubmit\n  }, function (_ref2) {\n    var Bind = _ref2.Bind,\n        submit = _ref2.submit;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Typography, {\n      use: \"overline\"\n    }, \"Page list menu item\"))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"title\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Title\"\n    })))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"category\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(CategoriesAutocomplete, {\n      label: \"Category\"\n    })))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"sortBy\",\n      defaultValue: \"publishedOn\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Sort by...\"\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"publishedOn\"\n    }, \"Published on\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"title\"\n    }, \"Title\"))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"sortDir\",\n      defaultValue: \"-1\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Sort direction...\"\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\"\n    }, \"Ascending\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"-1\"\n    }, \"Descending\"))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"tags\"\n    }, /*#__PURE__*/React.createElement(TagsMultiAutocomplete, null)))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, _get(data, \"tags.length\", 0) > 0 && /*#__PURE__*/React.createElement(Bind, {\n      name: \"tagsRule\",\n      defaultValue: \"ALL\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Tags rule...\"\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\"\n    }, \"Must include all tags\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ANY\"\n    }, \"Must include any of the tags\"))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n      onClick: onCancel\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(ButtonPrimary, {\n      onClick: submit,\n      style: {\n        float: \"right\"\n      }\n    }, \"Save menu item\"))));\n  }));\n};\n\nexport default LinkForm;","map":null,"metadata":{},"sourceType":"module"}