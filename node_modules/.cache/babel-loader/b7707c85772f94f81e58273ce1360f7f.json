{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Choose a component that will render the field:\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"There are no component that can render this field.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from \"react\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Radio, RadioGroup } from \"@webiny/ui/Radio\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { css } from \"emotion\";\nimport { validation } from \"@webiny/validation\";\nvar t = i18n.ns(\"app-headless-cms/admin/components/editor/tabs/edit-field-dialog/appearance-tab\");\nvar style = {\n  topLabel: /*#__PURE__*/css({\n    marginBottom: 25\n  }, \"label:topLabel;\"),\n  noComponentsMessage: /*#__PURE__*/css({\n    textAlign: \"center\",\n    padding: 25\n  }, \"label:noComponentsMessage;\"),\n  radioContainer: /*#__PURE__*/css({\n    marginBottom: 10\n  }, \"label:radioContainer;\")\n};\n\nvar AppearanceTab = function AppearanceTab(props) {\n  var field = props.field,\n      form = props.form;\n  var renderPlugins = getPlugins(\"cms-editor-field-renderer\").filter(function (item) {\n    return item.renderer.canUse({\n      field: field\n    });\n  });\n  useEffect(function () {\n    // If the currently selected render plugin is no longer available, select the first available one.\n    var currentlySelectedRenderAvailable = renderPlugins.find(function (item) {\n      return item.renderer.rendererName === field.renderer.name;\n    });\n\n    if (!currentlySelectedRenderAvailable) {\n      if (renderPlugins[0]) {\n        form.setValue(\"renderer.name\", renderPlugins[0].renderer.rendererName);\n      } else {\n        console.log(\"No renderers for field \".concat(field.fieldId, \" found.\"), field);\n      }\n    }\n  });\n\n  if (renderPlugins.length === 0) {\n    return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12,\n      className: style.noComponentsMessage\n    }, t(_templateObject())));\n  }\n\n  var Bind = form.Bind;\n  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.topLabel\n  }, t(_templateObject2())), /*#__PURE__*/React.createElement(Bind, {\n    name: \"renderer.name\",\n    validate: validation.create(\"required\")\n  }, /*#__PURE__*/React.createElement(RadioGroup, null, function (_ref) {\n    var onChange = _ref.onChange,\n        getValue = _ref.getValue;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, renderPlugins.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.name,\n        className: style.radioContainer\n      }, /*#__PURE__*/React.createElement(Radio, {\n        value: getValue(item.renderer.rendererName),\n        onChange: onChange(item.renderer.rendererName),\n        label: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, item.renderer.name), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Typography, {\n          use: \"caption\"\n        }, item.renderer.description)))\n      }));\n    }));\n  }))));\n};\n\nexport default AppearanceTab;","map":null,"metadata":{},"sourceType":"module"}