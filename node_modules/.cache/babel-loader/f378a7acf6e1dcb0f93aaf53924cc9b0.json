{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from \"react\";\nimport { Hotkeys } from \"react-hotkeyz\";\nimport dataURLtoBlob from \"dataurl-to-blob\";\nimport { ImageEditorDialog } from \"@webiny/ui/ImageUpload\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport outputFileSelectionError from \"@webiny/app-admin/components/FileManager/outputFileSelectionError\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { ReactComponent as EditIcon } from \"@svgr/webpack!./../icons/edit.svg\";\n\nfunction toDataUrl(url) {\n  return new Promise(function (resolve) {\n    var xhr = new window.XMLHttpRequest();\n\n    xhr.onload = function () {\n      var reader = new window.FileReader();\n\n      reader.onloadend = function () {\n        resolve(reader.result);\n      };\n\n      reader.readAsDataURL(xhr.response);\n    };\n\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.send();\n  });\n}\n\nvar initialState = {\n  showImageEditor: false,\n  dataUrl: null\n};\n\nvar reducer = function reducer(state, action) {\n  var next = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"setDataUrl\":\n      next.dataUrl = action.dataUrl;\n      next.showImageEditor = true;\n      break;\n\n    case \"hideImageEditor\":\n      next.dataUrl = null;\n      next.showImageEditor = false;\n      break;\n  }\n\n  return next;\n}; // TODO: @adrian\n\n\nvar EditAction = function EditAction(props) {\n  var file = props.file,\n      uploadFile = props.uploadFile,\n      validateFiles = props.validateFiles;\n\n  var _React$useReducer = React.useReducer(reducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(\"span\", null, \"Edit image\"),\n    placement: \"bottom\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    icon: /*#__PURE__*/React.createElement(EditIcon, {\n      style: {\n        margin: \"0 8px 0 0\"\n      }\n    }),\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = dispatch;\n              _context.next = 3;\n              return toDataUrl(file.src);\n\n            case 3:\n              _context.t1 = _context.sent;\n              _context.t2 = {\n                type: \"setDataUrl\",\n                dataUrl: _context.t1\n              };\n              (0, _context.t0)(_context.t2);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  })), /*#__PURE__*/React.createElement(Hotkeys, {\n    zIndex: 60,\n    disabled: !state.dataUrl\n  }, /*#__PURE__*/React.createElement(ImageEditorDialog, {\n    dialogZIndex: 10,\n    open: state.showImageEditor,\n    src: state.dataUrl,\n    onClose: function onClose() {\n      return dispatch({\n        type: \"hideImageEditor\"\n      });\n    },\n    onAccept: function onAccept(src) {\n      var blob = dataURLtoBlob(src);\n      var errors = validateFiles([blob]);\n\n      if (errors.length) {\n        showSnackbar(outputFileSelectionError(errors));\n      } else {\n        blob.name = file.name;\n        uploadFile(blob);\n      }\n\n      dispatch({\n        type: \"hideImageEditor\"\n      });\n    }\n  })));\n};\n\nexport default EditAction;","map":null,"metadata":{},"sourceType":"module"}