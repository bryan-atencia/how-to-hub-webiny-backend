{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validationError = _interopRequireDefault(require(\"./../validationError\"));\n/**\n * @name eq\n * @description Equality validator. This validator checks if the given values are equal.\n * @param {any} value This is the value that will be validated.\n * @param {Array<string>} params This is the value to validate against. It is passed as a validator parameter: `eq:valueToCompareWith`\n * @throws {ValidationError}\n * @example\n * import { validation } from '@webiny/validation';\n * validation.validate('email@gmail.com', 'eq:another@gmail.com').then(() => {\n *  // Valid\n * }).catch(e => {\n *  // Invalid\n * });\n */\n\n\nvar _default = (value, params) => {\n  if (!value) {\n    return;\n  }\n\n  value = value + \"\"; // Intentionally put '==' instead of '===' because passed parameter for this validator is always sent inside a string (eg. \"eq:test\").\n  // eslint-disable-next-line\n\n  if (value == params[0]) {\n    return;\n  }\n\n  throw new _validationError.default(\"Value must be equal to \" + params[0] + \".\");\n};\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}