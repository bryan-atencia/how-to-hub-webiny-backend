{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { getRevisions } from \"@webiny/app-page-builder/editor/selectors\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { ReactComponent as DownButton } from \"@svgr/webpack!./icons/round-arrow_drop_down-24px.svg\";\nvar buttonStyle = /*#__PURE__*/css({\n  \"&.mdc-button\": {\n    color: \"var(--mdc-theme-text-primary-on-background) !important\"\n  }\n}, \"label:buttonStyle;\");\nvar menuList = /*#__PURE__*/css({\n  \".mdc-list-item\": {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    textAlign: \"left\"\n  }\n}, \"label:menuList;\");\n\nvar Revisions = function Revisions(_ref) {\n  var revisions = _ref.revisions;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  return /*#__PURE__*/React.createElement(Menu, {\n    className: menuList,\n    onSelect: function onSelect(evt) {\n      history.push(\"/page-builder/editor/\".concat(revisions[evt.detail.index].id));\n    },\n    handle: /*#__PURE__*/React.createElement(ButtonDefault, {\n      className: buttonStyle\n    }, \"Revisions \", /*#__PURE__*/React.createElement(Icon, {\n      icon: /*#__PURE__*/React.createElement(DownButton, null)\n    }))\n  }, revisions.map(function (rev) {\n    var status = \"draft\";\n\n    if (rev.published) {\n      status = \"published\";\n    }\n\n    if (rev.locked && !rev.published) {\n      status = \"locked\";\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: rev.id,\n      disabled: status !== \"draft\"\n    }, /*#__PURE__*/React.createElement(Typography, {\n      use: \"body2\"\n    }, \"v\", rev.version), /*#__PURE__*/React.createElement(Typography, {\n      use: \"caption\"\n    }, \"(\", status, \") \"));\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    revisions: getRevisions(state)\n  };\n})( /*#__PURE__*/React.memo(Revisions));","map":null,"metadata":{},"sourceType":"module"}