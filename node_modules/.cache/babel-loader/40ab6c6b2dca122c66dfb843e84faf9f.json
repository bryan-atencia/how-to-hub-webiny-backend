{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query GetI18NInformation {\\n        i18n {\\n            getI18NInformation {\\n                currentLocale {\\n                    id\\n                    code\\n                }\\n                locales {\\n                    id\\n                    code\\n                    default\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport get from \"lodash.get\";\nexport var getI18NInformation = gql(_templateObject());\nexport var I18NContext = React.createContext(null);\nvar defState = {\n  initializing: false,\n  currentLocale: null,\n  locales: []\n};\nexport var I18NProvider = function I18NProvider(props) {\n  var children = props.children,\n      loader = props.loader;\n\n  var _useQuery = useQuery(getI18NInformation),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  if (loading && loader) {\n    return loader;\n  }\n\n  var _get = get(data, \"i18n.getI18NInformation\", {}),\n      currentLocale = _get.currentLocale,\n      locales = _get.locales;\n\n  var value = {\n    refetchLocales: refetch,\n    state: _objectSpread(_objectSpread({}, defState), {}, {\n      currentLocale: currentLocale,\n      locales: locales\n    })\n  };\n  return /*#__PURE__*/React.createElement(I18NContext.Provider, {\n    value: value\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}