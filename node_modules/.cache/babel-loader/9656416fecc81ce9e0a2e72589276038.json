{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query PbGetDomain {\\n        pageBuilder {\\n            getSettings {\\n                id\\n                data {\\n                    domain\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useCallback } from \"react\";\nimport { useQuery } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport getPagePreviewUrlFunction from \"./getPagePreviewUrl\";\nexport var DOMAIN_QUERY = gql(_templateObject());\nexport function usePageBuilderSettings() {\n  var _useQuery = useQuery(DOMAIN_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  var getDomain = function getDomain() {\n    return _get(data, \"pageBuilder.getSettings.data.domain\");\n  };\n\n  var getPageUrl = useCallback(function (page) {\n    if (loading) {\n      return null;\n    }\n\n    return getDomain() + page.url;\n  }, [data, loading]);\n  var getPagePreviewUrl = useCallback(function (page) {\n    if (loading) {\n      return null;\n    }\n\n    return getPagePreviewUrlFunction({\n      page: page,\n      domain: getDomain()\n    });\n  }, [data, loading]);\n  return {\n    getDomain: getDomain,\n    getPageUrl: getPageUrl,\n    getPagePreviewUrl: getPagePreviewUrl,\n    data: loading ? null : _get(data, \"pageBuilder.getSettings.data\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}