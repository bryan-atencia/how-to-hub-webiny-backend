{"ast":null,"code":"import _get from \"lodash/get\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Slider as SliderCmp } from \"@webiny/ui/Slider\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\n\nvar Slider = function Slider(_ref) {\n  var label = _ref.label,\n      value = _ref.value,\n      updatePreview = _ref.updatePreview,\n      updateValue = _ref.updateValue,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step;\n  return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n    span: 4\n  }, /*#__PURE__*/React.createElement(Typography, {\n    use: \"overline\"\n  }, label)), /*#__PURE__*/React.createElement(Cell, {\n    span: 8\n  }, /*#__PURE__*/React.createElement(SliderCmp, {\n    value: value,\n    onChange: updateValue,\n    onInput: updatePreview,\n    min: min,\n    max: max,\n    discrete: true,\n    step: step\n  })));\n};\n\nexport default connect(function (state, _ref2) {\n  var valueKey = _ref2.valueKey;\n  return {\n    value: _get(getActiveElement(state), valueKey, 0)\n  };\n})( /*#__PURE__*/React.memo(Slider));","map":null,"metadata":{},"sourceType":"module"}