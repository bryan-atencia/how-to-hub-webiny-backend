{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { ELEMENT_CREATED } from \"@webiny/app-page-builder/editor/actions\";\nimport { ReactComponent as ImageIcon } from \"@svgr/webpack!./round-image-24px.svg\";\nimport ImageSettings from \"./ImageSettings\";\nimport Image from \"./Image\";\nimport Action from \"../../elementSettings/components/Action\";\nexport default (function () {\n  var PreviewBox = /*#__PURE__*/styled(\"div\", {\n    target: \"ey8f7jk0\",\n    label: \"PreviewBox\"\n  })({\n    textAlign: \"center\",\n    height: 50,\n    svg: {\n      height: 50,\n      width: 50\n    }\n  });\n  return [{\n    name: \"pb-editor-page-element-image\",\n    type: \"pb-editor-page-element\",\n    elementType: \"image\",\n    toolbar: {\n      title: \"Image\",\n      group: \"pb-editor-element-group-basic\",\n      preview: function preview() {\n        return /*#__PURE__*/React.createElement(PreviewBox, null, /*#__PURE__*/React.createElement(ImageIcon, null));\n      }\n    },\n    settings: [\"pb-editor-page-element-settings-image\", [\"pb-editor-page-element-settings-background\", {\n      image: false\n    }], \"pb-editor-page-element-settings-link\", \"\", \"pb-editor-page-element-settings-border\", \"pb-editor-page-element-settings-shadow\", \"\", [\"pb-editor-page-element-settings-horizontal-align\", {\n      alignments: [\"left\", \"center\", \"right\"]\n    }], \"pb-editor-page-element-settings-padding\", \"pb-editor-page-element-settings-margin\", \"\", \"pb-editor-page-element-settings-clone\", \"pb-editor-page-element-settings-delete\", \"\"],\n    target: [\"column\", \"row\"],\n    create: function create(options) {\n      return _objectSpread({\n        type: \"image\",\n        elements: [],\n        data: {\n          settings: {\n            horizontalAlign: \"center\",\n            margin: {\n              desktop: {\n                all: 0\n              },\n              mobile: {\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 15\n              },\n              advanced: true\n            },\n            padding: {\n              desktop: {\n                all: 0\n              },\n              mobile: {\n                all: 0\n              }\n            }\n          }\n        }\n      }, options);\n    },\n    render: function render(_ref) {\n      var element = _ref.element;\n      return /*#__PURE__*/React.createElement(Image, {\n        element: element\n      });\n    }\n  }, {\n    name: \"pb-editor-page-element-settings-image\",\n    type: \"pb-editor-page-element-settings\",\n    renderAction: function renderAction() {\n      return /*#__PURE__*/React.createElement(Action, {\n        plugin: this.name,\n        tooltip: \"Image\",\n        icon: /*#__PURE__*/React.createElement(ImageIcon, null)\n      });\n    },\n    renderMenu: function renderMenu() {\n      return /*#__PURE__*/React.createElement(ImageSettings, null);\n    }\n  }, {\n    type: \"pb-editor-redux-middleware\",\n    name: \"pb-editor-redux-middleware-image-created\",\n    actions: [ELEMENT_CREATED],\n    middleware: function middleware(_ref2) {\n      var action = _ref2.action,\n          next = _ref2.next;\n      var _action$payload = action.payload,\n          element = _action$payload.element,\n          source = _action$payload.source;\n      next(action);\n\n      if (element.type !== \"image\") {\n        return;\n      } // Check the source of the element (could be `saved` element which behaves differently from other elements)\n\n\n      var imagePlugin = getPlugins(\"pb-editor-page-element\").find(function (pl) {\n        return pl.elementType === source.type;\n      });\n\n      if (!imagePlugin) {\n        return;\n      }\n\n      var onCreate = imagePlugin.onCreate;\n\n      if (!onCreate || onCreate !== \"skip\") {\n        // If source element does not define a specific `onCreate` behavior - continue with the actual element plugin\n        // TODO: this isn't an ideal approach, implement a retry mechanism which polls for DOM element\n        setTimeout(function () {\n          var image = document.querySelector(\"#\".concat(window.CSS.escape(element.id), \" [data-role=\\\"select-image\\\"]\"));\n\n          if (image) {\n            image.click();\n          }\n        }, 100);\n      }\n    }\n  }];\n});","map":null,"metadata":{},"sourceType":"module"}