{"ast":null,"code":"import _cloneDeep from \"lodash/cloneDeep\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { merge } from \"dot-prop-immutable\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { renderPlugins } from \"@webiny/app/plugins\";\nimport { isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\nimport { withActiveElement } from \"@webiny/app-page-builder/editor/components\";\nimport { useKeyHandler } from \"@webiny/app-page-builder/editor/hooks/useKeyHandler\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { css } from \"emotion\";\nimport { Dialog, DialogContent, DialogActions, DialogButton, DialogCancel, DialogTitle } from \"@webiny/ui/Dialog\";\nimport { Form } from \"@webiny/form\";\nimport { Tabs } from \"@webiny/ui/Tabs\";\nimport { updateElement, deactivatePlugin } from \"@webiny/app-page-builder/editor/actions\";\nvar emptyElement = {\n  data: {},\n  type: null\n};\nvar dialogStyle = /*#__PURE__*/css({\n  \".mdc-dialog__surface\": {\n    maxWidth: 865\n  },\n  \".webiny-ui-dialog__content\": {\n    width: 865,\n    maxHeight: \"70vh\"\n  }\n}, \"label:dialogStyle;\");\n\nvar AdvancedSettings = function AdvancedSettings(props) {\n  var element = props.element,\n      open = props.open,\n      deactivatePlugin = props.deactivatePlugin;\n\n  var _ref = element || _cloneDeep(emptyElement),\n      data = _ref.data,\n      type = _ref.type;\n\n  var _useKeyHandler = useKeyHandler(),\n      addKeyHandler = _useKeyHandler.addKeyHandler,\n      removeKeyHandler = _useKeyHandler.removeKeyHandler;\n\n  var closeDialog = useCallback(function () {\n    deactivatePlugin({\n      name: \"pb-editor-page-element-settings-advanced\"\n    });\n  }, []);\n  var onSubmit = useHandler(props, function (_ref2) {\n    var element = _ref2.element,\n        updateElement = _ref2.updateElement;\n    return function (formData) {\n      // Get element settings plugins\n      var plugins = getPlugins(\"pb-editor-page-element-advanced-settings\").filter(function (pl) {\n        return pl.elementType === element.type;\n      });\n      formData = plugins.reduce(function (formData, pl) {\n        if (pl.onSave) {\n          return pl.onSave(formData);\n        }\n\n        return formData;\n      }, formData);\n      updateElement({\n        element: merge(element, \"data\", formData)\n      });\n      closeDialog();\n    };\n  });\n  useEffect(function () {\n    open ? addKeyHandler(\"escape\", closeDialog) : removeKeyHandler(\"escape\");\n  });\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: closeDialog,\n    className: dialogStyle,\n    \"data-testid\": \"pb-editor-advanced-element-settings-dialog\"\n  }, /*#__PURE__*/React.createElement(DialogTitle, null, \"Settings\"), /*#__PURE__*/React.createElement(Form, {\n    key: element && element.id,\n    data: data,\n    onSubmit: onSubmit\n  }, function (_ref3) {\n    var submit = _ref3.submit,\n        Bind = _ref3.Bind,\n        data = _ref3.data,\n        form = _ref3.form;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Tabs, null, renderPlugins(\"pb-editor-page-element-advanced-settings\", {\n      Bind: Bind,\n      data: data,\n      form: form\n    }, {\n      wrapper: false,\n      filter: function filter(pl) {\n        return pl.elementType === type;\n      }\n    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, null, \"Cancel\"), /*#__PURE__*/React.createElement(DialogButton, {\n      onClick: submit\n    }, \"Save\")));\n  }));\n};\n\nvar withConnect = connect(function (state) {\n  return {\n    open: isPluginActive(\"pb-editor-page-element-settings-advanced\")(state)\n  };\n}, {\n  updateElement: updateElement,\n  deactivatePlugin: deactivatePlugin\n});\nexport default withConnect(withActiveElement({\n  shallow: true\n})( /*#__PURE__*/React.memo(AdvancedSettings, function (prev, next) {\n  return prev.open === next.open;\n})));","map":null,"metadata":{},"sourceType":"module"}