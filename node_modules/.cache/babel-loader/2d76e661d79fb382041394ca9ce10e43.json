{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _isEqual from \"lodash/isEqual\";\nimport _omit from \"lodash/omit\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation SetHomePage($id: ID!) {\\n        pageBuilder {\\n            setHomePage(id: $id) {\\n                error {\\n                    message\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPage } from \"@webiny/app-page-builder/editor/selectors\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { MenuItem } from \"@webiny/ui/Menu\";\nimport { ListItemGraphic } from \"@webiny/ui/List\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as HomeIcon } from \"@svgr/webpack!@webiny/app-page-builder/admin/assets/round-home-24px.svg\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nvar setHomePage = gql(_templateObject());\n\nvar SetAsHomepageButton = function SetAsHomepageButton(_ref) {\n  var page = _ref.page;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    message: /*#__PURE__*/React.createElement(\"span\", null, \"You're about to set this page as your new homepage, are you sure you want to continue? Note that the page will automatically be published.\")\n  }, function (_ref2) {\n    var showConfirmation = _ref2.showConfirmation;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      mutation: setHomePage\n    }, function (update) {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        onClick: function onClick() {\n          showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var response, error;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return update({\n                      variables: {\n                        id: page.id\n                      }\n                    });\n\n                  case 2:\n                    response = _context.sent;\n                    error = response.data.pageBuilder.setHomePage.error;\n\n                    if (!error) {\n                      _context.next = 6;\n                      break;\n                    }\n\n                    return _context.abrupt(\"return\", showSnackbar(error.message));\n\n                  case 6:\n                    history.push(\"/page-builder/pages?id=\".concat(page.id)); // Let's wait a bit, because we are also redirecting the user.\n\n                    setTimeout(function () {\n                      return showSnackbar(\"New homepage set successfully!\");\n                    }, 500);\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          })));\n        }\n      }, /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {\n        icon: /*#__PURE__*/React.createElement(HomeIcon, null)\n      })), \"Set as homepage\");\n    });\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    page: _omit(getPage(state), [\"content\"])\n  };\n}, null, null, {\n  areStatePropsEqual: _isEqual\n})(SetAsHomepageButton);","map":null,"metadata":{},"sourceType":"module"}