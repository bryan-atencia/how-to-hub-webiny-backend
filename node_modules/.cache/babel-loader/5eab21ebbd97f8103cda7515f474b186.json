{"ast":null,"code":"import React, { useEffect, useCallback } from \"react\";\nimport { css } from \"emotion\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { togglePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useKeyHandler } from \"@webiny/app-page-builder/editor/hooks/useKeyHandler\";\nimport { getUi, getActivePlugins, isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nvar activeStyle = /*#__PURE__*/css({\n  \"&.mdc-icon-button\": {\n    color: \"var(--mdc-theme-primary)\"\n  }\n}, \"label:activeStyle;\");\n\nvar Action = function Action(props) {\n  var togglePlugin = props.togglePlugin,\n      plugin = props.plugin,\n      icon = props.icon,\n      active = props.active,\n      tooltip = props.tooltip,\n      onClick = props.onClick;\n\n  var _useKeyHandler = useKeyHandler(),\n      addKeyHandler = _useKeyHandler.addKeyHandler,\n      removeKeyHandler = _useKeyHandler.removeKeyHandler;\n\n  var clickHandler = useCallback(function () {\n    if (typeof onClick === \"function\") {\n      return onClick();\n    }\n\n    togglePlugin({\n      name: plugin,\n      closeOtherInGroup: true\n    });\n  }, [plugin, onClick]);\n  useEffect(function () {\n    var _props$shortcut = props.shortcut,\n        shortcut = _props$shortcut === void 0 ? [] : _props$shortcut;\n    var onClick = props.onClick;\n\n    if (typeof shortcut === \"string\") {\n      shortcut = [shortcut];\n    }\n\n    shortcut.map(function (short) {\n      addKeyHandler(short, function (e) {\n        var slateFocused = props.slateFocused,\n            settingsActive = props.settingsActive;\n\n        if (slateFocused || settingsActive) {\n          return;\n        }\n\n        e.preventDefault();\n        onClick();\n      });\n    });\n    return function () {\n      var _props$shortcut2 = props.shortcut,\n          shortcut = _props$shortcut2 === void 0 ? [] : _props$shortcut2;\n\n      if (typeof shortcut === \"string\") {\n        shortcut = [shortcut];\n      }\n\n      shortcut.map(function (short) {\n        removeKeyHandler(short);\n      });\n    };\n  });\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    placement: \"bottom\",\n    content: /*#__PURE__*/React.createElement(\"span\", null, tooltip)\n  }, active ? {\n    visible: false\n  } : {}), /*#__PURE__*/React.createElement(IconButton, {\n    icon: icon,\n    onClick: clickHandler,\n    className: active && activeStyle,\n    \"data-testid\": props[\"data-testid\"]\n  }));\n};\n\nexport default connect(function (state, props) {\n  return {\n    active: isPluginActive(props.plugin)(state),\n    slateFocused: getUi(state).slateFocused,\n    settingsActive: getActivePlugins(\"pb-editor-page-element-settings\")(state).length > 0\n  };\n}, {\n  togglePlugin: togglePlugin\n})(Action);","map":null,"metadata":{},"sourceType":"module"}