{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as PublishIcon } from \"@svgr/webpack!@webiny/app-form-builder/admin/icons/publish.svg\";\nimport { ReactComponent as UnpublishIcon } from \"@svgr/webpack!@webiny/app-form-builder/admin/icons/unpublish.svg\";\nimport { PUBLISH_REVISION, UNPUBLISH_REVISION } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\n\nvar PublishRevision = function PublishRevision(_ref) {\n  var revision = _ref.revision;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var client = useApolloClient();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, revision.status !== \"published\" ? /*#__PURE__*/React.createElement(Tooltip, {\n    content: \"Publish\",\n    placement: \"top\"\n  }, /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    title: \"Publish form\",\n    message: \"You are about to publish this form, are you sure want to continue?\"\n  }, function (_ref2) {\n    var showConfirmation = _ref2.showConfirmation;\n    return /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(PublishIcon, null),\n      onClick: function onClick() {\n        return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _yield$client$mutate, res, error;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return client.mutate({\n                    mutation: PUBLISH_REVISION,\n                    variables: {\n                      id: revision.id\n                    }\n                  });\n\n                case 2:\n                  _yield$client$mutate = _context.sent;\n                  res = _yield$client$mutate.data;\n                  error = res.forms.publishRevision.error;\n\n                  if (!error) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", showSnackbar(error.message));\n\n                case 7:\n                  showSnackbar( /*#__PURE__*/React.createElement(\"span\", null, \"Successfully published revision\", \" \", /*#__PURE__*/React.createElement(\"strong\", null, \"#\", revision.version), \"!\"));\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })));\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(Tooltip, {\n    content: \"Unpublish\",\n    placement: \"top\"\n  }, /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    title: \"Un-publish form\",\n    message: \"You are about to unpublish this form, are you sure want to continue?\"\n  }, function (_ref4) {\n    var showConfirmation = _ref4.showConfirmation;\n    return /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(UnpublishIcon, null),\n      onClick: function onClick() {\n        return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var _yield$client$mutate2, res, error;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return client.mutate({\n                    mutation: UNPUBLISH_REVISION,\n                    variables: {\n                      id: revision.id\n                    }\n                  });\n\n                case 2:\n                  _yield$client$mutate2 = _context2.sent;\n                  res = _yield$client$mutate2.data;\n                  error = res.forms.unpublishRevision.error;\n\n                  if (!error) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", showSnackbar(error.message));\n\n                case 7:\n                  showSnackbar( /*#__PURE__*/React.createElement(\"span\", null, \"Successfully unpublished revision\", \" \", /*#__PURE__*/React.createElement(\"strong\", null, \"#\", revision.version), \"!\"));\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        })));\n      }\n    });\n  })));\n};\n\nexport default PublishRevision;","map":null,"metadata":{},"sourceType":"module"}