{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport { Editor, Transforms } from \"slate\";\nimport { ReactComponent as FormatUnOrderedListIcon } from \"@svgr/webpack!@webiny/app-i18n/admin/assets/icons/format_list_bulleted.svg\";\nimport { ReactComponent as FormatOrderedListIcon } from \"@svgr/webpack!@webiny/app-i18n/admin/assets/icons/format_list_numbered.svg\";\nvar isListHotkey = isKeyHotkey(\"mod+l\");\nvar LIST_TYPES = [\"ordered-list\", \"unordered-list\"];\n\nvar isBlockActive = function isBlockActive(editor, format) {\n  var _Editor$nodes = Editor.nodes(editor, {\n    match: function match(n) {\n      return n.type === format;\n    }\n  }),\n      _Editor$nodes2 = _slicedToArray(_Editor$nodes, 1),\n      match = _Editor$nodes2[0];\n\n  return !!match;\n};\n\nvar toggleBlock = function toggleBlock(editor, format) {\n  var isActive = isBlockActive(editor, format);\n  var isList = LIST_TYPES.includes(format);\n  Transforms.unwrapNodes(editor, {\n    match: function match(n) {\n      return LIST_TYPES.includes(n.type);\n    },\n    split: true\n  });\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : format\n  });\n\n  if (!isActive && isList) {\n    var block = {\n      type: format,\n      children: []\n    };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nvar plugins = [{\n  name: \"i18n-input-rich-text-editor-unordered-list\",\n  type: \"i18n-input-rich-text-editor\",\n  plugin: {\n    name: \"unordered-list\",\n    menu: {\n      render: function render(_ref) {\n        var MenuButton = _ref.MenuButton,\n            editor = _ref.editor;\n        var isActive = isBlockActive(editor, \"unordered-list\");\n        return /*#__PURE__*/React.createElement(MenuButton, {\n          onClick: function onClick() {\n            return toggleBlock(editor, \"unordered-list\");\n          },\n          active: isActive\n        }, /*#__PURE__*/React.createElement(FormatUnOrderedListIcon, null));\n      }\n    },\n    editor: {\n      onKeyDown: function onKeyDown(_ref2, next) {\n        var event = _ref2.event,\n            editor = _ref2.editor;\n\n        if (isListHotkey(event)) {\n          event.preventDefault();\n          return toggleBlock(editor, \"unordered-list\");\n        }\n\n        return next();\n      },\n      renderElement: function renderElement(_ref3, next) {\n        var attributes = _ref3.attributes,\n            children = _ref3.children,\n            element = _ref3.element;\n\n        switch (element.type) {\n          case \"unordered-list\":\n            return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n              className: \"webiny-rich-typography-unordered-list\"\n            }, attributes), children);\n\n          case \"list-item\":\n            return /*#__PURE__*/React.createElement(\"li\", attributes, children);\n\n          default:\n            return next();\n        }\n      }\n    }\n  }\n}, {\n  name: \"i18n-input-rich-text-editor-ordered-list\",\n  type: \"i18n-input-rich-text-editor\",\n  plugin: {\n    name: \"ordered-list\",\n    menu: {\n      render: function render(_ref4) {\n        var MenuButton = _ref4.MenuButton,\n            editor = _ref4.editor;\n        var isActive = isBlockActive(editor, \"ordered-list\");\n        return /*#__PURE__*/React.createElement(MenuButton, {\n          onClick: function onClick() {\n            return toggleBlock(editor, \"ordered-list\");\n          },\n          active: isActive\n        }, /*#__PURE__*/React.createElement(FormatOrderedListIcon, null));\n      }\n    },\n    editor: {\n      onKeyDown: function onKeyDown(_ref5, next) {\n        var event = _ref5.event,\n            editor = _ref5.editor;\n\n        if (isListHotkey(event)) {\n          event.preventDefault();\n          return toggleBlock(editor, \"ordered-list\");\n        }\n\n        return next();\n      },\n      renderElement: function renderElement(_ref6, next) {\n        var attributes = _ref6.attributes,\n            children = _ref6.children,\n            element = _ref6.element;\n\n        switch (element.type) {\n          case \"ordered-list\":\n            return /*#__PURE__*/React.createElement(\"ol\", Object.assign({\n              className: \"webiny-rich-typography-ordered-list\"\n            }, attributes), children);\n\n          case \"list-item\":\n            return /*#__PURE__*/React.createElement(\"li\", attributes, children);\n\n          default:\n            return next();\n        }\n      }\n    }\n  }\n}];\nexport default plugins;","map":null,"metadata":{},"sourceType":"module"}