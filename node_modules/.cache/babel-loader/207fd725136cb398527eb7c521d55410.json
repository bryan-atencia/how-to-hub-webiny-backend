{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport * as React from \"react\";\nimport get from \"lodash.get\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ColorPicker } from \"@webiny/ui/ColorPicker\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { RadioGroup, Radio } from \"@webiny/ui/Radio\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport graphql from \"./graphql\";\nimport showCookiePolicy from \"./../../utils/showCookiePolicy\";\nimport getDefaultCookiePolicySettings from \"./getDefaultCookiePolicySettings\";\nimport { validation } from \"@webiny/validation\";\nimport { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from \"@webiny/app-admin/components/SimpleForm\";\nvar positionOptions = [{\n  id: \"bottom\",\n  name: \"Bottom\"\n}, {\n  id: \"top\",\n  name: \"Top\"\n}, {\n  id: \"bottom-left\",\n  name: \"Floating left\"\n}, {\n  id: \"bottom-right\",\n  name: \"Floating right\"\n}];\n\nvar getFormData = function getFormData(settings) {\n  var defaults = getDefaultCookiePolicySettings();\n\n  var data = _objectSpread({}, settings);\n\n  if (!data.palette) {\n    data.palette = defaults.palette;\n  }\n\n  if (!data.content) {\n    data.content = defaults.content;\n  }\n\n  if (!data.position) {\n    data.position = defaults.position;\n  }\n\n  return data;\n};\n\nvar CookiePolicySettings = function CookiePolicySettings() {\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(Query, {\n    query: graphql.query\n  }, function (_ref) {\n    var data = _ref.data,\n        queryInProgress = _ref.loading;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      mutation: graphql.mutation\n    }, function (update, _ref2) {\n      var mutationInProgress = _ref2.loading;\n      var settings = get(data, \"cookiePolicy.getSettings.data\") || {};\n      return /*#__PURE__*/React.createElement(Form, {\n        data: getFormData(settings),\n        onSubmit: /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return update({\n                      variables: {\n                        data: data\n                      }\n                    });\n\n                  case 2:\n                    showSnackbar(\"Settings updated successfully.\");\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }()\n      }, function (_ref4) {\n        var Bind = _ref4.Bind,\n            form = _ref4.form,\n            data = _ref4.data;\n        return /*#__PURE__*/React.createElement(SimpleForm, null, (queryInProgress || mutationInProgress) && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {\n          title: \"Cookie Policy Settings\"\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"enabled\",\n          afterChange: function afterChange(enabled) {\n            if (!enabled) {\n              form.submit();\n            }\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          label: \"Enabled\"\n        }))), data.enabled ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 3\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"palette.popup.background\"\n        }, /*#__PURE__*/React.createElement(ColorPicker, {\n          label: \"Banner background color\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 3\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"palette.popup.text\"\n        }, /*#__PURE__*/React.createElement(ColorPicker, {\n          label: \"Banner text color\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 3\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"palette.button.background\"\n        }, /*#__PURE__*/React.createElement(ColorPicker, {\n          label: \"Button background color\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 3\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"palette.button.text\"\n        }, /*#__PURE__*/React.createElement(ColorPicker, {\n          label: \"Button text color\"\n        })))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"position\"\n        }, /*#__PURE__*/React.createElement(RadioGroup, {\n          label: \"Position\"\n        }, function (_ref5) {\n          var onChange = _ref5.onChange,\n              getValue = _ref5.getValue;\n          return /*#__PURE__*/React.createElement(React.Fragment, null, positionOptions.map(function (_ref6) {\n            var id = _ref6.id,\n                name = _ref6.name;\n            return /*#__PURE__*/React.createElement(Radio, {\n              key: id,\n              label: name,\n              value: getValue(id),\n              onChange: onChange(id)\n            });\n          }));\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"content.message\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Message\",\n          description: \"Link to your own policy\\n\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"content.dismiss\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Dismiss button text\",\n          description: \"Link to your own policy\\n\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"content.href\",\n          validators: validation.create(\"url\")\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Policy link\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"content.link\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Policy link title\"\n        }))))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonSecondary, {\n          onClick: function onClick() {\n            showCookiePolicy(_objectSpread(_objectSpread({}, data), {}, {\n              // Official bug fix.\n              messagelink: '<span id=\"cookieconsent:desc\" class=\"cc-message\">{{message}} <a aria-label=\"learn more about cookies\" tabindex=\"0\" class=\"cc-link\" href=\"{{href}}\" target=\"_blank\">{{link}}</a></span>',\n              dismissOnTimeout: 5000,\n              cookie: {\n                expiryDays: 0.00000001\n              }\n            }), true);\n          }\n        }, \"Preview\"), \"\\xA0\", /*#__PURE__*/React.createElement(ButtonPrimary, {\n          onClick: form.submit\n        }, \"Save\"))) : null);\n      });\n    });\n  });\n};\n\nexport default CookiePolicySettings;","map":null,"metadata":{},"sourceType":"module"}