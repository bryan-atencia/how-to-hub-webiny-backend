{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation addToList($email: String!, $list: String!) {\\n        mailchimp {\\n            addToList(email: $email, list: $list) {\\n                error {\\n                    message\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { Form } from \"@webiny/form\";\nimport { Mutation } from \"react-apollo\";\nimport React from \"react\";\nimport { getPlugins } from \"@webiny/plugins\";\nvar mutation = gql(_templateObject());\nexport var RenderMailchimpForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderMailchimpForm, _React$Component);\n\n  var _super = _createSuper(RenderMailchimpForm);\n\n  function RenderMailchimpForm() {\n    var _this;\n\n    _classCallCheck(this, RenderMailchimpForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      processing: false\n    });\n\n    return _this;\n  }\n\n  _createClass(RenderMailchimpForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var element = this.props.element;\n      var selected = _get(element, \"data.settings.component\") || \"\";\n      var component = getPlugins(\"pb-page-element-mailchimp-component\").find(function (cmp) {\n        return cmp.componentName === selected;\n      });\n\n      if (component) {\n        var Component = component.component;\n\n        var style = _objectSpread({\n          width: \"100%\"\n        }, _get(this.props, \"element.data.settings.style\"));\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: style,\n          className: \"webiny-pb-page-element-mailchimp\"\n        }, /*#__PURE__*/React.createElement(Mutation, {\n          mutation: mutation\n        }, function (update) {\n          return /*#__PURE__*/React.createElement(Form, {\n            key: component.name\n          }, function (_ref) {\n            var form = _ref.form,\n                data = _ref.data;\n            return /*#__PURE__*/React.createElement(Component, Object.assign({}, form, {\n              processing: _this2.state.processing,\n              submit: /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n                  var onError, onSuccess, isValid, response;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          onError = _ref2.onError, onSuccess = _ref2.onSuccess;\n                          _context.next = 3;\n                          return form.validate();\n\n                        case 3:\n                          isValid = _context.sent;\n\n                          if (isValid) {\n                            _context.next = 6;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\");\n\n                        case 6:\n                          _this2.setState({\n                            processing: true\n                          });\n\n                          _context.next = 9;\n                          return update({\n                            variables: _objectSpread(_objectSpread({}, data), {}, {\n                              list: element.data.settings.list\n                            })\n                          });\n\n                        case 9:\n                          response = _context.sent;\n\n                          _this2.setState({\n                            processing: false\n                          }, function () {\n                            var error = _get(response, \"data.mailchimp.addToList.error\");\n\n                            if (error) {\n                              onError && onError(error.message);\n                            } else {\n                              form.setState(function (state) {\n                                state.data.email = \"\";\n                                return state;\n                              });\n                              onSuccess && onSuccess();\n                            }\n                          });\n\n                        case 11:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()\n            }));\n          });\n        }));\n      }\n\n      return null;\n    }\n  }]);\n\n  return RenderMailchimpForm;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}