{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _upperFirst from \"lodash/upperFirst\";\nimport _get from \"lodash/get\";\n\nvar Identity = /*#__PURE__*/function () {\n  function Identity(data) {\n    _classCallCheck(this, Identity);\n\n    _defineProperty(this, \"data\", null);\n\n    this.data = data;\n  }\n\n  _createClass(Identity, [{\n    key: \"isLoggedIn\",\n    value: function isLoggedIn() {\n      return !!this.data;\n    }\n  }, {\n    key: \"hasFullAccess\",\n    value: function hasFullAccess() {\n      return !!_get(this.data, \"access.fullAccess\");\n    }\n  }, {\n    key: \"getScopes\",\n    value: function getScopes() {\n      return _get(this.data, \"access.scopes\") || [];\n    }\n  }, {\n    key: \"hasScope\",\n    value: function hasScope(scope) {\n      return this.getScopes().includes(scope);\n    }\n  }, {\n    key: \"hasScopes\",\n    value: function hasScopes(scopes, options) {\n      return this.__hasResources({\n        type: \"scope\",\n        resources: scopes,\n        options: options\n      });\n    }\n  }, {\n    key: \"__hasResources\",\n    value: function __hasResources(_ref) {\n      var type = _ref.type,\n          resources = _ref.resources,\n          _ref$options = _ref.options,\n          options = _ref$options === void 0 ? {} : _ref$options; // \"hasScope\" or \"hasRole\".\n\n      var hasResourceMethod = \"has\".concat(_upperFirst(type));\n\n      if (Array.isArray(resources)) {\n        if (!this.isLoggedIn()) {\n          return false;\n        }\n\n        if (this.hasFullAccess()) {\n          return true;\n        }\n\n        for (var i = 0; i < resources.length; i++) {\n          if (!this[hasResourceMethod](resources[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      var result = {};\n\n      if (!this.isLoggedIn()) {\n        if (options.forceBoolean) {\n          return false;\n        }\n\n        for (var _key in resources) {\n          result[_key] = false;\n        }\n\n        return result;\n      }\n\n      if (this.hasFullAccess()) {\n        if (options.forceBoolean) {\n          return true;\n        }\n\n        for (var _key2 in resources) {\n          result[_key2] = true;\n        }\n\n        return result;\n      }\n\n      for (var _key3 in resources) {\n        result[_key3] = true;\n        var resourcesToCheck = resources[_key3];\n\n        for (var _i = 0; _i < resourcesToCheck.length; _i++) {\n          var resourceToCheck = resourcesToCheck[_i];\n\n          if (!this[hasResourceMethod](resourceToCheck)) {\n            if (options.forceBoolean) {\n              return false;\n            }\n\n            result[_key3] = false;\n            break;\n          }\n        }\n      }\n\n      if (options.forceBoolean) {\n        return true;\n      }\n\n      return result;\n    }\n  }]);\n\n  return Identity;\n}();\n\nvar identity = new Identity();\nexport var getIdentity = function getIdentity() {\n  return identity;\n};\nexport var setIdentity = function setIdentity(data) {\n  identity = new Identity(data);\n};","map":null,"metadata":{},"sourceType":"module"}