{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _trim from \"lodash/trim\";\nimport React from \"react\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Form } from \"@webiny/form\";\nimport { Hotkeys } from \"react-hotkeyz\";\nexport default function AddOptionInput(_ref) {\n  var options = _ref.options,\n      onAdd = _ref.onAdd,\n      optionsValidation = _ref.validation;\n  return /*#__PURE__*/React.createElement(Form, null, function (_ref2) {\n    var Bind = _ref2.Bind;\n    return /*#__PURE__*/React.createElement(Bind, {\n      name: \"newOption\",\n      validators: function validators(value) {\n        if (!Array.isArray(options)) {\n          return true;\n        }\n\n        if (options.find(function (item) {\n          return item.value === value;\n        })) {\n          throw new Error(\"Option with value \\\"\".concat(value, \"\\\" already exists.\"));\n        }\n      }\n    }, function (_ref3) {\n      var value = _ref3.value,\n          onChange = _ref3.onChange,\n          validate = _ref3.validate,\n          inputValidation = _ref3.validation;\n      var validation = inputValidation && inputValidation.message ? inputValidation : optionsValidation;\n      return /*#__PURE__*/React.createElement(Hotkeys, {\n        zIndex: 110,\n        keys: {\n          enter: function enter() {\n            return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var result;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      if (!value) {\n                        _context.next = 5;\n                        break;\n                      }\n\n                      _context.next = 3;\n                      return validate();\n\n                    case 3:\n                      result = _context.sent;\n\n                      if (result !== false) {\n                        onChange(\"\");\n                        onAdd(_trim(value));\n                      }\n\n                    case 5:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))();\n          }\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        validation: validation,\n        value: value,\n        onChange: onChange,\n        placeholder: \"Enter an option and press enter\"\n      }));\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}