{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\"; // @ts-nocheck\n\nimport * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nexport var typeStyle = /*#__PURE__*/css({\n  position: \"relative\",\n  cursor: \"pointer\",\n  \".element-holder\": {\n    position: \"absolute\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    top: 0,\n    //-22,\n    boxSizing: \"border-box\",\n    right: 0,\n    //-2,\n    fontSize: 10,\n    padding: 0,\n    color: \"#fff\",\n    zIndex: 30,\n    width: \"auto\",\n    \"> span\": {\n      borderRadius: 2,\n      display: \"flex\",\n      padding: \"4px 10px\",\n      \"> svg\": {\n        height: 13,\n        width: 13,\n        marginRight: 5\n      }\n    },\n    \"> svg\": {\n      borderRadius: 2,\n      height: 13,\n      padding: 4,\n      marginRight: 5,\n      \"&.help-icon\": {\n        cursor: \"pointer\"\n      }\n    }\n  }\n}, \"label:typeStyle;\");\nexport var ElementContainer = /*#__PURE__*/React.memo( /*#__PURE__*/styled(\"div\", {\n  target: \"e1vc2ai50\",\n  label: \"ElementContainer\"\n})(function (_ref) {\n  var _innerWrapperT;\n\n  var highlight = _ref.highlight,\n      active = _ref.active;\n  var color = active ? \"var(--mdc-theme-primary)\" : \"var(--mdc-theme-secondary)\";\n  return {\n    /*width: \"100%\", // removed this because it's breaking positioning when a Row has a fixed width */\n    position: \"relative\",\n    flex: \"100%\",\n    padding: 0,\n    opacity: 1,\n    borderRadius: 2,\n    boxSizing: \"border-box\",\n    zIndex: 10,\n    transition: \"all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1)\",\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      zIndex: 0,\n      // previously it was set to -1, but then background images and other elements would be displayed above\n      //padding: 0,\n      top: 0,\n      left: 0,\n      width: \"calc(100% + 2px)\",\n      height: \"calc(100% + 2px)\",\n      pointerEvents: \"none\",\n      margin: highlight ? \"-2px 0 -2px -2px\" : 0,\n      //padding: highlight ? '0 3px 3px 0px' : 0,\n      //boxShadow: highlight\n      //    ? \"0px 0px 0px 1px \" + color + \", inset 0px 0px 0px 1px \" + color\n      //   : \"none\",\n      boxShadow: highlight ? \"inset 0px 0px 0px 2px \" + color : \"none\",\n      transition: \"all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1)\",\n      opacity: highlight ? 1 : 0\n    },\n    \"&::after:hover\": {\n      opacity: 1\n    },\n    \"&:hover\": {\n      \"> .innerWrapper > .type\": {\n        display: highlight ? \"block\" : \"none\"\n      }\n    },\n    \"> .innerWrapper\": {\n      width: \"100%\",\n      height: \"100%\",\n      // note \"auto\" fixes the odd hover bug which resizes the column, but causes a bug with column vertical align\n      boxSizing: \"border-box\"\n    },\n    \"> .innerWrapper > .type\": (_innerWrapperT = {\n      display: highlight ? \"block\" : \"none\",\n      width: !active ? \"100%\" : \"100px\",\n      height: !active ? \"100%\" : \"18px\"\n    }, _defineProperty(_innerWrapperT, !active ? \"left\" : \"right\", !active ? 0 : 0), _defineProperty(_innerWrapperT, \"position\", \"absolute\"), _defineProperty(_innerWrapperT, \"top\", -18), _defineProperty(_innerWrapperT, \"zIndex\", 10), _defineProperty(_innerWrapperT, \"transition\", \"background-color 0.2s\"), _defineProperty(_innerWrapperT, \".background\", {\n      pointerEvents: highlight ? \"auto\" : \"none\",\n      display: !active ? \"block\" : \"none\",\n      position: \"absolute\",\n      backgroundColor: active ? \"rgba(250, 87, 35, 1)\" : \"rgba(0, 204, 176, 0.1)\",\n      width: \"100%\",\n      height: \"100%\",\n      cursor: \"pointer\",\n      top: 17,\n      left: 0,\n      transition: \"background-color 0.2s\"\n    }), _defineProperty(_innerWrapperT, \".element-holder\", {\n      \"> span, > svg\": {\n        backgroundColor: color\n      }\n    }), _innerWrapperT)\n  };\n}));\nexport var defaultStyle = {\n  opacity: 0,\n  transform: \"scale(0.5)\",\n  transitionProperty: \"opacity, transform\",\n  transitionTimingFunction: \"cubic-bezier(0, 0, .2, 1)\",\n  transitionDuration: \"175ms\",\n  transitionDelay: \"50ms\",\n  willChange: \"opacity, transform\"\n};\nexport var transitionStyles = {\n  entering: {\n    opacity: 0,\n    transform: \"scale(0.5)\"\n  },\n  entered: {\n    opacity: 1,\n    transform: \"scale(1)\"\n  }\n};","map":null,"metadata":{},"sourceType":"module"}