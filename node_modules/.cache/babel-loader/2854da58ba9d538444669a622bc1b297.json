{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport set from \"lodash/set\";\n\nvar setValue = function setValue(_ref) {\n  var value = _ref.value,\n      bind = _ref.bind,\n      locale = _ref.locale,\n      index = _ref.index,\n      name = _ref.name;\n  var newValue = cloneDeep(_objectSpread({\n    values: []\n  }, bind.value));\n  var valueLocaleIndex = newValue.values.findIndex(function (item) {\n    return item.locale === locale;\n  });\n\n  if (index >= 0) {\n    if (valueLocaleIndex >= 0) {\n      if (!Array.isArray(newValue.values[valueLocaleIndex].value)) {\n        newValue.values[valueLocaleIndex].value = [];\n      }\n    } else {\n      newValue.values.push({\n        locale: locale,\n        value: []\n      });\n      valueLocaleIndex = newValue.values.length - 1;\n    }\n\n    set(newValue, \"values.\".concat(valueLocaleIndex, \".value.\").concat(index, \".\").concat(name), value);\n  } else {\n    if (valueLocaleIndex >= 0) {\n      newValue.values[valueLocaleIndex].value = value;\n    } else {\n      newValue.values.push({\n        locale: locale,\n        value: value\n      });\n    }\n  } // Filter out redundant empty values.\n\n\n  newValue.values = newValue.values.filter(function (item) {\n    return !!item.value;\n  });\n  bind.onChange(newValue);\n};\n\nexport default setValue;","map":null,"metadata":{},"sourceType":"module"}