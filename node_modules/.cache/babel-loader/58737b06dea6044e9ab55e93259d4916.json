{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"This action {verb} be undone. This will permanently delete the {name} environment and all of the created content.\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"Not linked with an alias.\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"This environment is linked with the \\\"{environmentAlias}\\\" alias.\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"Assigned to: {environmentAlias}\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"(default)\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Name Z-A\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Name A-Z\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Oldest to newest\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Newest to oldest\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Environments\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { DeleteIcon } from \"@webiny/ui/List/DataList/icons\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { useCms } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { DataList, List, ListItem, ListItemText, ListItemTextSecondary, ListItemMeta, ListActions } from \"@webiny/ui/List\";\nimport { Link } from \"@webiny/react-router\";\nimport { ConfirmationDialogWithInput } from \"./ConfirmationDialogWithInput\";\nvar t = i18n.ns(\"app-headless-cms/admin/environments/data-list\");\n\nvar EnvironmentsDataList = function EnvironmentsDataList() {\n  var _useCrud = useCrud(),\n      actions = _useCrud.actions,\n      list = _useCrud.list;\n\n  var _useCms = useCms(),\n      _useCms$environments = _useCms.environments,\n      refreshEnvironments = _useCms$environments.refreshEnvironments,\n      selectAvailableEnvironment = _useCms$environments.selectAvailableEnvironment,\n      isSelectedEnvironment = _useCms$environments.isSelectedEnvironment;\n\n  return /*#__PURE__*/React.createElement(DataList, Object.assign({}, list, {\n    title: t(_templateObject()),\n    sorters: [{\n      label: t(_templateObject2()),\n      sorters: {\n        createdOn: -1\n      }\n    }, {\n      label: t(_templateObject3()),\n      sorters: {\n        createdOn: 1\n      }\n    }, {\n      label: t(_templateObject4()),\n      sorters: {\n        name: 1\n      }\n    }, {\n      label: t(_templateObject5()),\n      sorters: {\n        name: -1\n      }\n    }]\n  }), function (_ref) {\n    var data = _ref.data,\n        isSelected = _ref.isSelected,\n        select = _ref.select;\n    return /*#__PURE__*/React.createElement(List, {\n      \"data-testid\": \"default-data-list\"\n    }, data.map(function (item) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: item.id,\n        selected: isSelected(item)\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        onClick: function onClick() {\n          return select(item);\n        }\n      }, item.name, \" \", item.default && /*#__PURE__*/React.createElement(Typography, {\n        use: \"overline\"\n      }, t(_templateObject6())), /*#__PURE__*/React.createElement(ListItemTextSecondary, null, item.environmentAlias ? t(_templateObject7())({\n        environmentAlias: /*#__PURE__*/React.createElement(Link, {\n          onClick: function onClick(e) {\n            return e.stopPropagation();\n          },\n          to: \"/settings/cms/environments/aliases?id=\".concat(item.environmentAlias.id),\n          title: t(_templateObject8())({\n            environmentAlias: item.environmentAlias.name\n          })\n        }, item.environmentAlias.name)\n      }) : t(_templateObject9()))), /*#__PURE__*/React.createElement(ListItemMeta, null, /*#__PURE__*/React.createElement(ListActions, null, /*#__PURE__*/React.createElement(ConfirmationDialogWithInput, {\n        title: \"Remove environment\",\n        message: t(_templateObject10())({\n          name: /*#__PURE__*/React.createElement(\"b\", null, item.name),\n          verb: /*#__PURE__*/React.createElement(\"b\", null, \"cannot\")\n        }),\n        resourceName: item.name\n      }, function (_ref2) {\n        var showConfirmation = _ref2.showConfirmation;\n        return /*#__PURE__*/React.createElement(DeleteIcon, {\n          onClick: function onClick() {\n            showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return actions.delete(item);\n\n                    case 2:\n                      if (isSelectedEnvironment(item)) {\n                        selectAvailableEnvironment([item]);\n                      }\n\n                      refreshEnvironments();\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })));\n          }\n        });\n      }))));\n    }));\n  });\n};\n\nexport default EnvironmentsDataList;","map":null,"metadata":{},"sourceType":"module"}