{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbUpdateElement($id: ID!, $data: PbUpdateElementInput!) {\\n        pageBuilder {\\n            element: updateElement(id: $id, data: $data) {\\n                data {\\n                    \", \"\\n                }\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbCreateElement($data: PbElementInput!) {\\n        pageBuilder {\\n            element: createElement(data: $data) {\\n                data {\\n                    \", \"\\n                }\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n    query PbListElements {\\n        pageBuilder {\\n            elements: listElements(limit: 1000) {\\n                data {\\n                    \", \"\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbDeletePage($id: ID!) {\\n        pageBuilder {\\n            deletePage(id: $id) {\\n                data\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbDeleteRevision($id: ID!) {\\n        pageBuilder {\\n            deleteRevision(id: $id) {\\n                data\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbPublishRevision($id: ID!) {\\n        pageBuilder {\\n            publishRevision(id: $id) {\\n                data {\\n                    \", \"\\n                }\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbCreateRevisionFrom($revision: ID!) {\\n        pageBuilder {\\n            revision: createRevisionFrom(revision: $revision) {\\n                data {\\n                    id\\n                }\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query PbGetPage($id: ID!) {\\n        pageBuilder {\\n            page: getPage(id: $id) {\\n                data {\\n                    \", \"\\n                    snippet\\n                    content\\n                    settings {\\n                        _empty\\n                        \", \"\\n                    }\\n                    category {\\n                        id\\n                        name\\n                        url\\n                    }\\n                    revisions {\\n                        \", \"\\n                    }\\n                }\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query PbListPages($sort: JSON, $search: String, $limit: Int, $after: String, $before: String) {\\n        pageBuilder {\\n            pages: listPages(sort: $sort, search: $search, limit: $limit, after: $after, before: $before) {\\n                data {\\n                    \", \"\\n                    category {\\n                        id\\n                        name\\n                    }\\n                    createdBy {\\n                        firstName\\n                        lastName\\n                    }\\n                }\\n                meta {\\n                    cursors {\\n                        next\\n                        previous\\n                    }\\n                    hasNextPage\\n                    hasPreviousPage\\n                    totalCount\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation PbCreatePage($category: ID!) {\\n        pageBuilder {\\n            page: createPage(data: { category: $category }) {\\n                data {\\n                    id\\n                }\\n                \", \"\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { getPlugins } from \"@webiny/plugins\";\nvar error = \"\\nerror {\\n    code\\n    message\\n}\";\nvar sharedFields = \"\\n    id\\n    title\\n    url\\n    version\\n    parent\\n    published\\n    isHomePage\\n    isErrorPage\\n    isNotFoundPage\\n    locked\\n    savedOn\\n\";\nexport var CREATE_PAGE = gql(_templateObject(), error);\nexport var LIST_PAGES = gql(_templateObject2(), sharedFields);\nexport var GET_PAGE = function GET_PAGE() {\n  return gql(_templateObject3(), sharedFields, getPlugins(\"pb-editor-page-settings\").map(function (pl) {\n    return pl.fields;\n  }).join(\"\\n\"), sharedFields, error);\n};\nexport var CREATE_REVISION_FORM = gql(_templateObject4(), error);\nexport var PUBLISH_REVISION = gql(_templateObject5(), sharedFields, error);\nexport var DELETE_REVISION = gql(_templateObject6(), error);\nexport var DELETE_PAGE = gql(_templateObject7(), error);\nvar elementFields =\n/*GraphQL*/\n\"\\n    id\\n    name\\n    type\\n    category\\n    content\\n    preview {\\n        src\\n        meta\\n    }\\n\";\nexport var LIST_ELEMENTS = gql(_templateObject8(), elementFields);\nexport var CREATE_ELEMENT = gql(_templateObject9(), elementFields, error);\nexport var UPDATE_ELEMENT = gql(_templateObject10(), elementFields, error);","map":null,"metadata":{},"sourceType":"module"}