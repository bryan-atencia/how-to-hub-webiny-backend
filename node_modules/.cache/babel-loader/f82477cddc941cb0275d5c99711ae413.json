{"ast":null,"code":"import React from \"react\";\nimport { ReactComponent as CropIcon } from \"@svgr/webpack!./icons/crop.svg\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nvar cropper = null;\n\nvar renderForm = function renderForm() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Click and drag to crop a portion of the image. Hold Shift to persist aspect ratio.\");\n};\n\nvar tool = {\n  name: \"crop\",\n  icon: function icon(_ref) {\n    var activateTool = _ref.activateTool;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"bottom\",\n      content: \"Crop\"\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(CropIcon, null),\n      onClick: activateTool\n    }));\n  },\n  renderForm: renderForm,\n  onActivate: function onActivate(_ref2) {\n    var canvas = _ref2.canvas,\n        options = _ref2.options;\n    cropper = new Cropper(canvas.current, options);\n  },\n  cancel: function cancel() {\n    return cropper && cropper.destroy();\n  },\n  apply: function apply(_ref3) {\n    var canvas = _ref3.canvas;\n    return new Promise(function (resolve) {\n      if (!cropper) {\n        resolve();\n        return;\n      }\n\n      var current = canvas.current;\n      var src = cropper.getCroppedCanvas().toDataURL();\n\n      if (current) {\n        var image = new window.Image();\n        var ctx = current.getContext(\"2d\");\n\n        image.onload = function () {\n          ctx.drawImage(image, 0, 0);\n          current.width = image.width;\n          current.height = image.height;\n          ctx.drawImage(image, 0, 0);\n          resolve();\n        };\n\n        image.src = src;\n      }\n\n      cropper.destroy();\n      cropper = null;\n    });\n  }\n};\nexport default tool;","map":null,"metadata":{},"sourceType":"module"}