{"ast":null,"code":"import * as React from \"react\";\nimport { ReactComponent as OrderedListIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_list_numbered.svg\";\nimport { ReactComponent as UnorderedListIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_list_bulleted.svg\";\n\nvar hasBlock = function hasBlock(value, type) {\n  return value.blocks.some(function (node) {\n    return node.type === type;\n  });\n};\n\nvar onClickBlock = function onClickBlock(type, onChange, editor) {\n  editor.change(function (change) {\n    var value = change.value;\n    var document = value.document; // Handle the extra wrapping required for list buttons.\n\n    var isList = hasBlock(editor.value, \"list-item\");\n    var isType = value.blocks.some(function (block) {\n      return !!document.getClosest(block.key, function (parent) {\n        return parent.type === type;\n      });\n    });\n\n    if (isList && isType) {\n      change.setBlocks(\"paragraph\").unwrapBlock(\"unordered-list\").unwrapBlock(\"ordered-list\");\n    } else if (isList) {\n      change.unwrapBlock(type === \"unordered-list\" ? \"ordered-list\" : \"unordered-list\").wrapBlock(type);\n    } else {\n      change.setBlocks(\"list-item\").wrapBlock(type);\n    }\n\n    onChange(change);\n  });\n};\n\nexport default (function () {\n  return {\n    menu: [{\n      name: \"pb-editor-slate-menu-item-ordered-list\",\n      type: \"pb-editor-slate-menu-item\",\n      render: function render(_ref) {\n        var MenuButton = _ref.MenuButton,\n            editor = _ref.editor,\n            onChange = _ref.onChange;\n        var isActive = hasBlock(editor.value, \"ordered-list\");\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/jsx-no-bind\n          React.createElement(MenuButton, {\n            onClick: function onClick() {\n              return onClickBlock(\"ordered-list\", onChange, editor);\n            },\n            active: isActive\n          }, /*#__PURE__*/React.createElement(OrderedListIcon, null))\n        );\n      }\n    }, {\n      name: \"pb-editor-slate-menu-item-unordered-list\",\n      type: \"pb-editor-slate-menu-item\",\n      render: function render(_ref2) {\n        var MenuButton = _ref2.MenuButton,\n            editor = _ref2.editor,\n            onChange = _ref2.onChange;\n        var isActive = hasBlock(editor.value, \"unordered-list\");\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/jsx-no-bind\n          React.createElement(MenuButton, {\n            onClick: function onClick() {\n              return onClickBlock(\"unordered-list\", onChange, editor);\n            },\n            active: isActive\n          }, /*#__PURE__*/React.createElement(UnorderedListIcon, null))\n        );\n      }\n    }],\n    editor: [{\n      name: \"pb-editor-slate-editor-lists\",\n      type: \"pb-editor-slate-editor\",\n      slate: {\n        renderNode: function renderNode(props, next) {\n          var attributes = props.attributes,\n              children = props.children,\n              node = props.node; // @ts-ignore\n\n          switch (node.type) {\n            case \"unordered-list\":\n              return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n                className: \"webiny-pb-typography-unordered-list\"\n              }, attributes), children);\n\n            case \"list-item\":\n              return /*#__PURE__*/React.createElement(\"li\", attributes, children);\n\n            case \"ordered-list\":\n              return /*#__PURE__*/React.createElement(\"ol\", Object.assign({\n                className: \"webiny-pb-typography-ordered-list\"\n              }, attributes), children);\n\n            default:\n              return next();\n          }\n        }\n      }\n    }]\n  };\n});","map":null,"metadata":{},"sourceType":"module"}