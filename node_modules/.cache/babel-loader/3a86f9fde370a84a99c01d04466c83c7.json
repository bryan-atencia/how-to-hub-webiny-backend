{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport React, { useCallback, useRef, cloneElement } from \"react\";\nimport getValue from \"./functions/getValue\";\nimport setValue from \"./functions/setValue\";\nexport default function PredefinedValues(_ref) {\n  var locale = _ref.locale,\n      field = _ref.field,\n      fieldPlugin = _ref.fieldPlugin,\n      form = _ref.form;\n  var memoizedBindComponents = useRef({});\n  var BaseFormBind = form.Bind;\n  var getBind = useCallback(function () {\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    var memoKey = locale + index;\n\n    if (memoizedBindComponents.current[memoKey]) {\n      return memoizedBindComponents.current[memoKey];\n    }\n\n    memoizedBindComponents.current[memoKey] = function Bind(_ref2) {\n      var children = _ref2.children,\n          name = _ref2.name;\n      return /*#__PURE__*/React.createElement(BaseFormBind, {\n        name: \"predefinedValues.values\"\n      }, function (bind) {\n        var value = getValue({\n          bind: bind,\n          locale: locale,\n          index: index,\n          name: name\n        });\n\n        var onChange = function onChange(value) {\n          return setValue({\n            value: value,\n            bind: bind,\n            locale: locale,\n            index: index,\n            name: name\n          });\n        };\n\n        var props = _objectSpread(_objectSpread({}, bind), {}, {\n          value: value,\n          onChange: onChange\n        });\n\n        if (typeof children === \"function\") {\n          return children(props);\n        }\n\n        return /*#__PURE__*/cloneElement(children, props);\n      });\n    };\n\n    return memoizedBindComponents.current[memoKey];\n  }, [locale]);\n  return fieldPlugin.field.renderPredefinedValues({\n    field: field,\n    getBind: getBind,\n    locale: locale\n  });\n}","map":null,"metadata":{},"sourceType":"module"}