{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getIsDragging } from \"@webiny/app-page-builder/editor/selectors\";\n\nvar defaultVisibility = function defaultVisibility(_ref) {\n  var type = _ref.type,\n      isDragging = _ref.isDragging,\n      item = _ref.item;\n  var target = item && item.target || [];\n\n  if (!item || !target.includes(type)) {\n    return false;\n  }\n\n  return isDragging;\n};\n\nvar Droppable = /*#__PURE__*/React.memo(function (props) {\n  var type = props.type,\n      children = props.children,\n      isDragging = props.isDragging,\n      _props$isDroppable = props.isDroppable,\n      isDroppable = _props$isDroppable === void 0 ? function () {\n    return true;\n  } : _props$isDroppable,\n      onDrop = props.onDrop;\n  var isVisible = props.isVisible;\n\n  var _useDrop = useDrop({\n    accept: \"element\",\n    collect: function collect(monitor) {\n      return {\n        isOver: monitor.isOver() && monitor.isOver({\n          shallow: true\n        }),\n        item: monitor.getItem()\n      };\n    },\n    drop: function drop(item, monitor) {\n      if (typeof onDrop === \"function\") {\n        onDrop(monitor.getItem());\n      }\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      item = _useDrop2$.item,\n      isOver = _useDrop2$.isOver,\n      drop = _useDrop2[1];\n\n  if (!isVisible) {\n    isVisible = defaultVisibility;\n  }\n\n  if (!isVisible({\n    type: type,\n    item: item,\n    isDragging: isDragging\n  })) {\n    return null;\n  }\n\n  return children({\n    isDragging: isDragging,\n    isOver: isOver,\n    isDroppable: isDroppable(item),\n    drop: drop\n  });\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDragging: getIsDragging(state)\n  };\n};\n\nexport default connect(mapStateToProps)(Droppable);","map":null,"metadata":{},"sourceType":"module"}