{"ast":null,"code":"import * as React from \"react\";\nimport { css } from \"emotion\";\nimport { isKeyHotkey } from \"is-hotkey\";\nimport { ReactComponent as FormatCodeIcon } from \"@svgr/webpack!@webiny/app-i18n/admin/assets/icons/format_code.svg\";\nvar isCodeHotkey = isKeyHotkey(\"mod+`\");\nvar mark = \"code\";\n/* prettier-ignore */\n\nvar codeStyle = /*#__PURE__*/css(\"background-color:var(--mdc-theme-background);padding:4px 8px;line-height:1.5rem;label:codeStyle;\");\nvar plugin = {\n  name: \"i18n-input-rich-text-editor-code\",\n  type: \"i18n-input-rich-text-editor\",\n  plugin: {\n    name: \"code\",\n    menu: {\n      render: function render(_ref) {\n        var MenuButton = _ref.MenuButton,\n            editor = _ref.editor;\n        return /*#__PURE__*/React.createElement(MenuButton, {\n          onClick: function onClick() {\n            return editor.toggleMark(mark);\n          },\n          active: editor.hasMark(mark)\n        }, /*#__PURE__*/React.createElement(FormatCodeIcon, null));\n      }\n    },\n    editor: {\n      onKeyDown: function onKeyDown(_ref2, next) {\n        var event = _ref2.event,\n            editor = _ref2.editor; // Decide what to do based on the key code...\n\n        if (isCodeHotkey(event)) {\n          event.preventDefault();\n          editor.toggleMark(mark);\n          return true;\n        }\n\n        return next();\n      },\n      renderLeaf: function renderLeaf(_ref3) {\n        var leaf = _ref3.leaf,\n            attributes = _ref3.attributes,\n            children = _ref3.children;\n\n        if (leaf[mark] === true) {\n          return /*#__PURE__*/React.createElement(\"code\", Object.assign({\n            className: \"webiny-rich-typography-code\"\n          }, attributes), children);\n        }\n\n        return children;\n      }\n    }\n  }\n};\nexport default plugin;","map":null,"metadata":{},"sourceType":"module"}