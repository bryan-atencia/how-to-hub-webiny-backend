{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _get from \"lodash/get\";\nimport React from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport graphql from \"./graphql\";\nimport { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from \"@webiny/app-admin/components/SimpleForm\";\n\nvar FormsSettings = function FormsSettings() {\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(Query, {\n    query: graphql.query\n  }, function (_ref) {\n    var data = _ref.data,\n        queryInProgress = _ref.loading;\n    var settings = _get(data, \"forms.getSettings.data\") || {};\n    return /*#__PURE__*/React.createElement(Mutation, {\n      mutation: graphql.mutation\n    }, function (update, _ref2) {\n      var mutationInProgress = _ref2.loading;\n      return /*#__PURE__*/React.createElement(Form, {\n        data: settings,\n        onSubmit: /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return update({\n                      variables: {\n                        data: data\n                      }\n                    });\n\n                  case 2:\n                    showSnackbar(\"Settings updated successfully.\");\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }()\n      }, function (_ref4) {\n        var Bind = _ref4.Bind,\n            form = _ref4.form,\n            formData = _ref4.data;\n\n        var reCaptchaEnabled = _get(formData, \"reCaptcha.enabled\");\n\n        return /*#__PURE__*/React.createElement(SimpleForm, null, (queryInProgress || mutationInProgress) && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {\n          title: \"reCAPTCHA settings\"\n        }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"domain\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Domain\",\n          description: \"E.g. https://www.mysite.com\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"reCaptcha.enabled\"\n        }, /*#__PURE__*/React.createElement(Switch, {\n          label: \"Enable Google reCAPTCHA\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"reCaptcha.siteKey\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          disabled: !reCaptchaEnabled,\n          label: \"Google reCAPTCHA site key\",\n          description: /*#__PURE__*/React.createElement(React.Fragment, null, \"A v2 Tickbox site key.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n            href: \"https://www.google.com/recaptcha/admin\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }, \"Don't have a site key?\"))\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"reCaptcha.secretKey\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          disabled: !reCaptchaEnabled,\n          label: \"Google reCAPTCHA secret key\",\n          description: /*#__PURE__*/React.createElement(React.Fragment, null, \"A v2 Tickbox secret key.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n            href: \"https://www.google.com/recaptcha/admin\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }, \"Don't have a site key?\"))\n        }))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n          onClick: form.submit\n        }, \"Save\")));\n      });\n    });\n  });\n};\n\nexport default FormsSettings;","map":null,"metadata":{},"sourceType":"module"}