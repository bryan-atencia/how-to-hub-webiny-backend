{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { css as _css } from \"emotion\";\nimport * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { PagesAutocomplete } from \"@webiny/app-page-builder/admin/components/PagesAutocomplete\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { validation } from \"@webiny/validation\";\nvar menuPageFormStyle = {\n  color: \"var(--mdc-theme-on-surface)\",\n  backgroundColor: \"var(--mdc-theme-background) !important\"\n};\n\nvar LinkForm = function LinkForm(_ref) {\n  var data = _ref.data,\n      onSubmit = _ref.onSubmit,\n      onCancel = _ref.onCancel;\n  return /*#__PURE__*/React.createElement(Elevation, {\n    z: 4,\n    className: _css(menuPageFormStyle)\n  }, /*#__PURE__*/React.createElement(Form, {\n    data: data,\n    onSubmit: onSubmit\n  }, function (_ref2) {\n    var submit = _ref2.submit,\n        Bind = _ref2.Bind,\n        data = _ref2.data,\n        form = _ref2.form;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Typography, {\n      use: \"overline\"\n    }, \"Page menu item\"))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"page\",\n      validators: validation.create(\"required\")\n    }, function (_ref3) {\n      var _onChange = _ref3.onChange,\n          rest = _objectWithoutProperties(_ref3, [\"onChange\"]);\n\n      return /*#__PURE__*/React.createElement(PagesAutocomplete, Object.assign({}, rest, {\n        onChange: function onChange(value, selection) {\n          _onChange(value);\n\n          if (!data.title) {\n            form.setState(function (state) {\n              state.data.title = selection.title;\n            });\n          }\n        },\n        label: \"Page\"\n      }));\n    }))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"title\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Title\"\n    })))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(ButtonSecondary, {\n      onClick: onCancel\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(ButtonPrimary, {\n      onClick: submit,\n      style: {\n        float: \"right\"\n      }\n    }, \"Save menu item\"))));\n  }));\n};\n\nexport default LinkForm;","map":null,"metadata":{},"sourceType":"module"}