{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport styled from \"@emotion/styled\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport { unregisterPlugin } from \"@webiny/plugins\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/close.svg\";\nimport { ReactComponent as EditIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/edit.svg\";\nimport { deleteElement, updateElement } from \"./graphql\";\nimport EditElementDialog from \"./EditElementDialog\";\nimport createElementPlugin from \"@webiny/app-page-builder/admin/utils/createElementPlugin\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nvar EditIconWrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"efssgx80\",\n  label: \"EditIconWrapper\"\n})({\n  position: \"absolute\",\n  top: 0,\n  right: 48\n});\nvar DeleteIconWrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"efssgx81\",\n  label: \"DeleteIconWrapper\"\n})({\n  position: \"absolute\",\n  top: 0,\n  right: 16\n});\n\nvar Title = function Title(props) {\n  var pluginName = props.plugin,\n      title = props.title;\n  var client = useApolloClient();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editDialogOpened = _useState2[0],\n      setEditDialog = _useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var openEditDialog = useCallback(function () {\n    return setEditDialog(true);\n  }, []);\n  var closeEditDialog = useCallback(function () {\n    return setEditDialog(false);\n  }, []);\n\n  var _useHandlers = useHandlers(props, {\n    onSubmit: function onSubmit(_ref) {\n      var id = _ref.id,\n          refresh = _ref.refresh;\n      return /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(plugin) {\n          var name, response, _response$data$pageBu, error, data;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  name = plugin.title;\n                  _context.next = 3;\n                  return client.mutate({\n                    mutation: updateElement,\n                    variables: {\n                      id: id,\n                      data: {\n                        name: name\n                      }\n                    }\n                  });\n\n                case 3:\n                  response = _context.sent;\n                  _response$data$pageBu = response.data.pageBuilder.updateElement, error = _response$data$pageBu.error, data = _response$data$pageBu.data;\n\n                  if (!error) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  closeEditDialog();\n                  setTimeout(function () {\n                    // For better UX, success message is shown after 300ms has passed.\n                    showSnackbar(error.message);\n                  }, 300);\n                  return _context.abrupt(\"return\");\n\n                case 9:\n                  // This will replace previously registered block plugin.\n                  createElementPlugin(data);\n                  closeEditDialog();\n                  refresh();\n                  setTimeout(function () {\n                    // For better UX, success message is shown after 300ms has passed.\n                    showSnackbar(\"Element \" + plugin.title + \" successfully saved.\");\n                  }, 300);\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n    }\n  }),\n      onSubmit = _useHandlers.onSubmit;\n\n  return /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    title: \"Delete saved element\",\n    message: /*#__PURE__*/React.createElement(\"p\", null, \"Are you sure you want to permanently delete the \", /*#__PURE__*/React.createElement(\"strong\", null, title), \" \", \"element?\")\n  }, function (_ref3) {\n    var showConfirmation = _ref3.showConfirmation;\n    return /*#__PURE__*/React.createElement(Typography, {\n      use: \"overline\"\n    }, title, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EditIconWrapper, null, /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(EditIcon, null),\n      onClick: openEditDialog\n    })), \" \", /*#__PURE__*/React.createElement(EditElementDialog, {\n      onSubmit: onSubmit,\n      plugin: pluginName,\n      open: !!editDialogOpened,\n      onClose: closeEditDialog\n    })), /*#__PURE__*/React.createElement(DeleteIconWrapper, null, /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(DeleteIcon, null),\n      onClick: function onClick() {\n        return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var plugin, refresh, id, _yield$client$mutate, res, error;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  plugin = props.plugin, refresh = props.refresh, id = props.id;\n                  _context2.next = 3;\n                  return client.mutate({\n                    mutation: deleteElement,\n                    variables: {\n                      id: id\n                    }\n                  });\n\n                case 3:\n                  _yield$client$mutate = _context2.sent;\n                  res = _yield$client$mutate.data;\n                  error = res.pageBuilder.deleteElement.error;\n\n                  if (!error) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", showSnackbar(error.message));\n\n                case 8:\n                  unregisterPlugin(plugin);\n                  refresh();\n                  showSnackbar( /*#__PURE__*/React.createElement(\"span\", null, \"Element \", /*#__PURE__*/React.createElement(\"strong\", null, title), \" deleted!\"));\n\n                case 11:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        })));\n      }\n    })));\n  });\n};\n\nexport default Title;","map":null,"metadata":{},"sourceType":"module"}