{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _get from \"lodash/get\";\nimport React, { useState, useCallback } from \"react\";\nimport { usePublishRevisionHandler } from \"../../utils/usePublishRevisionHandler\";\nimport { usePageDetails } from \"@webiny/app-page-builder/admin/hooks/usePageDetails\";\nimport PublishRevisionDialog from \"./PublishRevisionDialog\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as PublishIcon } from \"@svgr/webpack!@webiny/app-page-builder/admin/assets/round-publish-24px.svg\";\n\nfunction getPublishSuggestion(page, revisions) {\n  if (!page.published) {\n    return page.id;\n  }\n\n  if (revisions[0]) {\n    return revisions[0].id;\n  }\n\n  return \"\";\n}\n\nfunction getPublishableRevisions(revisions) {\n  return revisions.filter(function (r) {\n    return !r.published;\n  }).sort(function (a, b) {\n    // @ts-ignore\n    return new Date(b.savedOn) - new Date(a.savedOn);\n  });\n}\n\nvar PublishRevision = function PublishRevision() {\n  var _usePageDetails = usePageDetails(),\n      page = _usePageDetails.page;\n\n  var _usePublishRevisionHa = usePublishRevisionHandler({\n    page: page\n  }),\n      publishRevision = _usePublishRevisionHa.publishRevision;\n\n  var publishableRevisions = getPublishableRevisions(_get(page, \"revisions\") || []);\n  var publishSuggestion = getPublishSuggestion(page, publishableRevisions);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openDialog = _useState2[0],\n      setOpenDialog = _useState2[1];\n\n  var showDialog = useCallback(function () {\n    return setOpenDialog(true);\n  }, []);\n  var hideDialog = useCallback(function () {\n    return setOpenDialog(false);\n  }, []);\n  var onSubmit = useCallback(function (revision) {\n    hideDialog();\n    return publishRevision(revision);\n  }, [publishRevision]);\n\n  if (!publishableRevisions.length) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n    content: \"Publish\",\n    placement: \"top\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    icon: /*#__PURE__*/React.createElement(PublishIcon, null),\n    onClick: showDialog\n  })), /*#__PURE__*/React.createElement(PublishRevisionDialog, {\n    open: openDialog,\n    onClose: hideDialog,\n    onSubmit: onSubmit,\n    selected: publishSuggestion,\n    revisions: publishableRevisions\n  }));\n};\n\nexport default PublishRevision;","map":null,"metadata":{},"sourceType":"module"}