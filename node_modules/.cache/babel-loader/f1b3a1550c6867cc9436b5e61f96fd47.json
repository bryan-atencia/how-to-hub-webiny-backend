{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Choose one or more scopes.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Scopes\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { MultiAutoComplete } from \"@webiny/ui/AutoComplete\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { css } from \"emotion\";\nvar t = i18n.ns(\"app-security/admin/roles/form\");\nvar styles = {\n  wrapper: /*#__PURE__*/css({\n    \".mdc-elevation--z1\": {\n      maxHeight: 275\n    }\n  }, \"label:wrapper;\")\n};\n\nvar ScopesMultiAutoComplete = function ScopesMultiAutoComplete(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      scopesList = _useState2[0],\n      setScopesList = _useState2[1];\n\n  useEffect(function () {\n    var getScopesList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var plugins, scopes, i, plugin, pluginScopes;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                plugins = getPlugins(\"security-scopes-list\");\n                scopes = [];\n                i = 0;\n\n              case 3:\n                if (!(i < plugins.length)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                plugin = plugins[i];\n\n                if (plugin.scopes) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error(\"Missing \\\"scopes\\\" key in registered \\\"security-scopes-list\\\" plugin. The name of the plugin is \\\"\".concat(plugin.name || \"undefined\", \"\\\"\"));\n\n              case 7:\n                pluginScopes = plugin.scopes;\n\n                if (!(typeof pluginScopes === \"function\")) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 11;\n                return pluginScopes();\n\n              case 11:\n                pluginScopes = _context.sent;\n\n              case 12:\n                scopes.push.apply(scopes, _toConsumableArray(pluginScopes));\n\n              case 13:\n                i++;\n                _context.next = 3;\n                break;\n\n              case 16:\n                setScopesList(scopes);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getScopesList() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getScopesList();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.wrapper\n  }, /*#__PURE__*/React.createElement(MultiAutoComplete, Object.assign({\n    useSimpleValues: true,\n    options: scopesList.map(function (_ref2) {\n      var scope = _ref2.scope;\n      return scope;\n    }),\n    label: t(_templateObject()),\n    description: t(_templateObject2()),\n    unique: true,\n    renderItem: function renderItem(item) {\n      var scope = scopesList.find(function (current) {\n        return current.scope === item;\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, /*#__PURE__*/React.createElement(Typography, {\n        use: \"subtitle1\"\n      }, /*#__PURE__*/React.createElement(\"strong\", null, scope.title)))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Typography, {\n        use: \"subtitle2\"\n      }, scope.description)), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Typography, {\n        use: \"caption\"\n      }, scope.scope)));\n    }\n  }, props)));\n};\n\nexport default ScopesMultiAutoComplete;","map":null,"metadata":{},"sourceType":"module"}