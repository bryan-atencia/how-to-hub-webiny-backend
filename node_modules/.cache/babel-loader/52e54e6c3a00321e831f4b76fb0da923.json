{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter() {\n    this.events_ = {};\n  }\n\n  EventEmitter.prototype.on = function (event, cb) {\n    this.events_ = this.events_ || {};\n    this.events_[event] = this.events_[event] || [];\n    this.events_[event].push(cb);\n  };\n\n  EventEmitter.prototype.off = function (event, cb) {\n    this.events_ = this.events_ || {};\n    if (event in this.events_ === false) return;\n    this.events_[event].splice(this.events_[event].indexOf(cb), 1);\n  };\n\n  EventEmitter.prototype.trigger = function (event) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    this.events_ = this.events_ || {};\n    if (event in this.events_ === false) return;\n\n    for (var i = 0; i < this.events_[event].length; i++) {\n      this.events_[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  };\n\n  return EventEmitter;\n}();\n\nexport { EventEmitter };\n\nvar ArrayEmitter =\n/** @class */\nfunction (_super) {\n  __extends(ArrayEmitter, _super);\n\n  function ArrayEmitter() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.array = [];\n    return _this;\n  }\n\n  ArrayEmitter.prototype.push = function () {\n    var _a;\n\n    var items = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      items[_i] = arguments[_i];\n    }\n\n    var rVal = (_a = this.array).push.apply(_a, __spread(items));\n\n    this.trigger('change');\n    return rVal;\n  };\n\n  return ArrayEmitter;\n}(EventEmitter);\n\nexport { ArrayEmitter };","map":null,"metadata":{},"sourceType":"module"}