{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport { css } from \"emotion\";\nimport { validation } from \"@webiny/validation\";\nvar style = /*#__PURE__*/css({\n  \".webiny-pb-page-element-mailchimp-form__wrapper\": {\n    position: \"relative\",\n    \".webiny-pb-page-element-mailchimp-form__subscribe_btn\": {\n      position: \"absolute\",\n      top: 5,\n      right: 5\n    },\n    \".webiny-pb-page-element-mailchimp-form__subscribe_input\": {\n      padding: 15\n    }\n  }\n}, \"label:style;\");\n\nvar MailchimpDefaultForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(MailchimpDefaultForm, _React$Component);\n\n  var _super = _createSuper(MailchimpDefaultForm);\n\n  function MailchimpDefaultForm() {\n    var _this;\n\n    _classCallCheck(this, MailchimpDefaultForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      error: null,\n      success: false\n    });\n\n    return _this;\n  }\n\n  _createClass(MailchimpDefaultForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          Bind = _this$props.Bind,\n          submit = _this$props.submit,\n          processing = _this$props.processing;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"webiny-pb-page-element-mailchimp-form \" + style\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"webiny-pb-page-element-mailchimp-form__wrapper\"\n      }, /*#__PURE__*/React.createElement(Bind, {\n        name: \"email\",\n        validators: validation.create(\"required,email\")\n      }, function (_ref) {\n        var value = _ref.value,\n            _onChange = _ref.onChange,\n            validation = _ref.validation;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"webiny-pb-page-element-input\"\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          onChange: function onChange(e) {\n            return _onChange(e.target.value);\n          },\n          disabled: processing,\n          className: \"webiny-pb-page-element-mailchimp-form__subscribe_input webiny-pb-page-element-input__field\",\n          value: value,\n          placeholder: \"Your e-mail\"\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"webiny-pb-page-element-mailchimp-form__msg webiny-pb-page-element-input__helper-text\"\n        }, validation.isValid === false && validation.message), _this2.state.error && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"webiny-pb-page-element-mailchimp-form__msg webiny-pb-page-element-input__helper-text\"\n        }, \"Error: \", _this2.state.error), _this2.state.success && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"webiny-pb-page-element-mailchimp-form__msg webiny-pb-page-element-input__helper-text\"\n        }, \"You are on the list. Thank you!\"));\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"webiny-pb-page-element-mailchimp-form__subscribe_btn webiny-pb-page-element-button webiny-pb-page-element-button--primary\",\n        disabled: processing,\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this2.setState({\n                    success: false,\n                    error: null\n                  });\n\n                  _context.next = 3;\n                  return submit({\n                    onSuccess: function onSuccess() {\n                      _this2.setState({\n                        success: true\n                      });\n                    },\n                    onError: function onError(error) {\n                      _this2.setState({\n                        error: error\n                      });\n                    }\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))\n      }, \"Subscribe\")));\n    }\n  }]);\n\n  return MailchimpDefaultForm;\n}(React.Component);\n\nexport default MailchimpDefaultForm;","map":null,"metadata":{},"sourceType":"module"}