{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _noop from \"lodash/noop\";\nimport * as React from \"react\";\n/**\n * This component is used to wrap Input and Textarea components to optimize form re-render.\n * These 2 are the only components that trigger form model change on each character input.\n * This means, whenever you type a letter an entire form re-renders.\n * On complex forms you will feel and see a significant delay if this component is not used.\n *\n * The logic behind this component is to serve as a middleware between Form and Input/Textarea, and only notify form of a change when\n * a user stops typing for given period of time (400ms by default).\n */\n\nvar DelayedOnChange = /*#__PURE__*/function (_React$Component) {\n  _inherits(DelayedOnChange, _React$Component);\n\n  var _super = _createSuper(DelayedOnChange);\n\n  function DelayedOnChange() {\n    var _this;\n\n    _classCallCheck(this, DelayedOnChange);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"delay\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"applyValue\", function (value) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _noop;\n      _this.delay && clearTimeout(_this.delay);\n      _this.delay = null;\n\n      _this.props.onChange(value, callback);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      _this.setState({\n        value: value\n      }, _this.changed);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changed\", function () {\n      _this.delay && clearTimeout(_this.delay);\n      _this.delay = null;\n      _this.delay = setTimeout(function () {\n        return _this.applyValue(_this.state.value);\n      }, _this.props.delay);\n    });\n\n    return _this;\n  }\n\n  _createClass(DelayedOnChange, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        value: this.props.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          other = _objectWithoutProperties(_this$props, [\"children\"]);\n\n      var newProps = _objectSpread(_objectSpread({}, other), {}, {\n        value: this.state.value,\n        onChange: this.onChange\n      });\n\n      var renderProp = typeof children === \"function\" ? children : false;\n      var child = renderProp ? renderProp(newProps) : /*#__PURE__*/React.cloneElement(children, newProps);\n\n      var props = _objectSpread({}, child.props);\n\n      var realOnKeyDown = props.onKeyDown || _noop;\n      var realOnBlur = props.onBlur || _noop; // Need to apply value if input lost focus\n\n      props.onBlur = function (e) {\n        e.persist();\n\n        _this2.applyValue(e.target.value, function () {\n          return realOnBlur(e);\n        });\n      }; // Need to listen for TAB key to apply new value immediately, without delay. Otherwise validation will be triggered with old value.\n\n\n      props.onKeyDown = function (e) {\n        e.persist();\n\n        if (e.key === \"Tab\") {\n          _this2.applyValue(e.target.value, function () {\n            return realOnKeyDown(e);\n          });\n        } else if (e.key === \"Enter\" && props[\"data-on-enter\"]) {\n          _this2.applyValue(e.target.value, function () {\n            return realOnKeyDown(e);\n          });\n        } else {\n          realOnKeyDown(e);\n        }\n      };\n\n      return /*#__PURE__*/React.cloneElement(child, props);\n    }\n  }]);\n\n  return DelayedOnChange;\n}(React.Component);\n\n_defineProperty(DelayedOnChange, \"defaultProps\", {\n  delay: 400\n});\n\nexport default DelayedOnChange;","map":null,"metadata":{},"sourceType":"module"}