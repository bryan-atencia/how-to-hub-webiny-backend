{"ast":null,"code":"import React from \"react\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { set } from \"dot-prop-immutable\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { get } from \"dot-prop-immutable\";\nimport { ReactComponent as AlignCenterIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_center.svg\";\nimport { ReactComponent as AlignLeftIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_left.svg\";\nimport { ReactComponent as AlignJustifyIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_justify.svg\";\nimport { ReactComponent as AlignRightIcon } from \"@svgr/webpack!@webiny/app-page-builder/editor/assets/icons/format_align_right.svg\"; // Icons map for dynamic render\n\nvar icons = {\n  left: /*#__PURE__*/React.createElement(AlignLeftIcon, null),\n  center: /*#__PURE__*/React.createElement(AlignCenterIcon, null),\n  right: /*#__PURE__*/React.createElement(AlignRightIcon, null),\n  justify: /*#__PURE__*/React.createElement(AlignJustifyIcon, null)\n};\nvar defaultOptions = {\n  alignments: [\"left\", \"center\", \"right\", \"justify\"]\n};\n\nvar HorizontalAlignAction = function HorizontalAlignAction(props) {\n  var element = props.element,\n      children = props.children,\n      _props$options = props.options;\n  _props$options = _props$options === void 0 ? defaultOptions : _props$options;\n  var alignments = _props$options.alignments;\n  var align = get(element, \"data.settings.horizontalAlign\") || \"left\";\n  var onClick = useHandler(props, function (_ref) {\n    var element = _ref.element,\n        updateElement = _ref.updateElement;\n    return function () {\n      var align = get(element, \"data.settings.horizontalAlign\") || \"left\";\n      var types = Object.keys(icons).filter(function (key) {\n        return alignments ? alignments.includes(key) : true;\n      });\n      var nextAlign = types[types.indexOf(align) + 1] || \"left\";\n      updateElement({\n        element: set(element, \"data.settings.horizontalAlign\", nextAlign)\n      });\n    };\n  });\n  var plugin = getPlugins(\"pb-editor-page-element\").find(function (pl) {\n    return pl.elementType === element.type;\n  });\n\n  if (!plugin) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.cloneElement(children, {\n    onClick: onClick,\n    icon: icons[align]\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    element: getActiveElement(state)\n  };\n}, {\n  updateElement: updateElement\n})(HorizontalAlignAction);","map":null,"metadata":{},"sourceType":"module"}