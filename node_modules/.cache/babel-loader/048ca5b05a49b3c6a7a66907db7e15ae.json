{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _isNull from \"lodash/isNull\";\nimport _omitBy from \"lodash/omitBy\";\nimport _omit from \"lodash/omit\";\nimport uniqid from \"uniqid\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport findObject from \"./findObject\";\n\nvar MenuItemForm = function MenuItemForm(props) {\n  var _useHandlers = useHandlers(props, {\n    onCancel: function onCancel(_ref) {\n      var editItem = _ref.editItem,\n          currentMenuItem = _ref.currentMenuItem,\n          deleteItem = _ref.deleteItem;\n      return function () {\n        if (currentMenuItem.__new) {\n          deleteItem(currentMenuItem);\n        } else {\n          editItem(null);\n        }\n      };\n    },\n    onSubmit: function onSubmit(_ref2) {\n      var items = _ref2.items,\n          onChange = _ref2.onChange,\n          editItem = _ref2.editItem;\n      return function (data) {\n        var item = _omit(_omitBy(data, _isNull), [\"__new\"]);\n\n        if (item.id) {\n          var target = findObject(items, item.id);\n\n          if (target) {\n            target.source[target.index] = item;\n            onChange(_toConsumableArray(items));\n          }\n        } else {\n          item.id = uniqid();\n          onChange([].concat(_toConsumableArray(items), [item]));\n        }\n\n        editItem(null);\n      };\n    }\n  }),\n      onCancel = _useHandlers.onCancel,\n      onSubmit = _useHandlers.onSubmit;\n\n  var currentMenuItem = props.currentMenuItem;\n  var plugins = getPlugins(\"pb-menu-item\");\n  var plugin = plugins.find(function (pl) {\n    return pl.menuItem.type === currentMenuItem.type;\n  });\n\n  if (!plugin) {\n    return null;\n  }\n\n  return plugin.menuItem.renderForm({\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    data: currentMenuItem\n  });\n};\n\nexport default MenuItemForm;","map":null,"metadata":{},"sourceType":"module"}