{"ast":null,"code":"import { useEffect, useCallback, useRef } from \"react\";\nimport { getLinkRange, TYPE } from \"./utils\";\n\nvar getSelectionRect = function getSelectionRect() {\n  var native = window.getSelection();\n\n  if (native.type === \"None\") {\n    return {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var range = native.getRangeAt(0);\n  return range.getBoundingClientRect();\n};\n\nexport default function useLink(_ref) {\n  var editor = _ref.editor,\n      onChange = _ref.onChange,\n      activatePlugin = _ref.activatePlugin;\n  var menuRef = useRef(null);\n  var link = editor.value.inlines.find(function (inline) {\n    return inline.type === \"link\";\n  });\n  var selection = editor.value.selection;\n  useEffect(function () {\n    var menu = menuRef.current;\n\n    if (!link && selection.isFocused) {\n      menu.style.display = \"none\";\n      return;\n    }\n\n    if (!selection.isFocused) {\n      // Don't reposition the tooltip;\n      // When we attempt to click the button, editor focus is lost.\n      return;\n    } // Calculate position\n\n\n    if (menu) {\n      var editorRect = menu.parentNode.getBoundingClientRect();\n\n      var _getSelectionRect = getSelectionRect(),\n          top = _getSelectionRect.top,\n          left = _getSelectionRect.left,\n          height = _getSelectionRect.height; // Cursor position is calculated in relation to `window`\n\n\n      var cursorLeft = left - editorRect.left;\n      var position = {\n        top: top - editorRect.top + height,\n        left: cursorLeft\n      };\n      menu.style.display = \"flex\";\n      menu.style.top = position.top + \"px\";\n      menu.style.left = \"0px\"; // Menu position is calculated in relation to parent element\n\n      var menuRect = menu.getBoundingClientRect();\n\n      if (menuRect.width + cursorLeft > editorRect.width) {\n        menu.style.left = \"\".concat(editorRect.width - menuRect.width - 20, \"px\");\n      } else {\n        menu.style.left = \"\".concat(cursorLeft, \"px\");\n      }\n    }\n  });\n\n  function activateLink() {\n    activatePlugin(\"pb-editor-slate-menu-item-link\");\n  }\n\n  var removeLink = useCallback(function () {\n    var menu = menuRef.current;\n    editor.change(function (change) {\n      // Restore selection\n      change.select(getLinkRange(change, change.value.selection)).unwrapInline(TYPE);\n      onChange(change);\n      menu.style.display = \"none\";\n    });\n  }, []);\n  var href = link ? link.data.get(\"href\") : \"\";\n  return {\n    href: href,\n    menuRef: menuRef,\n    activateLink: activateLink,\n    removeLink: removeLink\n  };\n}","map":null,"metadata":{},"sourceType":"module"}