{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Create\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"New form\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Mutation } from \"react-apollo\";\nimport { Form } from \"@webiny/form\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { CREATE_FORM } from \"../../viewsGraphql\";\nimport get from \"lodash.get\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.namespace(\"Forms.NewFormDialog\");\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from \"@webiny/ui/Dialog\";\nimport { ButtonDefault } from \"@webiny/ui/Button\";\nvar narrowDialog = /*#__PURE__*/css({\n  \".mdc-dialog__surface\": {\n    width: 400,\n    minWidth: 400\n  }\n}, \"label:narrowDialog;\");\n\nvar NewFormDialog = function NewFormDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      formsDataList = _ref.formsDataList;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    className: narrowDialog,\n    \"data-testid\": \"fb-new-form-modal\"\n  }, /*#__PURE__*/React.createElement(Mutation, {\n    mutation: CREATE_FORM\n  }, function (update) {\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setLoading(true);\n                  _context.t0 = get;\n                  _context.next = 4;\n                  return update({\n                    variables: data,\n                    refetchQueries: [\"FormsListForms\"],\n                    awaitRefetchQueries: true\n                  });\n\n                case 4:\n                  _context.t1 = _context.sent;\n                  response = (0, _context.t0)(_context.t1, \"data.forms.form\");\n\n                  if (!response.error) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  setLoading(false);\n                  return _context.abrupt(\"return\", showSnackbar(response.error.message));\n\n                case 9:\n                  _context.next = 11;\n                  return formsDataList.refresh();\n\n                case 11:\n                  history.push(\"/forms/\" + response.data.id);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    }, function (_ref3) {\n      var Bind = _ref3.Bind,\n          submit = _ref3.submit;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject())), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Bind, {\n        name: \"name\"\n      }, /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Enter a name for your new form\"\n      }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(ButtonDefault, {\n        onClick: submit\n      }, \"+ \", t(_templateObject2()))));\n    });\n  }));\n};\n\nexport default NewFormDialog;","map":null,"metadata":{},"sourceType":"module"}