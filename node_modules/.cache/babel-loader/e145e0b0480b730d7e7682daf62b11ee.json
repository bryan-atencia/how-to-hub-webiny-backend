{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { MDCFloatingLabelFoundation } from '@material/floating-label';\nimport { FoundationComponent } from '@rmwc/base';\n\nvar FloatingLabel =\n/** @class */\nfunction (_super) {\n  __extends(FloatingLabel, _super);\n\n  function FloatingLabel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.root = _this.createElement('root');\n    return _this;\n  }\n\n  FloatingLabel.prototype.getDefaultFoundation = function () {\n    var _this = this;\n\n    return new MDCFloatingLabelFoundation({\n      addClass: function addClass(className) {\n        return _this.root.addClass(className);\n      },\n      removeClass: function removeClass(className) {\n        return _this.root.removeClass(className);\n      },\n      getWidth: function getWidth() {\n        return _this.root.ref ? _this.root.ref.scrollWidth : 0;\n      },\n      registerInteractionHandler: function registerInteractionHandler(evtType, handler) {\n        return _this.root.addEventListener(evtType, handler);\n      },\n      deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {\n        return _this.root.removeEventListener(evtType, handler);\n      }\n    });\n  };\n\n  FloatingLabel.prototype.sync = function (props, prevProps) {\n    var _this = this; // shake\n\n\n    this.syncProp(props.shake, prevProps.shake, function () {\n      _this.foundation.shake(!!props.shake);\n    }); // float\n\n    this.syncProp(props.float, prevProps.float, function () {\n      _this.foundation.float(!!props.float);\n    });\n  };\n\n  FloatingLabel.prototype.getWidth = function () {\n    return this.foundation.getWidth();\n  };\n\n  FloatingLabel.prototype.render = function () {\n    var _a = this.props,\n        shake = _a.shake,\n        float = _a.float,\n        rest = __rest(_a, [\"shake\", \"float\"]);\n\n    return React.createElement(\"label\", __assign({}, this.root.props(__assign({}, rest, {\n      className: 'mdc-floating-label'\n    })), {\n      ref: this.root.setRef\n    }));\n  };\n\n  FloatingLabel.displayName = 'FloatingLabel';\n  return FloatingLabel;\n}(FoundationComponent);\n\nexport { FloatingLabel };","map":null,"metadata":{},"sourceType":"module"}