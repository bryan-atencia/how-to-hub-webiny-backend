{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _get from \"lodash/get\";\nimport React from \"react\";\nimport { set } from \"dot-prop-immutable\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { Tabs, Tab } from \"@webiny/ui/Tabs\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { InputContainer } from \"@webiny/app-page-builder/editor/plugins/elementSettings/components/StyledComponents\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Form } from \"@webiny/form\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\n\nvar validateHeight = function validateHeight(value) {\n  if (!value) {\n    return null;\n  }\n\n  if (isNaN(parseInt(value))) {\n    throw Error(\"Enter a valid number!\");\n  }\n\n  if (value.endsWith(\"%\") || value.endsWith(\"px\")) {\n    return true;\n  }\n\n  throw Error(\"Specify % or px!\");\n};\n\nvar Settings = function Settings(props) {\n  var updateSettings = useHandler(props, function (_ref) {\n    var element = _ref.element,\n        updateElement = _ref.updateElement;\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, form) {\n        var valid, attrKey, newElement;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return form.validate();\n\n              case 2:\n                valid = _context.sent;\n\n                if (valid) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                attrKey = \"data.settings.height\";\n                newElement = set(element, attrKey, data);\n                updateElement({\n                  element: newElement\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  });\n\n  var data = _get(props.element.data, \"settings.height\", {\n    fullHeight: false,\n    value: \"100%\"\n  });\n\n  return /*#__PURE__*/React.createElement(Form, {\n    data: data,\n    onChange: updateSettings\n  }, function (_ref3) {\n    var Bind = _ref3.Bind,\n        data = _ref3.data;\n    return /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {\n      label: \"height\"\n    }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 5\n    }, /*#__PURE__*/React.createElement(Typography, {\n      use: \"overline\"\n    }, \"full height\")), /*#__PURE__*/React.createElement(Cell, {\n      span: 7\n    }, /*#__PURE__*/React.createElement(InputContainer, {\n      width: \"auto\",\n      margin: 0\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"fullHeight\"\n    }, /*#__PURE__*/React.createElement(Switch, null))))), !data.fullHeight && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 5\n    }, /*#__PURE__*/React.createElement(Typography, {\n      use: \"overline\"\n    }, \"height\")), /*#__PURE__*/React.createElement(Cell, {\n      span: 7\n    }, /*#__PURE__*/React.createElement(InputContainer, {\n      width: \"auto\",\n      margin: 0\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"value\",\n      validators: validateHeight\n    }, /*#__PURE__*/React.createElement(Input, null)))))));\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    element: getActiveElement(state)\n  };\n}, {\n  updateElement: updateElement\n})(Settings);","map":null,"metadata":{},"sourceType":"module"}