{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport * as React from \"react\";\nimport classnames from \"classnames\";\nimport { List, ListItem, ListItemGraphic, ListItemText, ListItemMeta } from \"@webiny/ui/List\";\nimport { searchBarDropdown, iconSearchType } from \"./styled\";\nimport { Elevation } from \"@webiny/ui/Elevation\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { ReactComponent as SearchIcon } from \"@svgr/webpack!./icons/round-search-24px.svg\";\n\nvar SearchBarDropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchBarDropdown, _React$Component);\n\n  var _super = _createSuper(SearchBarDropdown);\n\n  function SearchBarDropdown() {\n    _classCallCheck(this, SearchBarDropdown);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SearchBarDropdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$context = this.props.context,\n          downshift = _this$props$context.downshift.current,\n          plugins = _this$props$context.state.plugins;\n      downshift.selectItem(plugins.current);\n      downshift.setHighlightedIndex(plugins.list.indexOf(plugins.current));\n      downshift.openMenu();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$context2 = this.props.context,\n          downshift = _this$props$context2.downshift.current,\n          submitSearchTerm = _this$props$context2.submitSearchTerm,\n          _this$props$context2$ = _this$props$context2.state,\n          plugins = _this$props$context2$.plugins,\n          searchTerm = _this$props$context2$.searchTerm;\n      var getMenuProps = downshift.getMenuProps,\n          getItemProps = downshift.getItemProps,\n          _downshift$state = downshift.state,\n          selectedItem = _downshift$state.selectedItem,\n          highlightedIndex = _downshift$state.highlightedIndex;\n      return /*#__PURE__*/React.createElement(Elevation, {\n        z: 2,\n        className: searchBarDropdown\n      }, /*#__PURE__*/React.createElement(List, getMenuProps(), plugins.list.map(function (item, index) {\n        // Base classes.\n        var itemClassNames = {\n          highlighted: highlightedIndex === index,\n          selected: false\n        }; // Add \"selected\" class if the item is selected.\n\n        if (selectedItem && selectedItem === item) {\n          itemClassNames.selected = true;\n        }\n\n        return /*#__PURE__*/React.createElement(ListItem, Object.assign({\n          key: item.route\n        }, getItemProps({\n          index: index,\n          item: item,\n          className: classnames(itemClassNames),\n          onClick: function onClick() {\n            return submitSearchTerm(item);\n          }\n        })), /*#__PURE__*/React.createElement(ListItemGraphic, null, /*#__PURE__*/React.createElement(Icon, {\n          className: iconSearchType,\n          icon: /*#__PURE__*/React.createElement(SearchIcon, null)\n        })), /*#__PURE__*/React.createElement(ListItemText, null, searchTerm.current || \"Search for all...\"), /*#__PURE__*/React.createElement(ListItemMeta, null, \"in \", item.label));\n      })));\n    }\n  }]);\n\n  return SearchBarDropdown;\n}(React.Component);\n\nexport { SearchBarDropdown as default };","map":null,"metadata":{},"sourceType":"module"}