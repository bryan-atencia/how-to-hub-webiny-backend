{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"emotion\";\nimport { Drawer, DrawerContent } from \"@webiny/ui/Drawer\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { useKeyHandler } from \"@webiny/app-page-builder/editor/hooks/useKeyHandler\";\nimport { deactivatePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActivePlugins } from \"@webiny/app-page-builder/editor/selectors\";\nvar ToolbarDrawerContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"ekys0pl0\",\n  label: \"ToolbarDrawerContainer\"\n})({\n  top: 64,\n  left: 0,\n  position: \"fixed\",\n  backgroundColor: \"var(--mdc-theme-surface)\",\n  zIndex: 2\n});\nvar ToolbarContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"ekys0pl1\",\n  label: \"ToolbarContainer\"\n})({\n  position: \"fixed\",\n  display: \"inline-block\",\n  padding: \"2px 1px 2px 3px\",\n  width: 50,\n  top: 64,\n  height: \"calc(100vh - 68px)\",\n  backgroundColor: \"var(--mdc-theme-surface)\",\n  boxShadow: \"1px 0px 5px 0px var(--mdc-theme-on-background)\",\n  zIndex: 3\n});\nvar DrawerContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"ekys0pl2\",\n  label: \"DrawerContainer\"\n})(function (_ref) {\n  var open = _ref.open;\n  return {\n    pointerEvents: open ? \"all\" : \"none\",\n    \".mdc-drawer__drawer\": {\n      \"> .mdc-list\": {\n        padding: 0\n      }\n    }\n  };\n});\nvar ToolbarActions = /*#__PURE__*/styled(\"div\", {\n  target: \"ekys0pl3\",\n  label: \"ToolbarActions\"\n})({\n  position: \"relative\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n  height: \"100%\"\n});\nvar drawerStyle = /*#__PURE__*/css({\n  zIndex: 10,\n  \"&.mdc-drawer--dismissible\": {\n    marginLeft: 54,\n    position: \"fixed\",\n    top: 64,\n    width: \"490px !important\",\n    maxWidth: \"490px !important\",\n    \".mdc-drawer__content\": {\n      width: \"100%\"\n    }\n  }\n}, \"label:drawerStyle;\");\nvar ToolbarDrawer = connect(null, {\n  deactivatePlugin: deactivatePlugin\n})(function (_ref2) {\n  var name = _ref2.name,\n      active = _ref2.active,\n      children = _ref2.children,\n      deactivatePlugin = _ref2.deactivatePlugin;\n\n  var _useKeyHandler = useKeyHandler(),\n      removeKeyHandler = _useKeyHandler.removeKeyHandler,\n      addKeyHandler = _useKeyHandler.addKeyHandler;\n\n  var last = useRef({\n    active: null\n  });\n  useEffect(function () {\n    if (active && !last.current.active) {\n      addKeyHandler(\"escape\", function (e) {\n        e.preventDefault();\n        deactivatePlugin({\n          name: name\n        });\n      });\n    }\n\n    if (!active && last.current.active) {\n      removeKeyHandler(\"escape\");\n    }\n  });\n  useEffect(function () {\n    last.current = {\n      active: active\n    };\n  });\n  return /*#__PURE__*/React.createElement(DrawerContainer, {\n    open: active\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    dismissible: true,\n    open: active,\n    className: drawerStyle\n  }, /*#__PURE__*/React.createElement(DrawerContent, null, children)));\n});\n\nvar renderPlugin = function renderPlugin(plugin) {\n  return /*#__PURE__*/React.cloneElement(plugin.renderAction(), {\n    key: plugin.name\n  });\n};\n\nvar Toolbar = function Toolbar(_ref3) {\n  var activePluginsTop = _ref3.activePluginsTop;\n  var actionsTop = getPlugins(\"pb-editor-toolbar-top\");\n  var actionsBottom = getPlugins(\"pb-editor-toolbar-bottom\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToolbarDrawerContainer, null, actionsTop.filter(function (plugin) {\n    return typeof plugin.renderDrawer === \"function\";\n  }).map(function (plugin) {\n    return /*#__PURE__*/React.createElement(ToolbarDrawer, {\n      key: plugin.name,\n      name: plugin.name,\n      active: Boolean(activePluginsTop.includes(plugin.name))\n    }, plugin.renderDrawer());\n  })), /*#__PURE__*/React.createElement(ToolbarContainer, null, /*#__PURE__*/React.createElement(ToolbarActions, null, /*#__PURE__*/React.createElement(\"div\", null, actionsTop.map(renderPlugin)), /*#__PURE__*/React.createElement(\"div\", null, actionsBottom.map(renderPlugin)))));\n};\n\nexport default connect(function (state) {\n  return {\n    activePluginsTop: getActivePlugins(\"pb-editor-toolbar-top\")(state).map(function (pl) {\n      return pl.name;\n    }),\n    activePluginsBottom: getActivePlugins(\"pb-editor-toolbar-bottom\")(state).map(function (pl) {\n      return pl.name;\n    })\n  };\n}, null, null, {\n  areStatePropsEqual: _isEqual\n})(Toolbar);","map":null,"metadata":{},"sourceType":"module"}