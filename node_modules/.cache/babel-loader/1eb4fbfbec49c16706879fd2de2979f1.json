{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"Record saved successfully.\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Something unexpected happened\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Could not save record.\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"One or more fields are not valid!\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Record deleted successfully.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Could not delete record.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useDialog } from \"@webiny/app-admin/hooks/useDialog\";\nimport { useDataList } from \"@webiny/app/hooks/useDataList\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { getData, getError } from \"./functions\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.ns(\"app-admin/contexts\");\nexport var CrudContext = React.createContext({}); // TODO: complete this type.\n\nexport var CrudProvider = function CrudProvider(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useDialog = useDialog(),\n      showDialog = _useDialog.showDialog;\n\n  var _useRouter = useRouter(),\n      location = _useRouter.location,\n      history = _useRouter.history;\n\n  var list = useDataList({\n    query: _get(props, \"list.query\", props.list),\n    variables: _get(props, \"list.variables\"),\n    client: _get(props, \"list.options.client\"),\n    // \"useDataList\" will know how to handle no-handler-provided situations.\n    getData: _get(props, \"list.getData\"),\n    getMeta: _get(props, \"list.getMeta\"),\n    getError: _get(props, \"list.getError\")\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      mutationInProgress = _useState2[0],\n      setMutationInProgress = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invalidFields = _useState4[0],\n      setInvalidFields = _useState4[1];\n\n  var urlSearchParams = new URLSearchParams(location.search);\n  var id = urlSearchParams.get(\"id\");\n\n  var _useMutation = useMutation(props.create.mutation || props.create, props.create.options || null),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createMutation = _useMutation2[0];\n\n  var _useMutation3 = useMutation(props.update.mutation || props.update, props.update.options || null),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      updateMutation = _useMutation4[0];\n\n  var _useMutation5 = useMutation(props.delete.mutation || props.delete, props.delete.options || null),\n      _useMutation6 = _slicedToArray(_useMutation5, 1),\n      deleteMutation = _useMutation6[0];\n\n  var readQuery = useQuery(props.read.query || props.read, _objectSpread(_objectSpread({}, props.read.options || {}), {}, {\n    variables: {\n      id: id\n    },\n    skip: !id,\n    onCompleted: function onCompleted(data) {\n      var error = _get(props, \"read.getError\", getError)(data);\n\n      if (!error) {\n        return;\n      }\n\n      var query = new URLSearchParams(location.search);\n      query.delete(\"id\");\n      history.push({\n        search: query.toString()\n      });\n      showSnackbar(error.message);\n    }\n  }));\n  var actions = {\n    delete: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n        var res, error, message, _message, query;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return deleteMutation({\n                  variables: {\n                    id: item.id\n                  }\n                });\n\n              case 2:\n                res = _context.sent;\n                error = _get(props, \"delete.getError\", getError)(res);\n\n                if (error) {\n                  message = error.message || t(_templateObject());\n                  showSnackbar(message, {\n                    title: \"Something unexpected happened\"\n                  });\n                } else {\n                  _message = _get(props, \"delete.snackbar\", t(_templateObject2()));\n\n                  if (typeof _message === \"function\") {\n                    _message = _message(item);\n                  }\n\n                  showSnackbar(_message);\n                }\n\n                if (item.id === id) {\n                  query = new URLSearchParams(location.search);\n                  query.delete(\"id\");\n                  history.push({\n                    search: query.toString()\n                  });\n                }\n\n                list.refresh();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function _delete(_x) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }(),\n    save: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n        var action, variablesHandler, variables, operation;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                delete formData[\"id\"];\n                action = id ? \"update\" : \"create\";\n                setMutationInProgress(true);\n                setInvalidFields(null);\n                variablesHandler = _get(props[action], \"variables\");\n                variables = variablesHandler ? variablesHandler(formData) : {\n                  data: formData\n                };\n                operation = action === \"create\" ? createMutation({\n                  variables: variables\n                }) : updateMutation({\n                  variables: _objectSpread({\n                    id: id\n                  }, variables)\n                });\n                return _context2.abrupt(\"return\", operation.then(function (response) {\n                  var data = _get(props[action], \"getData\", getData)(response.data);\n\n                  var error = _get(props[action], \"getError\", getError)(response.data);\n\n                  if (error) {\n                    if (error.code === \"VALIDATION_FAILED_INVALID_FIELDS\") {\n                      showSnackbar(t(_templateObject3()));\n                      setInvalidFields(error.data.invalidFields);\n                    } else {\n                      var _message2 = error.message || t(_templateObject4());\n\n                      showDialog(_message2, {\n                        title: t(_templateObject5())\n                      });\n                    }\n\n                    setMutationInProgress(false);\n                    return;\n                  }\n\n                  var message = _get(props[action], \"snackbar\", t(_templateObject6()));\n\n                  if (typeof message === \"function\") {\n                    message = message(data);\n                  }\n\n                  showSnackbar(message);\n                  var query = new URLSearchParams(location.search);\n                  query.set(\"id\", data.id);\n                  history.push({\n                    search: query.toString()\n                  });\n                  !id && list.refresh();\n                  setMutationInProgress(false);\n                }));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function save(_x2) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }(),\n    resetForm: function resetForm() {\n      var query = new URLSearchParams(location.search);\n      query.delete(\"id\");\n      history.push({\n        search: query.toString()\n      });\n    }\n  };\n  var form = {\n    data: props.read.getData ? props.read.getData(readQuery.data) : getData(readQuery.data),\n    error: props.read.getError ? props.read.getError(readQuery.data) : getError(readQuery.data),\n    onSubmit: actions.save,\n    loading: mutationInProgress || readQuery.loading,\n    id: id,\n    invalidFields: invalidFields\n  };\n\n  if (!form.data) {\n    form.data = {};\n  }\n\n  return /*#__PURE__*/React.createElement(CrudContext.Provider, {\n    value: {\n      form: form,\n      list: list,\n      actions: actions\n    }\n  }, /*#__PURE__*/React.isValidElement(children) ? children : children({\n    form: form,\n    list: list,\n    actions: actions\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}