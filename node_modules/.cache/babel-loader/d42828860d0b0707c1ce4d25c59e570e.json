{"ast":null,"code":"import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport classNames from \"classnames\";\nimport Loader from \"./Loader\";\nimport NoData from \"./NoData\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { css } from \"emotion\";\nimport noop from \"lodash/noop\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Checkbox } from \"@webiny/ui/Checkbox\";\nimport { Menu, MenuItem } from \"@webiny/ui/Menu\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { RefreshIcon, SortIcon, PreviousPageIcon, NextPageIcon, OptionsIcon } from \"./icons\";\nimport { List } from \"@webiny/ui/List\";\nvar ListContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"e14cccao0\",\n  label: \"ListContainer\"\n})({\n  position: \"relative\",\n  \".mdc-list\": {\n    paddingBottom: 0,\n    paddingTop: 0\n  },\n  \".mdc-list-item\": {\n    borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n    padding: \"10px 20px 10px 20px\",\n    height: \"auto\",\n    minHeight: 40,\n    \".mdc-list-item__text, .mdc-list-item__secondary-text, .webiny-list-text-overline\": {\n      display: \"block\"\n    },\n    \".mdc-list-item__graphic\": {\n      marginRight: 20\n    },\n    \".mdc-list-item__text\": {\n      width: \"100%\",\n      margin: \"-20px 0\",\n      padding: \"20px 0\"\n    },\n    \".mdc-list-item__meta\": {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      padding: \"5px 0\",\n      boxSizing: \"border-box\",\n      height: \"100%\",\n      whiteSpace: \"nowrap\",\n      marginTop: -10,\n      marginBottom: -10,\n      \".webiny-list-actions\": {\n        display: \"none\"\n      },\n      \".webiny-list-top-caption, .webiny-list-bottom-caption\": {\n        //position: 'absolute',\n        width: \"100%\",\n        textAlign: \"right\"\n      },\n      \".webiny-list-top-caption\": {\n        marginBottom: 20\n      }\n    },\n    \"&:hover\": {\n      \".mdc-list-item__meta\": {\n        \".webiny-list-top-caption, .webiny-list-bottom-caption\": {\n          display: \"none\"\n        },\n        \".webiny-list-actions\": {\n          display: \"flex\",\n          height: \"100%\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  }\n});\nvar listHeader = /*#__PURE__*/css({\n  borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n  color: \"var(--mdc-theme-text-primary-on-background)\",\n  width: \"100%\"\n}, \"label:listHeader;\");\nvar listSubHeader = /*#__PURE__*/css({\n  width: \"100%\",\n  \"&.mdc-layout-grid\": {\n    borderBottom: \"1px solid var(--mdc-theme-on-background)\",\n    padding: \"10px 24px 10px 12px\",\n    color: \"var(--mdc-theme-text-primary-on-background)\"\n  }\n}, \"label:listSubHeader;\");\nvar ListHeaderItem = /*#__PURE__*/styled(\"div\", {\n  target: \"e14cccao1\",\n  label: \"ListHeaderItem\"\n})({\n  display: \"inline-block\",\n  verticalAlign: \"middle\",\n  \"&.disabled\": {\n    opacity: 0.5,\n    pointerEvents: \"none\"\n  }\n});\nvar listTitle = /*#__PURE__*/css({\n  display: \"flex\",\n  alignItems: \"center\"\n}, \"label:listTitle;\");\nvar listActions = /*#__PURE__*/css({\n  textAlign: \"right\"\n}, \"label:listActions;\");\nvar scrollList = /*#__PURE__*/css({\n  overflow: \"scroll\",\n  height: \"calc(100vh - 235px)\"\n}, \"label:scrollList;\"); // This was copied from \"./types\" so that it can be outputted in docs.\n\nvar MultiSelectAll = function MultiSelectAll(props) {\n  var multiSelectActions = props.multiSelectActions;\n\n  if (!multiSelectActions) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, typeof props.multiSelectAll === \"function\" && /*#__PURE__*/React.createElement(ListHeaderItem, null, /*#__PURE__*/React.createElement(Checkbox, {\n    indeterminate: !props.isAllMultiSelected() && !props.isNoneMultiSelected(),\n    value: props.isAllMultiSelected(),\n    onClick: function onClick() {\n      props.multiSelectAll(!props.isAllMultiSelected());\n    }\n  })));\n};\n\nvar MultiSelectActions = function MultiSelectActions(props) {\n  var multiSelectActions = props.multiSelectActions;\n\n  if (!multiSelectActions) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ListHeaderItem, null, multiSelectActions);\n};\n\nvar RefreshButton = function RefreshButton(props) {\n  var refresh = props.refresh;\n\n  if (!refresh) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ListHeaderItem, null, /*#__PURE__*/React.createElement(RefreshIcon, {\n    onClick: function onClick() {\n      return refresh();\n    }\n  }));\n};\n\nvar Sorters = function Sorters(props) {\n  var sorters = props.sorters;\n\n  if (!sorters) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ListHeaderItem, null, /*#__PURE__*/React.createElement(Menu, {\n    handle: /*#__PURE__*/React.createElement(SortIcon, null)\n  }, sorters.map(function (sorter) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: sorter.label,\n      onClick: function onClick() {\n        if (sorters && props.setSorters) {\n          props.setSorters(sorter.sorters);\n        }\n      }\n    }, sorter.label);\n  })));\n};\n\nvar Pagination = function Pagination(props) {\n  var meta = props.meta;\n\n  if (!meta) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.setPreviousPage && props.setNextPage && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListHeaderItem, {\n    className: classNames({\n      disabled: !meta.hasPreviousPage\n    })\n  }, /*#__PURE__*/React.createElement(PreviousPageIcon, {\n    onClick: function onClick() {\n      if (props.setPreviousPage && meta.hasPreviousPage) {\n        props.setPreviousPage(meta.cursors.previous);\n      }\n    }\n  })), /*#__PURE__*/React.createElement(ListHeaderItem, {\n    className: classNames({\n      disabled: !meta.hasNextPage\n    })\n  }, /*#__PURE__*/React.createElement(NextPageIcon, {\n    onClick: function onClick() {\n      if (props.setNextPage && meta.hasNextPage) {\n        props.setNextPage(meta.cursors.next);\n      }\n    }\n  }))), props.setPerPage && Array.isArray(props.perPageOptions) && /*#__PURE__*/React.createElement(ListHeaderItem, null, /*#__PURE__*/React.createElement(Menu, {\n    handle: /*#__PURE__*/React.createElement(OptionsIcon, null)\n  }, props.setPerPage && props.perPageOptions.map(function (perPage) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: perPage,\n      onClick: function onClick() {\n        return props.setPerPage && props.setPerPage(perPage);\n      }\n    }, perPage);\n  }))));\n};\n\nexport var DataList = function DataList(props) {\n  var render = null;\n\n  if (props.loading) {\n    render = props.loader;\n  } else {\n    if (isEmpty(props.data)) {\n      render = props.noData;\n    } else {\n      if (typeof props.children === \"function\") {\n        render = props.children(props);\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ListContainer, {\n    className: \"webiny-data-list\"\n  }, (props.title || props.actions) && /*#__PURE__*/React.createElement(Grid, {\n    className: listHeader\n  }, /*#__PURE__*/React.createElement(Cell, {\n    span: 6,\n    className: listTitle\n  }, /*#__PURE__*/React.createElement(Typography, {\n    use: \"headline5\"\n  }, props.title)), /*#__PURE__*/React.createElement(Cell, {\n    span: 6,\n    className: listActions\n  }, props.actions)), Object.keys(props.showOptions).length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    className: listSubHeader\n  }, /*#__PURE__*/React.createElement(Cell, {\n    span: props.showOptions.pagination ? 5 : 12\n  }, /*#__PURE__*/React.createElement(MultiSelectAll, props), props.showOptions.refresh && /*#__PURE__*/React.createElement(RefreshButton, props), props.showOptions.sorters && /*#__PURE__*/React.createElement(Sorters, props), /*#__PURE__*/React.createElement(MultiSelectActions, props)), props.showOptions.pagination && /*#__PURE__*/React.createElement(Cell, {\n    span: 7,\n    style: {\n      textAlign: \"right\"\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, props))), render);\n};\nDataList.defaultProps = {\n  children: null,\n  title: null,\n  data: null,\n  meta: null,\n  loading: false,\n  refresh: null,\n  setPage: null,\n  setPerPage: null,\n  perPageOptions: [10, 25, 50],\n  sorters: null,\n  setSorters: null,\n  actions: null,\n  multiSelectAll: noop,\n  isAllMultiSelected: function isAllMultiSelected() {\n    return false;\n  },\n  isNoneMultiSelected: function isNoneMultiSelected() {\n    return false;\n  },\n  loader: /*#__PURE__*/React.createElement(Loader, null),\n  noData: /*#__PURE__*/React.createElement(NoData, null),\n  showOptions: {\n    refresh: true,\n    pagination: true,\n    sorters: true\n  }\n};\nexport var ScrollList = function ScrollList(props) {\n  return /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n    className: scrollList\n  }), props.children);\n};","map":null,"metadata":{},"sourceType":"module"}