{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport { default as RcTooltip } from \"rc-tooltip\";\nimport \"rc-tooltip/assets/bootstrap_white.css\";\nimport \"./style.scss\";\n/**\n * Use Tooltip component to display a list of choices, once the handler is triggered.\n */\n\nvar Tooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n\n  var _super = _createSuper(Tooltip);\n\n  function Tooltip() {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tooltipIsOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onVisibleChange\", function (visible) {\n      _this.setState({\n        tooltipIsOpen: visible\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(RcTooltip, Object.assign({\n        animation: \"fade\",\n        onVisibleChange: this.onVisibleChange,\n        overlay: this.props.content\n      }, this.props), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"webiny-ui-tooltip tooltip-content-wrapper\"\n      }, this.props.children));\n    }\n  }]);\n\n  return Tooltip;\n}(React.Component);\n\nexport { Tooltip };","map":null,"metadata":{},"sourceType":"module"}