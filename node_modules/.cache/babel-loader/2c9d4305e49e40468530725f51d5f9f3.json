{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation deleteUser($id: ID!) {\\n        security {\\n            deleteUser(id: $id) {\\n                data\\n                error {\\n                    code\\n                    message\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateUser($id: ID!, $data: SecurityUserInput!){\\n        security {\\n            user: updateUser(id: $id, data: $data) {\\n                data \", \"\\n                error {\\n                    code\\n                    message\\n                    data\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation createUser($data: SecurityUserInput!){\\n        security {\\n            user: createUser(data: $data) {\\n                data \", \"\\n                error {\\n                    code\\n                    message\\n                    data\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query getUser($id: ID!) {\\n        security {\\n            user: getUser(id: $id){\\n                data \", \"\\n                error {\\n                    code\\n                    message\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query listUsers(\\n        $where: JSON\\n        $sort: JSON\\n        $limit: Int\\n        $after: String\\n        $before: String\\n        $search: SecurityUserSearchInput\\n    ) {\\n        security {\\n            users: listUsers(\\n                where: $where\\n                sort: $sort\\n                limit: $limit\\n                after: $after\\n                before: $before\\n                search: $search\\n            ) {\\n                data {\\n                    id\\n                    email\\n                    firstName\\n                    lastName\\n                    fullName\\n                    avatar {\\n                        id\\n                        src\\n                    }\\n                    createdOn\\n                }\\n                meta {\\n                    cursors {\\n                        next\\n                        previous\\n                    }\\n                    hasNextPage\\n                    hasPreviousPage\\n                    totalCount\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nvar fields =\n/* GraphQL */\n\"\\n    {\\n        id\\n        email\\n        firstName\\n        lastName\\n        fullName\\n        avatar {\\n            id\\n            src\\n        }\\n        groups {\\n            id\\n            name\\n        }\\n        roles {\\n            id\\n            name\\n        }\\n        personalAccessTokens {\\n            id\\n            name\\n            token\\n        }\\n    }\\n\";\nexport var LIST_USERS = gql(_templateObject());\nexport var READ_USER = gql(_templateObject2(), fields);\nexport var CREATE_USER = gql(_templateObject3(), fields);\nexport var UPDATE_USER = gql(_templateObject4(), fields);\nexport var DELETE_USER = gql(_templateObject5());","map":null,"metadata":{},"sourceType":"module"}