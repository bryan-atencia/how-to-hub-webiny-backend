{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _get from \"lodash/get\";\nimport { getPlugins } from \"@webiny/plugins\";\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {\n    var data, props, plugins, i, plugin;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!args.props.preview) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            data = args.data, props = args.props;\n            plugins = getPlugins(\"form-trigger-handler\");\n            i = 0;\n\n          case 5:\n            if (!(i < plugins.length)) {\n              _context.next = 12;\n              break;\n            }\n\n            plugin = plugins[i];\n            _context.next = 9;\n            return plugin.trigger.handle({\n              trigger: _get(props.data, \"triggers.\".concat(plugin.trigger.id)) || {},\n              data: data,\n              form: props.data\n            });\n\n          case 9:\n            i++;\n            _context.next = 5;\n            break;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":null,"metadata":{},"sourceType":"module"}