{"ast":null,"code":"import React from \"react\";\nimport { css } from \"emotion\";\nimport { ReactComponent as Checked } from \"@svgr/webpack!./icons/round-check_box-24px.svg\";\nimport { ReactComponent as InfoIcon } from \"@svgr/webpack!./icons/round-info-24px.svg\";\nimport { Ripple } from \"@webiny/ui/Ripple\";\nimport LazyLoad from \"react-lazy-load\";\nvar COMPONENT_WIDTH = 200;\nvar COMPONENT_HEIGHT = 200;\nvar styles = /*#__PURE__*/css({\n  display: \"inline-block\",\n  float: \"left\",\n  position: \"relative\",\n  zIndex: 1,\n  margin: 10,\n  cursor: \"pointer\",\n  width: \"100%\",\n  maxWidth: COMPONENT_WIDTH,\n  border: \"1px solid var(--mdc-theme-on-background)\",\n  borderRadius: 2,\n  \"> .body\": {\n    width: COMPONENT_WIDTH,\n    height: COMPONENT_HEIGHT,\n    overflow: \"hidden\",\n    \"--icon-color\": \"var(--mdc-theme-on-background)\",\n    \".checkedIcon\": {\n      color: \"var(--mdc-theme-secondary)\",\n      position: \"absolute\",\n      top: 4,\n      left: 4,\n      zIndex: 11\n    },\n    \".infoIcon\": {\n      opacity: 0,\n      color: \"var(--icon-color)\",\n      position: \"absolute\",\n      top: 4,\n      right: 4,\n      zIndex: 10,\n      transition: \"all 150ms ease-in\"\n    },\n    \".filePreview\": {\n      textAlign: \"center\",\n      position: \"relative\",\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      height: \"100%\",\n      \".clickableArea\": {\n        position: \"absolute\",\n        top: 30,\n        left: 0,\n        width: \"100%\",\n        height: 170,\n        zIndex: 2\n      }\n    },\n    \"&:hover .infoIcon\": {\n      opacity: 1,\n      \"--icon-color\": \"var(--mdc-theme-secondary)\"\n    }\n  },\n  \"> .label\": {\n    padding: \"15px 10px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    fontSize: \"0.8rem\",\n    color: \"var(--mdc-theme-on-surface)\",\n    backgroundColor: \"var(--mdc-theme-on-background)\"\n  }\n}, \"label:styles;\");\nexport default /*#__PURE__*/React.memo(function File(props) {\n  var file = props.file,\n      selected = props.selected,\n      onSelect = props.onSelect,\n      children = props.children,\n      showFileDetails = props.showFileDetails;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkedIcon\",\n    onClick: onSelect\n  }, selected ? /*#__PURE__*/React.createElement(Checked, null) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoIcon\"\n  }, /*#__PURE__*/React.createElement(InfoIcon, {\n    onClick: showFileDetails\n  })), /*#__PURE__*/React.createElement(LazyLoad, {\n    height: 200,\n    offsetVertical: 300\n  }, /*#__PURE__*/React.createElement(Ripple, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filePreview\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clickableArea\",\n    onClick: onSelect\n  }), children)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    onClick: onSelect\n  }, file.name));\n}, function (prev, next) {\n  if (prev.selected !== next.selected) {\n    return false;\n  }\n\n  if (prev.file.name !== next.file.name) {\n    return false;\n  }\n\n  return true;\n});","map":null,"metadata":{},"sourceType":"module"}