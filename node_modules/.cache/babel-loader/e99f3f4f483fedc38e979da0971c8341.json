{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Input } from \"@webiny/ui/Input\";\nimport graphql from \"./graphql\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport get from \"lodash.get\";\nimport { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from \"@webiny/app-admin/components/SimpleForm\";\n\nvar GoogleTagManagerSettings = function GoogleTagManagerSettings() {\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(Query, {\n    query: graphql.query\n  }, function (_ref) {\n    var data = _ref.data,\n        queryInProgress = _ref.loading;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      mutation: graphql.mutation\n    }, function (update, _ref2) {\n      var mutationInProgress = _ref2.loading;\n      var settings = get(data, \"googleTagManager.getSettings.data\") || {};\n      return /*#__PURE__*/React.createElement(Form, {\n        data: settings,\n        onSubmit: /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return update({\n                      variables: {\n                        data: data\n                      }\n                    });\n\n                  case 2:\n                    showSnackbar(\"Settings updated successfully.\");\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }()\n      }, function (_ref4) {\n        var Bind = _ref4.Bind,\n            form = _ref4.form,\n            data = _ref4.data;\n        return /*#__PURE__*/React.createElement(SimpleForm, null, (queryInProgress || mutationInProgress) && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {\n          title: \"Google Tag Manager Settings\"\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"enabled\",\n          afterChange: function afterChange(enabled) {\n            if (!enabled) {\n              form.submit();\n            }\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          label: \"Enabled\"\n        }))), data.enabled ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"code\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Container ID\",\n          description: 'Formatted as \"GTM-XXXXXX\".'\n        }))))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n          onClick: form.submit\n        }, \"Save\"))) : null);\n      });\n    });\n  });\n};\n\nexport default GoogleTagManagerSettings;","map":null,"metadata":{},"sourceType":"module"}