{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nimport * as React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { Tabs, Tab } from \"@webiny/ui/Tabs\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport ColorPicker from \"@webiny/app-page-builder/editor/plugins/elementSettings/components/ColorPicker\";\nimport Input from \"@webiny/app-page-builder/editor/plugins/elementSettings/components/Input\";\nimport useUpdateHandlers from \"@webiny/app-page-builder/editor/plugins/elementSettings/useUpdateHandlers\";\nvar DATA_NAMESPACE = \"data.settings.shadow\"; // TODO: need to figure out how to properly type the `connect` props and apply it to all `elementSettings` plugins.\n\nvar Settings = function Settings(_ref) {\n  var element = _ref.element,\n      updateElement = _ref.updateElement;\n\n  var _useUpdateHandlers = useUpdateHandlers({\n    element: element,\n    updateElement: updateElement,\n    dataNamespace: DATA_NAMESPACE\n  }),\n      getUpdateValue = _useUpdateHandlers.getUpdateValue,\n      getUpdatePreview = _useUpdateHandlers.getUpdatePreview;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Shadow\"\n  }, /*#__PURE__*/React.createElement(ColorPicker, {\n    label: \"Color\",\n    valueKey: DATA_NAMESPACE + \".color\",\n    updateValue: getUpdateValue(\"color\"),\n    updatePreview: getUpdatePreview(\"color\")\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Horizontal offset\",\n    valueKey: DATA_NAMESPACE + \".horizontal\",\n    updateValue: getUpdateValue(\"horizontal\")\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Vertical offset\",\n    valueKey: DATA_NAMESPACE + \".vertical\",\n    updateValue: getUpdateValue(\"vertical\")\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Blur\",\n    valueKey: DATA_NAMESPACE + \".blur\",\n    updateValue: getUpdateValue(\"blur\")\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Spread\",\n    valueKey: DATA_NAMESPACE + \".spread\",\n    updateValue: getUpdateValue(\"spread\")\n  }))));\n};\n\nexport default connect(function (state) {\n  var _getActiveElement = getActiveElement(state),\n      id = _getActiveElement.id,\n      type = _getActiveElement.type,\n      path = _getActiveElement.path;\n\n  return {\n    element: {\n      id: id,\n      type: type,\n      path: path\n    }\n  };\n}, {\n  updateElement: updateElement\n}, null, {\n  areStatePropsEqual: _isEqual\n})(Settings);","map":null,"metadata":{},"sourceType":"module"}