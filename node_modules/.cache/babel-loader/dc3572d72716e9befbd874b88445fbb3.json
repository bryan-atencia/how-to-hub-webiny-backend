{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React, { useMemo } from \"react\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport tryRenderingPlugin from \"./../../utils/tryRenderingPlugin\";\n\nvar Element = function Element(props) {\n  var element = props.element;\n  var theme = useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(getPlugins(\"pb-theme\").map(function (pl) {\n      return pl.theme;\n    }))));\n  }, []);\n\n  if (!element) {\n    return null;\n  }\n\n  var plugin = getPlugins(\"pb-render-page-element\").find(function (pl) {\n    return pl.elementType === element.type;\n  });\n\n  if (!plugin) {\n    return null;\n  }\n\n  var renderedPlugin = tryRenderingPlugin(function () {\n    return plugin.render({\n      theme: theme,\n      element: element\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderedPlugin);\n};\n\nexport default Element;","map":null,"metadata":{},"sourceType":"module"}