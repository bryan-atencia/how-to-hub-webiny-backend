{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\n/* eslint-disable */\n\nimport React, { useState } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport { css } from \"emotion\";\nimport { ButtonSecondary, ButtonPrimary } from \"@webiny/ui/Button\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Form } from \"@webiny/form\";\nimport { ReactComponent as EditIcon } from \"@svgr/webpack!./../icons/round-edit-24px.svg\";\nimport { UPDATE_FILE, LIST_FILES } from \"./../graphql\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useFileManager } from \"./../FileManagerContext\";\nvar style = {\n  editTag: /*#__PURE__*/css({\n    cursor: \"pointer\",\n    display: \"inline-block\"\n  }, \"label:editTag;\")\n};\n\nfunction Name(_ref) {\n  var file = _ref.file;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editing = _useState2[0],\n      setEdit = _useState2[1];\n\n  var name = file.name || \"\";\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var client = useApolloClient();\n\n  var _useFileManager = useFileManager(),\n      queryParams = _useFileManager.queryParams;\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Form, {\n      data: {\n        name: name\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n          var name;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  name = _ref2.name;\n                  setEdit(false);\n                  _context.next = 4;\n                  return client.mutate({\n                    mutation: UPDATE_FILE,\n                    variables: {\n                      id: file.id,\n                      data: {\n                        name: name\n                      }\n                    },\n                    update: function update(cache, updated) {\n                      var newFileData = _get(updated, \"data.files.updateFile.data\");\n\n                      var data = _cloneDeep(cache.readQuery({\n                        query: LIST_FILES,\n                        variables: queryParams\n                      }));\n\n                      data.files.listFiles.data.forEach(function (item) {\n                        if (item.src === newFileData.src) {\n                          item.name = newFileData.name;\n                        }\n                      });\n                      cache.writeQuery({\n                        query: LIST_FILES,\n                        variables: queryParams,\n                        data: data\n                      });\n                    }\n                  });\n\n                case 4:\n                  showSnackbar(\"Name successfully updated.\");\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }, function (_ref4) {\n      var Bind = _ref4.Bind,\n          submit = _ref4.submit;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bind, {\n        name: \"name\"\n      }, /*#__PURE__*/React.createElement(Input, {\n        autoFocus: true,\n        placeholder: \"Enter name\"\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        }\n      }, /*#__PURE__*/React.createElement(ButtonPrimary, {\n        small: true,\n        onClick: submit\n      }, \"Submit\"), \" \", /*#__PURE__*/React.createElement(ButtonSecondary, {\n        small: true,\n        onClick: function onClick() {\n          return setEdit(false);\n        }\n      }, \"Cancel\")));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.editTag\n  }, name, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: function onClick() {\n      return setEdit(true);\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, null), \" Edit\")));\n}\n\nexport default Name;","map":null,"metadata":{},"sourceType":"module"}