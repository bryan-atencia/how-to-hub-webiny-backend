{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from \"react\";\nimport { registerPlugins, getPlugins } from \"@webiny/plugins\";\n\nvar compose = function compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  }, function (arg) {\n    return arg;\n  });\n}; // TODO: replace with Routes component from `@webiny/app` package after merging\n\n\nvar Routes = function Routes() {\n  var plugins = getPlugins(\"route\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, plugins.map(function (pl) {\n    return /*#__PURE__*/React.cloneElement(pl.route, {\n      key: pl.name,\n      exact: true\n    });\n  }));\n};\n\nexport function createTemplate(factory) {\n  return function (opts) {\n    var plugins = factory(opts);\n    registerPlugins(plugins);\n    getPlugins(\"webiny-init\").forEach(function (plugin) {\n      return plugin.init();\n    });\n    var renderers = getPlugins(\"app-template-renderer\").map(function (pl) {\n      return pl.render;\n    });\n    return function () {\n      return compose.apply(void 0, _toConsumableArray(renderers))( /*#__PURE__*/React.createElement(Routes, null));\n    };\n  };\n}","map":null,"metadata":{},"sourceType":"module"}