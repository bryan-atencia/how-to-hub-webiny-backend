{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar _a;\n\nimport * as React from 'react';\nimport { MDCTabFoundation } from '@material/tab';\nimport { FoundationComponent, componentFactory, randomId } from '@rmwc/base';\nimport { Icon } from '@rmwc/icon';\nimport { withRipple, RippleSurface } from '@rmwc/ripple';\nimport { withTabBarContext } from './tab-bar-context';\nimport { TabIndicator } from './tab-indicator';\nvar TabRoot = withRipple({\n  surface: false\n})(componentFactory({\n  displayName: 'TabRoot',\n  tag: 'button',\n  classNames: function classNames(props) {\n    return ['mdc-tab', {\n      'mdc-tab--stacked': props.stacked\n    }];\n  },\n  consumeProps: ['stacked']\n}));\n/** A Tab icon. This is an instance of the Icon component. */\n\nvar TabIcon = componentFactory({\n  displayName: 'TabIcon',\n  tag: Icon,\n  classNames: ['mdc-tab__icon']\n});\n/** A Tab component */\n\nexport var Tab = withTabBarContext()((_a =\n/** @class */\nfunction (_super) {\n  __extends(class_1, _super);\n\n  function class_1(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._id = randomId('tab');\n    _this.root = _this.createElement('root');\n    _this.tabIndicator = null;\n    _this.content = null;\n    _this.props.contextApi && _this.props.contextApi.registerTab(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  class_1.prototype.componentWillUnmount = function () {\n    this.props.contextApi && this.props.contextApi.unregisterTab(this);\n  };\n\n  Object.defineProperty(class_1.prototype, \"id\", {\n    get: function get() {\n      return this.props.id ? this.props.id : this._reactInternalFiber.key || this._id;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  class_1.prototype.getDefaultFoundation = function () {\n    var _this = this;\n\n    return new MDCTabFoundation(\n    /** @type {!MDCTabAdapter} */\n    {\n      setAttr: function setAttr(attr, value) {\n        return _this.root.setProp(attr, value);\n      },\n      addClass: function addClass(className) {\n        return _this.root.addClass(className);\n      },\n      removeClass: function removeClass(className) {\n        return _this.root.removeClass(className);\n      },\n      hasClass: function hasClass(className) {\n        return _this.root.hasClass(className);\n      },\n      activateIndicator: function activateIndicator(previousIndicatorClientRect) {\n        return _this.tabIndicator && _this.tabIndicator.activate(previousIndicatorClientRect);\n      },\n      deactivateIndicator: function deactivateIndicator() {\n        return _this.tabIndicator && _this.tabIndicator.deactivate();\n      },\n      notifyInteracted: function notifyInteracted() {\n        var evt = _this.emit('onInteraction', {\n          tabId: _this.id\n        }, true\n        /* bubble */\n        );\n\n        _this.props.contextApi && _this.props.contextApi.onTabInteraction(evt);\n      },\n      getOffsetLeft: function getOffsetLeft() {\n        return _this.root.ref ? _this.root.ref.offsetLeft : 0;\n      },\n      getOffsetWidth: function getOffsetWidth() {\n        return _this.root.ref ? _this.root.ref.offsetWidth : 0;\n      },\n      getContentOffsetLeft: function getContentOffsetLeft() {\n        return _this.content ? _this.content.offsetLeft : 0;\n      },\n      getContentOffsetWidth: function getContentOffsetWidth() {\n        return _this.content ? _this.content.offsetWidth : 0;\n      },\n      focus: function focus() {\n        return _this.root.ref && _this.root.ref.focus && _this.root.ref.focus();\n      }\n    });\n  };\n\n  class_1.prototype.handleClick = function (evt) {\n    this.props.onClick && this.props.onClick(evt);\n    this.foundation.handleClick();\n  };\n\n  Object.defineProperty(class_1.prototype, \"active\", {\n    get: function get() {\n      return this.foundation.isActive();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(class_1.prototype, \"focusOnActivate\", {\n    set: function set(focusOnActivate) {\n      this.foundation.setFocusOnActivate(focusOnActivate);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  class_1.prototype.activate = function (computeIndicatorClientRect) {\n    this.foundation.activate(computeIndicatorClientRect);\n  };\n\n  class_1.prototype.deactivate = function () {\n    this.foundation.deactivate();\n  };\n\n  class_1.prototype.computeIndicatorClientRect = function () {\n    return this.tabIndicator && this.tabIndicator.computeContentClientRect();\n  };\n\n  class_1.prototype.computeDimensions = function () {\n    return this.foundation.computeDimensions();\n  };\n\n  class_1.prototype.focus = function () {\n    this.root.ref && this.root.ref && this.root.ref.focus();\n  };\n\n  class_1.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        children = _a.children,\n        label = _a.label,\n        icon = _a.icon,\n        stacked = _a.stacked,\n        restrictIndicator = _a.restrictIndicator,\n        onInteraction = _a.onInteraction,\n        contextApi = _a.contextApi,\n        iconIndicator = _a.iconIndicator,\n        rest = __rest(_a, [\"children\", \"label\", \"icon\", \"stacked\", \"restrictIndicator\", \"onInteraction\", \"contextApi\", \"iconIndicator\"]);\n\n    var tabIndicator = React.createElement(TabIndicator, {\n      ref: function ref(api) {\n        return _this.tabIndicator = api;\n      },\n      transition: contextApi && contextApi.indicatorTransition,\n      icon: iconIndicator\n    });\n    return React.createElement(TabRoot, __assign({}, this.root.props(rest), {\n      onClick: this.handleClick,\n      stacked: stacked,\n      ref: this.root.setRef,\n      ripple: {\n        surface: false\n      }\n    }), React.createElement(\"div\", {\n      className: \"mdc-tab__content\",\n      ref: function ref(el) {\n        return _this.content = el;\n      }\n    }, !!icon && React.createElement(TabIcon, {\n      icon: icon\n    }), (children !== undefined || label !== undefined) && React.createElement(\"span\", {\n      className: \"mdc-tab__text-label\"\n    }, label, children), !!restrictIndicator && tabIndicator), !restrictIndicator && tabIndicator, React.createElement(RippleSurface, {\n      className: \"mdc-tab__ripple\"\n    }));\n  };\n\n  return class_1;\n}(FoundationComponent), _a.displayName = 'TabFoundation', _a));\nTab.displayName = 'Tab';","map":null,"metadata":{},"sourceType":"module"}