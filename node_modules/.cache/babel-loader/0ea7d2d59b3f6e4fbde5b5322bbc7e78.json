{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { componentFactory } from '@rmwc/base';\nimport { withProviderContext } from '@rmwc/provider';\nvar TypographyRoot = componentFactory({\n  displayName: 'TypographyRoot',\n  tag: 'span',\n  classNames: function classNames(props) {\n    var _a;\n\n    return [(_a = {}, _a[\"mdc-typography--\" + props.use] = props.use, _a)];\n  },\n  consumeProps: ['use']\n});\n/** The Typography Component */\n\nexport var Typography = withProviderContext()(React.forwardRef(function Typography(_a, ref) {\n  var _b = _a.providerContext,\n      providerContext = _b === void 0 ? {} : _b,\n      rest = __rest(_a, [\"providerContext\"]);\n\n  var typographyOptions = providerContext.typography;\n  var tag = (typographyOptions ? typographyOptions[rest.use] || typographyOptions.defaultTag : undefined) || rest.tag;\n  return React.createElement(TypographyRoot, __assign({}, rest, {\n    tag: tag,\n    ref: ref\n  }));\n}));\nTypography.displayName = 'Typography';","map":null,"metadata":{},"sourceType":"module"}