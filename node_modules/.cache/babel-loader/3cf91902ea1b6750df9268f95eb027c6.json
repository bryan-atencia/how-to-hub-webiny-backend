{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _has from \"lodash/has\";\nimport _trim from \"lodash/trim\";\nimport _startsWith from \"lodash/startsWith\";\nimport React from \"react\";\n\nvar processTextPart = function processTextPart(part, values, modifiers) {\n  if (!_startsWith(part, \"{\")) {\n    return part;\n  }\n\n  part = _trim(part, \"{}\");\n  var parts = part.split(\"|\");\n\n  var _parts = _slicedToArray(parts, 2),\n      variable = _parts[0],\n      modifier = _parts[1];\n\n  if (!_has(values, variable)) {\n    return variable;\n  }\n\n  var value = values[variable];\n\n  if (modifier) {\n    var parameters = modifier.split(\":\");\n    var name = parameters.shift();\n\n    if (modifiers[name]) {\n      var _modifier = modifiers[name];\n      value = _modifier.execute(value, parameters);\n    }\n  }\n\n  return value;\n};\n\nexport default {\n  name: \"react\",\n  canExecute: function canExecute(data) {\n    for (var key in data.values) {\n      var value = data.values[key];\n\n      if ( /*#__PURE__*/React.isValidElement(value)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  execute: function execute(data) {\n    var parts = data.translation.split(/({.*?})/); // @ts-ignore\n\n    return /*#__PURE__*/React.createElement(\"i18n-text\", null, parts.map(function (part, index) {\n      return /*#__PURE__*/React.createElement(\"i18n-text-part\", {\n        key: index\n      }, processTextPart(part, data.values, data.i18n.modifiers));\n    }));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}