{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { MDCFormFieldFoundation } from '@material/form-field';\nimport { FoundationComponent } from '@rmwc/base';\nimport { componentFactory } from '@rmwc/base';\nexport var FormFieldRoot = componentFactory({\n  displayName: 'FormFieldRoot',\n  defaultProps: {\n    alignEnd: undefined\n  },\n  classNames: function classNames(props) {\n    return ['mdc-form-field', {\n      'mdc-form-field--align-end': props.alignEnd\n    }];\n  },\n  consumeProps: ['alignEnd']\n});\n/** A FormField component. */\n\nvar FormField =\n/** @class */\nfunction (_super) {\n  __extends(FormField, _super);\n\n  function FormField() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FormField.prototype.getDefaultFoundation = function () {\n    // For RMWC, the entire foundation is a noop. Interactions and ripples are controlled\n    // on the components themselves\n    return new MDCFormFieldFoundation({\n      registerInteractionHandler: function registerInteractionHandler(evtType, handler) {},\n      deregisterInteractionHandler: function deregisterInteractionHandler(evtType, handler) {},\n      activateInputRipple: function activateInputRipple() {},\n      deactivateInputRipple: function deactivateInputRipple() {}\n    });\n  };\n\n  FormField.prototype.render = function () {\n    return React.createElement(FormFieldRoot, __assign({}, this.props));\n  };\n\n  FormField.displayName = 'FormField';\n  return FormField;\n}(FoundationComponent);\n\nexport { FormField };","map":null,"metadata":{},"sourceType":"module"}