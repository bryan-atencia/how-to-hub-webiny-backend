{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _set from \"lodash/set\";\nimport _get from \"lodash/get\";\nimport * as React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport SingleImageUpload from \"@webiny/app-admin/components/SingleImageUpload\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport graphql from \"./graphql\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { validation } from \"@webiny/validation\";\nimport { SimpleForm, SimpleFormFooter, SimpleFormContent, SimpleFormHeader } from \"@webiny/app-admin/components/SimpleForm\";\nimport { DOMAIN_QUERY } from \"@webiny/app-page-builder/admin/hooks/usePageBuilderSettings/usePageBuilderSettings\";\n\nvar GeneralSettings = function GeneralSettings() {\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(Query, {\n    query: graphql.query\n  }, function (_ref) {\n    var data = _ref.data,\n        queryInProgress = _ref.loading;\n    var settings = _get(data, \"pageBuilder.getSettings.data\") || {};\n    return /*#__PURE__*/React.createElement(Mutation, {\n      mutation: graphql.mutation,\n      update: function update(cache, _ref2) {\n        var data = _ref2.data;\n        var dataFromCache = cache.readQuery({\n          query: DOMAIN_QUERY\n        });\n\n        var updatedSettings = _get(data, \"pageBuilder.updateSettings.data\");\n\n        if (updatedSettings) {\n          cache.writeQuery({\n            query: DOMAIN_QUERY,\n            data: _set(dataFromCache, \"pageBuilder.getSettings.data\", updatedSettings)\n          });\n        }\n      }\n    }, function (update, _ref3) {\n      var mutationInProgress = _ref3.loading;\n      return /*#__PURE__*/React.createElement(Form, {\n        data: settings,\n        onSubmit: /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return update({\n                      variables: {\n                        data: data\n                      }\n                    });\n\n                  case 2:\n                    showSnackbar(\"Settings updated successfully.\");\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref4.apply(this, arguments);\n          };\n        }()\n      }, function (_ref5) {\n        var Bind = _ref5.Bind,\n            form = _ref5.form;\n        return /*#__PURE__*/React.createElement(SimpleForm, null, (queryInProgress || mutationInProgress) && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {\n          title: \"General Settings\"\n        }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"name\",\n          validators: validation.create(\"required\")\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Website name\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"domain\"\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Domain\",\n          description: \"eg. https://www.mysite.com\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"favicon\"\n        }, /*#__PURE__*/React.createElement(SingleImageUpload, {\n          label: \"Favicon\",\n          accept: [\"image/png\", \"image/x-icon\", \"image/vnd.microsoft.icon\"],\n          description: /*#__PURE__*/React.createElement(\"span\", null, \"Supported file types:\", \" \", /*#__PURE__*/React.createElement(\"strong\", null, \".png\"), \" \", \"and\", \" \", /*#__PURE__*/React.createElement(\"strong\", null, \".ico\"), \" .\")\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"logo\"\n        }, /*#__PURE__*/React.createElement(SingleImageUpload, {\n          label: \"Logo\"\n        }))))), /*#__PURE__*/React.createElement(Cell, {\n          span: 6\n        }, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"social.facebook\",\n          validators: validation.create(\"url\")\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Facebook\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"social.twitter\",\n          validators: validation.create(\"url\")\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Twitter\"\n        }))), /*#__PURE__*/React.createElement(Cell, {\n          span: 12\n        }, /*#__PURE__*/React.createElement(Bind, {\n          name: \"social.instagram\",\n          validators: validation.create(\"url\")\n        }, /*#__PURE__*/React.createElement(Input, {\n          label: \"Instagram\"\n        }))))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n          onClick: form.submit\n        }, \"Save\")));\n      });\n    });\n  });\n};\n\nexport default GeneralSettings;","map":null,"metadata":{},"sourceType":"module"}