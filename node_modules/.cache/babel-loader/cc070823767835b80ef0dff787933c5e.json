{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Drop your first field here\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState } from \"react\";\nimport { Icon } from \"@webiny/ui/Icon\";\nimport { Center, Vertical, Horizontal } from \"../../DropZone\";\nimport Draggable from \"../../Draggable\";\nimport EditFieldDialog from \"./EditFieldDialog\";\nimport Field from \"./Field\";\nimport { ReactComponent as HandleIcon } from \"@svgr/webpack!@webiny/app-headless-cms/admin/icons/round-drag_indicator-24px.svg\";\nimport { rowHandle, EditContainer, fieldHandle, fieldContainer, Row, RowContainer } from \"./Styled\";\nimport { useContentModelEditor } from \"@webiny/app-headless-cms/admin/components/ContentModelEditor/Context\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.namespace(\"app-headless-cms/admin/components/editor\");\nexport var EditTab = function EditTab() {\n  var _useContentModelEdito = useContentModelEditor(),\n      getFields = _useContentModelEdito.getFields,\n      insertField = _useContentModelEdito.insertField,\n      updateField = _useContentModelEdito.updateField,\n      deleteField = _useContentModelEdito.deleteField,\n      data = _useContentModelEdito.data,\n      moveField = _useContentModelEdito.moveField,\n      moveRow = _useContentModelEdito.moveRow,\n      getFieldPlugin = _useContentModelEdito.getFieldPlugin;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      editingField = _useState2[0],\n      setEditingField = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dropTarget = _useState4[0],\n      setDropTarget = _useState4[1];\n\n  var editField = useCallback(function (field) {\n    setEditingField(_cloneDeep(field));\n  }, undefined);\n  var i18n = useI18N();\n  var handleDropField = useCallback(function (source, dropTarget) {\n    var pos = source.pos,\n        type = source.type,\n        ui = source.ui;\n\n    if (ui === \"row\") {\n      // Reorder rows.\n      // Reorder logic is different depending on the source and target position.\n      return moveRow(pos.row, dropTarget.row);\n    } // If source pos is set, we are moving an existing field.\n\n\n    if (pos) {\n      var fieldId = data.layout[pos.row][pos.index];\n      return moveField({\n        field: fieldId,\n        position: dropTarget\n      });\n    }\n\n    var plugin = getFieldPlugin({\n      type: type\n    });\n    editField(plugin.field.createField({\n      i18n: i18n\n    }));\n    setDropTarget(dropTarget);\n  }, null);\n  var fields = getFields(true);\n  return /*#__PURE__*/React.createElement(EditContainer, null, fields.length === 0 && /*#__PURE__*/React.createElement(Center, {\n    onDrop: function onDrop(item) {\n      return handleDropField(item, {\n        row: 0,\n        index: 0\n      });\n    }\n  }, t(_templateObject())), fields.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(Draggable, {\n      beginDrag: {\n        ui: \"row\",\n        pos: {\n          row: index\n        }\n      },\n      key: index\n    }, function (_ref\n    /* RowContainer start - includes drag handle, drop zones and the Row itself. */\n    ) {\n      var drag = _ref.drag,\n          isDragging = _ref.isDragging;\n      return /*#__PURE__*/React.createElement(RowContainer, {\n        style: {\n          opacity: isDragging ? 0.3 : 1\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: rowHandle,\n        ref: drag\n      }, /*#__PURE__*/React.createElement(Icon, {\n        icon: /*#__PURE__*/React.createElement(HandleIcon, null)\n      })), /*#__PURE__*/React.createElement(Horizontal, {\n        onDrop: function onDrop(item) {\n          return handleDropField(item, {\n            row: index,\n            index: null\n          });\n        }\n      }), /*#__PURE__*/React.createElement(Row, null, row.map(function (field, fieldIndex) {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: fieldIndex,\n          beginDrag: {\n            ui: \"field\",\n            type: field.type,\n            pos: {\n              row: index,\n              index: fieldIndex\n            }\n          }\n        }, function (_ref2) {\n          var drag = _ref2.drag;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: fieldContainer,\n            ref: drag\n          }, /*#__PURE__*/React.createElement(Vertical, {\n            onDrop: function onDrop(item) {\n              return handleDropField(item, {\n                row: index,\n                index: fieldIndex\n              });\n            },\n            isVisible: function isVisible(item) {\n              return item.ui === \"field\" && (row.length < 4 || _get(item, \"pos.row\") === index);\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: fieldHandle\n          }, /*#__PURE__*/React.createElement(Field, {\n            field: field,\n            onEdit: editField,\n            onDelete: deleteField\n          })), fieldIndex === row.length - 1 && /*#__PURE__*/React.createElement(Vertical, {\n            last: true,\n            isVisible: function isVisible(item) {\n              return item.ui === \"field\" && (row.length < 4 || _get(item, \"pos.row\") === index);\n            },\n            onDrop: function onDrop(item) {\n              return handleDropField(item, {\n                row: index,\n                index: fieldIndex + 1\n              });\n            }\n          }));\n        });\n      })), index === fields.length - 1 && /*#__PURE__*/React.createElement(Horizontal, {\n        last: true,\n        onDrop: function onDrop(item) {\n          return handleDropField(item, {\n            row: index + 1,\n            index: null\n          });\n        }\n      }));\n    });\n  }), /*#__PURE__*/React.createElement(EditFieldDialog, {\n    field: editingField,\n    onClose: editField,\n    onSubmit: function onSubmit(data) {\n      if (data._id) {\n        updateField(data);\n      } else {\n        insertField(data, dropTarget);\n      }\n\n      editField(null);\n    }\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}