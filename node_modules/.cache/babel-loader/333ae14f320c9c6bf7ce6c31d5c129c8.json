{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _get from \"lodash/get\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { List, WindowScroller } from \"react-virtualized\";\nimport BlockPreview from \"./BlockPreview\";\nvar listWidth = 800;\n\nvar BlocksList = function BlocksList(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      setTimestamp = _useState2[1];\n\n  var rightPanelElement = useRef(null);\n  var prevProps = useRef(null);\n  useEffect(function () {\n    rightPanelElement.current = document.getElementById(\"webiny-split-view-right-panel\");\n    setTimestamp(new Date().getTime());\n  }, []);\n  useEffect(function () {\n    if (!prevProps.current) {\n      return;\n    } // Scroll only if the active block category has changed\n\n\n    if (rightPanelElement && prevProps.current.category !== props.category) {\n      if (rightPanelElement.current.scrollTop === 0) {\n        rightPanelElement.current.scroll(0, 1);\n        return;\n      }\n\n      rightPanelElement.current.scroll(0, 0);\n    }\n  });\n  useEffect(function () {\n    prevProps.current = props;\n  });\n  var blocks = props.blocks,\n      category = props.category,\n      _onEdit = props.onEdit,\n      _onDelete = props.onDelete,\n      deactivatePlugin = props.deactivatePlugin,\n      addBlock = props.addBlock;\n\n  var getRowHeight = function getRowHeight(_ref) {\n    var index = _ref.index;\n\n    var height = _get(blocks[index], \"image.meta.height\", 50);\n\n    var width = _get(blocks[index], \"image.meta.width\", 50);\n\n    if (width > listWidth) {\n      var downscaleRatio = width / listWidth;\n      height = height / downscaleRatio;\n    }\n\n    return height + 100;\n  };\n\n  var renderRow = function renderRow(_ref2) {\n    var index = _ref2.index,\n        key = _ref2.key,\n        style = _ref2.style;\n    var plugin = blocks[index];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      style: style,\n      \"data-testid\": \"pb-editor-page-blocks-list-item\"\n    }, /*#__PURE__*/React.createElement(BlockPreview, {\n      plugin: plugin,\n      onEdit: function onEdit() {\n        return _onEdit(plugin);\n      },\n      onDelete: function onDelete() {\n        return _onDelete(plugin);\n      },\n      addBlockToContent: addBlock,\n      deactivatePlugin: deactivatePlugin\n    }));\n  };\n\n  if (!rightPanelElement.current) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(WindowScroller, {\n    scrollElement: rightPanelElement.current\n  }, function (_ref3) {\n    var isScrolling = _ref3.isScrolling,\n        registerChild = _ref3.registerChild,\n        onChildScroll = _ref3.onChildScroll,\n        scrollTop = _ref3.scrollTop;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: \"1 1 auto\"\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"800px\",\n        margin: \"0 auto\"\n      },\n      ref: registerChild,\n      \"data-testid\": \"pb-editor-page-blocks-list\"\n    }, /*#__PURE__*/React.createElement(List, {\n      key: category,\n      autoHeight: true,\n      height: window.innerHeight - 70,\n      isScrolling: isScrolling,\n      onScroll: onChildScroll,\n      rowCount: blocks.length,\n      rowHeight: getRowHeight,\n      rowRenderer: renderRow,\n      scrollTop: scrollTop,\n      width: listWidth,\n      overscanRowCount: 2\n    })));\n  });\n};\n\nexport default BlocksList;","map":null,"metadata":{},"sourceType":"module"}