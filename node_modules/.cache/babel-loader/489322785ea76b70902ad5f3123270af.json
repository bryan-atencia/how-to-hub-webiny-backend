{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _get from \"lodash/get\";\nimport React, { useState } from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport { set } from \"dot-prop-immutable\";\nimport { useHandlers } from \"@webiny/app/hooks/useHandlers\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport Resizer from \"@webiny/app-page-builder/editor/components/Resizer\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { resizeStart, resizeStop } from \"./actions\";\nvar SpacerHandle = /*#__PURE__*/styled(\"div\", {\n  target: \"e1ps2vlc0\",\n  label: \"SpacerHandle\"\n})({\n  height: \"100%\",\n  width: \"100%\",\n  position: \"absolute\",\n  left: 0,\n  bottom: -8\n});\nvar SpacerHeight = /*#__PURE__*/styled(\"div\", {\n  target: \"e1ps2vlc1\",\n  label: \"SpacerHeight\"\n})({\n  position: \"absolute\",\n  width: 50,\n  top: \"calc(50% - 12px)\",\n  left: \"calc(50% - 25px)\",\n  color: \"white\",\n  fontSize: 12,\n  padding: 5,\n  borderRadius: 5\n});\nexport var MIN_HEIGHT = 20;\nexport var INIT_HEIGHT = 100;\n\nvar SpacerContainer = function SpacerContainer(props) {\n  var elementStyle = props.elementStyle,\n      customClasses = props.customClasses,\n      combineClassNames = props.combineClassNames;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      localHeight = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _elementStyle$initial = elementStyle.initialHeight,\n      initialHeight = _elementStyle$initial === void 0 ? MIN_HEIGHT : _elementStyle$initial,\n      spacerStyle = _objectWithoutProperties(elementStyle, [\"initialHeight\"]);\n\n  var height = initialHeight;\n\n  if (localHeight) {\n    height = localHeight;\n  }\n\n  var _useHandlers = useHandlers(props, {\n    onResizeStart: function onResizeStart(_ref) {\n      var element = _ref.element,\n          resizeStart = _ref.resizeStart;\n      return function () {\n        resizeStart();\n        setHeight(_get(element, \"data.settings.height.value\", MIN_HEIGHT));\n      };\n    },\n    onResizeStop: function onResizeStop(_ref2) {\n      var updateElement = _ref2.updateElement,\n          element = _ref2.element,\n          resizeStop = _ref2.resizeStop;\n      return function () {\n        resizeStop();\n        updateElement({\n          element: set(element, \"data.settings.height.value\", localHeight)\n        });\n        setHeight(null);\n      };\n    },\n    onResize: function onResize() {\n      return function (diff) {\n        setHeight(Math.max(MIN_HEIGHT, localHeight - diff));\n      };\n    }\n  }),\n      onResizeStart = _useHandlers.onResizeStart,\n      onResizeStop = _useHandlers.onResizeStop,\n      onResize = _useHandlers.onResize;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: height\n    },\n    className: combineClassNames.apply(void 0, [/*#__PURE__*/css(spacerStyle, \"label:SpacerContainer;\")].concat(_toConsumableArray(customClasses)))\n  }, /*#__PURE__*/React.createElement(Resizer, {\n    axis: \"y\",\n    onResizeStart: onResizeStart,\n    onResizeStop: onResizeStop,\n    onResize: onResize\n  }, function (_ref3) {\n    var otherProps = Object.assign({}, _ref3);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SpacerHeight, null, height, \"px\"), /*#__PURE__*/React.createElement(SpacerHandle, otherProps));\n  }));\n};\n\nexport default connect(function (state, props) {\n  return {\n    element: getElement(state, props.elementId)\n  };\n}, {\n  updateElement: updateElement,\n  resizeStart: resizeStart,\n  resizeStop: resizeStop\n})(SpacerContainer);","map":null,"metadata":{},"sourceType":"module"}