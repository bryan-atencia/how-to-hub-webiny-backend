{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _get from \"lodash/get\";\nimport React, { useCallback } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { Query, useApolloClient } from \"react-apollo\";\nimport { Editor as PbEditor } from \"@webiny/app-page-builder/editor\";\nimport { createElement } from \"@webiny/app-page-builder/editor/utils\";\nimport { redux } from \"@webiny/app-page-builder/editor/redux\";\nimport { SETUP_EDITOR } from \"@webiny/app-page-builder/editor/actions\";\nimport { GET_PAGE } from \"@webiny/app-page-builder/admin/graphql/pages\";\nimport { useSavedElements } from \"@webiny/app-page-builder/admin/hooks/useSavedElements\";\nimport Snackbar from \"@webiny/app-admin/plugins/Snackbar/Snackbar\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport { LoadingEditor, LoadingTitle } from \"./EditorStyled.js\";\nimport editorMock from \"@webiny/app-page-builder/admin/assets/editor-mock.png\";\n\nvar getEmptyData = function getEmptyData() {\n  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var revisions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return {\n    ui: {\n      activeElement: null,\n      dragging: false,\n      highlightElement: null,\n      plugins: {},\n      resizing: false\n    },\n    tmp: {},\n    page: page,\n    revisions: revisions\n  };\n};\n\nvar pageSet = null;\n\nvar Editor = function Editor() {\n  var client = useApolloClient();\n\n  var _useRouter = useRouter(),\n      match = _useRouter.match,\n      history = _useRouter.history;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var ready = useSavedElements();\n  var params = match.params;\n  var renderEditor = useCallback(function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading;\n\n    if (loading || !ready) {\n      return /*#__PURE__*/React.createElement(LoadingEditor, null, /*#__PURE__*/React.createElement(\"img\", {\n        src: editorMock\n      }), /*#__PURE__*/React.createElement(LoadingTitle, null, /*#__PURE__*/React.createElement(Typography, {\n        tag: \"div\",\n        use: \"headline6\"\n      }, \"Loading Editor\", /*#__PURE__*/React.createElement(\"span\", null, \".\"), /*#__PURE__*/React.createElement(\"span\", null, \".\"), /*#__PURE__*/React.createElement(\"span\", null, \".\"))));\n    }\n\n    if (!_get(data, \"pageBuilder.page.data\")) {\n      return null;\n    }\n\n    if (!redux.store) {\n      redux.initStore({}, {\n        client: client\n      });\n    }\n\n    if (!loading) {\n      var _data$pageBuilder$pag = data.pageBuilder.page.data,\n          revisions = _data$pageBuilder$pag.revisions,\n          page = _objectWithoutProperties(_data$pageBuilder$pag, [\"revisions\"]);\n\n      if (!page.content) {\n        page.content = createElement(\"document\");\n      }\n\n      if (pageSet !== page.id) {\n        pageSet = page.id;\n        redux.store.dispatch({\n          type: SETUP_EDITOR,\n          payload: getEmptyData(page, revisions)\n        });\n        redux.store.dispatch({\n          type: \"@@redux-undo/INIT\"\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Provider, {\n      store: redux.store\n    }, /*#__PURE__*/React.createElement(PbEditor, null)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: 10,\n        position: \"absolute\"\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, null)));\n  }, [ready]);\n  return /*#__PURE__*/React.createElement(Query, {\n    query: GET_PAGE(),\n    variables: {\n      id: params.id\n    },\n    onCompleted: function onCompleted(data) {\n      var error = _get(data, \"pageBuilder.page.error.message\");\n\n      if (error) {\n        history.push(\"/page-builder/pages\");\n        showSnackbar(error);\n      }\n    }\n  }, renderEditor);\n};\n\nexport default Editor;","map":null,"metadata":{},"sourceType":"module"}