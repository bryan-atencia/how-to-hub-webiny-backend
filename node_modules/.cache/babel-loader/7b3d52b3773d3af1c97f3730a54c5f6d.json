{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Save Access Token\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Description\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Name\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"New Access Token\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Form } from \"@webiny/form\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { CopyButton } from \"@webiny/ui/Button\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { useCrud } from \"@webiny/app-admin/hooks/useCrud\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { CheckboxGroup, Checkbox } from \"@webiny/ui/Checkbox\";\nimport { useCms } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { SimpleFormHeader, SimpleForm, SimpleFormFooter, SimpleFormContent } from \"@webiny/app-admin/components/SimpleForm\";\nimport { validation } from \"@webiny/validation\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\nimport { webinyCheckboxTitle } from \"@webiny/ui/Checkbox/Checkbox.styles\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nvar t = i18n.ns(\"app-headless-cms/admin/accessTokens/form\");\n\nfunction EnvironmentAliasesForm() {\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useCrud = useCrud(),\n      crudForm = _useCrud.form;\n\n  var environments = useCms().environments.environments;\n  return /*#__PURE__*/React.createElement(Form, crudForm, function (_ref) {\n    var data = _ref.data,\n        form = _ref.form,\n        Bind = _ref.Bind;\n    return /*#__PURE__*/React.createElement(SimpleForm, {\n      \"data-testid\": \"pb-environmentAliases-form\"\n    }, crudForm.loading && /*#__PURE__*/React.createElement(CircularProgress, null), /*#__PURE__*/React.createElement(SimpleFormHeader, {\n      title: data.name ? data.name : t(_templateObject())\n    }), /*#__PURE__*/React.createElement(SimpleFormContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"name\",\n      validators: validation.create(\"required,maxLength:100\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: t(_templateObject2())\n    }))), /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"description\"\n    }, function (props) {\n      return /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n        rows: 4,\n        maxLength: 100,\n        characterCount: true,\n        label: t(_templateObject3())\n      }));\n    })), /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"token\"\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mdc-text-field-helper-text mdc-text-field-helper-text--persistent \" + webinyCheckboxTitle\n    }, \"Token\"), data.token ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"var(--mdc-theme-background)\",\n        padding: \"8px\",\n        paddingLeft: \"16px\"\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        lineHeight: \"48px\",\n        verticalAlign: \"middle\"\n      }\n    }, data.token), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        position: \"absolute\",\n        right: \"32px\"\n      }\n    }, /*#__PURE__*/React.createElement(CopyButton, {\n      value: data.token,\n      onCopy: function onCopy() {\n        return showSnackbar(\"Succesfully copied!\");\n      }\n    }))) : /*#__PURE__*/React.createElement(FormElementMessage, null, \"Your Token will be shown once you save the form\")))), /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"selectedEnvironmentIds\",\n      defaultValue: (data.environments || []).map(function (env) {\n        return env.id;\n      })\n    }, /*#__PURE__*/React.createElement(CheckboxGroup, {\n      label: \"Environments\",\n      description: \"Select the environments this token will be allowed to access.\"\n    }, function (_ref2) {\n      var onChange = _ref2.onChange,\n          getValue = _ref2.getValue;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, environments.map(function (_ref3) {\n        var id = _ref3.id,\n            name = _ref3.name;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: \"access-token-environment-\".concat(id)\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          label: name,\n          value: getValue(id),\n          onChange: onChange(id)\n        }));\n      }));\n    }))))), /*#__PURE__*/React.createElement(SimpleFormFooter, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n      onClick: form.submit\n    }, t(_templateObject4()))));\n  });\n}\n\nexport default EnvironmentAliasesForm;","map":null,"metadata":{},"sourceType":"module"}