{"ast":null,"code":"import * as React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { set } from \"dot-prop-immutable\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport { get } from \"dot-prop-immutable\";\nimport { ReactComponent as AlignCenterIcon } from \"@svgr/webpack!./icons/round-border_horizontal-24px.svg\";\nimport { ReactComponent as AlignTopIcon } from \"@svgr/webpack!./icons/round-border_top-24px.svg\";\nimport { ReactComponent as AlignBottomIcon } from \"@svgr/webpack!./icons/round-border_bottom-24px.svg\"; // Icons map for dynamic render\n\nvar icons = {\n  start: /*#__PURE__*/React.createElement(AlignTopIcon, null),\n  center: /*#__PURE__*/React.createElement(AlignCenterIcon, null),\n  end: /*#__PURE__*/React.createElement(AlignBottomIcon, null)\n};\n\nvar VerticalAlignAction = function VerticalAlignAction(_ref) {\n  var element = _ref.element,\n      updateElement = _ref.updateElement,\n      children = _ref.children;\n  var align = get(element, \"data.settings.verticalAlign\") || \"start\";\n  var plugin = getPlugins(\"pb-editor-page-element\").find(function (pl) {\n    return pl.elementType === element.type;\n  });\n  var alignElement = React.useCallback(function () {\n    var alignments = Object.keys(icons);\n    var nextAlign = alignments[alignments.indexOf(align) + 1] || \"start\";\n    updateElement({\n      element: set(element, \"data.settings.verticalAlign\", nextAlign)\n    });\n  }, [align]);\n\n  if (!plugin) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.cloneElement(children, {\n    onClick: alignElement,\n    icon: icons[align]\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    element: getActiveElement(state)\n  };\n}, {\n  updateElement: updateElement\n})(VerticalAlignAction);","map":null,"metadata":{},"sourceType":"module"}