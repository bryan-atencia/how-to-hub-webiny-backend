{"ast":null,"code":"var util = require('../src/util');\n\nvar bind = util.bind;\nvar each = util.each;\nvar create = util.create;\nvar slice = util.slice;\nmodule.exports = eventsPlugin;\n\nfunction eventsPlugin() {\n  var pubsub = _newPubSub();\n\n  return {\n    watch: watch,\n    unwatch: unwatch,\n    once: once,\n    set: set,\n    remove: remove,\n    clearAll: clearAll\n  }; // new pubsub functions\n\n  function watch(_, key, listener) {\n    return pubsub.on(key, bind(this, listener));\n  }\n\n  function unwatch(_, subId) {\n    pubsub.off(subId);\n  }\n\n  function once(_, key, listener) {\n    pubsub.once(key, bind(this, listener));\n  } // overwrite function to fire when appropriate\n\n\n  function set(super_fn, key, val) {\n    var oldVal = this.get(key);\n    super_fn();\n    pubsub.fire(key, val, oldVal);\n  }\n\n  function remove(super_fn, key) {\n    var oldVal = this.get(key);\n    super_fn();\n    pubsub.fire(key, undefined, oldVal);\n  }\n\n  function clearAll(super_fn) {\n    var oldVals = {};\n    this.each(function (val, key) {\n      oldVals[key] = val;\n    });\n    super_fn();\n    each(oldVals, function (oldVal, key) {\n      pubsub.fire(key, undefined, oldVal);\n    });\n  }\n}\n\nfunction _newPubSub() {\n  return create(_pubSubBase, {\n    _id: 0,\n    _subSignals: {},\n    _subCallbacks: {}\n  });\n}\n\nvar _pubSubBase = {\n  _id: null,\n  _subCallbacks: null,\n  _subSignals: null,\n  on: function on(signal, callback) {\n    if (!this._subCallbacks[signal]) {\n      this._subCallbacks[signal] = {};\n    }\n\n    this._id += 1;\n    this._subCallbacks[signal][this._id] = callback;\n    this._subSignals[this._id] = signal;\n    return this._id;\n  },\n  off: function off(subId) {\n    var signal = this._subSignals[subId];\n    delete this._subCallbacks[signal][subId];\n    delete this._subSignals[subId];\n  },\n  once: function once(signal, callback) {\n    var subId = this.on(signal, bind(this, function () {\n      callback.apply(this, arguments);\n      this.off(subId);\n    }));\n  },\n  fire: function fire(signal) {\n    var args = slice(arguments, 1);\n    each(this._subCallbacks[signal], function (callback) {\n      callback.apply(this, args);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}