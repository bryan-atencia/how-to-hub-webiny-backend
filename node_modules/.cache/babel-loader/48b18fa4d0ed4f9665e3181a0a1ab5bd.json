{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Save & Publish\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"You are about to publish a new revision. Are you sure you want to continue?\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Publish content\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Content published successfully.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useMemo } from \"react\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { createPublishMutation } from \"@webiny/app-headless-cms/admin/components/ContentModelForm/graphql\";\nimport { useMutation } from \"@webiny/app-headless-cms/admin/hooks\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { css } from \"emotion\";\nvar t = i18n.ns(\"app-headless-cms/admin/plugins/content-details/header/publish-revision\");\nvar buttonStyles = /*#__PURE__*/css({\n  marginLeft: 16\n}, \"label:buttonStyles;\");\n\nvar SaveAndPublishButton = function SaveAndPublishButton(_ref) {\n  var content = _ref.content,\n      contentModel = _ref.contentModel,\n      getLoading = _ref.getLoading,\n      setLoading = _ref.setLoading,\n      revisionsList = _ref.revisionsList,\n      state = _ref.state;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useMemo = useMemo(function () {\n    return {\n      PUBLISH_CONTENT: createPublishMutation(contentModel)\n    };\n  }, [contentModel.modelId]),\n      PUBLISH_CONTENT = _useMemo.PUBLISH_CONTENT;\n\n  var _useMutation = useMutation(PUBLISH_CONTENT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      publishContentMutation = _useMutation2[0];\n\n  var onPublish = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var response, contentData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return publishContentMutation({\n                variables: {\n                  revision: id || content.id\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              contentData = _get(response, \"data.content\");\n              setLoading(false);\n\n              if (!contentData.error) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showSnackbar(contentData.error.message));\n\n            case 8:\n              showSnackbar(t(_templateObject()));\n              revisionsList.refetch();\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [content.id]);\n\n  var _useConfirmationDialo = useConfirmationDialog({\n    title: t(_templateObject2()),\n    message: /*#__PURE__*/React.createElement(\"p\", null, t(_templateObject3()))\n  }),\n      showConfirmation = _useConfirmationDialo.showConfirmation;\n\n  return /*#__PURE__*/React.createElement(ButtonPrimary, {\n    className: buttonStyles,\n    onClick: function onClick() {\n      showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response, id;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return state.contentForm.submit();\n\n              case 2:\n                response = _context2.sent;\n\n                if (!response.data.content.error) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 5:\n                id = response.data.content.data.id;\n                _context2.next = 8;\n                return onPublish(id);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    },\n    disabled: getLoading()\n  }, t(_templateObject4()));\n};\n\nexport default SaveAndPublishButton;","map":null,"metadata":{},"sourceType":"module"}