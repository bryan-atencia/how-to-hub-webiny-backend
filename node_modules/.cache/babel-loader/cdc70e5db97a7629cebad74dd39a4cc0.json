{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"Create Token\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"Tokens\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"Close\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"Make sure to copy your new personal access token now. You won't be able to see it again!\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"Please copy the token\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"Your Personal Access Token\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"OK\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Cancel\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Token name\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Create new Personal Access Token\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Token created successfully!\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Close\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useApolloClient } from \"react-apollo\";\nimport { ButtonDefault, CopyButton } from \"@webiny/ui/Button\";\nimport { Form } from \"@webiny/form\";\nimport React, { useState } from \"react\";\nimport { Typography } from \"@webiny/ui/Typography\";\nimport styled from \"@emotion/styled\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Dialog, DialogCancel, DialogAccept, DialogTitle, DialogContent, DialogActions, DialogButton } from \"@webiny/ui/Dialog\";\nimport { Alert } from \"@webiny/ui/Alert\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.ns(\"app-security/admin/roles/data-list\");\nimport TokenList from \"./PersonalAccessTokens/TokenList\";\nimport { CREATE_PAT } from \"./AccountGraphql\";\nimport { validation } from \"@webiny/validation\";\nvar Header = /*#__PURE__*/styled(\"div\", {\n  target: \"efambvh0\",\n  label: \"Header\"\n})({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: 15\n});\nvar PatContainer = /*#__PURE__*/styled(\"div\", {\n  target: \"efambvh1\",\n  label: \"PatContainer\"\n})({\n  paddingLeft: \"12px\",\n  paddingRight: \"12px\",\n  background: \"var(--mdc-theme-on-background)\"\n});\n\nvar TokensElement = function TokensElement(_ref) {\n  var setFormIsLoading = _ref.setFormIsLoading,\n      data = _ref.data,\n      setValue = _ref.setValue;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showCreatePATDialog = _useState2[0],\n      setShowCreatePATDialog = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPATHashDialog = _useState4[0],\n      setShowPATHashDialog = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tokenHash = _useState6[0],\n      setTokenHash = _useState6[1];\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var client = useApolloClient();\n\n  var generateToken = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var queryResponse, error, _queryResponse$data$s, token, personalAccessToken, newPATs;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setShowCreatePATDialog(false);\n              setFormIsLoading(true);\n              _context.next = 4;\n              return client.mutate({\n                mutation: CREATE_PAT,\n                variables: {\n                  name: formData.createTokenName,\n                  userId: data.id\n                }\n              });\n\n            case 4:\n              queryResponse = _context.sent;\n              setFormIsLoading(false);\n              error = queryResponse.data.security.createPAT.error;\n\n              if (!error) {\n                _context.next = 9;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showSnackbar(error.message, {\n                action: t(_templateObject())\n              }));\n\n            case 9:\n              _queryResponse$data$s = queryResponse.data.security.createPAT.data, token = _queryResponse$data$s.token, personalAccessToken = _queryResponse$data$s.pat;\n\n              if (!data.personalAccessTokens) {\n                newPATs = [personalAccessToken];\n              } else {\n                newPATs = [personalAccessToken].concat(_toConsumableArray(data.personalAccessTokens));\n              }\n\n              setValue(\"personalAccessTokens\", newPATs);\n              setTokenHash(token);\n              setShowPATHashDialog(true);\n              showSnackbar(t(_templateObject2()));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function generateToken(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: generateToken,\n    submitOnEnter: true\n  }, function (_ref3) {\n    var Bind = _ref3.Bind,\n        form = _ref3.form;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: showCreatePATDialog,\n      onClose: function onClose() {\n        return setShowCreatePATDialog(false);\n      },\n      \"data-testid\": \"account-tokens-dialog\"\n    }, /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject3())), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Bind, {\n      name: \"createTokenName\",\n      validators: validation.create(\"required,maxLength:100\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: t(_templateObject4())\n    }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, null, t(_templateObject5())), /*#__PURE__*/React.createElement(DialogButton, {\n      \"data-testid\": \"accept-generate-token\",\n      onClick: form.submit\n    }, t(_templateObject6()))));\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: showPATHashDialog,\n    onClose: function onClose() {\n      return setShowPATHashDialog(false);\n    },\n    \"data-testid\": \"created-token-dialog\"\n  }, /*#__PURE__*/React.createElement(DialogTitle, null, t(_templateObject7())), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Alert, {\n    title: t(_templateObject8()),\n    type: \"info\"\n  }, t(_templateObject9())), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    }\n  }, /*#__PURE__*/React.createElement(PatContainer, null, /*#__PURE__*/React.createElement(Typography, {\n    use: \"overline\"\n  }, tokenHash)), /*#__PURE__*/React.createElement(CopyButton, {\n    value: tokenHash\n  })))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogAccept, null, t(_templateObject10())))), /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      lineHeight: \"2.4rem\"\n    },\n    use: \"overline\"\n  }, t(_templateObject11())), /*#__PURE__*/React.createElement(ButtonDefault, {\n    onClick: function onClick() {\n      return setShowCreatePATDialog(true);\n    }\n  }, t(_templateObject12()))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"pat-tokens-list\"\n  }, /*#__PURE__*/React.createElement(TokenList, {\n    setFormIsLoading: setFormIsLoading,\n    data: data,\n    setValue: setValue\n  })));\n};\n\nexport default TokensElement;","map":null,"metadata":{},"sourceType":"module"}