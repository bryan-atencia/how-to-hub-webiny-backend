{"ast":null,"code":"import _get from \"lodash/get\";\nimport React, { useMemo, useCallback } from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { set } from \"dot-prop-immutable\";\nimport { Tabs, Tab } from \"@webiny/ui/Tabs\";\nimport { updateElement } from \"@webiny/app-page-builder/editor/actions\";\nimport { getActiveElement } from \"@webiny/app-page-builder/editor/selectors\";\nimport Input from \"@webiny/app-page-builder/editor/plugins/elementSettings/components/Input\";\nimport { ReactComponent as ImageIcon } from \"@svgr/webpack!./round-image-24px.svg\";\n\nvar ImageSettings = function ImageSettings(_ref) {\n  var element = _ref.element,\n      updateElement = _ref.updateElement;\n\n  var _get2 = _get(element, \"data\", {}),\n      _get2$image = _get2.image,\n      image = _get2$image === void 0 ? {} : _get2$image;\n\n  var setData = useMemo(function () {\n    var historyUpdated = {};\n    return function (name, value) {\n      var attrKey = \"data.image.\".concat(name);\n      var newElement = set(element, attrKey, value);\n\n      if (historyUpdated[name] !== value) {\n        historyUpdated[name] = value;\n        updateElement({\n          element: newElement\n        });\n      }\n    };\n  }, [element, updateElement]);\n  var updateTitle = useCallback(function (value) {\n    return setData(\"title\", value);\n  }, [setData]);\n  var updateWidth = useCallback(function (value) {\n    return setData(\"width\", value);\n  }, [setData]);\n  var updateHeight = useCallback(function (value) {\n    return setData(\"height\", value);\n  }, [setData]);\n  return /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {\n    icon: /*#__PURE__*/React.createElement(ImageIcon, null),\n    label: \"Image\"\n  }, /*#__PURE__*/React.createElement(Input, {\n    label: \"Title\",\n    value: image.title || \"\",\n    updateValue: updateTitle,\n    inputWidth: \"max-content\"\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Width\",\n    placeholder: \"auto\",\n    description: \"eg. 300 or 50%\",\n    value: image.width || \"\",\n    updateValue: updateWidth,\n    inputWidth: 80\n  }), /*#__PURE__*/React.createElement(Input, {\n    label: \"Height\",\n    placeholder: \"auto\",\n    description: \"eg. 300 or 50%\",\n    value: image.height || \"\",\n    updateValue: updateHeight,\n    inputWidth: 80\n  })));\n};\n\nexport default connect(function (state) {\n  return {\n    element: getActiveElement(state)\n  };\n}, {\n  updateElement: updateElement\n})(ImageSettings);","map":null,"metadata":{},"sourceType":"module"}