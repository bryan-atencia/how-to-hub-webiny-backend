{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Dialog as RmwcDialog, DialogContent as RmwcDialogContent, DialogTitle as RmwcDialogTitle, DialogActions as RmwcDialogActions, DialogButton as RmwcDialogButton } from \"@rmwc/dialog\";\nimport { getClasses } from \"@webiny/ui/Helpers\";\nexport var Dialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dialog, _React$Component);\n\n  var _super = _createSuper(Dialog);\n\n  function Dialog(props) {\n    var _this;\n\n    _classCallCheck(this, Dialog);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _this.container = document.getElementById(\"dialog-container\");\n\n    if (!_this.container) {\n      _this.container = document.createElement(\"div\");\n\n      _this.container.setAttribute(\"id\", \"dialog-container\");\n\n      var container = _this.container;\n      document.body && document.body.appendChild(container);\n    }\n\n    return _this;\n  }\n\n  _createClass(Dialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"children\"]);\n\n      var container = this.container; // Let's pass \"permanent\" / \"persistent\" / \"temporary\" flags as \"mode\" prop instead.\n\n      return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(RmwcDialog, getClasses(props, \"webiny-ui-dialog\"), children), container);\n    }\n  }]);\n\n  return Dialog;\n}(React.Component);\n/**\n * Dialog's header, which can accept DialogHeaderTitle component or any other set of components.\n */\n\nexport var DialogTitle = function DialogTitle(props) {\n  return /*#__PURE__*/React.createElement(RmwcDialogTitle, getClasses(props, \"webiny-ui-dialog__title\"));\n};\n/**\n * A simple component for showing dialog's body.\n */\n\nexport var DialogContent = function DialogContent(props) {\n  return /*#__PURE__*/React.createElement(RmwcDialogContent, getClasses(props, \"webiny-ui-dialog__content\"));\n};\n/**\n * Can be used to show accept and cancel buttons.\n */\n\nexport var DialogActions = function DialogActions(props) {\n  return /*#__PURE__*/React.createElement(RmwcDialogActions, getClasses(props, \"webiny-ui-dialog__actions\"));\n};\n/**\n * Use this to show a simple button.\n */\n\nexport var DialogButton = function DialogButton(props) {\n  return /*#__PURE__*/React.createElement(RmwcDialogButton, getClasses(props, \"webiny-ui-dialog__button\"));\n};\n/**\n * Use this to close the dialog without taking any additional action.\n */\n\nexport var DialogCancel = function DialogCancel(props) {\n  return /*#__PURE__*/React.createElement(DialogButton, Object.assign({}, getClasses(props, \"webiny-ui-dialog__button webiny-ui-dialog__button--cancel\"), {\n    action: \"close\"\n  }), props.children);\n};\n/**\n * Use this to close the dialog without taking any additional action.\n */\n\nexport var DialogAccept = function DialogAccept(props) {\n  return /*#__PURE__*/React.createElement(DialogButton, Object.assign({}, getClasses(props, \"webiny-ui-dialog__button webiny-ui-dialog__button--accept\"), {\n    action: \"accept\"\n  }), props.children);\n};","map":null,"metadata":{},"sourceType":"module"}