{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _merge2 from \"lodash/merge\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _debounce from \"lodash/debounce\";\nimport _pick from \"lodash/pick\";\nimport _isEqual from \"lodash/isEqual\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        mutation UpdateRevision($id: ID!, $data: PbUpdatePageInput!) {\\n            pageBuilder {\\n                updateRevision(id: $id, data: $data) {\\n                    data {\\n                        id\\n                        content\\n                        title\\n                        published\\n                        savedOn\\n                    }\\n                    error {\\n                        code\\n                        message\\n                        data\\n                    }\\n                }\\n            }\\n        }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport invariant from \"invariant\";\nimport dotProp from \"dot-prop-immutable\";\nimport gql from \"graphql-tag\";\nimport { createAction, addMiddleware, addReducer, addHigherOrderReducer } from \"@webiny/app-page-builder/editor/redux\";\nimport { getPlugin, getPlugins } from \"@webiny/plugins\";\nimport { getPage, getElementWithChildren, getParentElementWithChildren } from \"@webiny/app-page-builder/editor/selectors\";\nimport { updateChildPaths } from \"@webiny/app-page-builder/editor/utils\";\nimport undoable from \"./history\";\nexport var DRAG_START = \"Drag start\";\nexport var DRAG_END = \"Drag end\";\nexport var ELEMENT_CREATED = \"Element created\";\nexport var ELEMENT_DROPPED = \"Element dropped\";\nexport var TOGGLE_PLUGIN = \"Toggle plugin\";\nexport var DEACTIVATE_PLUGIN = \"Deactivate plugin\";\nexport var HIGHLIGHT_ELEMENT = \"Highlight element\";\nexport var ACTIVATE_ELEMENT = \"Activate element\";\nexport var DEACTIVATE_ELEMENT = \"Deactivate element\";\nexport var UPDATE_ELEMENT = \"Update element\";\nexport var DELETE_ELEMENT = \"Delete element\";\nexport var FLATTEN_ELEMENTS = \"Flatten elements\";\nexport var SETUP_EDITOR = \"Setup editor\";\nexport var UPDATE_REVISION = \"Update revision\";\nexport var SAVING_REVISION = \"Save revision\";\nexport var START_SAVING = \"Started saving\";\nexport var FINISH_SAVING = \"Finished saving\";\n/***************** HISTORY REDUCER *****************/\n\nvar horStatePath = \"page.content\";\naddHigherOrderReducer([UPDATE_ELEMENT, DELETE_ELEMENT, ELEMENT_DROPPED, SETUP_EDITOR, \"@@redux-undo/UNDO\", \"@@redux-undo/REDO\", \"@@redux-undo/INIT\"], horStatePath, function () {\n  return undoable(function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    var _ref = arguments.length > 2 ? arguments[2] : undefined,\n        statePath = _ref.statePath,\n        reducer = _ref.reducer; // Get original reducer state path\n\n\n    var relativeStatePath = statePath !== horStatePath ? statePath.replace(horStatePath + \".\", \"\") : null;\n    var relativeStateSlice = relativeStatePath ? dotProp.get(state, relativeStatePath) : state; // Execute original reducer\n\n    var newState = reducer(relativeStateSlice, action); // Assign new data to HOR state\n\n    return relativeStatePath ? dotProp.set(state, relativeStatePath, newState) : newState;\n  }, {\n    initTypes: [\"@@redux-undo/INIT\"],\n    ignoreInitialState: true,\n    filter: function filter(action) {\n      if (action.payload && action.payload.history === false) {\n        return false;\n      }\n\n      return true;\n    }\n  });\n});\naddReducer([\"@@redux-undo/UNDO\", \"@@redux-undo/REDO\", \"@@redux-undo/INIT\"], \"page.content\", function (state) {\n  return state;\n});\n/***************** EDITOR ACTIONS *****************/\n\naddReducer([SETUP_EDITOR], null, function (state, action) {\n  return _objectSpread(_objectSpread({}, state), action.payload);\n});\nexport var togglePlugin = createAction(TOGGLE_PLUGIN);\naddReducer([TOGGLE_PLUGIN], \"ui.plugins\", function (state, action) {\n  var _action$payload = action.payload,\n      name = _action$payload.name,\n      params = _action$payload.params,\n      _action$payload$close = _action$payload.closeOtherInGroup,\n      closeOtherInGroup = _action$payload$close === void 0 ? false : _action$payload$close;\n  var plugin = getPlugin(name);\n\n  if (!plugin) {\n    return state;\n  }\n\n  var typePlugins = dotProp.get(state, plugin.type);\n\n  if (!Array.isArray(typePlugins)) {\n    typePlugins = [];\n  }\n\n  var alreadyActive = typePlugins.findIndex(function (pl) {\n    return pl.name === plugin.name;\n  });\n\n  if (alreadyActive > -1) {\n    typePlugins = dotProp.delete(typePlugins, alreadyActive);\n  } else {\n    if (closeOtherInGroup) {\n      typePlugins = [{\n        name: name,\n        params: params\n      }];\n    } else {\n      typePlugins.push({\n        name: name,\n        params: params\n      });\n    }\n  }\n\n  return dotProp.set(state, \"\".concat(plugin.type), typePlugins);\n});\nexport var deactivatePlugin = createAction(DEACTIVATE_PLUGIN);\naddReducer([DEACTIVATE_PLUGIN], \"ui.plugins\", function (state, action) {\n  var name = action.payload.name;\n  var plugin = getPlugin(name);\n\n  if (!plugin) {\n    return state;\n  }\n\n  var typePlugins = dotProp.get(state, plugin.type);\n\n  if (!Array.isArray(typePlugins)) {\n    typePlugins = [];\n  }\n\n  var alreadyActive = typePlugins.findIndex(function (pl) {\n    return pl.name === plugin.name;\n  });\n\n  if (alreadyActive > -1) {\n    typePlugins = dotProp.delete(typePlugins, alreadyActive);\n  }\n\n  return dotProp.set(state, \"\".concat(plugin.type), typePlugins);\n});\nexport var highlightElement = createAction(HIGHLIGHT_ELEMENT, {\n  log: false\n});\naddReducer([HIGHLIGHT_ELEMENT], \"ui.highlightElement\", function (state, action) {\n  return action.payload.element ? action.payload.element : null;\n});\nexport var activateElement = createAction(ACTIVATE_ELEMENT);\naddReducer([ACTIVATE_ELEMENT], \"ui.activeElement\", function (state, action) {\n  return action.payload.element;\n});\nexport var deactivateElement = createAction(DEACTIVATE_ELEMENT);\naddReducer([DEACTIVATE_ELEMENT], \"ui.activeElement\", function () {\n  return null;\n});\nexport var dragStart = createAction(DRAG_START);\naddReducer([DRAG_START], \"ui.dragging\", function () {\n  return true;\n});\nexport var dragEnd = createAction(DRAG_END);\naddReducer([DRAG_END], \"ui.dragging\", function () {\n  return false;\n});\nexport var elementCreated = createAction(ELEMENT_CREATED);\nexport var updateElement = createAction(UPDATE_ELEMENT);\naddReducer([UPDATE_ELEMENT], function (action) {\n  var element = action.payload.element;\n\n  if (element.type === \"document\") {\n    return \"page.content\";\n  } // .slice(2) removes `0.` from the beginning of the generated path\n\n\n  return \"page.content.\" + action.payload.element.path.replace(/\\./g, \".elements.\").slice(2);\n}, function (state, action) {\n  var _action$payload2 = action.payload,\n      element = _action$payload2.element,\n      _action$payload2$merg = _action$payload2.merge,\n      merge = _action$payload2$merg === void 0 ? false : _action$payload2$merg;\n\n  if (element.elements && typeof element.elements[0] === \"string\") {\n    delete element[\"elements\"];\n  }\n\n  updateChildPaths(element);\n\n  if (!merge) {\n    return _objectSpread(_objectSpread({}, state), element);\n  }\n\n  return _merge2({}, state, element);\n});\nexport var deleteElement = createAction(DELETE_ELEMENT);\naddMiddleware([DELETE_ELEMENT], function (_ref2) {\n  var store = _ref2.store,\n      next = _ref2.next,\n      action = _ref2.action;\n  next(action);\n  store.dispatch(deactivateElement());\n  var state = store.getState();\n  var element = action.payload.element;\n  var parent = getParentElementWithChildren(state, element.id); // Remove child from parent\n\n  if (!parent) {\n    return;\n  }\n\n  var index = parent.elements.findIndex(function (el) {\n    return el.id === element.id;\n  });\n  parent = dotProp.delete(parent, \"elements.\" + index);\n  store.dispatch(updateElement({\n    element: parent\n  })); // Execute `onChildDeleted` if defined\n\n  var plugins = getPlugins(\"pb-editor-page-element\");\n  var plugin = plugins.find(function (pl) {\n    return pl.elementType === parent.type;\n  });\n\n  if (!plugin) {\n    return;\n  }\n\n  if (typeof plugin.onChildDeleted === \"function\") {\n    plugin.onChildDeleted({\n      element: parent,\n      child: element\n    });\n  }\n});\nexport var dropElement = createAction(ELEMENT_DROPPED);\naddMiddleware([ELEMENT_DROPPED], function (_ref3) {\n  var store = _ref3.store,\n      next = _ref3.next,\n      action = _ref3.action;\n  next(action);\n  var state = store.getState();\n  var target = getElementWithChildren(state, action.payload.target.id);\n\n  if (!target) {\n    return;\n  }\n\n  var plugins = getPlugins(\"pb-editor-page-element\");\n  var plugin = plugins.find(function (pl) {\n    return pl.elementType === target.type;\n  });\n\n  if (!plugin) {\n    return;\n  }\n\n  invariant(plugin.onReceived, \"To accept drops, element plugin must implement `onReceived` function\");\n  var source = action.payload.source;\n\n  if (source.path) {\n    source = getElementWithChildren(state, source.id);\n  }\n\n  if (!plugin) {\n    return;\n  }\n\n  plugin.onReceived({\n    source: source,\n    target: target,\n    position: action.payload.target.position\n  });\n});\nexport var updateRevision = createAction(UPDATE_REVISION);\naddMiddleware([UPDATE_REVISION], function (_ref4) {\n  var store = _ref4.store,\n      next = _ref4.next,\n      action = _ref4.action;\n  next(action);\n\n  if (action.payload.history === false) {\n    return;\n  }\n\n  var onFinish = action.meta.onFinish;\n  store.dispatch(saveRevision(null, {\n    onFinish: onFinish\n  }));\n});\naddReducer([UPDATE_REVISION], \"page\", function (state, action) {\n  return _objectSpread(_objectSpread({}, state), action.payload);\n}); // Flatten page content\n\nvar flattenContent = function flattenContent(el) {\n  var els = {};\n  el.elements = Array.isArray(el.elements) && el.elements.map(function (child) {\n    els = _objectSpread(_objectSpread({}, els), flattenContent(child));\n    return child.id;\n  });\n  els[el.id] = el;\n  return els;\n};\n\naddReducer([FLATTEN_ELEMENTS], \"elements\", function (state, action) {\n  return action.payload;\n});\naddMiddleware([UPDATE_ELEMENT, DELETE_ELEMENT, \"@@redux-undo/UNDO\", \"@@redux-undo/REDO\", \"@@redux-undo/INIT\"], function (_ref5) {\n  var store = _ref5.store,\n      next = _ref5.next,\n      action = _ref5.action;\n  var result = next(action);\n  var state = store.getState();\n\n  if (state.page.content) {\n    var content = dotProp.get(state, \"page.content.present\") || null;\n\n    if (!content) {\n      return result;\n    }\n\n    var elements = flattenContent(_cloneDeep(content));\n    store.dispatch({\n      type: FLATTEN_ELEMENTS,\n      payload: elements,\n      meta: {\n        log: true\n      }\n    });\n  }\n\n  return result;\n});\n/************************* SAVE REVISION *************************/\n\nvar lastSavedRevision = null;\n\nvar dataChanged = function dataChanged(revision) {\n  if (!lastSavedRevision) {\n    return true;\n  }\n\n  var content = revision.content,\n      other = _objectWithoutProperties(revision, [\"content\"]);\n\n  var _lastSavedRevision = lastSavedRevision,\n      lastContent = _lastSavedRevision.content,\n      lastOther = _objectWithoutProperties(_lastSavedRevision, [\"content\"]);\n\n  return !_isEqual(content, lastContent) || !_isEqual(other, lastOther);\n};\n\nexport var saveRevision = createAction(SAVING_REVISION);\nvar debouncedSave = null;\naddMiddleware([UPDATE_REVISION, UPDATE_ELEMENT, DELETE_ELEMENT, \"@@redux-undo/UNDO\", \"@@redux-undo/REDO\"], function (_ref6) {\n  var store = _ref6.store,\n      next = _ref6.next,\n      action = _ref6.action;\n  next(action);\n\n  var _ref7 = action.meta || {},\n      onFinish = _ref7.onFinish;\n\n  if (action.type === UPDATE_ELEMENT && action.payload.history === false) {\n    return;\n  }\n\n  var page = getPage(store.getState());\n\n  if (page.locked) {\n    return;\n  }\n\n  if (debouncedSave) {\n    debouncedSave.cancel();\n  }\n\n  debouncedSave = _debounce(function () {\n    return store.dispatch(saveRevision(null, {\n      onFinish: onFinish\n    }));\n  }, 1000);\n  debouncedSave();\n});\nvar startSaving = {\n  type: START_SAVING,\n  payload: {\n    progress: true\n  }\n};\nvar finishSaving = {\n  type: FINISH_SAVING,\n  payload: {\n    progress: false\n  }\n};\naddReducer([START_SAVING, FINISH_SAVING], \"ui.saving\", function (state, action) {\n  return action.payload.progress;\n});\naddMiddleware([SAVING_REVISION], function (_ref8) {\n  var store = _ref8.store,\n      next = _ref8.next,\n      action = _ref8.action;\n  next(action);\n  var data = getPage(store.getState());\n\n  if (data.locked) {\n    return;\n  } // Construct page payload\n\n\n  var revision = _pick(data, [\"title\", \"snippet\", \"url\", \"settings\"]);\n\n  revision.content = data.content.present;\n  revision.category = data.category.id; // Check if API call is necessary\n\n  if (!dataChanged(revision)) {\n    return;\n  }\n\n  lastSavedRevision = revision;\n  var updateRevision = gql(_templateObject());\n  store.dispatch(startSaving);\n  action.meta.client.mutate({\n    mutation: updateRevision,\n    variables: {\n      id: data.id,\n      data: revision\n    }\n  }).then(function (data) {\n    store.dispatch(finishSaving);\n    action.meta.onFinish && action.meta.onFinish();\n    return data;\n  }).catch(function (err) {\n    store.dispatch(finishSaving);\n    console.log(err); // eslint-disable-line\n  });\n});","map":null,"metadata":{},"sourceType":"module"}