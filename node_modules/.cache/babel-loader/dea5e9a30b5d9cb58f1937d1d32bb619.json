{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _get from \"lodash/get\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport React from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack!@webiny/app-form-builder/admin/icons/delete.svg\";\nimport { GET_FORM, DELETE_FORM } from \"@webiny/app-form-builder/admin/viewsGraphql\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\n\nvar DeleteForm = function DeleteForm(_ref) {\n  var form = _ref.form,\n      revision = _ref.revision,\n      selectRevision = _ref.selectRevision;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var client = useApolloClient();\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var parentRevision = revision.parent === revision.id;\n  var message = \"You are about to delete this form revision, are you sure want to continue?\";\n\n  if (parentRevision) {\n    message = \"You are about to delete this form and all of its revisions. Are you sure want to continue?\";\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    content: \"Delete\",\n    placement: \"top\"\n  }, /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    title: \"Delete form\",\n    message: message\n  }, function (_ref2) {\n    var showConfirmation = _ref2.showConfirmation;\n    return /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(DeleteIcon, null),\n      onClick: function onClick() {\n        return showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return client.mutate({\n                    mutation: DELETE_FORM,\n                    variables: {\n                      id: revision.id\n                    },\n                    refetchQueries: [\"FormsListForms\"],\n                    update: function update(cache, updated) {\n                      var error = _get(updated, \"data.forms.deleteRevision.error\");\n\n                      if (error) {\n                        return showSnackbar(error.message);\n                      }\n\n                      showSnackbar(\"Form was deleted successfully!\"); // If the parent was deleted, there's nothing to see here anymore, so\n                      // we redirect back to the list of all forms.\n\n                      if (revision.id === revision.parent) {\n                        return history.push(\"/forms\");\n                      }\n\n                      var gqlParams = {\n                        query: GET_FORM,\n                        variables: {\n                          id: form.id\n                        }\n                      };\n\n                      var data = _cloneDeep(cache.readQuery(gqlParams));\n\n                      var indexOfDeleted = data.forms.form.data.revisions.findIndex(function (item) {\n                        return item.id === revision.id;\n                      });\n                      data.forms.form.data.revisions.splice(indexOfDeleted, 1);\n                      cache.writeQuery(_objectSpread(_objectSpread({}, gqlParams), {}, {\n                        data: data\n                      })); // If currently selected revision (from left list of forms) was deleted,\n                      // we redirect to the first revision in the list of all form revision.\n\n                      var firstRevision = data.forms.form.data.revisions[0];\n                      selectRevision(firstRevision);\n\n                      if (revision.id === form.id) {\n                        return history.push(\"/forms?id=\" + firstRevision.id);\n                      }\n                    }\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })));\n      }\n    });\n  }));\n};\n\nexport default DeleteForm;","map":null,"metadata":{},"sourceType":"module"}