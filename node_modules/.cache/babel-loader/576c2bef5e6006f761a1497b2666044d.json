{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useReducer, useEffect, useCallback, useMemo } from \"react\";\nimport { useApolloClient } from \"react-apollo\";\nimport localStorage from \"store\";\nimport observe from \"store/plugins/observe\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { GET_CURRENT_USER, ID_TOKEN_LOGIN } from \"../../components/graphql\";\nimport { setIdentity } from \"../../identity\";\nexport var SecurityContext = React.createContext(null);\nlocalStorage.addPlugin(observe);\nexport var DEFAULT_AUTH_TOKEN = \"webiny-token\";\nexport var SecurityConsumer = function SecurityConsumer(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(SecurityContext.Consumer, null, function (security) {\n    return /*#__PURE__*/React.cloneElement(children, {\n      security: security\n    });\n  });\n};\nexport var SecurityProvider = function SecurityProvider(props) {\n  var auth = getPlugins(\"security-authentication-provider\").pop();\n\n  if (!auth) {\n    throw Error(\"You must register a \\\"security-authentication-provider\\\" plugin to use Security provider!\");\n  }\n\n  var AUTH_TOKEN = props.AUTH_TOKEN || DEFAULT_AUTH_TOKEN;\n  var client = useApolloClient();\n\n  var _useReducer = useReducer(function (prev, next) {\n    return _objectSpread(_objectSpread({}, prev), next);\n  }, {\n    user: null,\n    firstLoad: true,\n    loading: false,\n    checkingUser: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      setState = _useReducer2[1];\n\n  var getToken = useCallback(function () {\n    return localStorage.get(AUTH_TOKEN);\n  }, []);\n\n  var loginUsingIdToken = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(idToken) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return client.mutate({\n                mutation: ID_TOKEN_LOGIN,\n                variables: {\n                  idToken: idToken\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n\n              if (res.error) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.data.security.loginUsingIdToken.data);\n\n            case 5:\n              return _context.abrupt(\"return\", {\n                user: null,\n                token: null\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loginUsingIdToken(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var removeToken = useCallback(function () {\n    localStorage.remove(AUTH_TOKEN);\n  }, []);\n  var setToken = useCallback(function (token) {\n    return localStorage.set(AUTH_TOKEN, token);\n  }, []);\n  var getUser = useHandler(props, function (_ref3) {\n    var getUser = _ref3.getUser;\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _user, _yield$client$query, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setState({\n                loading: true\n              });\n\n              if (!getUser) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 4;\n              return getUser();\n\n            case 4:\n              _user = _context2.sent;\n              setState({\n                loading: false\n              });\n              return _context2.abrupt(\"return\", _user);\n\n            case 7:\n              _context2.next = 9;\n              return client.query({\n                query: GET_CURRENT_USER,\n                fetchPolicy: \"no-cache\"\n              });\n\n            case 9:\n              _yield$client$query = _context2.sent;\n              data = _yield$client$query.data;\n              setState({\n                loading: false\n              });\n              return _context2.abrupt(\"return\", data.security.getCurrentUser.data);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  });\n  /**\n   * Should be called only by authentication plugin when it obtains\n   * an `idToken` from the authentication provider.\n   */\n\n  var onIdToken = useHandler(null, function () {\n    return /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(idToken) {\n        var _yield$loginUsingIdTo, token, user;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                setState({\n                  checkingUser: true\n                });\n                _context3.next = 3;\n                return loginUsingIdToken(idToken);\n\n              case 3:\n                _yield$loginUsingIdTo = _context3.sent;\n                token = _yield$loginUsingIdTo.token;\n                user = _yield$loginUsingIdTo.user;\n                setIdentity(user);\n                setToken(token);\n                setState({\n                  user: user,\n                  checkingUser: false\n                });\n                props.onUser && props.onUser(user);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n  }); // Run authentication plugin hook\n\n  var _auth$securityProvide = auth.securityProviderHook({\n    onIdToken: onIdToken\n  }),\n      getIdToken = _auth$securityProvide.getIdToken,\n      renderAuthentication = _auth$securityProvide.renderAuthentication,\n      authLogout = _auth$securityProvide.logout;\n\n  var logout = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return authLogout();\n\n          case 2:\n            localStorage.remove(AUTH_TOKEN);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })), []);\n  /**\n   * Check if user is logged-in and update state accordingly.\n   */\n\n  var checkUser = useHandler(null, function () {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var idToken, _yield$loginUsingIdTo2, token, _user2, user;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return getIdToken();\n\n            case 2:\n              idToken = _context5.sent;\n\n              if (idToken) {\n                _context5.next = 7;\n                break;\n              }\n\n              removeToken();\n              setState({\n                checkingUser: false,\n                user: null\n              });\n              return _context5.abrupt(\"return\");\n\n            case 7:\n              if (getToken()) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 10;\n              return loginUsingIdToken(idToken);\n\n            case 10:\n              _yield$loginUsingIdTo2 = _context5.sent;\n              token = _yield$loginUsingIdTo2.token;\n              _user2 = _yield$loginUsingIdTo2.user;\n\n              if (token) {\n                setIdentity(_user2);\n                setToken(token);\n                setState({\n                  user: _user2,\n                  checkingUser: false\n                });\n              }\n\n              return _context5.abrupt(\"return\");\n\n            case 15:\n              // Try loading user data using Webiny token\n              setState({\n                checkingUser: true\n              });\n              _context5.next = 18;\n              return getUser();\n\n            case 18:\n              user = _context5.sent;\n              setState({\n                checkingUser: false\n              });\n\n              if (!user) {\n                _context5.next = 26;\n                break;\n              }\n\n              setIdentity(user);\n              setState({\n                user: user\n              });\n              props.onUser && props.onUser(user);\n              _context5.next = 29;\n              break;\n\n            case 26:\n              removeToken();\n              _context5.next = 29;\n              return checkUser();\n\n            case 29:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n  });\n  var value = useMemo(function () {\n    return {\n      user: state.user,\n      logout: logout,\n      renderAuthentication: renderAuthentication,\n      refreshUser: function () {\n        var _refreshUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n          var user;\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  _context6.next = 2;\n                  return getUser();\n\n                case 2:\n                  user = _context6.sent;\n\n                  if (!user) {\n                    _context6.next = 8;\n                    break;\n                  }\n\n                  setIdentity(user);\n                  setState({\n                    user: user\n                  });\n                  _context6.next = 11;\n                  break;\n\n                case 8:\n                  removeToken();\n                  _context6.next = 11;\n                  return checkUser();\n\n                case 11:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        function refreshUser() {\n          return _refreshUser.apply(this, arguments);\n        }\n\n        return refreshUser;\n      }()\n    };\n  }, [state.user]);\n  useEffect(function () {\n    localStorage.observe(AUTH_TOKEN, /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(token) {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (token) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                setIdentity(null);\n                return _context7.abrupt(\"return\", setState({\n                  user: null\n                }));\n\n              case 3:\n                _context7.next = 5;\n                return getUser();\n\n              case 5:\n                user = _context7.sent;\n                setIdentity(user);\n                setState({\n                  user: user,\n                  firstLoad: false\n                });\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x3) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n    checkUser();\n  }, []);\n\n  if (state.checkingUser) {\n    return props.loader || null;\n  }\n\n  if (!state.user && !props.allowAnonymous) {\n    return renderAuthentication();\n  }\n\n  return /*#__PURE__*/React.createElement(SecurityContext.Provider, {\n    value: value\n  }, props.children);\n};\nSecurityProvider.defaultProps = {\n  allowAnonymous: false\n};","map":null,"metadata":{},"sourceType":"module"}