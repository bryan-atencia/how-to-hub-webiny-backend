{"ast":null,"code":"import * as React from \"react\";\nimport { I18NValue } from \"@webiny/app-i18n/components\";\nimport HelperMessage from \"../components/HelperMessage\";\n\nvar Input = function Input(props) {\n  var _props$bind = props.bind,\n      _onChange = _props$bind.onChange,\n      value = _props$bind.value,\n      validation = _props$bind.validation,\n      validate = _props$bind.validate; // @ts-ignore\n\n  var onBlur = function onBlur(e) {\n    if (validate) {\n      // Since we are accessing event in an async operation, we need to persist it.\n      // See https://reactjs.org/docs/events.html#event-pooling.\n      e.persist();\n      validate();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"webiny-fb-form-field webiny-fb-form-field--input\"\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"webiny-pb-typography-body webiny-fb-form-field__label\"\n  }, /*#__PURE__*/React.createElement(I18NValue, {\n    value: props.field.label\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    onBlur: onBlur,\n    onChange: function onChange(e) {\n      return _onChange(e.target.value);\n    },\n    value: value,\n    placeholder: I18NValue(props.field.placeholderText),\n    type: props.type,\n    name: props.field.fieldId,\n    id: props.field.fieldId,\n    className: \"webiny-fb-form-field__input\"\n  }), /*#__PURE__*/React.createElement(HelperMessage, {\n    isValid: validation.isValid,\n    errorMessage: validation.message,\n    helperMessage: /*#__PURE__*/React.createElement(I18NValue, {\n      value: props.field.helpText\n    })\n  }));\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}