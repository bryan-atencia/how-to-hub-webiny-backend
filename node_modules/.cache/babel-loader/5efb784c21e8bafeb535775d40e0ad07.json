{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo } from \"react\";\nimport { Editable, withReact, Slate } from \"slate-react\";\nimport { createEditor } from \"slate\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { pluginsToProps } from \"./pluginsToProps\";\n\nfunction getValue(valueObject) {\n  if (!valueObject) {\n    return \"\";\n  }\n\n  if (typeof valueObject === \"string\") {\n    return valueObject;\n  }\n\n  if (Array.isArray(valueObject.values)) {\n    var _valueObject$values = _slicedToArray(valueObject.values, 1),\n        defaultLocaleValue = _valueObject$values[0];\n\n    if (defaultLocaleValue && defaultLocaleValue.value) {\n      return defaultLocaleValue.value;\n    }\n\n    return \"\";\n  }\n\n  return valueObject.value || \"\";\n}\n\nexport function I18NValue(props) {\n  var editor = useMemo(function () {\n    return withReact(createEditor());\n  }, []);\n\n  if (!props) {\n    return \"\";\n  }\n\n  var valueObject = props.value,\n      defaultObject = props.default;\n  var value;\n  value = getValue(valueObject);\n\n  if (!value) {\n    value = getValue(defaultObject);\n  }\n\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  var editorPlugins = getPlugins(\"i18n-value-rich-text-editor\").map(function (item) {\n    return item.plugin;\n  }).filter(Boolean);\n\n  if (Array.isArray(props.editorPlugins)) {\n    editorPlugins = [].concat(_toConsumableArray(editorPlugins), _toConsumableArray(props.editorPlugins));\n  }\n\n  var _pluginsToProps = pluginsToProps(editorPlugins, {\n    editor: editor\n  }),\n      renderEditor = _pluginsToProps.renderEditor,\n      editorProps = _objectWithoutProperties(_pluginsToProps, [\"renderEditor\"]);\n\n  return /*#__PURE__*/React.createElement(Slate, {\n    editor: editor,\n    value: value,\n    onChange: null\n  }, renderEditor( /*#__PURE__*/React.createElement(Editable, Object.assign({\n    readOnly: true\n  }, editorProps))));\n}\nexport default I18NValue;","map":null,"metadata":{},"sourceType":"module"}