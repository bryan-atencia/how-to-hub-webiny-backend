{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from \"react\";\nimport { Checkbox as RmwcCheckbox } from \"@rmwc/checkbox\";\nimport { FormElementMessage } from \"@webiny/ui/FormElementMessage\";\n/**\n * Single Checkbox component can be used to store simple boolean values.\n *\n * Grouping multiple Checkbox components with CheckboxGroup will allow to store an array of selected values.\n * In that case, each Checkbox component must receive value and onChange callback via props.\n */\n\nvar Checkbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox() {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      _this.props.onChange && _this.props.onChange(e.target.checked);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label,\n          disabled = _this$props.disabled,\n          indeterminate = _this$props.indeterminate,\n          description = _this$props.description,\n          validation = _this$props.validation,\n          _onClick = _this$props.onClick;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RmwcCheckbox, {\n        indeterminate: indeterminate,\n        disabled: disabled,\n        checked: Boolean(value),\n        onChange: this.onChange,\n        onClick: function onClick() {\n          return typeof _onClick === \"function\" && _onClick(Boolean(value));\n        } // @ts-ignore Although the label is React.ReactNode internally, an error is still thrown.\n        ,\n        label: label\n      }), validation.isValid === false && /*#__PURE__*/React.createElement(FormElementMessage, {\n        error: true\n      }, validation.message), validation.isValid !== false && description && /*#__PURE__*/React.createElement(FormElementMessage, null, description));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  validation: {\n    isValid: null\n  }\n});\n\nexport default Checkbox;","map":null,"metadata":{},"sourceType":"module"}