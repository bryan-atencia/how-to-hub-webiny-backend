{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { FoundationComponent } from '@rmwc/base';\nimport { MDCNotchedOutlineFoundation } from '@material/notched-outline';\n\nvar NotchedOutlineLeading =\n/** @class */\nfunction (_super) {\n  __extends(NotchedOutlineLeading, _super);\n\n  function NotchedOutlineLeading() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NotchedOutlineLeading.prototype.shouldComponentUpdate = function () {\n    return false;\n  };\n\n  NotchedOutlineLeading.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: \"mdc-notched-outline__leading\"\n    });\n  };\n\n  return NotchedOutlineLeading;\n}(React.Component);\n\nvar NotchedOutlineTrailing =\n/** @class */\nfunction (_super) {\n  __extends(NotchedOutlineTrailing, _super);\n\n  function NotchedOutlineTrailing() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NotchedOutlineTrailing.prototype.shouldComponentUpdate = function () {\n    return false;\n  };\n\n  NotchedOutlineTrailing.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: \"mdc-notched-outline__trailing\"\n    });\n  };\n\n  return NotchedOutlineTrailing;\n}(React.Component);\n\nvar NotchedOutline =\n/** @class */\nfunction (_super) {\n  __extends(NotchedOutline, _super);\n\n  function NotchedOutline() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.root = _this.createElement('root');\n    _this.notchElement = _this.createElement('root');\n    _this.label = null;\n    return _this;\n  }\n\n  NotchedOutline.prototype.componentDidMount = function () {\n    var _this = this;\n\n    _super.prototype.componentDidMount.call(this);\n\n    this.label = this.root.ref && this.root.ref.querySelector('label');\n\n    if (this.label) {\n      this.label.style.transitionDuration = '0s';\n      this.root.addClass(MDCNotchedOutlineFoundation.cssClasses.OUTLINE_UPGRADED);\n      requestAnimationFrame(function () {\n        _this.label && (_this.label.style.transitionDuration = '');\n      });\n    } else {\n      this.root.addClass(MDCNotchedOutlineFoundation.cssClasses.NO_LABEL);\n    }\n  };\n\n  NotchedOutline.prototype.getDefaultFoundation = function () {\n    var _this = this;\n\n    return new MDCNotchedOutlineFoundation({\n      addClass: function (className) {\n        return _this.root.addClass(className);\n      },\n      removeClass: function (className) {\n        return _this.root.removeClass(className);\n      },\n      setNotchWidthProperty: function (width) {\n        return _this.notchElement.setStyle('width', width + 'px');\n      },\n      removeNotchWidthProperty: function () {\n        return _this.notchElement.setStyle('width', '');\n      }\n    });\n  };\n\n  NotchedOutline.prototype.sync = function (props, prevProps) {\n    var _this = this;\n\n    this.syncProp(props.notch, prevProps.notch, function () {\n      !!props.notch ? _this.foundation.notch(props.notch) : _this.foundation.closeNotch();\n    });\n  };\n\n  NotchedOutline.prototype.render = function () {\n    var _a = this.props,\n        children = _a.children,\n        rest = __rest(_a, [\"children\"]);\n\n    return React.createElement(\"div\", __assign({}, this.root.props(__assign({}, rest, {\n      className: 'mdc-notched-outline'\n    })), {\n      ref: this.root.setRef\n    }), React.createElement(NotchedOutlineLeading, null), React.createElement(\"div\", __assign({}, this.notchElement.props({}), {\n      className: \"mdc-notched-outline__notch\",\n      ref: this.notchElement.setRef\n    }), children), React.createElement(NotchedOutlineTrailing, null));\n  };\n\n  NotchedOutline.displayName = 'NotchedOutline';\n  return NotchedOutline;\n}(FoundationComponent);\n\nexport { NotchedOutline };","map":null,"metadata":{},"sourceType":"module"}