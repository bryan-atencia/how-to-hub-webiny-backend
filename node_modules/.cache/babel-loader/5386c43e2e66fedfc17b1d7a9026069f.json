{"ast":null,"code":"import React, { useCallback } from \"react\";\nimport { css } from \"emotion\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { togglePlugin } from \"@webiny/app-page-builder/editor/actions\";\nimport { isPluginActive } from \"@webiny/app-page-builder/editor/selectors\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nvar activeStyle = /*#__PURE__*/css({\n  \".mdc-icon-button__icon\": {\n    color: \"var(--mdc-theme-primary)\"\n  }\n}, \"label:activeStyle;\");\n\nvar Action = function Action(_ref) {\n  var icon = _ref.icon,\n      onClick = _ref.onClick,\n      active = _ref.active,\n      tooltip = _ref.tooltip,\n      togglePlugin = _ref.togglePlugin,\n      plugin = _ref.plugin;\n  var clickHandler = useCallback(function () {\n    if (typeof onClick === \"function\") {\n      return onClick();\n    }\n\n    togglePlugin({\n      name: plugin\n    });\n  }, [plugin]);\n  var btnIcon = icon;\n\n  if (Array.isArray(icon)) {\n    btnIcon = active ? icon[0] : icon[1];\n  }\n\n  var iconButton = /*#__PURE__*/React.createElement(IconButton, {\n    icon: btnIcon,\n    onClick: clickHandler,\n    className: active && activeStyle\n  });\n\n  if (tooltip) {\n    return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n      placement: \"right\",\n      content: /*#__PURE__*/React.createElement(\"span\", null, tooltip)\n    }, active ? {\n      visible: false\n    } : {}), iconButton);\n  }\n\n  return iconButton;\n};\n\nexport default connect(function (state, props) {\n  return {\n    active: isPluginActive(props.plugin)(state)\n  };\n}, {\n  togglePlugin: togglePlugin\n})( /*#__PURE__*/React.memo(Action));","map":null,"metadata":{},"sourceType":"module"}