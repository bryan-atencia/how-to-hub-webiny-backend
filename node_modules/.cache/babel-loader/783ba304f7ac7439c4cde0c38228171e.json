{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _get from \"lodash/get\";\nimport React from \"react\";\nimport dot from \"dot-prop-immutable\";\nimport { useApolloClient } from \"react-apollo\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { useHandler } from \"@webiny/app/hooks/useHandler\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useConfirmationDialog } from \"@webiny/app-admin/hooks/useConfirmationDialog\";\nimport { useDialog } from \"@webiny/app-admin/hooks/useDialog\";\nimport { IconButton } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack!@webiny/app-page-builder/admin/assets/delete.svg\";\nimport { DELETE_PAGE } from \"@webiny/app-page-builder/admin/graphql/pages\";\n\nvar DeletePage = function DeletePage(props) {\n  var client = useApolloClient();\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var _useDialog = useDialog(),\n      showDialog = _useDialog.showDialog;\n\n  var title = _get(props, \"pageDetails.page.title\", \"N/A\");\n\n  var _useConfirmationDialo = useConfirmationDialog({\n    title: \"Delete page\",\n    message: /*#__PURE__*/React.createElement(\"p\", null, \"You are about to delete the entire page and all of its revisions! \", /*#__PURE__*/React.createElement(\"br\", null), \"Are you sure you want to permanently delete the page \", /*#__PURE__*/React.createElement(\"strong\", null, title), \"?\")\n  }),\n      showConfirmation = _useConfirmationDialo.showConfirmation;\n\n  var confirmDelete = useHandler(_objectSpread(_objectSpread({}, props), {}, {\n    showConfirmation: showConfirmation\n  }), function (_ref) {\n    var page = _ref.pageDetails.page,\n        showConfirmation = _ref.showConfirmation;\n    return function () {\n      showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$client$mutate, res, _dot$get, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return client.mutate({\n                  mutation: DELETE_PAGE,\n                  variables: {\n                    id: page.parent\n                  },\n                  refetchQueries: [\"PbListPages\"]\n                });\n\n              case 2:\n                _yield$client$mutate = _context.sent;\n                res = _yield$client$mutate.data;\n                _dot$get = dot.get(res, \"pageBuilder.deletePage\"), error = _dot$get.error;\n\n                if (!error) {\n                  _context.next = 7;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", showDialog(error.message, {\n                  title: \"Could not delete page\"\n                }));\n\n              case 7:\n                showSnackbar( /*#__PURE__*/React.createElement(\"span\", null, \"The page\", \" \", /*#__PURE__*/React.createElement(\"strong\", null, page.title.substr(0, 20), \"...\"), \" \", \"was deleted successfully!\"));\n                history.push(\"/page-builder/pages\");\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    };\n  });\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    content: \"Delete\",\n    placement: \"top\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    icon: /*#__PURE__*/React.createElement(DeleteIcon, null),\n    onClick: confirmDelete\n  }));\n};\n\nexport default DeletePage;","map":null,"metadata":{},"sourceType":"module"}