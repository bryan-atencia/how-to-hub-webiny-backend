{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _cloneDeep from \"lodash/cloneDeep\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"Cancel\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"Save\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Cancel\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Go back\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"General\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Field Settings - {fieldTypeLabel}\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Field Settings\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { css } from \"emotion\";\nimport styled from \"@emotion/styled\";\nimport { Dialog, DialogContent, DialogTitle, DialogCancel, DialogActions, DialogButton } from \"@webiny/ui/Dialog\";\nimport { Form } from \"@webiny/form\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { Tabs, Tab } from \"@webiny/ui/Tabs\";\nimport GeneralTab from \"./EditFieldDialog/GeneralTab\";\nimport ValidatorsTab from \"./EditFieldDialog/ValidatorsTab\";\nimport FieldTypeSelector from \"./EditFieldDialog/FieldTypeSelector\";\nimport { i18n } from \"@webiny/app/i18n\";\nvar t = i18n.namespace(\"FormEditor.EditFieldDialog\");\nimport { useFormEditor } from \"@webiny/app-form-builder/admin/components/FormEditor/Context\";\nimport { useI18N } from \"@webiny/app-i18n/hooks/useI18N\";\nvar dialogBody = /*#__PURE__*/css({\n  \"&.webiny-ui-dialog__content\": {\n    width: 875,\n    height: 450\n  }\n}, \"label:dialogBody;\");\nvar FbFormModelFieldList = /*#__PURE__*/styled(\"div\", {\n  target: \"e1e7jrn10\",\n  label: \"FbFormModelFieldList\"\n})({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexWrap: \"wrap\",\n  paddingTop: 25,\n  backgroundColor: \"var(--mdc-theme-background) !important\"\n});\n\nvar EditFieldDialog = function EditFieldDialog(_ref) {\n  var field = _ref.field,\n      onSubmit = _ref.onSubmit,\n      props = _objectWithoutProperties(_ref, [\"field\", \"onSubmit\"]);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isNewField = _useState4[0],\n      setIsNewField = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      screen = _useState6[0],\n      setScreen = _useState6[1];\n\n  var _useFormEditor = useFormEditor(),\n      getFieldPlugin = _useFormEditor.getFieldPlugin;\n\n  var i18n = useI18N();\n  useEffect(function () {\n    setCurrent(_cloneDeep(field));\n\n    if (field) {\n      setIsNewField(!field._id);\n      setScreen(field.type ? \"fieldOptions\" : \"fieldType\");\n    }\n  }, [field]);\n  var onClose = useCallback(function () {\n    setCurrent(null);\n    props.onClose();\n  }, undefined);\n  var render = null;\n  var headerTitle = t(_templateObject());\n\n  if (current) {\n    var fieldPlugin = getFieldPlugin({\n      name: current.name\n    });\n\n    if (fieldPlugin) {\n      headerTitle = t(_templateObject2())({\n        fieldTypeLabel: fieldPlugin.field.label\n      });\n    }\n\n    switch (screen) {\n      case \"fieldOptions\":\n        {\n          render = /*#__PURE__*/React.createElement(Form, {\n            data: current,\n            onSubmit: onSubmit\n          }, function (form) {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogContent, {\n              className: dialogBody\n            }, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {\n              label: t(_templateObject3())\n            }, /*#__PURE__*/React.createElement(GeneralTab, {\n              form: form,\n              field: current\n            })), Array.isArray(fieldPlugin.field.validators) && fieldPlugin.field.validators.length > 0 && /*#__PURE__*/React.createElement(Tab, {\n              label: \"Validators\"\n            }, /*#__PURE__*/React.createElement(ValidatorsTab, {\n              form: form,\n              field: current\n            })))), /*#__PURE__*/React.createElement(DialogActions, {\n              style: {\n                justifyContent: isNewField ? \"space-between\" : \"flex-end\"\n              }\n            }, isNewField && /*#__PURE__*/React.createElement(DialogButton, {\n              onClick: function onClick() {\n                return setScreen(\"fieldType\");\n              }\n            }, t(_templateObject4())), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(DialogButton, {\n              onClick: onClose\n            }, t(_templateObject5())), /*#__PURE__*/React.createElement(DialogButton, {\n              onClick: form.submit\n            }, t(_templateObject6())))));\n          });\n          break;\n        }\n\n      default:\n        render = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogContent, {\n          className: dialogBody\n        }, /*#__PURE__*/React.createElement(FbFormModelFieldList, null, getPlugins(\"form-editor-field-type\").filter(function (pl) {\n          return !pl.field.group;\n        }).map(function (pl) {\n          return /*#__PURE__*/React.createElement(FieldTypeSelector, {\n            key: pl.name,\n            fieldType: pl.field,\n            onClick: function onClick() {\n              var newCurrent = pl.field.createField({\n                i18n: i18n\n              });\n\n              if (current) {\n                // User edited existing field, that's why we still want to\n                // keep a couple of previous values.\n                var _id = current._id,\n                    label = current.label,\n                    fieldId = current.fieldId,\n                    helpText = current.helpText;\n                newCurrent._id = _id;\n                newCurrent.label = label;\n                newCurrent.fieldId = fieldId;\n                newCurrent.helpText = helpText;\n              }\n\n              setCurrent(newCurrent);\n              setScreen(\"fieldOptions\");\n            }\n          });\n        }))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, {\n          onClick: onClose\n        }, t(_templateObject7()))));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    preventOutsideDismiss: true,\n    open: !!current,\n    onClose: onClose\n  }, /*#__PURE__*/React.createElement(DialogTitle, null, headerTitle), render);\n};\n\nexport default EditFieldDialog;","map":null,"metadata":{},"sourceType":"module"}