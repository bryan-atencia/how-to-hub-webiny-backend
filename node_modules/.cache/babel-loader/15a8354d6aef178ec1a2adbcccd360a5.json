{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { css } from \"emotion\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport ElementPreview from \"./SaveDialog/ElementPreview\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogButton, DialogCancel } from \"@webiny/ui/Dialog\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Switch } from \"@webiny/ui/Switch\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Form } from \"@webiny/form\";\nimport styled from \"@emotion/styled\";\nimport { validation } from \"@webiny/validation\";\nvar narrowDialog = /*#__PURE__*/css({\n  \".mdc-dialog__surface\": {\n    width: 600,\n    minWidth: 600\n  }\n}, \"label:narrowDialog;\");\nvar PreviewBox = /*#__PURE__*/styled(\"div\", {\n  target: \"e16gs1pk0\",\n  label: \"PreviewBox\"\n})({\n  width: 500,\n  minHeight: 250,\n  border: \"1px solid var(--mdc-theme-on-background)\",\n  backgroundColor: \"#fff\",\n  // this must always be white\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  img: {\n    maxHeight: 500,\n    maxWidth: 500\n  }\n});\n\nvar SaveDialog = function SaveDialog(props) {\n  var element = props.element,\n      open = props.open,\n      onClose = props.onClose,\n      onSubmit = props.onSubmit,\n      type = props.type;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var blockCategoriesOptions = getPlugins(\"pb-editor-block-category\").map(function (item) {\n    return {\n      value: item.categoryName,\n      label: item.title\n    };\n  });\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    className: narrowDialog\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return onSubmit(data);\n\n              case 3:\n                setLoading(false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    data: {\n      type: type,\n      category: \"general\"\n    }\n  }, function (_ref2) {\n    var data = _ref2.data,\n        submit = _ref2.submit,\n        Bind = _ref2.Bind;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, null, \"Save \", type), /*#__PURE__*/React.createElement(DialogContent, null, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      label: \"Saving \".concat(type, \"...\")\n    }), element.source && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"overwrite\"\n    }, /*#__PURE__*/React.createElement(Switch, {\n      label: \"Update existing\"\n    })))), !data.overwrite && /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"name\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Name\",\n      autoFocus: true\n    })))), data.type === \"block\" && !data.overwrite && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"category\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Category\",\n      description: \"Select a block category\",\n      options: blockCategoriesOptions\n    }))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(PreviewBox, null, /*#__PURE__*/React.createElement(Bind, {\n      name: \"preview\"\n    }, function (_ref3) {\n      var value = _ref3.value,\n          onChange = _ref3.onChange;\n      return value ? /*#__PURE__*/React.createElement(\"img\", {\n        src: value,\n        alt: \"\"\n      }) : open ? /*#__PURE__*/React.createElement(ElementPreview, {\n        key: element.id,\n        onChange: onChange,\n        element: element\n      }) : null;\n    }))))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, null, \"Cancel\"), /*#__PURE__*/React.createElement(DialogButton, {\n      onClick: submit\n    }, \"Save\")));\n  }));\n};\n\nexport default /*#__PURE__*/React.memo(SaveDialog, function (props, nextProps) {\n  return props.open === nextProps.open;\n});","map":null,"metadata":{},"sourceType":"module"}