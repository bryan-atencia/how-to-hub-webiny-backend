{"ast":null,"code":"import React from \"react\";\nimport { css } from \"emotion\";\nimport { getPlugins } from \"@webiny/plugins\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, DialogButton, DialogCancel } from \"@webiny/ui/Dialog\";\nimport { validation } from \"@webiny/validation\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { Select } from \"@webiny/ui/Select\";\nimport { CircularProgress } from \"@webiny/ui/Progress\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Form } from \"@webiny/form\";\nimport styled from \"@emotion/styled\";\nvar narrowDialog = /*#__PURE__*/css({\n  \".mdc-dialog__surface\": {\n    width: 600,\n    minWidth: 600\n  }\n}, \"label:narrowDialog;\");\nvar PreviewBox = /*#__PURE__*/styled(\"div\", {\n  target: \"e1ch8ijn0\",\n  label: \"PreviewBox\"\n})({\n  width: 500,\n  minHeight: 250,\n  border: \"1px solid var(--mdc-theme-on-background)\",\n  backgroundColor: \"#fff\",\n  // this must always be white\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  img: {\n    maxHeight: 500,\n    maxWidth: 500\n  }\n});\n\nvar EditBlockDialog = function EditBlockDialog(props) {\n  var open = props.open,\n      onClose = props.onClose,\n      onSubmit = props.onSubmit,\n      plugin = props.plugin,\n      loading = props.loading;\n  var plugins = getPlugins(\"pb-editor-block-category\");\n  var blockCategoriesOptions = plugins.map(function (item) {\n    return {\n      value: item.name,\n      label: item.title\n    };\n  });\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    className: narrowDialog\n  }, loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    label: \"Saving block...\"\n  }), plugin && /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    data: plugin\n  }, function (_ref) {\n    var data = _ref.data,\n        submit = _ref.submit,\n        Bind = _ref.Bind;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DialogTitle, null, \"Update \", plugin.title), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"title\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Input, {\n      label: \"Name\",\n      autoFocus: true\n    })))), data.type === \"block\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(Bind, {\n      name: \"category\",\n      validators: validation.create(\"required\")\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Category\",\n      description: \"Select a block category\",\n      options: blockCategoriesOptions\n    }))))), /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n      span: 12\n    }, /*#__PURE__*/React.createElement(PreviewBox, null, plugin.preview())))), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(DialogCancel, null, \"Cancel\"), /*#__PURE__*/React.createElement(DialogButton, {\n      onClick: submit\n    }, \"Save\")));\n  }));\n};\n\nexport default /*#__PURE__*/React.memo(EditBlockDialog, function (props, nextProps) {\n  return props.open === nextProps.open && props.loading === nextProps.loading;\n});","map":null,"metadata":{},"sourceType":"module"}