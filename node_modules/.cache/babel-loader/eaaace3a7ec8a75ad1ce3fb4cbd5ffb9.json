{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _isEqual from \"lodash/isEqual\";\nimport _omit from \"lodash/omit\";\nimport React from \"react\";\nimport { connect } from \"@webiny/app-page-builder/editor/redux\";\nimport { ConfirmationDialog } from \"@webiny/ui/ConfirmationDialog\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { getPage } from \"@webiny/app-page-builder/editor/selectors\";\nimport { Mutation } from \"react-apollo\";\nimport { useSnackbar } from \"@webiny/app-admin/hooks/useSnackbar\";\nimport { useRouter } from \"@webiny/react-router\";\nimport { PUBLISH_REVISION } from \"./PublishPageButton/graphql\";\n\nvar PublishPageButton = function PublishPageButton(_ref) {\n  var page = _ref.page;\n\n  var _useRouter = useRouter(),\n      history = _useRouter.history;\n\n  var _useSnackbar = useSnackbar(),\n      showSnackbar = _useSnackbar.showSnackbar;\n\n  return /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    \"data-testid\": \"pb-editor-publish-confirmation-dialog\",\n    title: \"Publish page\",\n    message: \"You are about to publish this page, are you sure want to continue?\"\n  }, function (_ref2) {\n    var showConfirmation = _ref2.showConfirmation;\n    return /*#__PURE__*/React.createElement(Mutation, {\n      mutation: PUBLISH_REVISION,\n      refetchQueries: [\"PbListPages\"]\n    }, function (update) {\n      return /*#__PURE__*/React.createElement(ButtonPrimary, {\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  showConfirmation( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var response, error;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return update({\n                              variables: {\n                                id: page.id\n                              }\n                            });\n\n                          case 2:\n                            response = _context.sent;\n                            error = response.data.pageBuilder.publishRevision.error;\n\n                            if (!error) {\n                              _context.next = 6;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", showSnackbar(error.message));\n\n                          case 6:\n                            history.push(\"/page-builder/pages?id=\".concat(page.id)); // Let's wait a bit, because we are also redirecting the user.\n\n                            setTimeout(function () {\n                              showSnackbar(\"Your page was published successfully!\");\n                            }, 500);\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  })));\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }))\n      }, page.version > 1 ? \"Publish changes\" : \"Publish\");\n    });\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    page: _omit(getPage(state), [\"content\"])\n  };\n}, null, null, {\n  areStatePropsEqual: _isEqual\n})(PublishPageButton);","map":null,"metadata":{},"sourceType":"module"}