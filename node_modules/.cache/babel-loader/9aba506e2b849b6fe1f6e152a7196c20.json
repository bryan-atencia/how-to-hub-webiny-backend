{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport _get from \"lodash/get\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Save\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Redirect URL\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"This form has a success message set. Note that it will not be\\n                                visible if a redirect is set.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Grid, Cell } from \"@webiny/ui/Grid\";\nimport { Input } from \"@webiny/ui/Input\";\nimport { ReactComponent as LinkIcon } from \"@svgr/webpack!./icons/round-link-24px.svg\";\nimport { ButtonPrimary } from \"@webiny/ui/Button\";\nimport { i18n } from \"@webiny/app/i18n\";\nimport { Alert } from \"@webiny/ui/Alert\";\nvar t = i18n.namespace(\"FormsApp.Editor.RedirectTriggerSettings\");\nexport default {\n  type: \"form-editor-trigger\",\n  name: \"form-editor-trigger-redirect\",\n  trigger: {\n    id: \"redirect\",\n    title: \"Redirect\",\n    description: \"Send a user to a specific URL.\",\n    icon: /*#__PURE__*/React.createElement(LinkIcon, null),\n    renderSettings: function renderSettings(_ref) {\n      var Bind = _ref.Bind,\n          submit = _ref.submit,\n          form = _ref.form;\n      var hasSuccessMessage = _get(form, \"settings.successMessage.values.length\") > 0;\n      return /*#__PURE__*/React.createElement(Grid, null, /*#__PURE__*/React.createElement(Cell, {\n        span: 12\n      }, hasSuccessMessage && /*#__PURE__*/React.createElement(Alert, {\n        type: \"warning\",\n        title: \"Success message set\"\n      }, t(_templateObject())), /*#__PURE__*/React.createElement(Bind, {\n        name: \"url\"\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: t(_templateObject2())\n      }))), /*#__PURE__*/React.createElement(Cell, null, /*#__PURE__*/React.createElement(ButtonPrimary, {\n        onClick: submit\n      }, t(_templateObject3()))));\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}