{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _debounce from \"lodash/debounce\";\nimport React from \"react\";\nimport { ReactComponent as FilterIcon } from \"@svgr/webpack!./icons/filter.svg\";\nimport { Slider } from \"@webiny/ui/Slider\";\nimport { IconButton, ButtonDefault } from \"@webiny/ui/Button\";\nimport { Tooltip } from \"@webiny/ui/Tooltip\";\nimport styled from \"@emotion/styled\";\nvar Wrapper = /*#__PURE__*/styled(\"div\", {\n  target: \"e1cnct9n0\",\n  label: \"Wrapper\"\n})({\n  ul: {\n    textAlign: \"center\",\n    li: {\n      display: \"inline-block\",\n      width: 180,\n      padding: 10\n    }\n  },\n  \".buttons\": {\n    textAlign: \"center\"\n  }\n});\nvar sliders = [{\n  key: \"brightness\",\n  label: \"Brightness\",\n  min: -100\n}, {\n  key: \"vibrance\",\n  label: \"Vibrance\",\n  min: -100\n}, {\n  key: \"hue\",\n  label: \"Hue\",\n  min: -100\n}, {\n  key: \"gamma\",\n  label: \"Gamma\"\n}, {\n  key: \"clip\",\n  label: \"Clip\"\n}, {\n  key: \"stackBlur\",\n  label: \"Blur\"\n}, {\n  key: \"contrast\",\n  label: \"Contrast\",\n  min: -100\n}, {\n  key: \"saturation\",\n  label: \"Saturation\",\n  min: -100\n}, {\n  key: \"exposure\",\n  label: \"Exposure\",\n  min: -100\n}, {\n  key: \"sepia\",\n  label: \"Sepia\"\n}, {\n  key: \"noise\",\n  label: \"Noise\"\n}, {\n  key: \"sharpen\",\n  label: \"Sharpen\"\n}];\n\nvar RenderForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderForm, _React$Component);\n\n  var _super = _createSuper(RenderForm);\n\n  function RenderForm() {\n    var _this;\n\n    _classCallCheck(this, RenderForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      processing: false,\n      values: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"applyFilters\", _debounce(function () {\n      var canvas = _this.props.canvas;\n      var values = _this.state.values; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      var component = _assertThisInitialized(_this); // @ts-ignore\n\n\n      Caman(canvas.current, function () {\n        var _this2 = this;\n\n        this.revert(false);\n        Object.keys(values).forEach(function (key) {\n          return values[key] !== 0 && _this2[key] && _this2[key](values[key]);\n        });\n        this.render();\n        component.setState({\n          processing: false\n        });\n      });\n    }, 200));\n\n    _defineProperty(_assertThisInitialized(_this), \"resetFiltersValues\", function () {\n      _this.setState(function (state) {\n        sliders.reduce(function (output, current) {\n          state.values[current.key] = 0;\n          return output;\n        }, {});\n        return state;\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RenderForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resetFiltersValues();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(\"ul\", null, sliders.map(function (props) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: props.key\n        }, /*#__PURE__*/React.createElement(Slider, Object.assign({\n          value: _this3.state.values[props.key],\n          min: 0,\n          max: 100,\n          disabled: _this3.state.processing,\n          onInput: function onInput(value) {\n            _this3.setState(function (state) {\n              var values = _objectSpread({}, state.values);\n\n              values[props.key] = value;\n              return _objectSpread(_objectSpread({}, state), {}, {\n                processing: true,\n                values: values\n              });\n            }, _this3.applyFilters);\n          }\n        }, props)));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        }\n      }, /*#__PURE__*/React.createElement(ButtonDefault, {\n        onClick: function onClick() {\n          _this3.setState({\n            processing: true\n          }, function () {\n            _this3.resetFiltersValues();\n\n            _this3.applyFilters();\n\n            _this3.setState({\n              processing: false\n            });\n          });\n        }\n      }, \"Reset filters\")));\n    }\n  }]);\n\n  return RenderForm;\n}(React.Component);\n\nvar tool = {\n  name: \"filter\",\n  icon: function icon(_ref) {\n    var activateTool = _ref.activateTool;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"bottom\",\n      content: \"Filter\"\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      icon: /*#__PURE__*/React.createElement(FilterIcon, null),\n      onClick: activateTool\n    }));\n  },\n  renderForm: function renderForm(props) {\n    return /*#__PURE__*/React.createElement(RenderForm, props);\n  },\n  cancel: function cancel(_ref2) {\n    var canvas = _ref2.canvas; // @ts-ignore\n\n    Caman(canvas.current, function () {\n      this.revert(false);\n      this.render();\n    });\n  }\n};\nexport default tool;","map":null,"metadata":{},"sourceType":"module"}