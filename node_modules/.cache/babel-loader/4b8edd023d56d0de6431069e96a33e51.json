{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { TabBar } from \"@rmwc/tabs\";\nimport { Tab } from \"./Tab\";\nvar disabledStyles = {\n  opacity: 0.5,\n  pointerEvents: \"none\"\n};\n/**\n * Use Tabs component to display a list of choices, once the handler is triggered.\n */\n\nexport var Tabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  var _super = _createSuper(Tabs);\n\n  function Tabs() {\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeTabIndex: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"switchTab\",\n    value: function switchTab(activeTabIndex) {\n      this.setState({\n        activeTabIndex: activeTabIndex\n      });\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren(children) {\n      var _this2 = this;\n\n      var tabs = React.Children.toArray(children).filter(function (c) {\n        return c !== null;\n      }).map(function (child) {\n        return {\n          label: child.props.label,\n          children: child.props.children,\n          icon: child.props.icon,\n          disabled: child.props.disabled,\n          style: child.props.style\n        };\n      });\n      var tabBar = /*#__PURE__*/React.createElement(TabBar, {\n        className: \"webiny-ui-tabs__tab-bar\",\n        activeTabIndex: this.state.activeTabIndex,\n        onActivate: function onActivate(evt) {\n          _this2.setState({\n            activeTabIndex: evt.detail.index\n          });\n\n          _this2.props.onActivate && _this2.props.onActivate(evt.detail.index);\n        }\n      }, tabs.map(function (item) {\n        var style = item.style || {};\n\n        if (item.disabled) {\n          Object.assign(style, disabledStyles);\n        }\n\n        return /*#__PURE__*/React.createElement(Tab, Object.assign({\n          tag: \"div\",\n          style: style,\n          key: item.label\n        }, item.icon ? {\n          icon: item.icon\n        } : {}, item.label ? {\n          label: item.label\n        } : {}));\n      }));\n      var content = [];\n\n      for (var i = 0; i < tabs.length; i++) {\n        var current = tabs[i];\n\n        if (this.state.activeTabIndex === i) {\n          content.push( /*#__PURE__*/React.createElement(\"div\", {\n            key: i\n          }, current.children));\n        } else {\n          content.push( /*#__PURE__*/React.createElement(\"div\", {\n            key: i,\n            style: {\n              display: \"none\"\n            }\n          }, current.children));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(\"webiny-ui-tabs\", this.props.className)\n      }, tabBar, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"webiny-ui-tabs__content mdc-tab-content\"\n      }, content));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n\n      if (typeof this.props.children === \"function\") {\n        // @ts-ignore\n        children = this.props.children({\n          switchTab: this.switchTab.bind(this)\n        });\n      }\n\n      return this.renderChildren(children);\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}