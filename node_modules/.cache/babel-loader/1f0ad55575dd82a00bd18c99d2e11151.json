{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { componentFactory, classNames } from '@rmwc/base';\nvar CollapsibleRoot = componentFactory({\n  displayName: 'CollapsibleRoot',\n  classNames: ['rmwc-collapsible-list']\n});\n\nvar possiblyFocusElement = function (el) {\n  if (!el) return false;\n  var tabIndex = el.getAttribute('tabindex');\n\n  if (tabIndex && Number(tabIndex) >= 0) {\n    el.focus();\n    return true;\n  }\n\n  return false;\n};\n\nvar getNextSibling = function (el, isBack) {\n  if (!el) return null;\n  var next = isBack ? el.previousElementSibling : el.nextElementSibling;\n\n  if (next === null) {\n    return getNextSibling(el.parentElement, isBack);\n  }\n\n  return next;\n};\n/** A collapsible list component. */\n\n\nvar CollapsibleList =\n/** @class */\nfunction (_super) {\n  __extends(CollapsibleList, _super);\n\n  function CollapsibleList(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.childContainer = null;\n    _this.root = null;\n    _this.state = {\n      open: !!_this.props.startOpen || !!_this.props.open,\n      childrenStyle: {}\n    };\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleKeydown = _this.handleKeydown.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    return _this;\n  }\n\n  CollapsibleList.getDerivedStateFromProps = function (props, state) {\n    if (props.open !== undefined && props.open !== state.open) {\n      return __assign({}, state, {\n        open: props.open\n      });\n    }\n\n    return state;\n  };\n\n  CollapsibleList.prototype.componentDidMount = function () {\n    this.syncOpenState();\n  };\n\n  CollapsibleList.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (prevState.open !== this.state.open) {\n      this.syncOpenState();\n    }\n  };\n\n  CollapsibleList.prototype.syncOpenState = function () {\n    var _this = this;\n\n    var _a = this.props,\n        onOpen = _a.onOpen,\n        onClose = _a.onClose;\n    var childrenStyle = {\n      maxHeight: this.childContainer ? this.childContainer.offsetHeight + \"px\" : '0px'\n    };\n    this.setState({\n      childrenStyle: childrenStyle\n    }, function () {\n      if (_this.state.open) {\n        onOpen && onOpen();\n        setTimeout(function () {\n          if (_this.state.open) {\n            _this.setState({\n              childrenStyle: {\n                maxHeight: 'none'\n              }\n            });\n          }\n        }, 300);\n      } else {\n        onClose && onClose();\n        window.requestAnimationFrame(function () {\n          _this.setState({\n            childrenStyle: {}\n          });\n        });\n      }\n    });\n  };\n\n  CollapsibleList.prototype.correctFocus = function (back) {\n    var _this = this;\n\n    window.requestAnimationFrame(function () {\n      if (!_this.state.open && _this.root && _this.root.contains(document.activeElement)) {\n        var sibling = getNextSibling(_this.root, back);\n\n        if (possiblyFocusElement(sibling)) {\n          return;\n        }\n\n        if (sibling) {\n          var els = sibling.querySelectorAll('[tabindex]');\n\n          for (var i = 0; i < els.length; i++) {\n            if (possiblyFocusElement(els[i])) {\n              break;\n            }\n          }\n        }\n      }\n    });\n  };\n\n  CollapsibleList.prototype.toggleOpen = function (isOpen) {\n    this.setState({\n      open: isOpen\n    });\n  };\n\n  CollapsibleList.prototype.handleClick = function (evt) {\n    // call events that might have been on the handle\n    var handle = this.props.handle;\n    handle.props.onClick && handle.props.onClick(evt);\n    this.toggleOpen(!this.state.open);\n  };\n\n  CollapsibleList.prototype.handleKeydown = function (evt) {\n    // call events that might have been on the handle\n    var handle = this.props.handle;\n    handle.props.onKeyDown && handle.props.onKeyDown(evt);\n\n    switch (evt.which) {\n      case 13:\n        this.toggleOpen(!this.state.open);\n        return;\n\n      case 39:\n        this.toggleOpen(true);\n        return;\n\n      case 38:\n      case 40:\n      case 9:\n        var isBack = evt.shiftKey || evt.which === 38;\n        this.correctFocus(isBack);\n        return;\n\n      case 37:\n        this.toggleOpen(false);\n        return;\n\n      default:\n        break;\n    }\n  };\n\n  CollapsibleList.prototype.handleFocus = function (evt) {\n    if (!this.state.open && this.root && this.childContainer && this.childContainer.contains(document.activeElement)) {\n      var el = this.root.querySelector('.rmwc-collapsible-list__handle .mdc-list-item');\n      el && el.focus();\n    }\n  };\n\n  CollapsibleList.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.props,\n        children = _b.children,\n        handle = _b.handle,\n        onOpen = _b.onOpen,\n        onClose = _b.onClose,\n        openProp = _b.open,\n        startOpen = _b.startOpen,\n        rest = __rest(_b, [\"children\", \"handle\", \"onOpen\", \"onClose\", \"open\", \"startOpen\"]);\n\n    var _c = this.state,\n        open = _c.open,\n        childrenStyle = _c.childrenStyle;\n    return React.createElement(CollapsibleRoot, __assign({}, rest, {\n      onFocus: this.handleFocus,\n      ref: function (el) {\n        return _this.root = el;\n      },\n      className: classNames('rmwc-collapsible-list', (_a = {}, _a['rmwc-collapsible-list--open'] = open, _a))\n    }), React.createElement(\"div\", {\n      className: \"rmwc-collapsible-list__handle\"\n    }, React.cloneElement(handle, __assign({}, handle.props, {\n      onClick: this.handleClick,\n      onKeyDown: this.handleKeydown\n    }))), React.createElement(\"div\", {\n      className: \"rmwc-collapsible-list__children\",\n      style: childrenStyle\n    }, React.createElement(\"div\", {\n      className: \"rmwc-collapsible-list__children-inner\",\n      ref: function (el) {\n        return _this.childContainer = el;\n      }\n    }, children)));\n  };\n\n  CollapsibleList.displayName = 'CollapsibleList';\n  return CollapsibleList;\n}(React.Component);\n\nexport { CollapsibleList };","map":null,"metadata":{},"sourceType":"module"}