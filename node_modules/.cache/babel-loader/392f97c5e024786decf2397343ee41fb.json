{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _get from \"lodash/get\";\nvar scaling = {\n  cover: {\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  contain: {\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  originalSize: {\n    backgroundSize: \"auto\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  tile: {\n    backgroundSize: \"auto\",\n    backgroundRepeat: \"repeat\"\n  },\n  tileHorizontally: {\n    backgroundSize: \"auto\",\n    backgroundRepeat: \"repeat-x\"\n  },\n  tileVertically: {\n    backgroundSize: \"auto\",\n    backgroundRepeat: \"repeat-y\"\n  }\n};\nexport default {\n  name: \"pb-render-page-element-style-background\",\n  type: \"pb-render-page-element-style\",\n  renderStyle: function renderStyle(_ref) {\n    var element = _ref.element,\n        style = _ref.style;\n\n    var _get2 = _get(element, \"data.settings\", {}),\n        background = _get2.background;\n\n    if (!background) {\n      return style;\n    }\n\n    var color = background.color,\n        image = background.image;\n\n    var src = _get(image, \"file.src\");\n\n    if (src) {\n      return _objectSpread(_objectSpread(_objectSpread({}, style), scaling[image.scaling || \"cover\"]), {}, {\n        backgroundImage: \"url(\".concat(src, \")\"),\n        backgroundPosition: image.position || \"center center\"\n      });\n    }\n\n    if (color) {\n      return _objectSpread(_objectSpread({}, style), {}, {\n        backgroundColor: color\n      });\n    }\n\n    return style;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}